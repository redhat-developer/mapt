
FROM registry.access.redhat.com/ubi9/go-toolset@sha256:6fd64cd7f38a9b87440f963b6c04953d04de65c35b9672dbd7f1805b0ae20d09 as builder
ARG TARGETARCH
USER root
WORKDIR /workspace
COPY . .

# renovate: datasource=github-releases depName=pulumi/pulumi
ENV PULUMI_VERSION 3.184.0
ENV PULUMI_BASE_URL="https://github.com/pulumi/pulumi/releases/download/v${PULUMI_VERSION}/pulumi-v${PULUMI_VERSION}"
ENV PULUMI_URL="${PULUMI_BASE_URL}-linux-x64.tar.gz"

# go toolset has VERSION env with go minor version this is conflicting our version management
RUN unset VERSION \
    && GOARCH=${TARGETARCH} make build \
    && if [ "$TARGETARCH" = "arm64" ]; then export PULUMI_URL="${PULUMI_BASE_URL}-linux-arm64.tar.gz"; fi \
    && echo ${PULUMI_URL} \
    && curl -L ${PULUMI_URL} -o pulumicli.tar.gz \
    && tar -xzvf pulumicli.tar.gz 

# ubi 9.5-1732804088
FROM registry.access.redhat.com/ubi9/ubi@sha256:61bf5be4fcf7fa4d1ce6c8c0376dcb8b06e68aae6a0a54c4cf39c06116684962
ARG TARGETARCH
LABEL org.opencontainers.image.authors="Redhat Developer"

COPY --from=builder /workspace/out/mapt /workspace/pulumi/pulumi /usr/local/bin/

ENV PULUMI_CONFIG_PASSPHRASE "passphrase" 

ENV AWS_SDK_LOAD_CONFIG=1 \
    AWS_CLI_VERSION=2.16.7 \
    AZ_CLI_VERSION=2.61.0 \
    ARCH_N=x86_64

# Pulumi plugins
# renovate: datasource=github-releases depName=pulumi/pulumi-aws
ARG PULUMI_AWS_VERSION=v7.0.0
# renovate: datasource=github-releases depName=pulumi/pulumi-awsx
ARG PULUMI_AWSX_VERSION=v2.22.0
# renovate: datasource=github-releases depName=pulumi/pulumi-azure-native
ARG PULUMI_AZURE_NATIVE_VERSION=v3.5.1
# renovate: datasource=github-releases depName=pulumi/pulumi-command
ARG PULUMI_COMMAND_VERSION=v1.1.0
# renovate: datasource=github-releases depName=pulumi/pulumi-tls
ARG PULUMI_TLS_VERSION=v5.2.1
# renovate: datasource=github-releases depName=pulumi/pulumi-random
ARG PULUMI_RANDOM_VERSION=v4.18.3
# renovate: datasource=github-releases depName=pulumi/pulumi-aws-native
ARG PULUMI_AWS_NATIVE_VERSION=v1.31.0

ENV PULUMI_HOME "/opt/mapt/run" 
WORKDIR ${PULUMI_HOME}

RUN mkdir -p /opt/mapt/run \
    && if [ "$TARGETARCH" = "arm64" ]; then export ARCH_N=aarch64; fi \
    && export AWS_CLI_URL="https://awscli.amazonaws.com/awscli-exe-linux-${ARCH_N}-${AWS_CLI_VERSION}.zip" \
    && export AZ_CLI_RPM="https://packages.microsoft.com/rhel/9.0/prod/Packages/a/azure-cli-${AZ_CLI_VERSION}-1.el9.${ARCH_N}.rpm" \
    && echo ${AWS_CLI_URL} ${AZ_CLI_RPM} \
    && curl ${AWS_CLI_URL} -o awscliv2.zip \
    && dnf install -y unzip \
    && unzip -qq awscliv2.zip \
    && ./aws/install \
    && curl -L ${AZ_CLI_RPM} -o azure-cli.rpm \
    && dnf install -y azure-cli.rpm \
    && rm -rf aws awscliv2.zip azure-cli.rpm \
    && dnf clean all \
  	&& rm -rf /var/cache/yum \
    && pulumi plugin install resource aws ${PULUMI_AWS_VERSION} \
    && pulumi plugin install resource azure-native ${PULUMI_AZURE_NATIVE_VERSION} \
    && pulumi plugin install resource command ${PULUMI_COMMAND_VERSION} \
    && pulumi plugin install resource tls ${PULUMI_TLS_VERSION} \
    && pulumi plugin install resource random ${PULUMI_RANDOM_VERSION} \
    && pulumi plugin install resource awsx ${PULUMI_AWSX_VERSION} \
    && pulumi plugin install resource aws-native ${PULUMI_AWS_NATIVE_VERSION} \
    && chown -R 1001:0 /opt/mapt/run \
    && chmod -R g=u /opt/mapt/run

USER 1001
ENTRYPOINT ["mapt"]
CMD ["-h"]

