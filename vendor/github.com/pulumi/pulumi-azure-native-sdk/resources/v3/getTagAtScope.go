// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resources

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Wrapper resource for tags API requests and responses.
//
// Uses Azure REST API version 2024-03-01.
//
// Other available API versions: 2020-10-01, 2021-01-01, 2021-04-01, 2022-09-01, 2023-07-01, 2024-07-01, 2024-11-01, 2025-03-01, 2025-04-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native resources [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupTagAtScope(ctx *pulumi.Context, args *LookupTagAtScopeArgs, opts ...pulumi.InvokeOption) (*LookupTagAtScopeResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupTagAtScopeResult
	err := ctx.Invoke("azure-native:resources:getTagAtScope", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTagAtScopeArgs struct {
	// The resource scope.
	Scope string `pulumi:"scope"`
}

// Wrapper resource for tags API requests and responses.
type LookupTagAtScopeResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The ID of the tags wrapper resource.
	Id string `pulumi:"id"`
	// The name of the tags wrapper resource.
	Name string `pulumi:"name"`
	// The set of tags.
	Properties TagsResponse `pulumi:"properties"`
	// The type of the tags wrapper resource.
	Type string `pulumi:"type"`
}

func LookupTagAtScopeOutput(ctx *pulumi.Context, args LookupTagAtScopeOutputArgs, opts ...pulumi.InvokeOption) LookupTagAtScopeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTagAtScopeResultOutput, error) {
			args := v.(LookupTagAtScopeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:resources:getTagAtScope", args, LookupTagAtScopeResultOutput{}, options).(LookupTagAtScopeResultOutput), nil
		}).(LookupTagAtScopeResultOutput)
}

type LookupTagAtScopeOutputArgs struct {
	// The resource scope.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (LookupTagAtScopeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagAtScopeArgs)(nil)).Elem()
}

// Wrapper resource for tags API requests and responses.
type LookupTagAtScopeResultOutput struct{ *pulumi.OutputState }

func (LookupTagAtScopeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagAtScopeResult)(nil)).Elem()
}

func (o LookupTagAtScopeResultOutput) ToLookupTagAtScopeResultOutput() LookupTagAtScopeResultOutput {
	return o
}

func (o LookupTagAtScopeResultOutput) ToLookupTagAtScopeResultOutputWithContext(ctx context.Context) LookupTagAtScopeResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupTagAtScopeResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagAtScopeResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The ID of the tags wrapper resource.
func (o LookupTagAtScopeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagAtScopeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the tags wrapper resource.
func (o LookupTagAtScopeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagAtScopeResult) string { return v.Name }).(pulumi.StringOutput)
}

// The set of tags.
func (o LookupTagAtScopeResultOutput) Properties() TagsResponseOutput {
	return o.ApplyT(func(v LookupTagAtScopeResult) TagsResponse { return v.Properties }).(TagsResponseOutput)
}

// The type of the tags wrapper resource.
func (o LookupTagAtScopeResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagAtScopeResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagAtScopeResultOutput{})
}
