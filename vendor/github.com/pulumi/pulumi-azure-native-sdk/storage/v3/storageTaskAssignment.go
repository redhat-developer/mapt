// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The storage task assignment.
//
// Uses Azure REST API version 2024-01-01. In version 2.x of the Azure Native provider, it used API version 2023-05-01.
//
// Other available API versions: 2023-05-01, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native storage [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type StorageTaskAssignment struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the storage task assignment.
	Properties StorageTaskAssignmentPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStorageTaskAssignment registers a new resource with the given unique name, arguments, and options.
func NewStorageTaskAssignment(ctx *pulumi.Context,
	name string, args *StorageTaskAssignmentArgs, opts ...pulumi.ResourceOption) (*StorageTaskAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:storage/v20230501:StorageTaskAssignment"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20240101:StorageTaskAssignment"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20250101:StorageTaskAssignment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource StorageTaskAssignment
	err := ctx.RegisterResource("azure-native:storage:StorageTaskAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageTaskAssignment gets an existing StorageTaskAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageTaskAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageTaskAssignmentState, opts ...pulumi.ResourceOption) (*StorageTaskAssignment, error) {
	var resource StorageTaskAssignment
	err := ctx.ReadResource("azure-native:storage:StorageTaskAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageTaskAssignment resources.
type storageTaskAssignmentState struct {
}

type StorageTaskAssignmentState struct {
}

func (StorageTaskAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageTaskAssignmentState)(nil)).Elem()
}

type storageTaskAssignmentArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// Properties of the storage task assignment.
	Properties StorageTaskAssignmentProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	StorageTaskAssignmentName *string `pulumi:"storageTaskAssignmentName"`
}

// The set of arguments for constructing a StorageTaskAssignment resource.
type StorageTaskAssignmentArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput
	// Properties of the storage task assignment.
	Properties StorageTaskAssignmentPropertiesInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	StorageTaskAssignmentName pulumi.StringPtrInput
}

func (StorageTaskAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageTaskAssignmentArgs)(nil)).Elem()
}

type StorageTaskAssignmentInput interface {
	pulumi.Input

	ToStorageTaskAssignmentOutput() StorageTaskAssignmentOutput
	ToStorageTaskAssignmentOutputWithContext(ctx context.Context) StorageTaskAssignmentOutput
}

func (*StorageTaskAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTaskAssignment)(nil)).Elem()
}

func (i *StorageTaskAssignment) ToStorageTaskAssignmentOutput() StorageTaskAssignmentOutput {
	return i.ToStorageTaskAssignmentOutputWithContext(context.Background())
}

func (i *StorageTaskAssignment) ToStorageTaskAssignmentOutputWithContext(ctx context.Context) StorageTaskAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTaskAssignmentOutput)
}

type StorageTaskAssignmentOutput struct{ *pulumi.OutputState }

func (StorageTaskAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTaskAssignment)(nil)).Elem()
}

func (o StorageTaskAssignmentOutput) ToStorageTaskAssignmentOutput() StorageTaskAssignmentOutput {
	return o
}

func (o StorageTaskAssignmentOutput) ToStorageTaskAssignmentOutputWithContext(ctx context.Context) StorageTaskAssignmentOutput {
	return o
}

// The Azure API version of the resource.
func (o StorageTaskAssignmentOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTaskAssignment) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o StorageTaskAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTaskAssignment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of the storage task assignment.
func (o StorageTaskAssignmentOutput) Properties() StorageTaskAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageTaskAssignment) StorageTaskAssignmentPropertiesResponseOutput { return v.Properties }).(StorageTaskAssignmentPropertiesResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o StorageTaskAssignmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTaskAssignment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(StorageTaskAssignmentOutput{})
}
