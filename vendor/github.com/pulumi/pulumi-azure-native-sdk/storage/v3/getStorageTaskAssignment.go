// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the storage task assignment properties
//
// Uses Azure REST API version 2024-01-01.
//
// Other available API versions: 2023-05-01, 2025-01-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native storage [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupStorageTaskAssignment(ctx *pulumi.Context, args *LookupStorageTaskAssignmentArgs, opts ...pulumi.InvokeOption) (*LookupStorageTaskAssignmentResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageTaskAssignmentResult
	err := ctx.Invoke("azure-native:storage:getStorageTaskAssignment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStorageTaskAssignmentArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	StorageTaskAssignmentName string `pulumi:"storageTaskAssignmentName"`
}

// The storage task assignment.
type LookupStorageTaskAssignmentResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Properties of the storage task assignment.
	Properties StorageTaskAssignmentPropertiesResponse `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupStorageTaskAssignmentOutput(ctx *pulumi.Context, args LookupStorageTaskAssignmentOutputArgs, opts ...pulumi.InvokeOption) LookupStorageTaskAssignmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStorageTaskAssignmentResultOutput, error) {
			args := v.(LookupStorageTaskAssignmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:storage:getStorageTaskAssignment", args, LookupStorageTaskAssignmentResultOutput{}, options).(LookupStorageTaskAssignmentResultOutput), nil
		}).(LookupStorageTaskAssignmentResultOutput)
}

type LookupStorageTaskAssignmentOutputArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the storage task assignment within the specified resource group. Storage task assignment names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	StorageTaskAssignmentName pulumi.StringInput `pulumi:"storageTaskAssignmentName"`
}

func (LookupStorageTaskAssignmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageTaskAssignmentArgs)(nil)).Elem()
}

// The storage task assignment.
type LookupStorageTaskAssignmentResultOutput struct{ *pulumi.OutputState }

func (LookupStorageTaskAssignmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageTaskAssignmentResult)(nil)).Elem()
}

func (o LookupStorageTaskAssignmentResultOutput) ToLookupStorageTaskAssignmentResultOutput() LookupStorageTaskAssignmentResultOutput {
	return o
}

func (o LookupStorageTaskAssignmentResultOutput) ToLookupStorageTaskAssignmentResultOutputWithContext(ctx context.Context) LookupStorageTaskAssignmentResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupStorageTaskAssignmentResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskAssignmentResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupStorageTaskAssignmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskAssignmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupStorageTaskAssignmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskAssignmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the storage task assignment.
func (o LookupStorageTaskAssignmentResultOutput) Properties() StorageTaskAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v LookupStorageTaskAssignmentResult) StorageTaskAssignmentPropertiesResponse { return v.Properties }).(StorageTaskAssignmentPropertiesResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupStorageTaskAssignmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskAssignmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageTaskAssignmentResultOutput{})
}
