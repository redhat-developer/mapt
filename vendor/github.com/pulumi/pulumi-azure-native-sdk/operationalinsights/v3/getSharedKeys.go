// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package operationalinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the shared keys for a workspace.
//
// Uses Azure REST API version 2023-09-01.
//
// Other available API versions: 2020-03-01-preview, 2020-08-01, 2025-02-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native operationalinsights [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func GetSharedKeys(ctx *pulumi.Context, args *GetSharedKeysArgs, opts ...pulumi.InvokeOption) (*GetSharedKeysResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetSharedKeysResult
	err := ctx.Invoke("azure-native:operationalinsights:getSharedKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSharedKeysArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The shared keys for a workspace.
type GetSharedKeysResult struct {
	// The primary shared key of a workspace.
	PrimarySharedKey *string `pulumi:"primarySharedKey"`
	// The secondary shared key of a workspace.
	SecondarySharedKey *string `pulumi:"secondarySharedKey"`
}

func GetSharedKeysOutput(ctx *pulumi.Context, args GetSharedKeysOutputArgs, opts ...pulumi.InvokeOption) GetSharedKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSharedKeysResultOutput, error) {
			args := v.(GetSharedKeysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:operationalinsights:getSharedKeys", args, GetSharedKeysResultOutput{}, options).(GetSharedKeysResultOutput), nil
		}).(GetSharedKeysResultOutput)
}

type GetSharedKeysOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (GetSharedKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedKeysArgs)(nil)).Elem()
}

// The shared keys for a workspace.
type GetSharedKeysResultOutput struct{ *pulumi.OutputState }

func (GetSharedKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedKeysResult)(nil)).Elem()
}

func (o GetSharedKeysResultOutput) ToGetSharedKeysResultOutput() GetSharedKeysResultOutput {
	return o
}

func (o GetSharedKeysResultOutput) ToGetSharedKeysResultOutputWithContext(ctx context.Context) GetSharedKeysResultOutput {
	return o
}

// The primary shared key of a workspace.
func (o GetSharedKeysResultOutput) PrimarySharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSharedKeysResult) *string { return v.PrimarySharedKey }).(pulumi.StringPtrOutput)
}

// The secondary shared key of a workspace.
func (o GetSharedKeysResultOutput) SecondarySharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSharedKeysResult) *string { return v.SecondarySharedKey }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSharedKeysResultOutput{})
}
