// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package operationalinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The cluster's billing type.
type BillingType string

const (
	BillingTypeCluster    = BillingType("Cluster")
	BillingTypeWorkspaces = BillingType("Workspaces")
)

func (BillingType) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingType)(nil)).Elem()
}

func (e BillingType) ToBillingTypeOutput() BillingTypeOutput {
	return pulumi.ToOutput(e).(BillingTypeOutput)
}

func (e BillingType) ToBillingTypeOutputWithContext(ctx context.Context) BillingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BillingTypeOutput)
}

func (e BillingType) ToBillingTypePtrOutput() BillingTypePtrOutput {
	return e.ToBillingTypePtrOutputWithContext(context.Background())
}

func (e BillingType) ToBillingTypePtrOutputWithContext(ctx context.Context) BillingTypePtrOutput {
	return BillingType(e).ToBillingTypeOutputWithContext(ctx).ToBillingTypePtrOutputWithContext(ctx)
}

func (e BillingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BillingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BillingTypeOutput struct{ *pulumi.OutputState }

func (BillingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingType)(nil)).Elem()
}

func (o BillingTypeOutput) ToBillingTypeOutput() BillingTypeOutput {
	return o
}

func (o BillingTypeOutput) ToBillingTypeOutputWithContext(ctx context.Context) BillingTypeOutput {
	return o
}

func (o BillingTypeOutput) ToBillingTypePtrOutput() BillingTypePtrOutput {
	return o.ToBillingTypePtrOutputWithContext(context.Background())
}

func (o BillingTypeOutput) ToBillingTypePtrOutputWithContext(ctx context.Context) BillingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingType) *BillingType {
		return &v
	}).(BillingTypePtrOutput)
}

func (o BillingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BillingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BillingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BillingTypePtrOutput struct{ *pulumi.OutputState }

func (BillingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingType)(nil)).Elem()
}

func (o BillingTypePtrOutput) ToBillingTypePtrOutput() BillingTypePtrOutput {
	return o
}

func (o BillingTypePtrOutput) ToBillingTypePtrOutputWithContext(ctx context.Context) BillingTypePtrOutput {
	return o
}

func (o BillingTypePtrOutput) Elem() BillingTypeOutput {
	return o.ApplyT(func(v *BillingType) BillingType {
		if v != nil {
			return *v
		}
		var ret BillingType
		return ret
	}).(BillingTypeOutput)
}

func (o BillingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BillingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BillingTypeInput is an input type that accepts values of the BillingType enum
// A concrete instance of `BillingTypeInput` can be one of the following:
//
//	BillingTypeCluster
//	BillingTypeWorkspaces
type BillingTypeInput interface {
	pulumi.Input

	ToBillingTypeOutput() BillingTypeOutput
	ToBillingTypeOutputWithContext(context.Context) BillingTypeOutput
}

var billingTypePtrType = reflect.TypeOf((**BillingType)(nil)).Elem()

type BillingTypePtrInput interface {
	pulumi.Input

	ToBillingTypePtrOutput() BillingTypePtrOutput
	ToBillingTypePtrOutputWithContext(context.Context) BillingTypePtrOutput
}

type billingTypePtr string

func BillingTypePtr(v string) BillingTypePtrInput {
	return (*billingTypePtr)(&v)
}

func (*billingTypePtr) ElementType() reflect.Type {
	return billingTypePtrType
}

func (in *billingTypePtr) ToBillingTypePtrOutput() BillingTypePtrOutput {
	return pulumi.ToOutput(in).(BillingTypePtrOutput)
}

func (in *billingTypePtr) ToBillingTypePtrOutputWithContext(ctx context.Context) BillingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BillingTypePtrOutput)
}

// The SKU (tier) of a cluster.
type ClusterSkuNameEnum string

const (
	ClusterSkuNameEnumCapacityReservation = ClusterSkuNameEnum("CapacityReservation")
)

func (ClusterSkuNameEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSkuNameEnum)(nil)).Elem()
}

func (e ClusterSkuNameEnum) ToClusterSkuNameEnumOutput() ClusterSkuNameEnumOutput {
	return pulumi.ToOutput(e).(ClusterSkuNameEnumOutput)
}

func (e ClusterSkuNameEnum) ToClusterSkuNameEnumOutputWithContext(ctx context.Context) ClusterSkuNameEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterSkuNameEnumOutput)
}

func (e ClusterSkuNameEnum) ToClusterSkuNameEnumPtrOutput() ClusterSkuNameEnumPtrOutput {
	return e.ToClusterSkuNameEnumPtrOutputWithContext(context.Background())
}

func (e ClusterSkuNameEnum) ToClusterSkuNameEnumPtrOutputWithContext(ctx context.Context) ClusterSkuNameEnumPtrOutput {
	return ClusterSkuNameEnum(e).ToClusterSkuNameEnumOutputWithContext(ctx).ToClusterSkuNameEnumPtrOutputWithContext(ctx)
}

func (e ClusterSkuNameEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterSkuNameEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterSkuNameEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterSkuNameEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterSkuNameEnumOutput struct{ *pulumi.OutputState }

func (ClusterSkuNameEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSkuNameEnum)(nil)).Elem()
}

func (o ClusterSkuNameEnumOutput) ToClusterSkuNameEnumOutput() ClusterSkuNameEnumOutput {
	return o
}

func (o ClusterSkuNameEnumOutput) ToClusterSkuNameEnumOutputWithContext(ctx context.Context) ClusterSkuNameEnumOutput {
	return o
}

func (o ClusterSkuNameEnumOutput) ToClusterSkuNameEnumPtrOutput() ClusterSkuNameEnumPtrOutput {
	return o.ToClusterSkuNameEnumPtrOutputWithContext(context.Background())
}

func (o ClusterSkuNameEnumOutput) ToClusterSkuNameEnumPtrOutputWithContext(ctx context.Context) ClusterSkuNameEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSkuNameEnum) *ClusterSkuNameEnum {
		return &v
	}).(ClusterSkuNameEnumPtrOutput)
}

func (o ClusterSkuNameEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterSkuNameEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterSkuNameEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterSkuNameEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterSkuNameEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterSkuNameEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterSkuNameEnumPtrOutput struct{ *pulumi.OutputState }

func (ClusterSkuNameEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSkuNameEnum)(nil)).Elem()
}

func (o ClusterSkuNameEnumPtrOutput) ToClusterSkuNameEnumPtrOutput() ClusterSkuNameEnumPtrOutput {
	return o
}

func (o ClusterSkuNameEnumPtrOutput) ToClusterSkuNameEnumPtrOutputWithContext(ctx context.Context) ClusterSkuNameEnumPtrOutput {
	return o
}

func (o ClusterSkuNameEnumPtrOutput) Elem() ClusterSkuNameEnumOutput {
	return o.ApplyT(func(v *ClusterSkuNameEnum) ClusterSkuNameEnum {
		if v != nil {
			return *v
		}
		var ret ClusterSkuNameEnum
		return ret
	}).(ClusterSkuNameEnumOutput)
}

func (o ClusterSkuNameEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterSkuNameEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterSkuNameEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterSkuNameEnumInput is an input type that accepts values of the ClusterSkuNameEnum enum
// A concrete instance of `ClusterSkuNameEnumInput` can be one of the following:
//
//	ClusterSkuNameEnumCapacityReservation
type ClusterSkuNameEnumInput interface {
	pulumi.Input

	ToClusterSkuNameEnumOutput() ClusterSkuNameEnumOutput
	ToClusterSkuNameEnumOutputWithContext(context.Context) ClusterSkuNameEnumOutput
}

var clusterSkuNameEnumPtrType = reflect.TypeOf((**ClusterSkuNameEnum)(nil)).Elem()

type ClusterSkuNameEnumPtrInput interface {
	pulumi.Input

	ToClusterSkuNameEnumPtrOutput() ClusterSkuNameEnumPtrOutput
	ToClusterSkuNameEnumPtrOutputWithContext(context.Context) ClusterSkuNameEnumPtrOutput
}

type clusterSkuNameEnumPtr string

func ClusterSkuNameEnumPtr(v string) ClusterSkuNameEnumPtrInput {
	return (*clusterSkuNameEnumPtr)(&v)
}

func (*clusterSkuNameEnumPtr) ElementType() reflect.Type {
	return clusterSkuNameEnumPtrType
}

func (in *clusterSkuNameEnumPtr) ToClusterSkuNameEnumPtrOutput() ClusterSkuNameEnumPtrOutput {
	return pulumi.ToOutput(in).(ClusterSkuNameEnumPtrOutput)
}

func (in *clusterSkuNameEnumPtr) ToClusterSkuNameEnumPtrOutputWithContext(ctx context.Context) ClusterSkuNameEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterSkuNameEnumPtrOutput)
}

// Column data type logical hint.
type ColumnDataTypeHintEnum string

const (
	// A string that matches the pattern of a URI, for example, scheme://username:password@host:1234/this/is/a/path?k1=v1&k2=v2#fragment
	ColumnDataTypeHintEnumUri = ColumnDataTypeHintEnum("uri")
	// A standard 128-bit GUID following the standard shape, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
	ColumnDataTypeHintEnumGuid = ColumnDataTypeHintEnum("guid")
	// An Azure Resource Model (ARM) path: /subscriptions/{...}/resourceGroups/{...}/providers/Microsoft.{...}/{...}/{...}/{...}...
	ColumnDataTypeHintEnumArmPath = ColumnDataTypeHintEnum("armPath")
	// A standard V4/V6 ip address following the standard shape, x.x.x.x/y:y:y:y:y:y:y:y
	ColumnDataTypeHintEnumIp = ColumnDataTypeHintEnum("ip")
)

func (ColumnDataTypeHintEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnDataTypeHintEnum)(nil)).Elem()
}

func (e ColumnDataTypeHintEnum) ToColumnDataTypeHintEnumOutput() ColumnDataTypeHintEnumOutput {
	return pulumi.ToOutput(e).(ColumnDataTypeHintEnumOutput)
}

func (e ColumnDataTypeHintEnum) ToColumnDataTypeHintEnumOutputWithContext(ctx context.Context) ColumnDataTypeHintEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ColumnDataTypeHintEnumOutput)
}

func (e ColumnDataTypeHintEnum) ToColumnDataTypeHintEnumPtrOutput() ColumnDataTypeHintEnumPtrOutput {
	return e.ToColumnDataTypeHintEnumPtrOutputWithContext(context.Background())
}

func (e ColumnDataTypeHintEnum) ToColumnDataTypeHintEnumPtrOutputWithContext(ctx context.Context) ColumnDataTypeHintEnumPtrOutput {
	return ColumnDataTypeHintEnum(e).ToColumnDataTypeHintEnumOutputWithContext(ctx).ToColumnDataTypeHintEnumPtrOutputWithContext(ctx)
}

func (e ColumnDataTypeHintEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ColumnDataTypeHintEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ColumnDataTypeHintEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ColumnDataTypeHintEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ColumnDataTypeHintEnumOutput struct{ *pulumi.OutputState }

func (ColumnDataTypeHintEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnDataTypeHintEnum)(nil)).Elem()
}

func (o ColumnDataTypeHintEnumOutput) ToColumnDataTypeHintEnumOutput() ColumnDataTypeHintEnumOutput {
	return o
}

func (o ColumnDataTypeHintEnumOutput) ToColumnDataTypeHintEnumOutputWithContext(ctx context.Context) ColumnDataTypeHintEnumOutput {
	return o
}

func (o ColumnDataTypeHintEnumOutput) ToColumnDataTypeHintEnumPtrOutput() ColumnDataTypeHintEnumPtrOutput {
	return o.ToColumnDataTypeHintEnumPtrOutputWithContext(context.Background())
}

func (o ColumnDataTypeHintEnumOutput) ToColumnDataTypeHintEnumPtrOutputWithContext(ctx context.Context) ColumnDataTypeHintEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ColumnDataTypeHintEnum) *ColumnDataTypeHintEnum {
		return &v
	}).(ColumnDataTypeHintEnumPtrOutput)
}

func (o ColumnDataTypeHintEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ColumnDataTypeHintEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ColumnDataTypeHintEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ColumnDataTypeHintEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ColumnDataTypeHintEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ColumnDataTypeHintEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ColumnDataTypeHintEnumPtrOutput struct{ *pulumi.OutputState }

func (ColumnDataTypeHintEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ColumnDataTypeHintEnum)(nil)).Elem()
}

func (o ColumnDataTypeHintEnumPtrOutput) ToColumnDataTypeHintEnumPtrOutput() ColumnDataTypeHintEnumPtrOutput {
	return o
}

func (o ColumnDataTypeHintEnumPtrOutput) ToColumnDataTypeHintEnumPtrOutputWithContext(ctx context.Context) ColumnDataTypeHintEnumPtrOutput {
	return o
}

func (o ColumnDataTypeHintEnumPtrOutput) Elem() ColumnDataTypeHintEnumOutput {
	return o.ApplyT(func(v *ColumnDataTypeHintEnum) ColumnDataTypeHintEnum {
		if v != nil {
			return *v
		}
		var ret ColumnDataTypeHintEnum
		return ret
	}).(ColumnDataTypeHintEnumOutput)
}

func (o ColumnDataTypeHintEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ColumnDataTypeHintEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ColumnDataTypeHintEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ColumnDataTypeHintEnumInput is an input type that accepts values of the ColumnDataTypeHintEnum enum
// A concrete instance of `ColumnDataTypeHintEnumInput` can be one of the following:
//
//	ColumnDataTypeHintEnumUri
//	ColumnDataTypeHintEnumGuid
//	ColumnDataTypeHintEnumArmPath
//	ColumnDataTypeHintEnumIp
type ColumnDataTypeHintEnumInput interface {
	pulumi.Input

	ToColumnDataTypeHintEnumOutput() ColumnDataTypeHintEnumOutput
	ToColumnDataTypeHintEnumOutputWithContext(context.Context) ColumnDataTypeHintEnumOutput
}

var columnDataTypeHintEnumPtrType = reflect.TypeOf((**ColumnDataTypeHintEnum)(nil)).Elem()

type ColumnDataTypeHintEnumPtrInput interface {
	pulumi.Input

	ToColumnDataTypeHintEnumPtrOutput() ColumnDataTypeHintEnumPtrOutput
	ToColumnDataTypeHintEnumPtrOutputWithContext(context.Context) ColumnDataTypeHintEnumPtrOutput
}

type columnDataTypeHintEnumPtr string

func ColumnDataTypeHintEnumPtr(v string) ColumnDataTypeHintEnumPtrInput {
	return (*columnDataTypeHintEnumPtr)(&v)
}

func (*columnDataTypeHintEnumPtr) ElementType() reflect.Type {
	return columnDataTypeHintEnumPtrType
}

func (in *columnDataTypeHintEnumPtr) ToColumnDataTypeHintEnumPtrOutput() ColumnDataTypeHintEnumPtrOutput {
	return pulumi.ToOutput(in).(ColumnDataTypeHintEnumPtrOutput)
}

func (in *columnDataTypeHintEnumPtr) ToColumnDataTypeHintEnumPtrOutputWithContext(ctx context.Context) ColumnDataTypeHintEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ColumnDataTypeHintEnumPtrOutput)
}

// Column data type.
type ColumnTypeEnum string

const (
	ColumnTypeEnumString   = ColumnTypeEnum("string")
	ColumnTypeEnumInt      = ColumnTypeEnum("int")
	ColumnTypeEnumLong     = ColumnTypeEnum("long")
	ColumnTypeEnumReal     = ColumnTypeEnum("real")
	ColumnTypeEnumBoolean  = ColumnTypeEnum("boolean")
	ColumnTypeEnumDateTime = ColumnTypeEnum("dateTime")
	ColumnTypeEnumGuid     = ColumnTypeEnum("guid")
	ColumnTypeEnumDynamic  = ColumnTypeEnum("dynamic")
)

func (ColumnTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnTypeEnum)(nil)).Elem()
}

func (e ColumnTypeEnum) ToColumnTypeEnumOutput() ColumnTypeEnumOutput {
	return pulumi.ToOutput(e).(ColumnTypeEnumOutput)
}

func (e ColumnTypeEnum) ToColumnTypeEnumOutputWithContext(ctx context.Context) ColumnTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ColumnTypeEnumOutput)
}

func (e ColumnTypeEnum) ToColumnTypeEnumPtrOutput() ColumnTypeEnumPtrOutput {
	return e.ToColumnTypeEnumPtrOutputWithContext(context.Background())
}

func (e ColumnTypeEnum) ToColumnTypeEnumPtrOutputWithContext(ctx context.Context) ColumnTypeEnumPtrOutput {
	return ColumnTypeEnum(e).ToColumnTypeEnumOutputWithContext(ctx).ToColumnTypeEnumPtrOutputWithContext(ctx)
}

func (e ColumnTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ColumnTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ColumnTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ColumnTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ColumnTypeEnumOutput struct{ *pulumi.OutputState }

func (ColumnTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnTypeEnum)(nil)).Elem()
}

func (o ColumnTypeEnumOutput) ToColumnTypeEnumOutput() ColumnTypeEnumOutput {
	return o
}

func (o ColumnTypeEnumOutput) ToColumnTypeEnumOutputWithContext(ctx context.Context) ColumnTypeEnumOutput {
	return o
}

func (o ColumnTypeEnumOutput) ToColumnTypeEnumPtrOutput() ColumnTypeEnumPtrOutput {
	return o.ToColumnTypeEnumPtrOutputWithContext(context.Background())
}

func (o ColumnTypeEnumOutput) ToColumnTypeEnumPtrOutputWithContext(ctx context.Context) ColumnTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ColumnTypeEnum) *ColumnTypeEnum {
		return &v
	}).(ColumnTypeEnumPtrOutput)
}

func (o ColumnTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ColumnTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ColumnTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ColumnTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ColumnTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ColumnTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ColumnTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (ColumnTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ColumnTypeEnum)(nil)).Elem()
}

func (o ColumnTypeEnumPtrOutput) ToColumnTypeEnumPtrOutput() ColumnTypeEnumPtrOutput {
	return o
}

func (o ColumnTypeEnumPtrOutput) ToColumnTypeEnumPtrOutputWithContext(ctx context.Context) ColumnTypeEnumPtrOutput {
	return o
}

func (o ColumnTypeEnumPtrOutput) Elem() ColumnTypeEnumOutput {
	return o.ApplyT(func(v *ColumnTypeEnum) ColumnTypeEnum {
		if v != nil {
			return *v
		}
		var ret ColumnTypeEnum
		return ret
	}).(ColumnTypeEnumOutput)
}

func (o ColumnTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ColumnTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ColumnTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ColumnTypeEnumInput is an input type that accepts values of the ColumnTypeEnum enum
// A concrete instance of `ColumnTypeEnumInput` can be one of the following:
//
//	ColumnTypeEnumString
//	ColumnTypeEnumInt
//	ColumnTypeEnumLong
//	ColumnTypeEnumReal
//	ColumnTypeEnumBoolean
//	ColumnTypeEnumDateTime
//	ColumnTypeEnumGuid
//	ColumnTypeEnumDynamic
type ColumnTypeEnumInput interface {
	pulumi.Input

	ToColumnTypeEnumOutput() ColumnTypeEnumOutput
	ToColumnTypeEnumOutputWithContext(context.Context) ColumnTypeEnumOutput
}

var columnTypeEnumPtrType = reflect.TypeOf((**ColumnTypeEnum)(nil)).Elem()

type ColumnTypeEnumPtrInput interface {
	pulumi.Input

	ToColumnTypeEnumPtrOutput() ColumnTypeEnumPtrOutput
	ToColumnTypeEnumPtrOutputWithContext(context.Context) ColumnTypeEnumPtrOutput
}

type columnTypeEnumPtr string

func ColumnTypeEnumPtr(v string) ColumnTypeEnumPtrInput {
	return (*columnTypeEnumPtr)(&v)
}

func (*columnTypeEnumPtr) ElementType() reflect.Type {
	return columnTypeEnumPtrType
}

func (in *columnTypeEnumPtr) ToColumnTypeEnumPtrOutput() ColumnTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(ColumnTypeEnumPtrOutput)
}

func (in *columnTypeEnumPtr) ToColumnTypeEnumPtrOutputWithContext(ctx context.Context) ColumnTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ColumnTypeEnumPtrOutput)
}

// The kind of the DataSource.
type DataSourceKind string

const (
	DataSourceKindWindowsEvent                                         = DataSourceKind("WindowsEvent")
	DataSourceKindWindowsPerformanceCounter                            = DataSourceKind("WindowsPerformanceCounter")
	DataSourceKindIISLogs                                              = DataSourceKind("IISLogs")
	DataSourceKindLinuxSyslog                                          = DataSourceKind("LinuxSyslog")
	DataSourceKindLinuxSyslogCollection                                = DataSourceKind("LinuxSyslogCollection")
	DataSourceKindLinuxPerformanceObject                               = DataSourceKind("LinuxPerformanceObject")
	DataSourceKindLinuxPerformanceCollection                           = DataSourceKind("LinuxPerformanceCollection")
	DataSourceKindCustomLog                                            = DataSourceKind("CustomLog")
	DataSourceKindCustomLogCollection                                  = DataSourceKind("CustomLogCollection")
	DataSourceKindAzureAuditLog                                        = DataSourceKind("AzureAuditLog")
	DataSourceKindAzureActivityLog                                     = DataSourceKind("AzureActivityLog")
	DataSourceKindGenericDataSource                                    = DataSourceKind("GenericDataSource")
	DataSourceKindChangeTrackingCustomPath                             = DataSourceKind("ChangeTrackingCustomPath")
	DataSourceKindChangeTrackingPath                                   = DataSourceKind("ChangeTrackingPath")
	DataSourceKindChangeTrackingServices                               = DataSourceKind("ChangeTrackingServices")
	DataSourceKindChangeTrackingDataTypeConfiguration                  = DataSourceKind("ChangeTrackingDataTypeConfiguration")
	DataSourceKindChangeTrackingDefaultRegistry                        = DataSourceKind("ChangeTrackingDefaultRegistry")
	DataSourceKindChangeTrackingRegistry                               = DataSourceKind("ChangeTrackingRegistry")
	DataSourceKindChangeTrackingLinuxPath                              = DataSourceKind("ChangeTrackingLinuxPath")
	DataSourceKindLinuxChangeTrackingPath                              = DataSourceKind("LinuxChangeTrackingPath")
	DataSourceKindChangeTrackingContentLocation                        = DataSourceKind("ChangeTrackingContentLocation")
	DataSourceKindWindowsTelemetry                                     = DataSourceKind("WindowsTelemetry")
	DataSourceKindOffice365                                            = DataSourceKind("Office365")
	DataSourceKindSecurityWindowsBaselineConfiguration                 = DataSourceKind("SecurityWindowsBaselineConfiguration")
	DataSourceKindSecurityCenterSecurityWindowsBaselineConfiguration   = DataSourceKind("SecurityCenterSecurityWindowsBaselineConfiguration")
	DataSourceKindSecurityEventCollectionConfiguration                 = DataSourceKind("SecurityEventCollectionConfiguration")
	DataSourceKindSecurityInsightsSecurityEventCollectionConfiguration = DataSourceKind("SecurityInsightsSecurityEventCollectionConfiguration")
	DataSourceKindImportComputerGroup                                  = DataSourceKind("ImportComputerGroup")
	DataSourceKindNetworkMonitoring                                    = DataSourceKind("NetworkMonitoring")
	DataSourceKindItsm                                                 = DataSourceKind("Itsm")
	DataSourceKindDnsAnalytics                                         = DataSourceKind("DnsAnalytics")
	DataSourceKindApplicationInsights                                  = DataSourceKind("ApplicationInsights")
	DataSourceKindSqlDataClassification                                = DataSourceKind("SqlDataClassification")
)

func (DataSourceKind) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceKind)(nil)).Elem()
}

func (e DataSourceKind) ToDataSourceKindOutput() DataSourceKindOutput {
	return pulumi.ToOutput(e).(DataSourceKindOutput)
}

func (e DataSourceKind) ToDataSourceKindOutputWithContext(ctx context.Context) DataSourceKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceKindOutput)
}

func (e DataSourceKind) ToDataSourceKindPtrOutput() DataSourceKindPtrOutput {
	return e.ToDataSourceKindPtrOutputWithContext(context.Background())
}

func (e DataSourceKind) ToDataSourceKindPtrOutputWithContext(ctx context.Context) DataSourceKindPtrOutput {
	return DataSourceKind(e).ToDataSourceKindOutputWithContext(ctx).ToDataSourceKindPtrOutputWithContext(ctx)
}

func (e DataSourceKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceKindOutput struct{ *pulumi.OutputState }

func (DataSourceKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceKind)(nil)).Elem()
}

func (o DataSourceKindOutput) ToDataSourceKindOutput() DataSourceKindOutput {
	return o
}

func (o DataSourceKindOutput) ToDataSourceKindOutputWithContext(ctx context.Context) DataSourceKindOutput {
	return o
}

func (o DataSourceKindOutput) ToDataSourceKindPtrOutput() DataSourceKindPtrOutput {
	return o.ToDataSourceKindPtrOutputWithContext(context.Background())
}

func (o DataSourceKindOutput) ToDataSourceKindPtrOutputWithContext(ctx context.Context) DataSourceKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceKind) *DataSourceKind {
		return &v
	}).(DataSourceKindPtrOutput)
}

func (o DataSourceKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceKindPtrOutput struct{ *pulumi.OutputState }

func (DataSourceKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceKind)(nil)).Elem()
}

func (o DataSourceKindPtrOutput) ToDataSourceKindPtrOutput() DataSourceKindPtrOutput {
	return o
}

func (o DataSourceKindPtrOutput) ToDataSourceKindPtrOutputWithContext(ctx context.Context) DataSourceKindPtrOutput {
	return o
}

func (o DataSourceKindPtrOutput) Elem() DataSourceKindOutput {
	return o.ApplyT(func(v *DataSourceKind) DataSourceKind {
		if v != nil {
			return *v
		}
		var ret DataSourceKind
		return ret
	}).(DataSourceKindOutput)
}

func (o DataSourceKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceKindInput is an input type that accepts values of the DataSourceKind enum
// A concrete instance of `DataSourceKindInput` can be one of the following:
//
//	DataSourceKindWindowsEvent
//	DataSourceKindWindowsPerformanceCounter
//	DataSourceKindIISLogs
//	DataSourceKindLinuxSyslog
//	DataSourceKindLinuxSyslogCollection
//	DataSourceKindLinuxPerformanceObject
//	DataSourceKindLinuxPerformanceCollection
//	DataSourceKindCustomLog
//	DataSourceKindCustomLogCollection
//	DataSourceKindAzureAuditLog
//	DataSourceKindAzureActivityLog
//	DataSourceKindGenericDataSource
//	DataSourceKindChangeTrackingCustomPath
//	DataSourceKindChangeTrackingPath
//	DataSourceKindChangeTrackingServices
//	DataSourceKindChangeTrackingDataTypeConfiguration
//	DataSourceKindChangeTrackingDefaultRegistry
//	DataSourceKindChangeTrackingRegistry
//	DataSourceKindChangeTrackingLinuxPath
//	DataSourceKindLinuxChangeTrackingPath
//	DataSourceKindChangeTrackingContentLocation
//	DataSourceKindWindowsTelemetry
//	DataSourceKindOffice365
//	DataSourceKindSecurityWindowsBaselineConfiguration
//	DataSourceKindSecurityCenterSecurityWindowsBaselineConfiguration
//	DataSourceKindSecurityEventCollectionConfiguration
//	DataSourceKindSecurityInsightsSecurityEventCollectionConfiguration
//	DataSourceKindImportComputerGroup
//	DataSourceKindNetworkMonitoring
//	DataSourceKindItsm
//	DataSourceKindDnsAnalytics
//	DataSourceKindApplicationInsights
//	DataSourceKindSqlDataClassification
type DataSourceKindInput interface {
	pulumi.Input

	ToDataSourceKindOutput() DataSourceKindOutput
	ToDataSourceKindOutputWithContext(context.Context) DataSourceKindOutput
}

var dataSourceKindPtrType = reflect.TypeOf((**DataSourceKind)(nil)).Elem()

type DataSourceKindPtrInput interface {
	pulumi.Input

	ToDataSourceKindPtrOutput() DataSourceKindPtrOutput
	ToDataSourceKindPtrOutputWithContext(context.Context) DataSourceKindPtrOutput
}

type dataSourceKindPtr string

func DataSourceKindPtr(v string) DataSourceKindPtrInput {
	return (*dataSourceKindPtr)(&v)
}

func (*dataSourceKindPtr) ElementType() reflect.Type {
	return dataSourceKindPtrType
}

func (in *dataSourceKindPtr) ToDataSourceKindPtrOutput() DataSourceKindPtrOutput {
	return pulumi.ToOutput(in).(DataSourceKindPtrOutput)
}

func (in *dataSourceKindPtr) ToDataSourceKindPtrOutputWithContext(ctx context.Context) DataSourceKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceKindPtrOutput)
}

// Type of managed service identity.
type IdentityType string

const (
	IdentityTypeSystemAssigned = IdentityType("SystemAssigned")
	IdentityTypeUserAssigned   = IdentityType("UserAssigned")
	IdentityTypeNone           = IdentityType("None")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeSystemAssigned
//	IdentityTypeUserAssigned
//	IdentityTypeNone
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

// The provisioning state of the linked service.
type LinkedServiceEntityStatus string

const (
	LinkedServiceEntityStatusSucceeded           = LinkedServiceEntityStatus("Succeeded")
	LinkedServiceEntityStatusDeleting            = LinkedServiceEntityStatus("Deleting")
	LinkedServiceEntityStatusProvisioningAccount = LinkedServiceEntityStatus("ProvisioningAccount")
	LinkedServiceEntityStatusUpdating            = LinkedServiceEntityStatus("Updating")
)

func (LinkedServiceEntityStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceEntityStatus)(nil)).Elem()
}

func (e LinkedServiceEntityStatus) ToLinkedServiceEntityStatusOutput() LinkedServiceEntityStatusOutput {
	return pulumi.ToOutput(e).(LinkedServiceEntityStatusOutput)
}

func (e LinkedServiceEntityStatus) ToLinkedServiceEntityStatusOutputWithContext(ctx context.Context) LinkedServiceEntityStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LinkedServiceEntityStatusOutput)
}

func (e LinkedServiceEntityStatus) ToLinkedServiceEntityStatusPtrOutput() LinkedServiceEntityStatusPtrOutput {
	return e.ToLinkedServiceEntityStatusPtrOutputWithContext(context.Background())
}

func (e LinkedServiceEntityStatus) ToLinkedServiceEntityStatusPtrOutputWithContext(ctx context.Context) LinkedServiceEntityStatusPtrOutput {
	return LinkedServiceEntityStatus(e).ToLinkedServiceEntityStatusOutputWithContext(ctx).ToLinkedServiceEntityStatusPtrOutputWithContext(ctx)
}

func (e LinkedServiceEntityStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinkedServiceEntityStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinkedServiceEntityStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LinkedServiceEntityStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LinkedServiceEntityStatusOutput struct{ *pulumi.OutputState }

func (LinkedServiceEntityStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceEntityStatus)(nil)).Elem()
}

func (o LinkedServiceEntityStatusOutput) ToLinkedServiceEntityStatusOutput() LinkedServiceEntityStatusOutput {
	return o
}

func (o LinkedServiceEntityStatusOutput) ToLinkedServiceEntityStatusOutputWithContext(ctx context.Context) LinkedServiceEntityStatusOutput {
	return o
}

func (o LinkedServiceEntityStatusOutput) ToLinkedServiceEntityStatusPtrOutput() LinkedServiceEntityStatusPtrOutput {
	return o.ToLinkedServiceEntityStatusPtrOutputWithContext(context.Background())
}

func (o LinkedServiceEntityStatusOutput) ToLinkedServiceEntityStatusPtrOutputWithContext(ctx context.Context) LinkedServiceEntityStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceEntityStatus) *LinkedServiceEntityStatus {
		return &v
	}).(LinkedServiceEntityStatusPtrOutput)
}

func (o LinkedServiceEntityStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LinkedServiceEntityStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinkedServiceEntityStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LinkedServiceEntityStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinkedServiceEntityStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinkedServiceEntityStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceEntityStatusPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceEntityStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceEntityStatus)(nil)).Elem()
}

func (o LinkedServiceEntityStatusPtrOutput) ToLinkedServiceEntityStatusPtrOutput() LinkedServiceEntityStatusPtrOutput {
	return o
}

func (o LinkedServiceEntityStatusPtrOutput) ToLinkedServiceEntityStatusPtrOutputWithContext(ctx context.Context) LinkedServiceEntityStatusPtrOutput {
	return o
}

func (o LinkedServiceEntityStatusPtrOutput) Elem() LinkedServiceEntityStatusOutput {
	return o.ApplyT(func(v *LinkedServiceEntityStatus) LinkedServiceEntityStatus {
		if v != nil {
			return *v
		}
		var ret LinkedServiceEntityStatus
		return ret
	}).(LinkedServiceEntityStatusOutput)
}

func (o LinkedServiceEntityStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinkedServiceEntityStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LinkedServiceEntityStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LinkedServiceEntityStatusInput is an input type that accepts values of the LinkedServiceEntityStatus enum
// A concrete instance of `LinkedServiceEntityStatusInput` can be one of the following:
//
//	LinkedServiceEntityStatusSucceeded
//	LinkedServiceEntityStatusDeleting
//	LinkedServiceEntityStatusProvisioningAccount
//	LinkedServiceEntityStatusUpdating
type LinkedServiceEntityStatusInput interface {
	pulumi.Input

	ToLinkedServiceEntityStatusOutput() LinkedServiceEntityStatusOutput
	ToLinkedServiceEntityStatusOutputWithContext(context.Context) LinkedServiceEntityStatusOutput
}

var linkedServiceEntityStatusPtrType = reflect.TypeOf((**LinkedServiceEntityStatus)(nil)).Elem()

type LinkedServiceEntityStatusPtrInput interface {
	pulumi.Input

	ToLinkedServiceEntityStatusPtrOutput() LinkedServiceEntityStatusPtrOutput
	ToLinkedServiceEntityStatusPtrOutputWithContext(context.Context) LinkedServiceEntityStatusPtrOutput
}

type linkedServiceEntityStatusPtr string

func LinkedServiceEntityStatusPtr(v string) LinkedServiceEntityStatusPtrInput {
	return (*linkedServiceEntityStatusPtr)(&v)
}

func (*linkedServiceEntityStatusPtr) ElementType() reflect.Type {
	return linkedServiceEntityStatusPtrType
}

func (in *linkedServiceEntityStatusPtr) ToLinkedServiceEntityStatusPtrOutput() LinkedServiceEntityStatusPtrOutput {
	return pulumi.ToOutput(in).(LinkedServiceEntityStatusPtrOutput)
}

func (in *linkedServiceEntityStatusPtr) ToLinkedServiceEntityStatusPtrOutputWithContext(ctx context.Context) LinkedServiceEntityStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LinkedServiceEntityStatusPtrOutput)
}

// Type of the machine group
type MachineGroupType string

const (
	MachineGroupTypeUnknown      = MachineGroupType("unknown")
	MachineGroupType_Azure_Cs    = MachineGroupType("azure-cs")
	MachineGroupType_Azure_Sf    = MachineGroupType("azure-sf")
	MachineGroupType_Azure_Vmss  = MachineGroupType("azure-vmss")
	MachineGroupType_User_Static = MachineGroupType("user-static")
)

func (MachineGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineGroupType)(nil)).Elem()
}

func (e MachineGroupType) ToMachineGroupTypeOutput() MachineGroupTypeOutput {
	return pulumi.ToOutput(e).(MachineGroupTypeOutput)
}

func (e MachineGroupType) ToMachineGroupTypeOutputWithContext(ctx context.Context) MachineGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MachineGroupTypeOutput)
}

func (e MachineGroupType) ToMachineGroupTypePtrOutput() MachineGroupTypePtrOutput {
	return e.ToMachineGroupTypePtrOutputWithContext(context.Background())
}

func (e MachineGroupType) ToMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupTypePtrOutput {
	return MachineGroupType(e).ToMachineGroupTypeOutputWithContext(ctx).ToMachineGroupTypePtrOutputWithContext(ctx)
}

func (e MachineGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MachineGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MachineGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MachineGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MachineGroupTypeOutput struct{ *pulumi.OutputState }

func (MachineGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineGroupType)(nil)).Elem()
}

func (o MachineGroupTypeOutput) ToMachineGroupTypeOutput() MachineGroupTypeOutput {
	return o
}

func (o MachineGroupTypeOutput) ToMachineGroupTypeOutputWithContext(ctx context.Context) MachineGroupTypeOutput {
	return o
}

func (o MachineGroupTypeOutput) ToMachineGroupTypePtrOutput() MachineGroupTypePtrOutput {
	return o.ToMachineGroupTypePtrOutputWithContext(context.Background())
}

func (o MachineGroupTypeOutput) ToMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineGroupType) *MachineGroupType {
		return &v
	}).(MachineGroupTypePtrOutput)
}

func (o MachineGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MachineGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MachineGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MachineGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MachineGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MachineGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MachineGroupTypePtrOutput struct{ *pulumi.OutputState }

func (MachineGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineGroupType)(nil)).Elem()
}

func (o MachineGroupTypePtrOutput) ToMachineGroupTypePtrOutput() MachineGroupTypePtrOutput {
	return o
}

func (o MachineGroupTypePtrOutput) ToMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupTypePtrOutput {
	return o
}

func (o MachineGroupTypePtrOutput) Elem() MachineGroupTypeOutput {
	return o.ApplyT(func(v *MachineGroupType) MachineGroupType {
		if v != nil {
			return *v
		}
		var ret MachineGroupType
		return ret
	}).(MachineGroupTypeOutput)
}

func (o MachineGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MachineGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MachineGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MachineGroupTypeInput is an input type that accepts values of the MachineGroupType enum
// A concrete instance of `MachineGroupTypeInput` can be one of the following:
//
//	MachineGroupTypeUnknown
//	MachineGroupType_Azure_Cs
//	MachineGroupType_Azure_Sf
//	MachineGroupType_Azure_Vmss
//	MachineGroupType_User_Static
type MachineGroupTypeInput interface {
	pulumi.Input

	ToMachineGroupTypeOutput() MachineGroupTypeOutput
	ToMachineGroupTypeOutputWithContext(context.Context) MachineGroupTypeOutput
}

var machineGroupTypePtrType = reflect.TypeOf((**MachineGroupType)(nil)).Elem()

type MachineGroupTypePtrInput interface {
	pulumi.Input

	ToMachineGroupTypePtrOutput() MachineGroupTypePtrOutput
	ToMachineGroupTypePtrOutputWithContext(context.Context) MachineGroupTypePtrOutput
}

type machineGroupTypePtr string

func MachineGroupTypePtr(v string) MachineGroupTypePtrInput {
	return (*machineGroupTypePtr)(&v)
}

func (*machineGroupTypePtr) ElementType() reflect.Type {
	return machineGroupTypePtrType
}

func (in *machineGroupTypePtr) ToMachineGroupTypePtrOutput() MachineGroupTypePtrOutput {
	return pulumi.ToOutput(in).(MachineGroupTypePtrOutput)
}

func (in *machineGroupTypePtr) ToMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MachineGroupTypePtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// The network access type for accessing Log Analytics query.
type PublicNetworkAccessType string

const (
	// Enables connectivity to Log Analytics through public DNS.
	PublicNetworkAccessTypeEnabled = PublicNetworkAccessType("Enabled")
	// Disables public connectivity to Log Analytics through public DNS.
	PublicNetworkAccessTypeDisabled = PublicNetworkAccessType("Disabled")
)

func (PublicNetworkAccessType) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessType)(nil)).Elem()
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessTypeOutput)
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypeOutputWithContext(ctx context.Context) PublicNetworkAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessTypeOutput)
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return e.ToPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return PublicNetworkAccessType(e).ToPublicNetworkAccessTypeOutputWithContext(ctx).ToPublicNetworkAccessTypePtrOutputWithContext(ctx)
}

func (e PublicNetworkAccessType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessTypeOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessType)(nil)).Elem()
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput {
	return o
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypeOutputWithContext(ctx context.Context) PublicNetworkAccessTypeOutput {
	return o
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return o.ToPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccessType) *PublicNetworkAccessType {
		return &v
	}).(PublicNetworkAccessTypePtrOutput)
}

func (o PublicNetworkAccessTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessTypePtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccessType)(nil)).Elem()
}

func (o PublicNetworkAccessTypePtrOutput) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return o
}

func (o PublicNetworkAccessTypePtrOutput) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return o
}

func (o PublicNetworkAccessTypePtrOutput) Elem() PublicNetworkAccessTypeOutput {
	return o.ApplyT(func(v *PublicNetworkAccessType) PublicNetworkAccessType {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccessType
		return ret
	}).(PublicNetworkAccessTypeOutput)
}

func (o PublicNetworkAccessTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccessType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessTypeInput is an input type that accepts values of the PublicNetworkAccessType enum
// A concrete instance of `PublicNetworkAccessTypeInput` can be one of the following:
//
//	PublicNetworkAccessTypeEnabled
//	PublicNetworkAccessTypeDisabled
type PublicNetworkAccessTypeInput interface {
	pulumi.Input

	ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput
	ToPublicNetworkAccessTypeOutputWithContext(context.Context) PublicNetworkAccessTypeOutput
}

var publicNetworkAccessTypePtrType = reflect.TypeOf((**PublicNetworkAccessType)(nil)).Elem()

type PublicNetworkAccessTypePtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput
	ToPublicNetworkAccessTypePtrOutputWithContext(context.Context) PublicNetworkAccessTypePtrOutput
}

type publicNetworkAccessTypePtr string

func PublicNetworkAccessTypePtr(v string) PublicNetworkAccessTypePtrInput {
	return (*publicNetworkAccessTypePtr)(&v)
}

func (*publicNetworkAccessTypePtr) ElementType() reflect.Type {
	return publicNetworkAccessTypePtrType
}

func (in *publicNetworkAccessTypePtr) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessTypePtrOutput)
}

func (in *publicNetworkAccessTypePtr) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessTypePtrOutput)
}

// Instruct the system how to handle and charge the logs ingested to this table.
type TablePlanEnum string

const (
	// Logs that are adjusted to support high volume low value verbose logs.
	TablePlanEnumBasic = TablePlanEnum("Basic")
	// Logs  that allow monitoring and analytics.
	TablePlanEnumAnalytics = TablePlanEnum("Analytics")
)

func (TablePlanEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*TablePlanEnum)(nil)).Elem()
}

func (e TablePlanEnum) ToTablePlanEnumOutput() TablePlanEnumOutput {
	return pulumi.ToOutput(e).(TablePlanEnumOutput)
}

func (e TablePlanEnum) ToTablePlanEnumOutputWithContext(ctx context.Context) TablePlanEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TablePlanEnumOutput)
}

func (e TablePlanEnum) ToTablePlanEnumPtrOutput() TablePlanEnumPtrOutput {
	return e.ToTablePlanEnumPtrOutputWithContext(context.Background())
}

func (e TablePlanEnum) ToTablePlanEnumPtrOutputWithContext(ctx context.Context) TablePlanEnumPtrOutput {
	return TablePlanEnum(e).ToTablePlanEnumOutputWithContext(ctx).ToTablePlanEnumPtrOutputWithContext(ctx)
}

func (e TablePlanEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TablePlanEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TablePlanEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TablePlanEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TablePlanEnumOutput struct{ *pulumi.OutputState }

func (TablePlanEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TablePlanEnum)(nil)).Elem()
}

func (o TablePlanEnumOutput) ToTablePlanEnumOutput() TablePlanEnumOutput {
	return o
}

func (o TablePlanEnumOutput) ToTablePlanEnumOutputWithContext(ctx context.Context) TablePlanEnumOutput {
	return o
}

func (o TablePlanEnumOutput) ToTablePlanEnumPtrOutput() TablePlanEnumPtrOutput {
	return o.ToTablePlanEnumPtrOutputWithContext(context.Background())
}

func (o TablePlanEnumOutput) ToTablePlanEnumPtrOutputWithContext(ctx context.Context) TablePlanEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TablePlanEnum) *TablePlanEnum {
		return &v
	}).(TablePlanEnumPtrOutput)
}

func (o TablePlanEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TablePlanEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TablePlanEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TablePlanEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TablePlanEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TablePlanEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TablePlanEnumPtrOutput struct{ *pulumi.OutputState }

func (TablePlanEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TablePlanEnum)(nil)).Elem()
}

func (o TablePlanEnumPtrOutput) ToTablePlanEnumPtrOutput() TablePlanEnumPtrOutput {
	return o
}

func (o TablePlanEnumPtrOutput) ToTablePlanEnumPtrOutputWithContext(ctx context.Context) TablePlanEnumPtrOutput {
	return o
}

func (o TablePlanEnumPtrOutput) Elem() TablePlanEnumOutput {
	return o.ApplyT(func(v *TablePlanEnum) TablePlanEnum {
		if v != nil {
			return *v
		}
		var ret TablePlanEnum
		return ret
	}).(TablePlanEnumOutput)
}

func (o TablePlanEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TablePlanEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TablePlanEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TablePlanEnumInput is an input type that accepts values of the TablePlanEnum enum
// A concrete instance of `TablePlanEnumInput` can be one of the following:
//
//	TablePlanEnumBasic
//	TablePlanEnumAnalytics
type TablePlanEnumInput interface {
	pulumi.Input

	ToTablePlanEnumOutput() TablePlanEnumOutput
	ToTablePlanEnumOutputWithContext(context.Context) TablePlanEnumOutput
}

var tablePlanEnumPtrType = reflect.TypeOf((**TablePlanEnum)(nil)).Elem()

type TablePlanEnumPtrInput interface {
	pulumi.Input

	ToTablePlanEnumPtrOutput() TablePlanEnumPtrOutput
	ToTablePlanEnumPtrOutputWithContext(context.Context) TablePlanEnumPtrOutput
}

type tablePlanEnumPtr string

func TablePlanEnumPtr(v string) TablePlanEnumPtrInput {
	return (*tablePlanEnumPtr)(&v)
}

func (*tablePlanEnumPtr) ElementType() reflect.Type {
	return tablePlanEnumPtrType
}

func (in *tablePlanEnumPtr) ToTablePlanEnumPtrOutput() TablePlanEnumPtrOutput {
	return pulumi.ToOutput(in).(TablePlanEnumPtrOutput)
}

func (in *tablePlanEnumPtr) ToTablePlanEnumPtrOutputWithContext(ctx context.Context) TablePlanEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TablePlanEnumPtrOutput)
}

// The name of the SKU.
type WorkspaceSkuNameEnum string

const (
	WorkspaceSkuNameEnumFree                = WorkspaceSkuNameEnum("Free")
	WorkspaceSkuNameEnumStandard            = WorkspaceSkuNameEnum("Standard")
	WorkspaceSkuNameEnumPremium             = WorkspaceSkuNameEnum("Premium")
	WorkspaceSkuNameEnumPerNode             = WorkspaceSkuNameEnum("PerNode")
	WorkspaceSkuNameEnumPerGB2018           = WorkspaceSkuNameEnum("PerGB2018")
	WorkspaceSkuNameEnumStandalone          = WorkspaceSkuNameEnum("Standalone")
	WorkspaceSkuNameEnumCapacityReservation = WorkspaceSkuNameEnum("CapacityReservation")
	WorkspaceSkuNameEnumLACluster           = WorkspaceSkuNameEnum("LACluster")
)

func (WorkspaceSkuNameEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSkuNameEnum)(nil)).Elem()
}

func (e WorkspaceSkuNameEnum) ToWorkspaceSkuNameEnumOutput() WorkspaceSkuNameEnumOutput {
	return pulumi.ToOutput(e).(WorkspaceSkuNameEnumOutput)
}

func (e WorkspaceSkuNameEnum) ToWorkspaceSkuNameEnumOutputWithContext(ctx context.Context) WorkspaceSkuNameEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkspaceSkuNameEnumOutput)
}

func (e WorkspaceSkuNameEnum) ToWorkspaceSkuNameEnumPtrOutput() WorkspaceSkuNameEnumPtrOutput {
	return e.ToWorkspaceSkuNameEnumPtrOutputWithContext(context.Background())
}

func (e WorkspaceSkuNameEnum) ToWorkspaceSkuNameEnumPtrOutputWithContext(ctx context.Context) WorkspaceSkuNameEnumPtrOutput {
	return WorkspaceSkuNameEnum(e).ToWorkspaceSkuNameEnumOutputWithContext(ctx).ToWorkspaceSkuNameEnumPtrOutputWithContext(ctx)
}

func (e WorkspaceSkuNameEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkspaceSkuNameEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkspaceSkuNameEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkspaceSkuNameEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkspaceSkuNameEnumOutput struct{ *pulumi.OutputState }

func (WorkspaceSkuNameEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSkuNameEnum)(nil)).Elem()
}

func (o WorkspaceSkuNameEnumOutput) ToWorkspaceSkuNameEnumOutput() WorkspaceSkuNameEnumOutput {
	return o
}

func (o WorkspaceSkuNameEnumOutput) ToWorkspaceSkuNameEnumOutputWithContext(ctx context.Context) WorkspaceSkuNameEnumOutput {
	return o
}

func (o WorkspaceSkuNameEnumOutput) ToWorkspaceSkuNameEnumPtrOutput() WorkspaceSkuNameEnumPtrOutput {
	return o.ToWorkspaceSkuNameEnumPtrOutputWithContext(context.Background())
}

func (o WorkspaceSkuNameEnumOutput) ToWorkspaceSkuNameEnumPtrOutputWithContext(ctx context.Context) WorkspaceSkuNameEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSkuNameEnum) *WorkspaceSkuNameEnum {
		return &v
	}).(WorkspaceSkuNameEnumPtrOutput)
}

func (o WorkspaceSkuNameEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkspaceSkuNameEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkspaceSkuNameEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkspaceSkuNameEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkspaceSkuNameEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkspaceSkuNameEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkspaceSkuNameEnumPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSkuNameEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSkuNameEnum)(nil)).Elem()
}

func (o WorkspaceSkuNameEnumPtrOutput) ToWorkspaceSkuNameEnumPtrOutput() WorkspaceSkuNameEnumPtrOutput {
	return o
}

func (o WorkspaceSkuNameEnumPtrOutput) ToWorkspaceSkuNameEnumPtrOutputWithContext(ctx context.Context) WorkspaceSkuNameEnumPtrOutput {
	return o
}

func (o WorkspaceSkuNameEnumPtrOutput) Elem() WorkspaceSkuNameEnumOutput {
	return o.ApplyT(func(v *WorkspaceSkuNameEnum) WorkspaceSkuNameEnum {
		if v != nil {
			return *v
		}
		var ret WorkspaceSkuNameEnum
		return ret
	}).(WorkspaceSkuNameEnumOutput)
}

func (o WorkspaceSkuNameEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkspaceSkuNameEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkspaceSkuNameEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkspaceSkuNameEnumInput is an input type that accepts values of the WorkspaceSkuNameEnum enum
// A concrete instance of `WorkspaceSkuNameEnumInput` can be one of the following:
//
//	WorkspaceSkuNameEnumFree
//	WorkspaceSkuNameEnumStandard
//	WorkspaceSkuNameEnumPremium
//	WorkspaceSkuNameEnumPerNode
//	WorkspaceSkuNameEnumPerGB2018
//	WorkspaceSkuNameEnumStandalone
//	WorkspaceSkuNameEnumCapacityReservation
//	WorkspaceSkuNameEnumLACluster
type WorkspaceSkuNameEnumInput interface {
	pulumi.Input

	ToWorkspaceSkuNameEnumOutput() WorkspaceSkuNameEnumOutput
	ToWorkspaceSkuNameEnumOutputWithContext(context.Context) WorkspaceSkuNameEnumOutput
}

var workspaceSkuNameEnumPtrType = reflect.TypeOf((**WorkspaceSkuNameEnum)(nil)).Elem()

type WorkspaceSkuNameEnumPtrInput interface {
	pulumi.Input

	ToWorkspaceSkuNameEnumPtrOutput() WorkspaceSkuNameEnumPtrOutput
	ToWorkspaceSkuNameEnumPtrOutputWithContext(context.Context) WorkspaceSkuNameEnumPtrOutput
}

type workspaceSkuNameEnumPtr string

func WorkspaceSkuNameEnumPtr(v string) WorkspaceSkuNameEnumPtrInput {
	return (*workspaceSkuNameEnumPtr)(&v)
}

func (*workspaceSkuNameEnumPtr) ElementType() reflect.Type {
	return workspaceSkuNameEnumPtrType
}

func (in *workspaceSkuNameEnumPtr) ToWorkspaceSkuNameEnumPtrOutput() WorkspaceSkuNameEnumPtrOutput {
	return pulumi.ToOutput(in).(WorkspaceSkuNameEnumPtrOutput)
}

func (in *workspaceSkuNameEnumPtr) ToWorkspaceSkuNameEnumPtrOutputWithContext(ctx context.Context) WorkspaceSkuNameEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkspaceSkuNameEnumPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BillingTypeOutput{})
	pulumi.RegisterOutputType(BillingTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterSkuNameEnumOutput{})
	pulumi.RegisterOutputType(ClusterSkuNameEnumPtrOutput{})
	pulumi.RegisterOutputType(ColumnDataTypeHintEnumOutput{})
	pulumi.RegisterOutputType(ColumnDataTypeHintEnumPtrOutput{})
	pulumi.RegisterOutputType(ColumnTypeEnumOutput{})
	pulumi.RegisterOutputType(ColumnTypeEnumPtrOutput{})
	pulumi.RegisterOutputType(DataSourceKindOutput{})
	pulumi.RegisterOutputType(DataSourceKindPtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceEntityStatusOutput{})
	pulumi.RegisterOutputType(LinkedServiceEntityStatusPtrOutput{})
	pulumi.RegisterOutputType(MachineGroupTypeOutput{})
	pulumi.RegisterOutputType(MachineGroupTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessTypeOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessTypePtrOutput{})
	pulumi.RegisterOutputType(TablePlanEnumOutput{})
	pulumi.RegisterOutputType(TablePlanEnumPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSkuNameEnumOutput{})
	pulumi.RegisterOutputType(WorkspaceSkuNameEnumPtrOutput{})
}
