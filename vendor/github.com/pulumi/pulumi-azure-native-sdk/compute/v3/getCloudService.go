// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Display information about a cloud service.
//
// Uses Azure REST API version 2022-09-04.
//
// Other available API versions: 2022-04-04, 2024-11-04. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupCloudService(ctx *pulumi.Context, args *LookupCloudServiceArgs, opts ...pulumi.InvokeOption) (*LookupCloudServiceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudServiceResult
	err := ctx.Invoke("azure-native:compute:getCloudService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCloudServiceArgs struct {
	// Name of the cloud service.
	CloudServiceName string `pulumi:"cloudServiceName"`
	// Name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Describes the cloud service.
type LookupCloudServiceResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Cloud service properties
	Properties CloudServicePropertiesResponse `pulumi:"properties"`
	// The system meta data relating to this resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// List of logical availability zone of the resource. List should contain only 1 zone where cloud service should be provisioned. This field is optional.
	Zones []string `pulumi:"zones"`
}

func LookupCloudServiceOutput(ctx *pulumi.Context, args LookupCloudServiceOutputArgs, opts ...pulumi.InvokeOption) LookupCloudServiceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudServiceResultOutput, error) {
			args := v.(LookupCloudServiceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:compute:getCloudService", args, LookupCloudServiceResultOutput{}, options).(LookupCloudServiceResultOutput), nil
		}).(LookupCloudServiceResultOutput)
}

type LookupCloudServiceOutputArgs struct {
	// Name of the cloud service.
	CloudServiceName pulumi.StringInput `pulumi:"cloudServiceName"`
	// Name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCloudServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudServiceArgs)(nil)).Elem()
}

// Describes the cloud service.
type LookupCloudServiceResultOutput struct{ *pulumi.OutputState }

func (LookupCloudServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudServiceResult)(nil)).Elem()
}

func (o LookupCloudServiceResultOutput) ToLookupCloudServiceResultOutput() LookupCloudServiceResultOutput {
	return o
}

func (o LookupCloudServiceResultOutput) ToLookupCloudServiceResultOutputWithContext(ctx context.Context) LookupCloudServiceResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupCloudServiceResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Resource Id.
func (o LookupCloudServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource location.
func (o LookupCloudServiceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupCloudServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Cloud service properties
func (o LookupCloudServiceResultOutput) Properties() CloudServicePropertiesResponseOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) CloudServicePropertiesResponse { return v.Properties }).(CloudServicePropertiesResponseOutput)
}

// The system meta data relating to this resource.
func (o LookupCloudServiceResultOutput) SystemData() SystemDataResponsePtrOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) *SystemDataResponse { return v.SystemData }).(SystemDataResponsePtrOutput)
}

// Resource tags.
func (o LookupCloudServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LookupCloudServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

// List of logical availability zone of the resource. List should contain only 1 zone where cloud service should be provisioned. This field is optional.
func (o LookupCloudServiceResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudServiceResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudServiceResultOutput{})
}
