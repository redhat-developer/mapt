// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves information about an availability set.
//
// Uses Azure REST API version 2024-11-01.
//
// Other available API versions: 2022-08-01, 2022-11-01, 2023-03-01, 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupAvailabilitySet(ctx *pulumi.Context, args *LookupAvailabilitySetArgs, opts ...pulumi.InvokeOption) (*LookupAvailabilitySetResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAvailabilitySetResult
	err := ctx.Invoke("azure-native:compute:getAvailabilitySet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAvailabilitySetArgs struct {
	// The name of the availability set.
	AvailabilitySetName string `pulumi:"availabilitySetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to an availability set at creation time. An existing VM cannot be added to an availability set.
type LookupAvailabilitySetResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Fault Domain count.
	PlatformFaultDomainCount *int `pulumi:"platformFaultDomainCount"`
	// Update Domain count.
	PlatformUpdateDomainCount *int `pulumi:"platformUpdateDomainCount"`
	// Specifies information about the proximity placement group that the availability set should be assigned to. Minimum api-version: 2018-04-01.
	ProximityPlacementGroup *SubResourceResponse `pulumi:"proximityPlacementGroup"`
	// Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the availability set.
	ScheduledEventsPolicy *ScheduledEventsPolicyResponse `pulumi:"scheduledEventsPolicy"`
	// Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
	Sku *SkuResponse `pulumi:"sku"`
	// The resource status information.
	Statuses []InstanceViewStatusResponse `pulumi:"statuses"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Describes the migration properties on the Availability Set.
	VirtualMachineScaleSetMigrationInfo VirtualMachineScaleSetMigrationInfoResponse `pulumi:"virtualMachineScaleSetMigrationInfo"`
	// A list of references to all virtual machines in the availability set.
	VirtualMachines []SubResourceResponse `pulumi:"virtualMachines"`
}

func LookupAvailabilitySetOutput(ctx *pulumi.Context, args LookupAvailabilitySetOutputArgs, opts ...pulumi.InvokeOption) LookupAvailabilitySetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAvailabilitySetResultOutput, error) {
			args := v.(LookupAvailabilitySetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:compute:getAvailabilitySet", args, LookupAvailabilitySetResultOutput{}, options).(LookupAvailabilitySetResultOutput), nil
		}).(LookupAvailabilitySetResultOutput)
}

type LookupAvailabilitySetOutputArgs struct {
	// The name of the availability set.
	AvailabilitySetName pulumi.StringInput `pulumi:"availabilitySetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAvailabilitySetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAvailabilitySetArgs)(nil)).Elem()
}

// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to an availability set at creation time. An existing VM cannot be added to an availability set.
type LookupAvailabilitySetResultOutput struct{ *pulumi.OutputState }

func (LookupAvailabilitySetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAvailabilitySetResult)(nil)).Elem()
}

func (o LookupAvailabilitySetResultOutput) ToLookupAvailabilitySetResultOutput() LookupAvailabilitySetResultOutput {
	return o
}

func (o LookupAvailabilitySetResultOutput) ToLookupAvailabilitySetResultOutputWithContext(ctx context.Context) LookupAvailabilitySetResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAvailabilitySetResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAvailabilitySetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupAvailabilitySetResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAvailabilitySetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) string { return v.Name }).(pulumi.StringOutput)
}

// Fault Domain count.
func (o LookupAvailabilitySetResultOutput) PlatformFaultDomainCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) *int { return v.PlatformFaultDomainCount }).(pulumi.IntPtrOutput)
}

// Update Domain count.
func (o LookupAvailabilitySetResultOutput) PlatformUpdateDomainCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) *int { return v.PlatformUpdateDomainCount }).(pulumi.IntPtrOutput)
}

// Specifies information about the proximity placement group that the availability set should be assigned to. Minimum api-version: 2018-04-01.
func (o LookupAvailabilitySetResultOutput) ProximityPlacementGroup() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) *SubResourceResponse { return v.ProximityPlacementGroup }).(SubResourceResponsePtrOutput)
}

// Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the availability set.
func (o LookupAvailabilitySetResultOutput) ScheduledEventsPolicy() ScheduledEventsPolicyResponsePtrOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) *ScheduledEventsPolicyResponse { return v.ScheduledEventsPolicy }).(ScheduledEventsPolicyResponsePtrOutput)
}

// Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
func (o LookupAvailabilitySetResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// The resource status information.
func (o LookupAvailabilitySetResultOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) []InstanceViewStatusResponse { return v.Statuses }).(InstanceViewStatusResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAvailabilitySetResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupAvailabilitySetResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAvailabilitySetResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) string { return v.Type }).(pulumi.StringOutput)
}

// Describes the migration properties on the Availability Set.
func (o LookupAvailabilitySetResultOutput) VirtualMachineScaleSetMigrationInfo() VirtualMachineScaleSetMigrationInfoResponseOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) VirtualMachineScaleSetMigrationInfoResponse {
		return v.VirtualMachineScaleSetMigrationInfo
	}).(VirtualMachineScaleSetMigrationInfoResponseOutput)
}

// A list of references to all virtual machines in the availability set.
func (o LookupAvailabilitySetResultOutput) VirtualMachines() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v LookupAvailabilitySetResult) []SubResourceResponse { return v.VirtualMachines }).(SubResourceResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAvailabilitySetResultOutput{})
}
