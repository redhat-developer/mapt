// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to an availability set at creation time. An existing VM cannot be added to an availability set.
//
// Uses Azure REST API version 2024-11-01. In version 2.x of the Azure Native provider, it used API version 2023-03-01.
//
// Other available API versions: 2022-08-01, 2022-11-01, 2023-03-01, 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native compute [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type AvailabilitySet struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Fault Domain count.
	PlatformFaultDomainCount pulumi.IntPtrOutput `pulumi:"platformFaultDomainCount"`
	// Update Domain count.
	PlatformUpdateDomainCount pulumi.IntPtrOutput `pulumi:"platformUpdateDomainCount"`
	// Specifies information about the proximity placement group that the availability set should be assigned to. Minimum api-version: 2018-04-01.
	ProximityPlacementGroup SubResourceResponsePtrOutput `pulumi:"proximityPlacementGroup"`
	// Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the availability set.
	ScheduledEventsPolicy ScheduledEventsPolicyResponsePtrOutput `pulumi:"scheduledEventsPolicy"`
	// Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// The resource status information.
	Statuses InstanceViewStatusResponseArrayOutput `pulumi:"statuses"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Describes the migration properties on the Availability Set.
	VirtualMachineScaleSetMigrationInfo VirtualMachineScaleSetMigrationInfoResponseOutput `pulumi:"virtualMachineScaleSetMigrationInfo"`
	// A list of references to all virtual machines in the availability set.
	VirtualMachines SubResourceResponseArrayOutput `pulumi:"virtualMachines"`
}

// NewAvailabilitySet registers a new resource with the given unique name, arguments, and options.
func NewAvailabilitySet(ctx *pulumi.Context,
	name string, args *AvailabilitySetArgs, opts ...pulumi.ResourceOption) (*AvailabilitySet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:compute/v20150615:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20160330:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20160430preview:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20170330:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20171201:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20180401:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20180601:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20181001:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20190301:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20190701:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20191201:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20200601:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20201201:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210301:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210401:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210701:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20211101:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20220301:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20220801:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20221101:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20230301:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20230701:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20230901:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20240301:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20240701:AvailabilitySet"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20241101:AvailabilitySet"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AvailabilitySet
	err := ctx.RegisterResource("azure-native:compute:AvailabilitySet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAvailabilitySet gets an existing AvailabilitySet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAvailabilitySet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AvailabilitySetState, opts ...pulumi.ResourceOption) (*AvailabilitySet, error) {
	var resource AvailabilitySet
	err := ctx.ReadResource("azure-native:compute:AvailabilitySet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AvailabilitySet resources.
type availabilitySetState struct {
}

type AvailabilitySetState struct {
}

func (AvailabilitySetState) ElementType() reflect.Type {
	return reflect.TypeOf((*availabilitySetState)(nil)).Elem()
}

type availabilitySetArgs struct {
	// The name of the availability set.
	AvailabilitySetName *string `pulumi:"availabilitySetName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Fault Domain count.
	PlatformFaultDomainCount *int `pulumi:"platformFaultDomainCount"`
	// Update Domain count.
	PlatformUpdateDomainCount *int `pulumi:"platformUpdateDomainCount"`
	// Specifies information about the proximity placement group that the availability set should be assigned to. Minimum api-version: 2018-04-01.
	ProximityPlacementGroup *SubResource `pulumi:"proximityPlacementGroup"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the availability set.
	ScheduledEventsPolicy *ScheduledEventsPolicy `pulumi:"scheduledEventsPolicy"`
	// Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
	Sku *Sku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of references to all virtual machines in the availability set.
	VirtualMachines []SubResource `pulumi:"virtualMachines"`
}

// The set of arguments for constructing a AvailabilitySet resource.
type AvailabilitySetArgs struct {
	// The name of the availability set.
	AvailabilitySetName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Fault Domain count.
	PlatformFaultDomainCount pulumi.IntPtrInput
	// Update Domain count.
	PlatformUpdateDomainCount pulumi.IntPtrInput
	// Specifies information about the proximity placement group that the availability set should be assigned to. Minimum api-version: 2018-04-01.
	ProximityPlacementGroup SubResourcePtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the availability set.
	ScheduledEventsPolicy ScheduledEventsPolicyPtrInput
	// Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
	Sku SkuPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// A list of references to all virtual machines in the availability set.
	VirtualMachines SubResourceArrayInput
}

func (AvailabilitySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*availabilitySetArgs)(nil)).Elem()
}

type AvailabilitySetInput interface {
	pulumi.Input

	ToAvailabilitySetOutput() AvailabilitySetOutput
	ToAvailabilitySetOutputWithContext(ctx context.Context) AvailabilitySetOutput
}

func (*AvailabilitySet) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilitySet)(nil)).Elem()
}

func (i *AvailabilitySet) ToAvailabilitySetOutput() AvailabilitySetOutput {
	return i.ToAvailabilitySetOutputWithContext(context.Background())
}

func (i *AvailabilitySet) ToAvailabilitySetOutputWithContext(ctx context.Context) AvailabilitySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilitySetOutput)
}

type AvailabilitySetOutput struct{ *pulumi.OutputState }

func (AvailabilitySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilitySet)(nil)).Elem()
}

func (o AvailabilitySetOutput) ToAvailabilitySetOutput() AvailabilitySetOutput {
	return o
}

func (o AvailabilitySetOutput) ToAvailabilitySetOutputWithContext(ctx context.Context) AvailabilitySetOutput {
	return o
}

// The Azure API version of the resource.
func (o AvailabilitySetOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AvailabilitySet) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o AvailabilitySetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AvailabilitySet) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o AvailabilitySetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AvailabilitySet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Fault Domain count.
func (o AvailabilitySetOutput) PlatformFaultDomainCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilitySet) pulumi.IntPtrOutput { return v.PlatformFaultDomainCount }).(pulumi.IntPtrOutput)
}

// Update Domain count.
func (o AvailabilitySetOutput) PlatformUpdateDomainCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilitySet) pulumi.IntPtrOutput { return v.PlatformUpdateDomainCount }).(pulumi.IntPtrOutput)
}

// Specifies information about the proximity placement group that the availability set should be assigned to. Minimum api-version: 2018-04-01.
func (o AvailabilitySetOutput) ProximityPlacementGroup() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *AvailabilitySet) SubResourceResponsePtrOutput { return v.ProximityPlacementGroup }).(SubResourceResponsePtrOutput)
}

// Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the availability set.
func (o AvailabilitySetOutput) ScheduledEventsPolicy() ScheduledEventsPolicyResponsePtrOutput {
	return o.ApplyT(func(v *AvailabilitySet) ScheduledEventsPolicyResponsePtrOutput { return v.ScheduledEventsPolicy }).(ScheduledEventsPolicyResponsePtrOutput)
}

// Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
func (o AvailabilitySetOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *AvailabilitySet) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// The resource status information.
func (o AvailabilitySetOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v *AvailabilitySet) InstanceViewStatusResponseArrayOutput { return v.Statuses }).(InstanceViewStatusResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AvailabilitySetOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AvailabilitySet) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AvailabilitySetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AvailabilitySet) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AvailabilitySetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AvailabilitySet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Describes the migration properties on the Availability Set.
func (o AvailabilitySetOutput) VirtualMachineScaleSetMigrationInfo() VirtualMachineScaleSetMigrationInfoResponseOutput {
	return o.ApplyT(func(v *AvailabilitySet) VirtualMachineScaleSetMigrationInfoResponseOutput {
		return v.VirtualMachineScaleSetMigrationInfo
	}).(VirtualMachineScaleSetMigrationInfoResponseOutput)
}

// A list of references to all virtual machines in the availability set.
func (o AvailabilitySetOutput) VirtualMachines() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *AvailabilitySet) SubResourceResponseArrayOutput { return v.VirtualMachines }).(SubResourceResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AvailabilitySetOutput{})
}
