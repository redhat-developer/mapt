// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A logic app extension resource
//
// Uses Azure REST API version 2024-10-02-preview. In version 2.x of the Azure Native provider, it used API version 2024-02-02-preview.
//
// Other available API versions: 2024-02-02-preview, 2024-08-02-preview, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type LogicApp struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLogicApp registers a new resource with the given unique name, arguments, and options.
func NewLogicApp(ctx *pulumi.Context,
	name string, args *LogicAppArgs, opts ...pulumi.ResourceOption) (*LogicApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerAppName == nil {
		return nil, errors.New("invalid value for required argument 'ContainerAppName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app/v20240202preview:LogicApp"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240802preview:LogicApp"),
		},
		{
			Type: pulumi.String("azure-native:app/v20241002preview:LogicApp"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250202preview:LogicApp"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource LogicApp
	err := ctx.RegisterResource("azure-native:app:LogicApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogicApp gets an existing LogicApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogicApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogicAppState, opts ...pulumi.ResourceOption) (*LogicApp, error) {
	var resource LogicApp
	err := ctx.ReadResource("azure-native:app:LogicApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogicApp resources.
type logicAppState struct {
}

type LogicAppState struct {
}

func (LogicAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*logicAppState)(nil)).Elem()
}

type logicAppArgs struct {
	// Name of the Container App.
	ContainerAppName string `pulumi:"containerAppName"`
	// Name of the Logic App, the extension resource.
	LogicAppName *string `pulumi:"logicAppName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a LogicApp resource.
type LogicAppArgs struct {
	// Name of the Container App.
	ContainerAppName pulumi.StringInput
	// Name of the Logic App, the extension resource.
	LogicAppName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (LogicAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logicAppArgs)(nil)).Elem()
}

type LogicAppInput interface {
	pulumi.Input

	ToLogicAppOutput() LogicAppOutput
	ToLogicAppOutputWithContext(ctx context.Context) LogicAppOutput
}

func (*LogicApp) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicApp)(nil)).Elem()
}

func (i *LogicApp) ToLogicAppOutput() LogicAppOutput {
	return i.ToLogicAppOutputWithContext(context.Background())
}

func (i *LogicApp) ToLogicAppOutputWithContext(ctx context.Context) LogicAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicAppOutput)
}

type LogicAppOutput struct{ *pulumi.OutputState }

func (LogicAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicApp)(nil)).Elem()
}

func (o LogicAppOutput) ToLogicAppOutput() LogicAppOutput {
	return o
}

func (o LogicAppOutput) ToLogicAppOutputWithContext(ctx context.Context) LogicAppOutput {
	return o
}

// The Azure API version of the resource.
func (o LogicAppOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *LogicApp) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o LogicAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LogicApp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LogicAppOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *LogicApp) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LogicAppOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *LogicApp) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LogicAppOutput{})
}
