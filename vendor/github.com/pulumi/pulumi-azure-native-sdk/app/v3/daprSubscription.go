// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Dapr PubSub Event Subscription.
//
// Uses Azure REST API version 2024-10-02-preview. In version 2.x of the Azure Native provider, it used API version 2023-08-01-preview.
//
// Other available API versions: 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type DaprSubscription struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Bulk subscription options
	BulkSubscribe DaprSubscriptionBulkSubscribeOptionsResponsePtrOutput `pulumi:"bulkSubscribe"`
	// Deadletter topic name
	DeadLetterTopic pulumi.StringPtrOutput `pulumi:"deadLetterTopic"`
	// Subscription metadata
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Dapr PubSub component name
	PubsubName pulumi.StringPtrOutput `pulumi:"pubsubName"`
	// Subscription routes
	Routes DaprSubscriptionRoutesResponsePtrOutput `pulumi:"routes"`
	// Application scopes to restrict the subscription to specific apps.
	Scopes pulumi.StringArrayOutput `pulumi:"scopes"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Topic name
	Topic pulumi.StringPtrOutput `pulumi:"topic"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDaprSubscription registers a new resource with the given unique name, arguments, and options.
func NewDaprSubscription(ctx *pulumi.Context,
	name string, args *DaprSubscriptionArgs, opts ...pulumi.ResourceOption) (*DaprSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentName == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.BulkSubscribe != nil {
		args.BulkSubscribe = args.BulkSubscribe.ToDaprSubscriptionBulkSubscribeOptionsPtrOutput().ApplyT(func(v *DaprSubscriptionBulkSubscribeOptions) *DaprSubscriptionBulkSubscribeOptions {
			return v.Defaults()
		}).(DaprSubscriptionBulkSubscribeOptionsPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app/v20230801preview:DaprSubscription"),
		},
		{
			Type: pulumi.String("azure-native:app/v20231102preview:DaprSubscription"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240202preview:DaprSubscription"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240802preview:DaprSubscription"),
		},
		{
			Type: pulumi.String("azure-native:app/v20241002preview:DaprSubscription"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250202preview:DaprSubscription"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DaprSubscription
	err := ctx.RegisterResource("azure-native:app:DaprSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDaprSubscription gets an existing DaprSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDaprSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DaprSubscriptionState, opts ...pulumi.ResourceOption) (*DaprSubscription, error) {
	var resource DaprSubscription
	err := ctx.ReadResource("azure-native:app:DaprSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DaprSubscription resources.
type daprSubscriptionState struct {
}

type DaprSubscriptionState struct {
}

func (DaprSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*daprSubscriptionState)(nil)).Elem()
}

type daprSubscriptionArgs struct {
	// Bulk subscription options
	BulkSubscribe *DaprSubscriptionBulkSubscribeOptions `pulumi:"bulkSubscribe"`
	// Deadletter topic name
	DeadLetterTopic *string `pulumi:"deadLetterTopic"`
	// Name of the Managed Environment.
	EnvironmentName string `pulumi:"environmentName"`
	// Subscription metadata
	Metadata map[string]string `pulumi:"metadata"`
	// Name of the Dapr subscription.
	Name *string `pulumi:"name"`
	// Dapr PubSub component name
	PubsubName *string `pulumi:"pubsubName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Subscription routes
	Routes *DaprSubscriptionRoutes `pulumi:"routes"`
	// Application scopes to restrict the subscription to specific apps.
	Scopes []string `pulumi:"scopes"`
	// Topic name
	Topic *string `pulumi:"topic"`
}

// The set of arguments for constructing a DaprSubscription resource.
type DaprSubscriptionArgs struct {
	// Bulk subscription options
	BulkSubscribe DaprSubscriptionBulkSubscribeOptionsPtrInput
	// Deadletter topic name
	DeadLetterTopic pulumi.StringPtrInput
	// Name of the Managed Environment.
	EnvironmentName pulumi.StringInput
	// Subscription metadata
	Metadata pulumi.StringMapInput
	// Name of the Dapr subscription.
	Name pulumi.StringPtrInput
	// Dapr PubSub component name
	PubsubName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Subscription routes
	Routes DaprSubscriptionRoutesPtrInput
	// Application scopes to restrict the subscription to specific apps.
	Scopes pulumi.StringArrayInput
	// Topic name
	Topic pulumi.StringPtrInput
}

func (DaprSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*daprSubscriptionArgs)(nil)).Elem()
}

type DaprSubscriptionInput interface {
	pulumi.Input

	ToDaprSubscriptionOutput() DaprSubscriptionOutput
	ToDaprSubscriptionOutputWithContext(ctx context.Context) DaprSubscriptionOutput
}

func (*DaprSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**DaprSubscription)(nil)).Elem()
}

func (i *DaprSubscription) ToDaprSubscriptionOutput() DaprSubscriptionOutput {
	return i.ToDaprSubscriptionOutputWithContext(context.Background())
}

func (i *DaprSubscription) ToDaprSubscriptionOutputWithContext(ctx context.Context) DaprSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprSubscriptionOutput)
}

type DaprSubscriptionOutput struct{ *pulumi.OutputState }

func (DaprSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DaprSubscription)(nil)).Elem()
}

func (o DaprSubscriptionOutput) ToDaprSubscriptionOutput() DaprSubscriptionOutput {
	return o
}

func (o DaprSubscriptionOutput) ToDaprSubscriptionOutputWithContext(ctx context.Context) DaprSubscriptionOutput {
	return o
}

// The Azure API version of the resource.
func (o DaprSubscriptionOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Bulk subscription options
func (o DaprSubscriptionOutput) BulkSubscribe() DaprSubscriptionBulkSubscribeOptionsResponsePtrOutput {
	return o.ApplyT(func(v *DaprSubscription) DaprSubscriptionBulkSubscribeOptionsResponsePtrOutput {
		return v.BulkSubscribe
	}).(DaprSubscriptionBulkSubscribeOptionsResponsePtrOutput)
}

// Deadletter topic name
func (o DaprSubscriptionOutput) DeadLetterTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringPtrOutput { return v.DeadLetterTopic }).(pulumi.StringPtrOutput)
}

// Subscription metadata
func (o DaprSubscriptionOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name of the resource
func (o DaprSubscriptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Dapr PubSub component name
func (o DaprSubscriptionOutput) PubsubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringPtrOutput { return v.PubsubName }).(pulumi.StringPtrOutput)
}

// Subscription routes
func (o DaprSubscriptionOutput) Routes() DaprSubscriptionRoutesResponsePtrOutput {
	return o.ApplyT(func(v *DaprSubscription) DaprSubscriptionRoutesResponsePtrOutput { return v.Routes }).(DaprSubscriptionRoutesResponsePtrOutput)
}

// Application scopes to restrict the subscription to specific apps.
func (o DaprSubscriptionOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringArrayOutput { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DaprSubscriptionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DaprSubscription) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Topic name
func (o DaprSubscriptionOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringPtrOutput { return v.Topic }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DaprSubscriptionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DaprSubscription) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DaprSubscriptionOutput{})
}
