// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// .NET Component.
//
// Uses Azure REST API version 2024-10-02-preview. In version 2.x of the Azure Native provider, it used API version 2023-11-02-preview.
//
// Other available API versions: 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type DotNetComponent struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Type of the .NET Component.
	ComponentType pulumi.StringPtrOutput `pulumi:"componentType"`
	// List of .NET Components configuration properties
	Configurations DotNetComponentConfigurationPropertyResponseArrayOutput `pulumi:"configurations"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the .NET Component.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// List of .NET Components that are bound to the .NET component
	ServiceBinds DotNetComponentServiceBindResponseArrayOutput `pulumi:"serviceBinds"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDotNetComponent registers a new resource with the given unique name, arguments, and options.
func NewDotNetComponent(ctx *pulumi.Context,
	name string, args *DotNetComponentArgs, opts ...pulumi.ResourceOption) (*DotNetComponent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentName == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app/v20231102preview:DotNetComponent"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240202preview:DotNetComponent"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240802preview:DotNetComponent"),
		},
		{
			Type: pulumi.String("azure-native:app/v20241002preview:DotNetComponent"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250202preview:DotNetComponent"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DotNetComponent
	err := ctx.RegisterResource("azure-native:app:DotNetComponent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDotNetComponent gets an existing DotNetComponent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDotNetComponent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DotNetComponentState, opts ...pulumi.ResourceOption) (*DotNetComponent, error) {
	var resource DotNetComponent
	err := ctx.ReadResource("azure-native:app:DotNetComponent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DotNetComponent resources.
type dotNetComponentState struct {
}

type DotNetComponentState struct {
}

func (DotNetComponentState) ElementType() reflect.Type {
	return reflect.TypeOf((*dotNetComponentState)(nil)).Elem()
}

type dotNetComponentArgs struct {
	// Type of the .NET Component.
	ComponentType *string `pulumi:"componentType"`
	// List of .NET Components configuration properties
	Configurations []DotNetComponentConfigurationProperty `pulumi:"configurations"`
	// Name of the Managed Environment.
	EnvironmentName string `pulumi:"environmentName"`
	// Name of the .NET Component.
	Name *string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// List of .NET Components that are bound to the .NET component
	ServiceBinds []DotNetComponentServiceBind `pulumi:"serviceBinds"`
}

// The set of arguments for constructing a DotNetComponent resource.
type DotNetComponentArgs struct {
	// Type of the .NET Component.
	ComponentType pulumi.StringPtrInput
	// List of .NET Components configuration properties
	Configurations DotNetComponentConfigurationPropertyArrayInput
	// Name of the Managed Environment.
	EnvironmentName pulumi.StringInput
	// Name of the .NET Component.
	Name pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// List of .NET Components that are bound to the .NET component
	ServiceBinds DotNetComponentServiceBindArrayInput
}

func (DotNetComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dotNetComponentArgs)(nil)).Elem()
}

type DotNetComponentInput interface {
	pulumi.Input

	ToDotNetComponentOutput() DotNetComponentOutput
	ToDotNetComponentOutputWithContext(ctx context.Context) DotNetComponentOutput
}

func (*DotNetComponent) ElementType() reflect.Type {
	return reflect.TypeOf((**DotNetComponent)(nil)).Elem()
}

func (i *DotNetComponent) ToDotNetComponentOutput() DotNetComponentOutput {
	return i.ToDotNetComponentOutputWithContext(context.Background())
}

func (i *DotNetComponent) ToDotNetComponentOutputWithContext(ctx context.Context) DotNetComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DotNetComponentOutput)
}

type DotNetComponentOutput struct{ *pulumi.OutputState }

func (DotNetComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DotNetComponent)(nil)).Elem()
}

func (o DotNetComponentOutput) ToDotNetComponentOutput() DotNetComponentOutput {
	return o
}

func (o DotNetComponentOutput) ToDotNetComponentOutputWithContext(ctx context.Context) DotNetComponentOutput {
	return o
}

// The Azure API version of the resource.
func (o DotNetComponentOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DotNetComponent) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Type of the .NET Component.
func (o DotNetComponentOutput) ComponentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DotNetComponent) pulumi.StringPtrOutput { return v.ComponentType }).(pulumi.StringPtrOutput)
}

// List of .NET Components configuration properties
func (o DotNetComponentOutput) Configurations() DotNetComponentConfigurationPropertyResponseArrayOutput {
	return o.ApplyT(func(v *DotNetComponent) DotNetComponentConfigurationPropertyResponseArrayOutput {
		return v.Configurations
	}).(DotNetComponentConfigurationPropertyResponseArrayOutput)
}

// The name of the resource
func (o DotNetComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DotNetComponent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the .NET Component.
func (o DotNetComponentOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *DotNetComponent) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of .NET Components that are bound to the .NET component
func (o DotNetComponentOutput) ServiceBinds() DotNetComponentServiceBindResponseArrayOutput {
	return o.ApplyT(func(v *DotNetComponent) DotNetComponentServiceBindResponseArrayOutput { return v.ServiceBinds }).(DotNetComponentServiceBindResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DotNetComponentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DotNetComponent) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DotNetComponentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DotNetComponent) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DotNetComponentOutput{})
}
