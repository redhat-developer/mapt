// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An environment for hosting container apps
//
// Uses Azure REST API version 2024-03-01. In version 2.x of the Azure Native provider, it used API version 2022-10-01.
//
// Other available API versions: 2022-10-01, 2022-11-01-preview, 2023-04-01-preview, 2023-05-01, 2023-05-02-preview, 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview, 2024-10-02-preview, 2025-01-01, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type ManagedEnvironment struct {
	pulumi.CustomResourceState

	// Cluster configuration which enables the log daemon to export app logs to configured destination.
	AppLogsConfiguration AppLogsConfigurationResponsePtrOutput `pulumi:"appLogsConfiguration"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Custom domain configuration for the environment
	CustomDomainConfiguration CustomDomainConfigurationResponsePtrOutput `pulumi:"customDomainConfiguration"`
	// Application Insights connection string used by Dapr to export Service to Service communication telemetry
	DaprAIConnectionString pulumi.StringPtrOutput `pulumi:"daprAIConnectionString"`
	// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
	DaprAIInstrumentationKey pulumi.StringPtrOutput `pulumi:"daprAIInstrumentationKey"`
	// The configuration of Dapr component.
	DaprConfiguration DaprConfigurationResponsePtrOutput `pulumi:"daprConfiguration"`
	// Default Domain Name for the cluster
	DefaultDomain pulumi.StringOutput `pulumi:"defaultDomain"`
	// Any errors that occurred during deployment or deployment validation
	DeploymentErrors pulumi.StringOutput `pulumi:"deploymentErrors"`
	// The endpoint of the eventstream of the Environment.
	EventStreamEndpoint pulumi.StringOutput `pulumi:"eventStreamEndpoint"`
	// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.
	InfrastructureResourceGroup pulumi.StringPtrOutput `pulumi:"infrastructureResourceGroup"`
	// The configuration of Keda component.
	KedaConfiguration KedaConfigurationResponsePtrOutput `pulumi:"kedaConfiguration"`
	// Kind of the Environment.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Peer authentication settings for the Managed Environment
	PeerAuthentication ManagedEnvironmentResponsePeerAuthenticationPtrOutput `pulumi:"peerAuthentication"`
	// Peer traffic settings for the Managed Environment
	PeerTrafficConfiguration ManagedEnvironmentResponsePeerTrafficConfigurationPtrOutput `pulumi:"peerTrafficConfiguration"`
	// Provisioning state of the Environment.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Static IP of the Environment
	StaticIp pulumi.StringOutput `pulumi:"staticIp"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Vnet configuration for the environment
	VnetConfiguration VnetConfigurationResponsePtrOutput `pulumi:"vnetConfiguration"`
	// Workload profiles configured for the Managed Environment.
	WorkloadProfiles WorkloadProfileResponseArrayOutput `pulumi:"workloadProfiles"`
	// Whether or not this Managed Environment is zone-redundant.
	ZoneRedundant pulumi.BoolPtrOutput `pulumi:"zoneRedundant"`
}

// NewManagedEnvironment registers a new resource with the given unique name, arguments, and options.
func NewManagedEnvironment(ctx *pulumi.Context,
	name string, args *ManagedEnvironmentArgs, opts ...pulumi.ResourceOption) (*ManagedEnvironment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app/v20220101preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20220301:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20220601preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20221001:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20221101preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230401preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230501:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230502preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230801preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20231102preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240202preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240301:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240802preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20241002preview:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250101:ManagedEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250202preview:ManagedEnvironment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ManagedEnvironment
	err := ctx.RegisterResource("azure-native:app:ManagedEnvironment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedEnvironment gets an existing ManagedEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedEnvironmentState, opts ...pulumi.ResourceOption) (*ManagedEnvironment, error) {
	var resource ManagedEnvironment
	err := ctx.ReadResource("azure-native:app:ManagedEnvironment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedEnvironment resources.
type managedEnvironmentState struct {
}

type ManagedEnvironmentState struct {
}

func (ManagedEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedEnvironmentState)(nil)).Elem()
}

type managedEnvironmentArgs struct {
	// Cluster configuration which enables the log daemon to export app logs to configured destination.
	AppLogsConfiguration *AppLogsConfiguration `pulumi:"appLogsConfiguration"`
	// Custom domain configuration for the environment
	CustomDomainConfiguration *CustomDomainConfiguration `pulumi:"customDomainConfiguration"`
	// Application Insights connection string used by Dapr to export Service to Service communication telemetry
	DaprAIConnectionString *string `pulumi:"daprAIConnectionString"`
	// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
	DaprAIInstrumentationKey *string `pulumi:"daprAIInstrumentationKey"`
	// Name of the Environment.
	EnvironmentName *string `pulumi:"environmentName"`
	// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.
	InfrastructureResourceGroup *string `pulumi:"infrastructureResourceGroup"`
	// Kind of the Environment.
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Peer authentication settings for the Managed Environment
	PeerAuthentication *ManagedEnvironmentPeerAuthentication `pulumi:"peerAuthentication"`
	// Peer traffic settings for the Managed Environment
	PeerTrafficConfiguration *ManagedEnvironmentPeerTrafficConfiguration `pulumi:"peerTrafficConfiguration"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Vnet configuration for the environment
	VnetConfiguration *VnetConfiguration `pulumi:"vnetConfiguration"`
	// Workload profiles configured for the Managed Environment.
	WorkloadProfiles []WorkloadProfile `pulumi:"workloadProfiles"`
	// Whether or not this Managed Environment is zone-redundant.
	ZoneRedundant *bool `pulumi:"zoneRedundant"`
}

// The set of arguments for constructing a ManagedEnvironment resource.
type ManagedEnvironmentArgs struct {
	// Cluster configuration which enables the log daemon to export app logs to configured destination.
	AppLogsConfiguration AppLogsConfigurationPtrInput
	// Custom domain configuration for the environment
	CustomDomainConfiguration CustomDomainConfigurationPtrInput
	// Application Insights connection string used by Dapr to export Service to Service communication telemetry
	DaprAIConnectionString pulumi.StringPtrInput
	// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
	DaprAIInstrumentationKey pulumi.StringPtrInput
	// Name of the Environment.
	EnvironmentName pulumi.StringPtrInput
	// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.
	InfrastructureResourceGroup pulumi.StringPtrInput
	// Kind of the Environment.
	Kind pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Peer authentication settings for the Managed Environment
	PeerAuthentication ManagedEnvironmentPeerAuthenticationPtrInput
	// Peer traffic settings for the Managed Environment
	PeerTrafficConfiguration ManagedEnvironmentPeerTrafficConfigurationPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Vnet configuration for the environment
	VnetConfiguration VnetConfigurationPtrInput
	// Workload profiles configured for the Managed Environment.
	WorkloadProfiles WorkloadProfileArrayInput
	// Whether or not this Managed Environment is zone-redundant.
	ZoneRedundant pulumi.BoolPtrInput
}

func (ManagedEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedEnvironmentArgs)(nil)).Elem()
}

type ManagedEnvironmentInput interface {
	pulumi.Input

	ToManagedEnvironmentOutput() ManagedEnvironmentOutput
	ToManagedEnvironmentOutputWithContext(ctx context.Context) ManagedEnvironmentOutput
}

func (*ManagedEnvironment) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedEnvironment)(nil)).Elem()
}

func (i *ManagedEnvironment) ToManagedEnvironmentOutput() ManagedEnvironmentOutput {
	return i.ToManagedEnvironmentOutputWithContext(context.Background())
}

func (i *ManagedEnvironment) ToManagedEnvironmentOutputWithContext(ctx context.Context) ManagedEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedEnvironmentOutput)
}

type ManagedEnvironmentOutput struct{ *pulumi.OutputState }

func (ManagedEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedEnvironment)(nil)).Elem()
}

func (o ManagedEnvironmentOutput) ToManagedEnvironmentOutput() ManagedEnvironmentOutput {
	return o
}

func (o ManagedEnvironmentOutput) ToManagedEnvironmentOutputWithContext(ctx context.Context) ManagedEnvironmentOutput {
	return o
}

// Cluster configuration which enables the log daemon to export app logs to configured destination.
func (o ManagedEnvironmentOutput) AppLogsConfiguration() AppLogsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) AppLogsConfigurationResponsePtrOutput { return v.AppLogsConfiguration }).(AppLogsConfigurationResponsePtrOutput)
}

// The Azure API version of the resource.
func (o ManagedEnvironmentOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Custom domain configuration for the environment
func (o ManagedEnvironmentOutput) CustomDomainConfiguration() CustomDomainConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) CustomDomainConfigurationResponsePtrOutput {
		return v.CustomDomainConfiguration
	}).(CustomDomainConfigurationResponsePtrOutput)
}

// Application Insights connection string used by Dapr to export Service to Service communication telemetry
func (o ManagedEnvironmentOutput) DaprAIConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringPtrOutput { return v.DaprAIConnectionString }).(pulumi.StringPtrOutput)
}

// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
func (o ManagedEnvironmentOutput) DaprAIInstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringPtrOutput { return v.DaprAIInstrumentationKey }).(pulumi.StringPtrOutput)
}

// The configuration of Dapr component.
func (o ManagedEnvironmentOutput) DaprConfiguration() DaprConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) DaprConfigurationResponsePtrOutput { return v.DaprConfiguration }).(DaprConfigurationResponsePtrOutput)
}

// Default Domain Name for the cluster
func (o ManagedEnvironmentOutput) DefaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.DefaultDomain }).(pulumi.StringOutput)
}

// Any errors that occurred during deployment or deployment validation
func (o ManagedEnvironmentOutput) DeploymentErrors() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.DeploymentErrors }).(pulumi.StringOutput)
}

// The endpoint of the eventstream of the Environment.
func (o ManagedEnvironmentOutput) EventStreamEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.EventStreamEndpoint }).(pulumi.StringOutput)
}

// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.
func (o ManagedEnvironmentOutput) InfrastructureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringPtrOutput { return v.InfrastructureResourceGroup }).(pulumi.StringPtrOutput)
}

// The configuration of Keda component.
func (o ManagedEnvironmentOutput) KedaConfiguration() KedaConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) KedaConfigurationResponsePtrOutput { return v.KedaConfiguration }).(KedaConfigurationResponsePtrOutput)
}

// Kind of the Environment.
func (o ManagedEnvironmentOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o ManagedEnvironmentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ManagedEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Peer authentication settings for the Managed Environment
func (o ManagedEnvironmentOutput) PeerAuthentication() ManagedEnvironmentResponsePeerAuthenticationPtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) ManagedEnvironmentResponsePeerAuthenticationPtrOutput {
		return v.PeerAuthentication
	}).(ManagedEnvironmentResponsePeerAuthenticationPtrOutput)
}

// Peer traffic settings for the Managed Environment
func (o ManagedEnvironmentOutput) PeerTrafficConfiguration() ManagedEnvironmentResponsePeerTrafficConfigurationPtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) ManagedEnvironmentResponsePeerTrafficConfigurationPtrOutput {
		return v.PeerTrafficConfiguration
	}).(ManagedEnvironmentResponsePeerTrafficConfigurationPtrOutput)
}

// Provisioning state of the Environment.
func (o ManagedEnvironmentOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Static IP of the Environment
func (o ManagedEnvironmentOutput) StaticIp() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.StaticIp }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ManagedEnvironmentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ManagedEnvironment) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ManagedEnvironmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ManagedEnvironmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Vnet configuration for the environment
func (o ManagedEnvironmentOutput) VnetConfiguration() VnetConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) VnetConfigurationResponsePtrOutput { return v.VnetConfiguration }).(VnetConfigurationResponsePtrOutput)
}

// Workload profiles configured for the Managed Environment.
func (o ManagedEnvironmentOutput) WorkloadProfiles() WorkloadProfileResponseArrayOutput {
	return o.ApplyT(func(v *ManagedEnvironment) WorkloadProfileResponseArrayOutput { return v.WorkloadProfiles }).(WorkloadProfileResponseArrayOutput)
}

// Whether or not this Managed Environment is zone-redundant.
func (o ManagedEnvironmentOutput) ZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedEnvironment) pulumi.BoolPtrOutput { return v.ZoneRedundant }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedEnvironmentOutput{})
}
