// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Information about the SourceToCloud builder resource.
//
// Uses Azure REST API version 2024-10-02-preview. In version 2.x of the Azure Native provider, it used API version 2023-08-01-preview.
//
// Other available API versions: 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type Builder struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// List of mappings of container registries and the managed identity used to connect to it.
	ContainerRegistries ContainerRegistryResponseArrayOutput `pulumi:"containerRegistries"`
	// Resource ID of the container apps environment that the builder is associated with.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of a builder resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBuilder registers a new resource with the given unique name, arguments, and options.
func NewBuilder(ctx *pulumi.Context,
	name string, args *BuilderArgs, opts ...pulumi.ResourceOption) (*Builder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app/v20230801preview:Builder"),
		},
		{
			Type: pulumi.String("azure-native:app/v20231102preview:Builder"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240202preview:Builder"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240802preview:Builder"),
		},
		{
			Type: pulumi.String("azure-native:app/v20241002preview:Builder"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250202preview:Builder"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Builder
	err := ctx.RegisterResource("azure-native:app:Builder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBuilder gets an existing Builder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBuilder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BuilderState, opts ...pulumi.ResourceOption) (*Builder, error) {
	var resource Builder
	err := ctx.ReadResource("azure-native:app:Builder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Builder resources.
type builderState struct {
}

type BuilderState struct {
}

func (BuilderState) ElementType() reflect.Type {
	return reflect.TypeOf((*builderState)(nil)).Elem()
}

type builderArgs struct {
	// The name of the builder.
	BuilderName *string `pulumi:"builderName"`
	// List of mappings of container registries and the managed identity used to connect to it.
	ContainerRegistries []ContainerRegistry `pulumi:"containerRegistries"`
	// Resource ID of the container apps environment that the builder is associated with.
	EnvironmentId string `pulumi:"environmentId"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Builder resource.
type BuilderArgs struct {
	// The name of the builder.
	BuilderName pulumi.StringPtrInput
	// List of mappings of container registries and the managed identity used to connect to it.
	ContainerRegistries ContainerRegistryArrayInput
	// Resource ID of the container apps environment that the builder is associated with.
	EnvironmentId pulumi.StringInput
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (BuilderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*builderArgs)(nil)).Elem()
}

type BuilderInput interface {
	pulumi.Input

	ToBuilderOutput() BuilderOutput
	ToBuilderOutputWithContext(ctx context.Context) BuilderOutput
}

func (*Builder) ElementType() reflect.Type {
	return reflect.TypeOf((**Builder)(nil)).Elem()
}

func (i *Builder) ToBuilderOutput() BuilderOutput {
	return i.ToBuilderOutputWithContext(context.Background())
}

func (i *Builder) ToBuilderOutputWithContext(ctx context.Context) BuilderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuilderOutput)
}

type BuilderOutput struct{ *pulumi.OutputState }

func (BuilderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Builder)(nil)).Elem()
}

func (o BuilderOutput) ToBuilderOutput() BuilderOutput {
	return o
}

func (o BuilderOutput) ToBuilderOutputWithContext(ctx context.Context) BuilderOutput {
	return o
}

// The Azure API version of the resource.
func (o BuilderOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Builder) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// List of mappings of container registries and the managed identity used to connect to it.
func (o BuilderOutput) ContainerRegistries() ContainerRegistryResponseArrayOutput {
	return o.ApplyT(func(v *Builder) ContainerRegistryResponseArrayOutput { return v.ContainerRegistries }).(ContainerRegistryResponseArrayOutput)
}

// Resource ID of the container apps environment that the builder is associated with.
func (o BuilderOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Builder) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The managed service identities assigned to this resource.
func (o BuilderOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *Builder) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o BuilderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Builder) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o BuilderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Builder) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of a builder resource.
func (o BuilderOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Builder) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o BuilderOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Builder) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o BuilderOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Builder) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o BuilderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Builder) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BuilderOutput{})
}
