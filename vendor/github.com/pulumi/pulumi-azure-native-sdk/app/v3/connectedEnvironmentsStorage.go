// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Storage resource for connectedEnvironment.
//
// Uses Azure REST API version 2024-03-01. In version 2.x of the Azure Native provider, it used API version 2022-10-01.
//
// Other available API versions: 2022-10-01, 2022-11-01-preview, 2023-04-01-preview, 2023-05-01, 2023-05-02-preview, 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview, 2024-10-02-preview, 2025-01-01, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type ConnectedEnvironmentsStorage struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Storage properties
	Properties ConnectedEnvironmentStorageResponsePropertiesOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewConnectedEnvironmentsStorage registers a new resource with the given unique name, arguments, and options.
func NewConnectedEnvironmentsStorage(ctx *pulumi.Context,
	name string, args *ConnectedEnvironmentsStorageArgs, opts ...pulumi.ResourceOption) (*ConnectedEnvironmentsStorage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectedEnvironmentName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectedEnvironmentName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app/v20220601preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20221001:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20221101preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230401preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230501:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230502preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20230801preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20231102preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240202preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240301:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240802preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20241002preview:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250101:ConnectedEnvironmentsStorage"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250202preview:ConnectedEnvironmentsStorage"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ConnectedEnvironmentsStorage
	err := ctx.RegisterResource("azure-native:app:ConnectedEnvironmentsStorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectedEnvironmentsStorage gets an existing ConnectedEnvironmentsStorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectedEnvironmentsStorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectedEnvironmentsStorageState, opts ...pulumi.ResourceOption) (*ConnectedEnvironmentsStorage, error) {
	var resource ConnectedEnvironmentsStorage
	err := ctx.ReadResource("azure-native:app:ConnectedEnvironmentsStorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectedEnvironmentsStorage resources.
type connectedEnvironmentsStorageState struct {
}

type ConnectedEnvironmentsStorageState struct {
}

func (ConnectedEnvironmentsStorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectedEnvironmentsStorageState)(nil)).Elem()
}

type connectedEnvironmentsStorageArgs struct {
	// Name of the Environment.
	ConnectedEnvironmentName string `pulumi:"connectedEnvironmentName"`
	// Storage properties
	Properties *ConnectedEnvironmentStorageProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the storage.
	StorageName *string `pulumi:"storageName"`
}

// The set of arguments for constructing a ConnectedEnvironmentsStorage resource.
type ConnectedEnvironmentsStorageArgs struct {
	// Name of the Environment.
	ConnectedEnvironmentName pulumi.StringInput
	// Storage properties
	Properties ConnectedEnvironmentStoragePropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the storage.
	StorageName pulumi.StringPtrInput
}

func (ConnectedEnvironmentsStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectedEnvironmentsStorageArgs)(nil)).Elem()
}

type ConnectedEnvironmentsStorageInput interface {
	pulumi.Input

	ToConnectedEnvironmentsStorageOutput() ConnectedEnvironmentsStorageOutput
	ToConnectedEnvironmentsStorageOutputWithContext(ctx context.Context) ConnectedEnvironmentsStorageOutput
}

func (*ConnectedEnvironmentsStorage) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedEnvironmentsStorage)(nil)).Elem()
}

func (i *ConnectedEnvironmentsStorage) ToConnectedEnvironmentsStorageOutput() ConnectedEnvironmentsStorageOutput {
	return i.ToConnectedEnvironmentsStorageOutputWithContext(context.Background())
}

func (i *ConnectedEnvironmentsStorage) ToConnectedEnvironmentsStorageOutputWithContext(ctx context.Context) ConnectedEnvironmentsStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedEnvironmentsStorageOutput)
}

type ConnectedEnvironmentsStorageOutput struct{ *pulumi.OutputState }

func (ConnectedEnvironmentsStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedEnvironmentsStorage)(nil)).Elem()
}

func (o ConnectedEnvironmentsStorageOutput) ToConnectedEnvironmentsStorageOutput() ConnectedEnvironmentsStorageOutput {
	return o
}

func (o ConnectedEnvironmentsStorageOutput) ToConnectedEnvironmentsStorageOutputWithContext(ctx context.Context) ConnectedEnvironmentsStorageOutput {
	return o
}

// The Azure API version of the resource.
func (o ConnectedEnvironmentsStorageOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectedEnvironmentsStorage) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o ConnectedEnvironmentsStorageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectedEnvironmentsStorage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Storage properties
func (o ConnectedEnvironmentsStorageOutput) Properties() ConnectedEnvironmentStorageResponsePropertiesOutput {
	return o.ApplyT(func(v *ConnectedEnvironmentsStorage) ConnectedEnvironmentStorageResponsePropertiesOutput {
		return v.Properties
	}).(ConnectedEnvironmentStorageResponsePropertiesOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ConnectedEnvironmentsStorageOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ConnectedEnvironmentsStorage) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ConnectedEnvironmentsStorageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectedEnvironmentsStorage) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectedEnvironmentsStorageOutput{})
}
