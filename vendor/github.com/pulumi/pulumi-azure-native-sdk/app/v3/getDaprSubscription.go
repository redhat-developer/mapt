// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Dapr PubSub Event Subscription.
//
// Uses Azure REST API version 2024-10-02-preview.
//
// Other available API versions: 2023-08-01-preview, 2023-11-02-preview, 2024-02-02-preview, 2024-08-02-preview, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupDaprSubscription(ctx *pulumi.Context, args *LookupDaprSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupDaprSubscriptionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDaprSubscriptionResult
	err := ctx.Invoke("azure-native:app:getDaprSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupDaprSubscriptionArgs struct {
	// Name of the Managed Environment.
	EnvironmentName string `pulumi:"environmentName"`
	// Name of the Dapr subscription.
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Dapr PubSub Event Subscription.
type LookupDaprSubscriptionResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Bulk subscription options
	BulkSubscribe *DaprSubscriptionBulkSubscribeOptionsResponse `pulumi:"bulkSubscribe"`
	// Deadletter topic name
	DeadLetterTopic *string `pulumi:"deadLetterTopic"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Subscription metadata
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Dapr PubSub component name
	PubsubName *string `pulumi:"pubsubName"`
	// Subscription routes
	Routes *DaprSubscriptionRoutesResponse `pulumi:"routes"`
	// Application scopes to restrict the subscription to specific apps.
	Scopes []string `pulumi:"scopes"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Topic name
	Topic *string `pulumi:"topic"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupDaprSubscriptionResult
func (val *LookupDaprSubscriptionResult) Defaults() *LookupDaprSubscriptionResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BulkSubscribe = tmp.BulkSubscribe.Defaults()

	return &tmp
}
func LookupDaprSubscriptionOutput(ctx *pulumi.Context, args LookupDaprSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupDaprSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDaprSubscriptionResultOutput, error) {
			args := v.(LookupDaprSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:app:getDaprSubscription", args, LookupDaprSubscriptionResultOutput{}, options).(LookupDaprSubscriptionResultOutput), nil
		}).(LookupDaprSubscriptionResultOutput)
}

type LookupDaprSubscriptionOutputArgs struct {
	// Name of the Managed Environment.
	EnvironmentName pulumi.StringInput `pulumi:"environmentName"`
	// Name of the Dapr subscription.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDaprSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDaprSubscriptionArgs)(nil)).Elem()
}

// Dapr PubSub Event Subscription.
type LookupDaprSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupDaprSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDaprSubscriptionResult)(nil)).Elem()
}

func (o LookupDaprSubscriptionResultOutput) ToLookupDaprSubscriptionResultOutput() LookupDaprSubscriptionResultOutput {
	return o
}

func (o LookupDaprSubscriptionResultOutput) ToLookupDaprSubscriptionResultOutputWithContext(ctx context.Context) LookupDaprSubscriptionResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupDaprSubscriptionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Bulk subscription options
func (o LookupDaprSubscriptionResultOutput) BulkSubscribe() DaprSubscriptionBulkSubscribeOptionsResponsePtrOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) *DaprSubscriptionBulkSubscribeOptionsResponse {
		return v.BulkSubscribe
	}).(DaprSubscriptionBulkSubscribeOptionsResponsePtrOutput)
}

// Deadletter topic name
func (o LookupDaprSubscriptionResultOutput) DeadLetterTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) *string { return v.DeadLetterTopic }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupDaprSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Subscription metadata
func (o LookupDaprSubscriptionResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name of the resource
func (o LookupDaprSubscriptionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Dapr PubSub component name
func (o LookupDaprSubscriptionResultOutput) PubsubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) *string { return v.PubsubName }).(pulumi.StringPtrOutput)
}

// Subscription routes
func (o LookupDaprSubscriptionResultOutput) Routes() DaprSubscriptionRoutesResponsePtrOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) *DaprSubscriptionRoutesResponse { return v.Routes }).(DaprSubscriptionRoutesResponsePtrOutput)
}

// Application scopes to restrict the subscription to specific apps.
func (o LookupDaprSubscriptionResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupDaprSubscriptionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Topic name
func (o LookupDaprSubscriptionResultOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupDaprSubscriptionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDaprSubscriptionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDaprSubscriptionResultOutput{})
}
