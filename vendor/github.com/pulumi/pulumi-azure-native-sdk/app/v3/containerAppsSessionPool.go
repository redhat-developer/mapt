// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Container App session pool.
//
// Uses Azure REST API version 2024-10-02-preview. In version 2.x of the Azure Native provider, it used API version 2024-02-02-preview.
//
// Other available API versions: 2024-02-02-preview, 2024-08-02-preview, 2025-01-01, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type ContainerAppsSessionPool struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The container type of the sessions.
	ContainerType pulumi.StringPtrOutput `pulumi:"containerType"`
	// The custom container configuration if the containerType is CustomContainer.
	CustomContainerTemplate CustomContainerTemplateResponsePtrOutput `pulumi:"customContainerTemplate"`
	// The pool configuration if the poolManagementType is dynamic.
	DynamicPoolConfiguration DynamicPoolConfigurationResponsePtrOutput `pulumi:"dynamicPoolConfiguration"`
	// Resource ID of the session pool's environment.
	EnvironmentId pulumi.StringPtrOutput `pulumi:"environmentId"`
	// Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Optional settings for a Managed Identity that is assigned to the Session pool.
	ManagedIdentitySettings ManagedIdentitySettingResponseArrayOutput `pulumi:"managedIdentitySettings"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of nodes the session pool is using.
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// The endpoint to manage the pool.
	PoolManagementEndpoint pulumi.StringOutput `pulumi:"poolManagementEndpoint"`
	// The pool management type of the session pool.
	PoolManagementType pulumi.StringPtrOutput `pulumi:"poolManagementType"`
	// Provisioning state of the session pool.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The scale configuration of the session pool.
	ScaleConfiguration ScaleConfigurationResponsePtrOutput `pulumi:"scaleConfiguration"`
	// The secrets of the session pool.
	Secrets SessionPoolSecretResponseArrayOutput `pulumi:"secrets"`
	// The network configuration of the sessions in the session pool.
	SessionNetworkConfiguration SessionNetworkConfigurationResponsePtrOutput `pulumi:"sessionNetworkConfiguration"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewContainerAppsSessionPool registers a new resource with the given unique name, arguments, and options.
func NewContainerAppsSessionPool(ctx *pulumi.Context,
	name string, args *ContainerAppsSessionPoolArgs, opts ...pulumi.ResourceOption) (*ContainerAppsSessionPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:app/v20240202preview:ContainerAppsSessionPool"),
		},
		{
			Type: pulumi.String("azure-native:app/v20240802preview:ContainerAppsSessionPool"),
		},
		{
			Type: pulumi.String("azure-native:app/v20241002preview:ContainerAppsSessionPool"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250101:ContainerAppsSessionPool"),
		},
		{
			Type: pulumi.String("azure-native:app/v20250202preview:ContainerAppsSessionPool"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ContainerAppsSessionPool
	err := ctx.RegisterResource("azure-native:app:ContainerAppsSessionPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerAppsSessionPool gets an existing ContainerAppsSessionPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerAppsSessionPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerAppsSessionPoolState, opts ...pulumi.ResourceOption) (*ContainerAppsSessionPool, error) {
	var resource ContainerAppsSessionPool
	err := ctx.ReadResource("azure-native:app:ContainerAppsSessionPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerAppsSessionPool resources.
type containerAppsSessionPoolState struct {
}

type ContainerAppsSessionPoolState struct {
}

func (ContainerAppsSessionPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAppsSessionPoolState)(nil)).Elem()
}

type containerAppsSessionPoolArgs struct {
	// The container type of the sessions.
	ContainerType *string `pulumi:"containerType"`
	// The custom container configuration if the containerType is CustomContainer.
	CustomContainerTemplate *CustomContainerTemplate `pulumi:"customContainerTemplate"`
	// The pool configuration if the poolManagementType is dynamic.
	DynamicPoolConfiguration *DynamicPoolConfiguration `pulumi:"dynamicPoolConfiguration"`
	// Resource ID of the session pool's environment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Optional settings for a Managed Identity that is assigned to the Session pool.
	ManagedIdentitySettings []ManagedIdentitySetting `pulumi:"managedIdentitySettings"`
	// The pool management type of the session pool.
	PoolManagementType *string `pulumi:"poolManagementType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The scale configuration of the session pool.
	ScaleConfiguration *ScaleConfiguration `pulumi:"scaleConfiguration"`
	// The secrets of the session pool.
	Secrets []SessionPoolSecret `pulumi:"secrets"`
	// The network configuration of the sessions in the session pool.
	SessionNetworkConfiguration *SessionNetworkConfiguration `pulumi:"sessionNetworkConfiguration"`
	// Name of the session pool.
	SessionPoolName *string `pulumi:"sessionPoolName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ContainerAppsSessionPool resource.
type ContainerAppsSessionPoolArgs struct {
	// The container type of the sessions.
	ContainerType pulumi.StringPtrInput
	// The custom container configuration if the containerType is CustomContainer.
	CustomContainerTemplate CustomContainerTemplatePtrInput
	// The pool configuration if the poolManagementType is dynamic.
	DynamicPoolConfiguration DynamicPoolConfigurationPtrInput
	// Resource ID of the session pool's environment.
	EnvironmentId pulumi.StringPtrInput
	// Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.
	Identity ManagedServiceIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Optional settings for a Managed Identity that is assigned to the Session pool.
	ManagedIdentitySettings ManagedIdentitySettingArrayInput
	// The pool management type of the session pool.
	PoolManagementType pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The scale configuration of the session pool.
	ScaleConfiguration ScaleConfigurationPtrInput
	// The secrets of the session pool.
	Secrets SessionPoolSecretArrayInput
	// The network configuration of the sessions in the session pool.
	SessionNetworkConfiguration SessionNetworkConfigurationPtrInput
	// Name of the session pool.
	SessionPoolName pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ContainerAppsSessionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAppsSessionPoolArgs)(nil)).Elem()
}

type ContainerAppsSessionPoolInput interface {
	pulumi.Input

	ToContainerAppsSessionPoolOutput() ContainerAppsSessionPoolOutput
	ToContainerAppsSessionPoolOutputWithContext(ctx context.Context) ContainerAppsSessionPoolOutput
}

func (*ContainerAppsSessionPool) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAppsSessionPool)(nil)).Elem()
}

func (i *ContainerAppsSessionPool) ToContainerAppsSessionPoolOutput() ContainerAppsSessionPoolOutput {
	return i.ToContainerAppsSessionPoolOutputWithContext(context.Background())
}

func (i *ContainerAppsSessionPool) ToContainerAppsSessionPoolOutputWithContext(ctx context.Context) ContainerAppsSessionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerAppsSessionPoolOutput)
}

type ContainerAppsSessionPoolOutput struct{ *pulumi.OutputState }

func (ContainerAppsSessionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAppsSessionPool)(nil)).Elem()
}

func (o ContainerAppsSessionPoolOutput) ToContainerAppsSessionPoolOutput() ContainerAppsSessionPoolOutput {
	return o
}

func (o ContainerAppsSessionPoolOutput) ToContainerAppsSessionPoolOutputWithContext(ctx context.Context) ContainerAppsSessionPoolOutput {
	return o
}

// The Azure API version of the resource.
func (o ContainerAppsSessionPoolOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The container type of the sessions.
func (o ContainerAppsSessionPoolOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringPtrOutput { return v.ContainerType }).(pulumi.StringPtrOutput)
}

// The custom container configuration if the containerType is CustomContainer.
func (o ContainerAppsSessionPoolOutput) CustomContainerTemplate() CustomContainerTemplateResponsePtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) CustomContainerTemplateResponsePtrOutput {
		return v.CustomContainerTemplate
	}).(CustomContainerTemplateResponsePtrOutput)
}

// The pool configuration if the poolManagementType is dynamic.
func (o ContainerAppsSessionPoolOutput) DynamicPoolConfiguration() DynamicPoolConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) DynamicPoolConfigurationResponsePtrOutput {
		return v.DynamicPoolConfiguration
	}).(DynamicPoolConfigurationResponsePtrOutput)
}

// Resource ID of the session pool's environment.
func (o ContainerAppsSessionPoolOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringPtrOutput { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.
func (o ContainerAppsSessionPoolOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o ContainerAppsSessionPoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Optional settings for a Managed Identity that is assigned to the Session pool.
func (o ContainerAppsSessionPoolOutput) ManagedIdentitySettings() ManagedIdentitySettingResponseArrayOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) ManagedIdentitySettingResponseArrayOutput {
		return v.ManagedIdentitySettings
	}).(ManagedIdentitySettingResponseArrayOutput)
}

// The name of the resource
func (o ContainerAppsSessionPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes the session pool is using.
func (o ContainerAppsSessionPoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// The endpoint to manage the pool.
func (o ContainerAppsSessionPoolOutput) PoolManagementEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringOutput { return v.PoolManagementEndpoint }).(pulumi.StringOutput)
}

// The pool management type of the session pool.
func (o ContainerAppsSessionPoolOutput) PoolManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringPtrOutput { return v.PoolManagementType }).(pulumi.StringPtrOutput)
}

// Provisioning state of the session pool.
func (o ContainerAppsSessionPoolOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The scale configuration of the session pool.
func (o ContainerAppsSessionPoolOutput) ScaleConfiguration() ScaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) ScaleConfigurationResponsePtrOutput { return v.ScaleConfiguration }).(ScaleConfigurationResponsePtrOutput)
}

// The secrets of the session pool.
func (o ContainerAppsSessionPoolOutput) Secrets() SessionPoolSecretResponseArrayOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) SessionPoolSecretResponseArrayOutput { return v.Secrets }).(SessionPoolSecretResponseArrayOutput)
}

// The network configuration of the sessions in the session pool.
func (o ContainerAppsSessionPoolOutput) SessionNetworkConfiguration() SessionNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) SessionNetworkConfigurationResponsePtrOutput {
		return v.SessionNetworkConfiguration
	}).(SessionNetworkConfigurationResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ContainerAppsSessionPoolOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ContainerAppsSessionPoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ContainerAppsSessionPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAppsSessionPool) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ContainerAppsSessionPoolOutput{})
}
