// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A logic app extension resource
//
// Uses Azure REST API version 2024-10-02-preview.
//
// Other available API versions: 2024-02-02-preview, 2024-08-02-preview, 2025-02-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native app [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupLogicApp(ctx *pulumi.Context, args *LookupLogicAppArgs, opts ...pulumi.InvokeOption) (*LookupLogicAppResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupLogicAppResult
	err := ctx.Invoke("azure-native:app:getLogicApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLogicAppArgs struct {
	// Name of the Container App.
	ContainerAppName string `pulumi:"containerAppName"`
	// Name of the Logic App, the extension resource.
	LogicAppName string `pulumi:"logicAppName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A logic app extension resource
type LookupLogicAppResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupLogicAppOutput(ctx *pulumi.Context, args LookupLogicAppOutputArgs, opts ...pulumi.InvokeOption) LookupLogicAppResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLogicAppResultOutput, error) {
			args := v.(LookupLogicAppArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:app:getLogicApp", args, LookupLogicAppResultOutput{}, options).(LookupLogicAppResultOutput), nil
		}).(LookupLogicAppResultOutput)
}

type LookupLogicAppOutputArgs struct {
	// Name of the Container App.
	ContainerAppName pulumi.StringInput `pulumi:"containerAppName"`
	// Name of the Logic App, the extension resource.
	LogicAppName pulumi.StringInput `pulumi:"logicAppName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupLogicAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogicAppArgs)(nil)).Elem()
}

// A logic app extension resource
type LookupLogicAppResultOutput struct{ *pulumi.OutputState }

func (LookupLogicAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogicAppResult)(nil)).Elem()
}

func (o LookupLogicAppResultOutput) ToLookupLogicAppResultOutput() LookupLogicAppResultOutput {
	return o
}

func (o LookupLogicAppResultOutput) ToLookupLogicAppResultOutputWithContext(ctx context.Context) LookupLogicAppResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupLogicAppResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogicAppResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupLogicAppResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogicAppResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupLogicAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogicAppResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupLogicAppResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupLogicAppResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupLogicAppResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogicAppResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogicAppResultOutput{})
}
