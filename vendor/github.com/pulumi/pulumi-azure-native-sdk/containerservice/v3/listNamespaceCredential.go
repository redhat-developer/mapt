// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The list credential result response.
//
// Uses Azure REST API version 2025-02-02-preview.
func ListNamespaceCredential(ctx *pulumi.Context, args *ListNamespaceCredentialArgs, opts ...pulumi.InvokeOption) (*ListNamespaceCredentialResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListNamespaceCredentialResult
	err := ctx.Invoke("azure-native:containerservice:listNamespaceCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListNamespaceCredentialArgs struct {
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName string `pulumi:"resourceName"`
}

// The list credential result response.
type ListNamespaceCredentialResult struct {
	// Base64-encoded Kubernetes configuration file.
	Kubeconfigs []CredentialResultResponse `pulumi:"kubeconfigs"`
}

func ListNamespaceCredentialOutput(ctx *pulumi.Context, args ListNamespaceCredentialOutputArgs, opts ...pulumi.InvokeOption) ListNamespaceCredentialResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListNamespaceCredentialResultOutput, error) {
			args := v.(ListNamespaceCredentialArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerservice:listNamespaceCredential", args, ListNamespaceCredentialResultOutput{}, options).(ListNamespaceCredentialResultOutput), nil
		}).(ListNamespaceCredentialResultOutput)
}

type ListNamespaceCredentialOutputArgs struct {
	// The name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (ListNamespaceCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNamespaceCredentialArgs)(nil)).Elem()
}

// The list credential result response.
type ListNamespaceCredentialResultOutput struct{ *pulumi.OutputState }

func (ListNamespaceCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNamespaceCredentialResult)(nil)).Elem()
}

func (o ListNamespaceCredentialResultOutput) ToListNamespaceCredentialResultOutput() ListNamespaceCredentialResultOutput {
	return o
}

func (o ListNamespaceCredentialResultOutput) ToListNamespaceCredentialResultOutputWithContext(ctx context.Context) ListNamespaceCredentialResultOutput {
	return o
}

// Base64-encoded Kubernetes configuration file.
func (o ListNamespaceCredentialResultOutput) Kubeconfigs() CredentialResultResponseArrayOutput {
	return o.ApplyT(func(v ListNamespaceCredentialResult) []CredentialResultResponse { return v.Kubeconfigs }).(CredentialResultResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListNamespaceCredentialResultOutput{})
}
