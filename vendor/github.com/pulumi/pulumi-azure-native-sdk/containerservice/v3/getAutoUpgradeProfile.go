// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a AutoUpgradeProfile
//
// Uses Azure REST API version 2024-05-02-preview.
//
// Other available API versions: 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupAutoUpgradeProfile(ctx *pulumi.Context, args *LookupAutoUpgradeProfileArgs, opts ...pulumi.InvokeOption) (*LookupAutoUpgradeProfileResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAutoUpgradeProfileResult
	err := ctx.Invoke("azure-native:containerservice:getAutoUpgradeProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAutoUpgradeProfileArgs struct {
	// The name of the AutoUpgradeProfile resource.
	AutoUpgradeProfileName string `pulumi:"autoUpgradeProfileName"`
	// The name of the Fleet resource.
	FleetName string `pulumi:"fleetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The AutoUpgradeProfile resource.
type LookupAutoUpgradeProfileResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Configures how auto-upgrade will be run.
	Channel string `pulumi:"channel"`
	// If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
	// If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
	// This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
	// By default, this is set to False.
	Disabled *bool `pulumi:"disabled"`
	// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	ETag string `pulumi:"eTag"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The node image upgrade to be applied to the target clusters in auto upgrade.
	NodeImageSelection *AutoUpgradeNodeImageSelectionResponse `pulumi:"nodeImageSelection"`
	// The provisioning state of the AutoUpgradeProfile resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters which are members of the fleet.
	UpdateStrategyId *string `pulumi:"updateStrategyId"`
}

func LookupAutoUpgradeProfileOutput(ctx *pulumi.Context, args LookupAutoUpgradeProfileOutputArgs, opts ...pulumi.InvokeOption) LookupAutoUpgradeProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAutoUpgradeProfileResultOutput, error) {
			args := v.(LookupAutoUpgradeProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerservice:getAutoUpgradeProfile", args, LookupAutoUpgradeProfileResultOutput{}, options).(LookupAutoUpgradeProfileResultOutput), nil
		}).(LookupAutoUpgradeProfileResultOutput)
}

type LookupAutoUpgradeProfileOutputArgs struct {
	// The name of the AutoUpgradeProfile resource.
	AutoUpgradeProfileName pulumi.StringInput `pulumi:"autoUpgradeProfileName"`
	// The name of the Fleet resource.
	FleetName pulumi.StringInput `pulumi:"fleetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAutoUpgradeProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutoUpgradeProfileArgs)(nil)).Elem()
}

// The AutoUpgradeProfile resource.
type LookupAutoUpgradeProfileResultOutput struct{ *pulumi.OutputState }

func (LookupAutoUpgradeProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutoUpgradeProfileResult)(nil)).Elem()
}

func (o LookupAutoUpgradeProfileResultOutput) ToLookupAutoUpgradeProfileResultOutput() LookupAutoUpgradeProfileResultOutput {
	return o
}

func (o LookupAutoUpgradeProfileResultOutput) ToLookupAutoUpgradeProfileResultOutputWithContext(ctx context.Context) LookupAutoUpgradeProfileResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAutoUpgradeProfileResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Configures how auto-upgrade will be run.
func (o LookupAutoUpgradeProfileResultOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) string { return v.Channel }).(pulumi.StringOutput)
}

// If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
// If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
// This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
// By default, this is set to False.
func (o LookupAutoUpgradeProfileResultOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
func (o LookupAutoUpgradeProfileResultOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) string { return v.ETag }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAutoUpgradeProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAutoUpgradeProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// The node image upgrade to be applied to the target clusters in auto upgrade.
func (o LookupAutoUpgradeProfileResultOutput) NodeImageSelection() AutoUpgradeNodeImageSelectionResponsePtrOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) *AutoUpgradeNodeImageSelectionResponse {
		return v.NodeImageSelection
	}).(AutoUpgradeNodeImageSelectionResponsePtrOutput)
}

// The provisioning state of the AutoUpgradeProfile resource.
func (o LookupAutoUpgradeProfileResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAutoUpgradeProfileResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAutoUpgradeProfileResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) string { return v.Type }).(pulumi.StringOutput)
}

// The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters which are members of the fleet.
func (o LookupAutoUpgradeProfileResultOutput) UpdateStrategyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAutoUpgradeProfileResult) *string { return v.UpdateStrategyId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAutoUpgradeProfileResultOutput{})
}
