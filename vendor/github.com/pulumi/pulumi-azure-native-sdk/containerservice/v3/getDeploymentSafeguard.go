// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetch a deployment safeguard by name
//
// Uses Azure REST API version 2025-04-02-preview.
//
// Other available API versions: 2025-04-01, 2025-05-02-preview, 2025-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupDeploymentSafeguard(ctx *pulumi.Context, args *LookupDeploymentSafeguardArgs, opts ...pulumi.InvokeOption) (*LookupDeploymentSafeguardResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDeploymentSafeguardResult
	err := ctx.Invoke("azure-native:containerservice:getDeploymentSafeguard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeploymentSafeguardArgs struct {
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri string `pulumi:"resourceUri"`
}

// Deployment Safeguards
type LookupDeploymentSafeguardResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	ETag string `pulumi:"eTag"`
	// User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
	ExcludedNamespaces []string `pulumi:"excludedNamespaces"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The deployment safeguards level. Possible values are Warn and Enforce
	Level string `pulumi:"level"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning State
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// System defined list of namespaces excluded from Deployment Safeguards. These are determined by the underlying provider (such as AKS), and cannot be changed. Deployments in these namespaces will not be checked
	SystemExcludedNamespaces []string `pulumi:"systemExcludedNamespaces"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupDeploymentSafeguardOutput(ctx *pulumi.Context, args LookupDeploymentSafeguardOutputArgs, opts ...pulumi.InvokeOption) LookupDeploymentSafeguardResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDeploymentSafeguardResultOutput, error) {
			args := v.(LookupDeploymentSafeguardArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerservice:getDeploymentSafeguard", args, LookupDeploymentSafeguardResultOutput{}, options).(LookupDeploymentSafeguardResultOutput), nil
		}).(LookupDeploymentSafeguardResultOutput)
}

type LookupDeploymentSafeguardOutputArgs struct {
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri pulumi.StringInput `pulumi:"resourceUri"`
}

func (LookupDeploymentSafeguardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentSafeguardArgs)(nil)).Elem()
}

// Deployment Safeguards
type LookupDeploymentSafeguardResultOutput struct{ *pulumi.OutputState }

func (LookupDeploymentSafeguardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentSafeguardResult)(nil)).Elem()
}

func (o LookupDeploymentSafeguardResultOutput) ToLookupDeploymentSafeguardResultOutput() LookupDeploymentSafeguardResultOutput {
	return o
}

func (o LookupDeploymentSafeguardResultOutput) ToLookupDeploymentSafeguardResultOutputWithContext(ctx context.Context) LookupDeploymentSafeguardResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupDeploymentSafeguardResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
func (o LookupDeploymentSafeguardResultOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) string { return v.ETag }).(pulumi.StringOutput)
}

// User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards
func (o LookupDeploymentSafeguardResultOutput) ExcludedNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) []string { return v.ExcludedNamespaces }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupDeploymentSafeguardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) string { return v.Id }).(pulumi.StringOutput)
}

// The deployment safeguards level. Possible values are Warn and Enforce
func (o LookupDeploymentSafeguardResultOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) string { return v.Level }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupDeploymentSafeguardResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning State
func (o LookupDeploymentSafeguardResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupDeploymentSafeguardResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// System defined list of namespaces excluded from Deployment Safeguards. These are determined by the underlying provider (such as AKS), and cannot be changed. Deployments in these namespaces will not be checked
func (o LookupDeploymentSafeguardResultOutput) SystemExcludedNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) []string { return v.SystemExcludedNamespaces }).(pulumi.StringArrayOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupDeploymentSafeguardResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentSafeguardResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeploymentSafeguardResultOutput{})
}
