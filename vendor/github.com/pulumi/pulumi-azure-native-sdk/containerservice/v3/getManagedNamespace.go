// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Namespace managed by ARM.
//
// Uses Azure REST API version 2025-04-02-preview.
//
// Other available API versions: 2025-03-02-preview, 2025-05-02-preview, 2025-06-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupManagedNamespace(ctx *pulumi.Context, args *LookupManagedNamespaceArgs, opts ...pulumi.InvokeOption) (*LookupManagedNamespaceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedNamespaceResult
	err := ctx.Invoke("azure-native:containerservice:getManagedNamespace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupManagedNamespaceArgs struct {
	// The name of the managed namespace.
	ManagedNamespaceName string `pulumi:"managedNamespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName string `pulumi:"resourceName"`
}

// Namespace managed by ARM.
type LookupManagedNamespaceResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
	ETag string `pulumi:"eTag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// The location of the namespace.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name string `pulumi:"name"`
	// Properties of a namespace.
	Properties NamespacePropertiesResponse `pulumi:"properties"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The tags to be persisted on the managed cluster namespace.
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupManagedNamespaceResult
func (val *LookupManagedNamespaceResult) Defaults() *LookupManagedNamespaceResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}
func LookupManagedNamespaceOutput(ctx *pulumi.Context, args LookupManagedNamespaceOutputArgs, opts ...pulumi.InvokeOption) LookupManagedNamespaceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupManagedNamespaceResultOutput, error) {
			args := v.(LookupManagedNamespaceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerservice:getManagedNamespace", args, LookupManagedNamespaceResultOutput{}, options).(LookupManagedNamespaceResultOutput), nil
		}).(LookupManagedNamespaceResultOutput)
}

type LookupManagedNamespaceOutputArgs struct {
	// The name of the managed namespace.
	ManagedNamespaceName pulumi.StringInput `pulumi:"managedNamespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (LookupManagedNamespaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedNamespaceArgs)(nil)).Elem()
}

// Namespace managed by ARM.
type LookupManagedNamespaceResultOutput struct{ *pulumi.OutputState }

func (LookupManagedNamespaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedNamespaceResult)(nil)).Elem()
}

func (o LookupManagedNamespaceResultOutput) ToLookupManagedNamespaceResultOutput() LookupManagedNamespaceResultOutput {
	return o
}

func (o LookupManagedNamespaceResultOutput) ToLookupManagedNamespaceResultOutputWithContext(ctx context.Context) LookupManagedNamespaceResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupManagedNamespaceResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
func (o LookupManagedNamespaceResultOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) string { return v.ETag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupManagedNamespaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the namespace.
func (o LookupManagedNamespaceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LookupManagedNamespaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of a namespace.
func (o LookupManagedNamespaceResultOutput) Properties() NamespacePropertiesResponseOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) NamespacePropertiesResponse { return v.Properties }).(NamespacePropertiesResponseOutput)
}

// The system metadata relating to this resource.
func (o LookupManagedNamespaceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The tags to be persisted on the managed cluster namespace.
func (o LookupManagedNamespaceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o LookupManagedNamespaceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedNamespaceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedNamespaceResultOutput{})
}
