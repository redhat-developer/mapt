// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Managed cluster.
//
// Uses Azure REST API version 2024-10-01. In version 2.x of the Azure Native provider, it used API version 2023-04-01.
//
// Other available API versions: 2019-11-01, 2020-01-01, 2020-02-01, 2020-03-01, 2020-04-01, 2020-06-01, 2020-07-01, 2020-09-01, 2020-11-01, 2020-12-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-07-01, 2021-08-01, 2021-09-01, 2021-10-01, 2021-11-01-preview, 2022-01-01, 2022-01-02-preview, 2022-02-01, 2022-02-02-preview, 2022-03-01, 2022-03-02-preview, 2022-04-01, 2022-04-02-preview, 2022-05-02-preview, 2022-06-01, 2022-06-02-preview, 2022-07-01, 2022-07-02-preview, 2022-08-02-preview, 2022-08-03-preview, 2022-09-01, 2022-09-02-preview, 2022-10-02-preview, 2022-11-01, 2022-11-02-preview, 2023-01-01, 2023-01-02-preview, 2023-02-01, 2023-02-02-preview, 2023-03-01, 2023-03-02-preview, 2023-04-01, 2023-04-02-preview, 2023-05-01, 2023-05-02-preview, 2023-06-01, 2023-06-02-preview, 2023-07-01, 2023-07-02-preview, 2023-08-01, 2023-08-02-preview, 2023-09-01, 2023-09-02-preview, 2023-10-01, 2023-10-02-preview, 2023-11-01, 2023-11-02-preview, 2024-01-01, 2024-01-02-preview, 2024-02-01, 2024-02-02-preview, 2024-03-02-preview, 2024-04-02-preview, 2024-05-01, 2024-05-02-preview, 2024-06-02-preview, 2024-07-01, 2024-07-02-preview, 2024-08-01, 2024-09-01, 2024-09-02-preview, 2024-10-02-preview, 2025-01-01, 2025-01-02-preview, 2025-02-01, 2025-02-02-preview, 2025-03-01, 2025-03-02-preview, 2025-04-01, 2025-04-02-preview, 2025-05-01, 2025-05-02-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
//
// When creating a managed cluster you must define at least one agent pool inline via the `agentPoolProfiles` property. The Azure API does not currently allow this property to be updated directly. Instead, additional agent pools can be defined via the `AgentPool` resource. If needing to change the initial agent pool profile property, you can either trigger the whole cluster to be re-created by using the [replaceOnChanges resource option](https://www.pulumi.com/docs/concepts/options/replaceonchanges/), or make the change directly in Azure then use `pulumi refresh` to update the stack's stack to match.
type ManagedCluster struct {
	pulumi.CustomResourceState

	// The Azure Active Directory configuration.
	AadProfile ManagedClusterAADProfileResponsePtrOutput `pulumi:"aadProfile"`
	// The profile of managed cluster add-on.
	AddonProfiles ManagedClusterAddonProfileResponseMapOutput `pulumi:"addonProfiles"`
	// The agent pool properties.
	AgentPoolProfiles ManagedClusterAgentPoolProfileResponseArrayOutput `pulumi:"agentPoolProfiles"`
	// The access profile for managed cluster API server.
	ApiServerAccessProfile ManagedClusterAPIServerAccessProfileResponsePtrOutput `pulumi:"apiServerAccessProfile"`
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput `pulumi:"autoScalerProfile"`
	// The auto upgrade configuration.
	AutoUpgradeProfile ManagedClusterAutoUpgradeProfileResponsePtrOutput `pulumi:"autoUpgradeProfile"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Azure Monitor addon profiles for monitoring the managed cluster.
	AzureMonitorProfile ManagedClusterAzureMonitorProfileResponsePtrOutput `pulumi:"azureMonitorProfile"`
	// The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
	AzurePortalFQDN pulumi.StringOutput `pulumi:"azurePortalFQDN"`
	// If kubernetesVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If kubernetesVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
	CurrentKubernetesVersion pulumi.StringOutput `pulumi:"currentKubernetesVersion"`
	// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
	DisableLocalAccounts pulumi.BoolPtrOutput `pulumi:"disableLocalAccounts"`
	// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
	DiskEncryptionSetID pulumi.StringPtrOutput `pulumi:"diskEncryptionSetID"`
	// This cannot be updated once the Managed Cluster has been created.
	DnsPrefix pulumi.StringPtrOutput `pulumi:"dnsPrefix"`
	// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
	ETag pulumi.StringOutput `pulumi:"eTag"`
	// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
	EnablePodSecurityPolicy pulumi.BoolPtrOutput `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC pulumi.BoolPtrOutput `pulumi:"enableRBAC"`
	// The extended location of the Virtual Machine.
	ExtendedLocation ExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// The FQDN of the master pool.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// This cannot be updated once the Managed Cluster has been created.
	FqdnSubdomain pulumi.StringPtrOutput `pulumi:"fqdnSubdomain"`
	// Configurations for provisioning the cluster with HTTP proxy servers.
	HttpProxyConfig ManagedClusterHTTPProxyConfigResponsePtrOutput `pulumi:"httpProxyConfig"`
	// The identity of the managed cluster, if configured.
	Identity ManagedClusterIdentityResponsePtrOutput `pulumi:"identity"`
	// The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned identity is allowed. The only accepted key is "kubeletidentity", with value of "resourceId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}".
	IdentityProfile UserAssignedIdentityResponseMapOutput `pulumi:"identityProfile"`
	// Ingress profile for the managed cluster.
	IngressProfile ManagedClusterIngressProfileResponsePtrOutput `pulumi:"ingressProfile"`
	// Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
	KubernetesVersion pulumi.StringPtrOutput `pulumi:"kubernetesVersion"`
	// The profile for Linux VMs in the Managed Cluster.
	LinuxProfile ContainerServiceLinuxProfileResponsePtrOutput `pulumi:"linuxProfile"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The max number of agent pools for the managed cluster.
	MaxAgentPools pulumi.IntOutput `pulumi:"maxAgentPools"`
	// Optional cluster metrics configuration.
	MetricsProfile ManagedClusterMetricsProfileResponsePtrOutput `pulumi:"metricsProfile"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The network configuration profile.
	NetworkProfile ContainerServiceNetworkProfileResponsePtrOutput `pulumi:"networkProfile"`
	// The name of the resource group containing agent pool nodes.
	NodeResourceGroup pulumi.StringPtrOutput `pulumi:"nodeResourceGroup"`
	// Profile of the node resource group configuration.
	NodeResourceGroupProfile ManagedClusterNodeResourceGroupProfileResponsePtrOutput `pulumi:"nodeResourceGroupProfile"`
	// The OIDC issuer profile of the Managed Cluster.
	OidcIssuerProfile ManagedClusterOIDCIssuerProfileResponsePtrOutput `pulumi:"oidcIssuerProfile"`
	// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
	PodIdentityProfile ManagedClusterPodIdentityProfileResponsePtrOutput `pulumi:"podIdentityProfile"`
	// The Power State of the cluster.
	PowerState PowerStateResponseOutput `pulumi:"powerState"`
	// The FQDN of private cluster.
	PrivateFQDN pulumi.StringOutput `pulumi:"privateFQDN"`
	// Private link resources associated with the cluster.
	PrivateLinkResources PrivateLinkResourceResponseArrayOutput `pulumi:"privateLinkResources"`
	// The current provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Allow or deny public network access for AKS
	PublicNetworkAccess pulumi.StringPtrOutput `pulumi:"publicNetworkAccess"`
	// The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
	ResourceUID pulumi.StringOutput `pulumi:"resourceUID"`
	// Security profile for the managed cluster.
	SecurityProfile ManagedClusterSecurityProfileResponsePtrOutput `pulumi:"securityProfile"`
	// Service mesh profile for a managed cluster.
	ServiceMeshProfile ServiceMeshProfileResponsePtrOutput `pulumi:"serviceMeshProfile"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile ManagedClusterServicePrincipalProfileResponsePtrOutput `pulumi:"servicePrincipalProfile"`
	// The managed cluster SKU.
	Sku ManagedClusterSKUResponsePtrOutput `pulumi:"sku"`
	// Storage profile for the managed cluster.
	StorageProfile ManagedClusterStorageProfileResponsePtrOutput `pulumi:"storageProfile"`
	// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
	SupportPlan pulumi.StringPtrOutput `pulumi:"supportPlan"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Settings for upgrading a cluster.
	UpgradeSettings ClusterUpgradeSettingsResponsePtrOutput `pulumi:"upgradeSettings"`
	// The profile for Windows VMs in the Managed Cluster.
	WindowsProfile ManagedClusterWindowsProfileResponsePtrOutput `pulumi:"windowsProfile"`
	// Workload Auto-scaler profile for the managed cluster.
	WorkloadAutoScalerProfile ManagedClusterWorkloadAutoScalerProfileResponsePtrOutput `pulumi:"workloadAutoScalerProfile"`
}

// NewManagedCluster registers a new resource with the given unique name, arguments, and options.
func NewManagedCluster(ctx *pulumi.Context,
	name string, args *ManagedClusterArgs, opts ...pulumi.ResourceOption) (*ManagedCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.NetworkProfile != nil {
		args.NetworkProfile = args.NetworkProfile.ToContainerServiceNetworkProfilePtrOutput().ApplyT(func(v *ContainerServiceNetworkProfile) *ContainerServiceNetworkProfile { return v.Defaults() }).(ContainerServiceNetworkProfilePtrOutput)
	}
	if args.SecurityProfile != nil {
		args.SecurityProfile = args.SecurityProfile.ToManagedClusterSecurityProfilePtrOutput().ApplyT(func(v *ManagedClusterSecurityProfile) *ManagedClusterSecurityProfile { return v.Defaults() }).(ManagedClusterSecurityProfilePtrOutput)
	}
	if args.WorkloadAutoScalerProfile != nil {
		args.WorkloadAutoScalerProfile = args.WorkloadAutoScalerProfile.ToManagedClusterWorkloadAutoScalerProfilePtrOutput().ApplyT(func(v *ManagedClusterWorkloadAutoScalerProfile) *ManagedClusterWorkloadAutoScalerProfile {
			return v.Defaults()
		}).(ManagedClusterWorkloadAutoScalerProfilePtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:containerservice/v20170831:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20180331:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20180801preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20190201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20190401:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20190601:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20190801:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20191001:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20191101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20200101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20200201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20200301:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20200401:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20200601:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20200701:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20200901:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20201101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20201201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20210201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20210301:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20210501:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20210701:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20210801:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20210901:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20211001:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20211101preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220102preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220202preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220301:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220302preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220401:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220402preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220502preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220601:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220602preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220701:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220702preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220802preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220803preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220901:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20220902preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20221002preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20221101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20221102preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230102preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230202preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230301:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230302preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230401:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230402preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230501:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230502preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230601:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230602preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230701:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230702preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230801:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230802preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230901:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20230902preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20231001:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20231002preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20231101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20231102preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240102preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240202preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240302preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240402preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240501:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240502preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240602preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240701:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240702preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240801:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240901:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20240902preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20241001:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20241002preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250101:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250102preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250201:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250202preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250301:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250302preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250401:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250402preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250501:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:containerservice/v20250502preview:ManagedCluster"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ManagedCluster
	err := ctx.RegisterResource("azure-native:containerservice:ManagedCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedCluster gets an existing ManagedCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedClusterState, opts ...pulumi.ResourceOption) (*ManagedCluster, error) {
	var resource ManagedCluster
	err := ctx.ReadResource("azure-native:containerservice:ManagedCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedCluster resources.
type managedClusterState struct {
}

type ManagedClusterState struct {
}

func (ManagedClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedClusterState)(nil)).Elem()
}

type managedClusterArgs struct {
	// The Azure Active Directory configuration.
	AadProfile *ManagedClusterAADProfile `pulumi:"aadProfile"`
	// The profile of managed cluster add-on.
	AddonProfiles map[string]ManagedClusterAddonProfile `pulumi:"addonProfiles"`
	// The agent pool properties.
	AgentPoolProfiles []ManagedClusterAgentPoolProfile `pulumi:"agentPoolProfiles"`
	// The access profile for managed cluster API server.
	ApiServerAccessProfile *ManagedClusterAPIServerAccessProfile `pulumi:"apiServerAccessProfile"`
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile *ManagedClusterPropertiesAutoScalerProfile `pulumi:"autoScalerProfile"`
	// The auto upgrade configuration.
	AutoUpgradeProfile *ManagedClusterAutoUpgradeProfile `pulumi:"autoUpgradeProfile"`
	// Azure Monitor addon profiles for monitoring the managed cluster.
	AzureMonitorProfile *ManagedClusterAzureMonitorProfile `pulumi:"azureMonitorProfile"`
	// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
	DisableLocalAccounts *bool `pulumi:"disableLocalAccounts"`
	// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
	DiskEncryptionSetID *string `pulumi:"diskEncryptionSetID"`
	// This cannot be updated once the Managed Cluster has been created.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
	EnablePodSecurityPolicy *bool `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC *bool `pulumi:"enableRBAC"`
	// The extended location of the Virtual Machine.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// This cannot be updated once the Managed Cluster has been created.
	FqdnSubdomain *string `pulumi:"fqdnSubdomain"`
	// Configurations for provisioning the cluster with HTTP proxy servers.
	HttpProxyConfig *ManagedClusterHTTPProxyConfig `pulumi:"httpProxyConfig"`
	// The identity of the managed cluster, if configured.
	Identity *ManagedClusterIdentity `pulumi:"identity"`
	// The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned identity is allowed. The only accepted key is "kubeletidentity", with value of "resourceId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}".
	IdentityProfile map[string]UserAssignedIdentity `pulumi:"identityProfile"`
	// Ingress profile for the managed cluster.
	IngressProfile *ManagedClusterIngressProfile `pulumi:"ingressProfile"`
	// Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The profile for Linux VMs in the Managed Cluster.
	LinuxProfile *ContainerServiceLinuxProfile `pulumi:"linuxProfile"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Optional cluster metrics configuration.
	MetricsProfile *ManagedClusterMetricsProfile `pulumi:"metricsProfile"`
	// The network configuration profile.
	NetworkProfile *ContainerServiceNetworkProfile `pulumi:"networkProfile"`
	// The name of the resource group containing agent pool nodes.
	NodeResourceGroup *string `pulumi:"nodeResourceGroup"`
	// Profile of the node resource group configuration.
	NodeResourceGroupProfile *ManagedClusterNodeResourceGroupProfile `pulumi:"nodeResourceGroupProfile"`
	// The OIDC issuer profile of the Managed Cluster.
	OidcIssuerProfile *ManagedClusterOIDCIssuerProfile `pulumi:"oidcIssuerProfile"`
	// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
	PodIdentityProfile *ManagedClusterPodIdentityProfile `pulumi:"podIdentityProfile"`
	// Private link resources associated with the cluster.
	PrivateLinkResources []PrivateLinkResource `pulumi:"privateLinkResources"`
	// Allow or deny public network access for AKS
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName *string `pulumi:"resourceName"`
	// Security profile for the managed cluster.
	SecurityProfile *ManagedClusterSecurityProfile `pulumi:"securityProfile"`
	// Service mesh profile for a managed cluster.
	ServiceMeshProfile *ServiceMeshProfile `pulumi:"serviceMeshProfile"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfile `pulumi:"servicePrincipalProfile"`
	// The managed cluster SKU.
	Sku *ManagedClusterSKU `pulumi:"sku"`
	// Storage profile for the managed cluster.
	StorageProfile *ManagedClusterStorageProfile `pulumi:"storageProfile"`
	// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
	SupportPlan *string `pulumi:"supportPlan"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Settings for upgrading a cluster.
	UpgradeSettings *ClusterUpgradeSettings `pulumi:"upgradeSettings"`
	// The profile for Windows VMs in the Managed Cluster.
	WindowsProfile *ManagedClusterWindowsProfile `pulumi:"windowsProfile"`
	// Workload Auto-scaler profile for the managed cluster.
	WorkloadAutoScalerProfile *ManagedClusterWorkloadAutoScalerProfile `pulumi:"workloadAutoScalerProfile"`
}

// The set of arguments for constructing a ManagedCluster resource.
type ManagedClusterArgs struct {
	// The Azure Active Directory configuration.
	AadProfile ManagedClusterAADProfilePtrInput
	// The profile of managed cluster add-on.
	AddonProfiles ManagedClusterAddonProfileMapInput
	// The agent pool properties.
	AgentPoolProfiles ManagedClusterAgentPoolProfileArrayInput
	// The access profile for managed cluster API server.
	ApiServerAccessProfile ManagedClusterAPIServerAccessProfilePtrInput
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile ManagedClusterPropertiesAutoScalerProfilePtrInput
	// The auto upgrade configuration.
	AutoUpgradeProfile ManagedClusterAutoUpgradeProfilePtrInput
	// Azure Monitor addon profiles for monitoring the managed cluster.
	AzureMonitorProfile ManagedClusterAzureMonitorProfilePtrInput
	// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
	DisableLocalAccounts pulumi.BoolPtrInput
	// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
	DiskEncryptionSetID pulumi.StringPtrInput
	// This cannot be updated once the Managed Cluster has been created.
	DnsPrefix pulumi.StringPtrInput
	// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
	EnablePodSecurityPolicy pulumi.BoolPtrInput
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC pulumi.BoolPtrInput
	// The extended location of the Virtual Machine.
	ExtendedLocation ExtendedLocationPtrInput
	// This cannot be updated once the Managed Cluster has been created.
	FqdnSubdomain pulumi.StringPtrInput
	// Configurations for provisioning the cluster with HTTP proxy servers.
	HttpProxyConfig ManagedClusterHTTPProxyConfigPtrInput
	// The identity of the managed cluster, if configured.
	Identity ManagedClusterIdentityPtrInput
	// The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned identity is allowed. The only accepted key is "kubeletidentity", with value of "resourceId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}".
	IdentityProfile UserAssignedIdentityMapInput
	// Ingress profile for the managed cluster.
	IngressProfile ManagedClusterIngressProfilePtrInput
	// Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
	KubernetesVersion pulumi.StringPtrInput
	// The profile for Linux VMs in the Managed Cluster.
	LinuxProfile ContainerServiceLinuxProfilePtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Optional cluster metrics configuration.
	MetricsProfile ManagedClusterMetricsProfilePtrInput
	// The network configuration profile.
	NetworkProfile ContainerServiceNetworkProfilePtrInput
	// The name of the resource group containing agent pool nodes.
	NodeResourceGroup pulumi.StringPtrInput
	// Profile of the node resource group configuration.
	NodeResourceGroupProfile ManagedClusterNodeResourceGroupProfilePtrInput
	// The OIDC issuer profile of the Managed Cluster.
	OidcIssuerProfile ManagedClusterOIDCIssuerProfilePtrInput
	// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
	PodIdentityProfile ManagedClusterPodIdentityProfilePtrInput
	// Private link resources associated with the cluster.
	PrivateLinkResources PrivateLinkResourceArrayInput
	// Allow or deny public network access for AKS
	PublicNetworkAccess pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the managed cluster resource.
	ResourceName pulumi.StringPtrInput
	// Security profile for the managed cluster.
	SecurityProfile ManagedClusterSecurityProfilePtrInput
	// Service mesh profile for a managed cluster.
	ServiceMeshProfile ServiceMeshProfilePtrInput
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile ManagedClusterServicePrincipalProfilePtrInput
	// The managed cluster SKU.
	Sku ManagedClusterSKUPtrInput
	// Storage profile for the managed cluster.
	StorageProfile ManagedClusterStorageProfilePtrInput
	// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
	SupportPlan pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Settings for upgrading a cluster.
	UpgradeSettings ClusterUpgradeSettingsPtrInput
	// The profile for Windows VMs in the Managed Cluster.
	WindowsProfile ManagedClusterWindowsProfilePtrInput
	// Workload Auto-scaler profile for the managed cluster.
	WorkloadAutoScalerProfile ManagedClusterWorkloadAutoScalerProfilePtrInput
}

func (ManagedClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedClusterArgs)(nil)).Elem()
}

type ManagedClusterInput interface {
	pulumi.Input

	ToManagedClusterOutput() ManagedClusterOutput
	ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput
}

func (*ManagedCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCluster)(nil)).Elem()
}

func (i *ManagedCluster) ToManagedClusterOutput() ManagedClusterOutput {
	return i.ToManagedClusterOutputWithContext(context.Background())
}

func (i *ManagedCluster) ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterOutput)
}

type ManagedClusterOutput struct{ *pulumi.OutputState }

func (ManagedClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCluster)(nil)).Elem()
}

func (o ManagedClusterOutput) ToManagedClusterOutput() ManagedClusterOutput {
	return o
}

func (o ManagedClusterOutput) ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput {
	return o
}

// The Azure Active Directory configuration.
func (o ManagedClusterOutput) AadProfile() ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterAADProfileResponsePtrOutput { return v.AadProfile }).(ManagedClusterAADProfileResponsePtrOutput)
}

// The profile of managed cluster add-on.
func (o ManagedClusterOutput) AddonProfiles() ManagedClusterAddonProfileResponseMapOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterAddonProfileResponseMapOutput { return v.AddonProfiles }).(ManagedClusterAddonProfileResponseMapOutput)
}

// The agent pool properties.
func (o ManagedClusterOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterAgentPoolProfileResponseArrayOutput { return v.AgentPoolProfiles }).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// The access profile for managed cluster API server.
func (o ManagedClusterOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
func (o ManagedClusterOutput) AutoScalerProfile() ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput {
		return v.AutoScalerProfile
	}).(ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput)
}

// The auto upgrade configuration.
func (o ManagedClusterOutput) AutoUpgradeProfile() ManagedClusterAutoUpgradeProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterAutoUpgradeProfileResponsePtrOutput { return v.AutoUpgradeProfile }).(ManagedClusterAutoUpgradeProfileResponsePtrOutput)
}

// The Azure API version of the resource.
func (o ManagedClusterOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Azure Monitor addon profiles for monitoring the managed cluster.
func (o ManagedClusterOutput) AzureMonitorProfile() ManagedClusterAzureMonitorProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterAzureMonitorProfileResponsePtrOutput {
		return v.AzureMonitorProfile
	}).(ManagedClusterAzureMonitorProfileResponsePtrOutput)
}

// The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
func (o ManagedClusterOutput) AzurePortalFQDN() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.AzurePortalFQDN }).(pulumi.StringOutput)
}

// If kubernetesVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If kubernetesVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
func (o ManagedClusterOutput) CurrentKubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.CurrentKubernetesVersion }).(pulumi.StringOutput)
}

// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
func (o ManagedClusterOutput) DisableLocalAccounts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.BoolPtrOutput { return v.DisableLocalAccounts }).(pulumi.BoolPtrOutput)
}

// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
func (o ManagedClusterOutput) DiskEncryptionSetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringPtrOutput { return v.DiskEncryptionSetID }).(pulumi.StringPtrOutput)
}

// This cannot be updated once the Managed Cluster has been created.
func (o ManagedClusterOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringPtrOutput { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.
func (o ManagedClusterOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.ETag }).(pulumi.StringOutput)
}

// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
func (o ManagedClusterOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.BoolPtrOutput { return v.EnablePodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o ManagedClusterOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.BoolPtrOutput { return v.EnableRBAC }).(pulumi.BoolPtrOutput)
}

// The extended location of the Virtual Machine.
func (o ManagedClusterOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ExtendedLocationResponsePtrOutput { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The FQDN of the master pool.
func (o ManagedClusterOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// This cannot be updated once the Managed Cluster has been created.
func (o ManagedClusterOutput) FqdnSubdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringPtrOutput { return v.FqdnSubdomain }).(pulumi.StringPtrOutput)
}

// Configurations for provisioning the cluster with HTTP proxy servers.
func (o ManagedClusterOutput) HttpProxyConfig() ManagedClusterHTTPProxyConfigResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterHTTPProxyConfigResponsePtrOutput { return v.HttpProxyConfig }).(ManagedClusterHTTPProxyConfigResponsePtrOutput)
}

// The identity of the managed cluster, if configured.
func (o ManagedClusterOutput) Identity() ManagedClusterIdentityResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterIdentityResponsePtrOutput { return v.Identity }).(ManagedClusterIdentityResponsePtrOutput)
}

// The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned identity is allowed. The only accepted key is "kubeletidentity", with value of "resourceId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}".
func (o ManagedClusterOutput) IdentityProfile() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedCluster) UserAssignedIdentityResponseMapOutput { return v.IdentityProfile }).(UserAssignedIdentityResponseMapOutput)
}

// Ingress profile for the managed cluster.
func (o ManagedClusterOutput) IngressProfile() ManagedClusterIngressProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterIngressProfileResponsePtrOutput { return v.IngressProfile }).(ManagedClusterIngressProfileResponsePtrOutput)
}

// Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
func (o ManagedClusterOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringPtrOutput { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// The profile for Linux VMs in the Managed Cluster.
func (o ManagedClusterOutput) LinuxProfile() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ContainerServiceLinuxProfileResponsePtrOutput { return v.LinuxProfile }).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// The geo-location where the resource lives
func (o ManagedClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The max number of agent pools for the managed cluster.
func (o ManagedClusterOutput) MaxAgentPools() pulumi.IntOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.IntOutput { return v.MaxAgentPools }).(pulumi.IntOutput)
}

// Optional cluster metrics configuration.
func (o ManagedClusterOutput) MetricsProfile() ManagedClusterMetricsProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterMetricsProfileResponsePtrOutput { return v.MetricsProfile }).(ManagedClusterMetricsProfileResponsePtrOutput)
}

// The name of the resource
func (o ManagedClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The network configuration profile.
func (o ManagedClusterOutput) NetworkProfile() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ContainerServiceNetworkProfileResponsePtrOutput { return v.NetworkProfile }).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// The name of the resource group containing agent pool nodes.
func (o ManagedClusterOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringPtrOutput { return v.NodeResourceGroup }).(pulumi.StringPtrOutput)
}

// Profile of the node resource group configuration.
func (o ManagedClusterOutput) NodeResourceGroupProfile() ManagedClusterNodeResourceGroupProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterNodeResourceGroupProfileResponsePtrOutput {
		return v.NodeResourceGroupProfile
	}).(ManagedClusterNodeResourceGroupProfileResponsePtrOutput)
}

// The OIDC issuer profile of the Managed Cluster.
func (o ManagedClusterOutput) OidcIssuerProfile() ManagedClusterOIDCIssuerProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterOIDCIssuerProfileResponsePtrOutput { return v.OidcIssuerProfile }).(ManagedClusterOIDCIssuerProfileResponsePtrOutput)
}

// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.
func (o ManagedClusterOutput) PodIdentityProfile() ManagedClusterPodIdentityProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterPodIdentityProfileResponsePtrOutput { return v.PodIdentityProfile }).(ManagedClusterPodIdentityProfileResponsePtrOutput)
}

// The Power State of the cluster.
func (o ManagedClusterOutput) PowerState() PowerStateResponseOutput {
	return o.ApplyT(func(v *ManagedCluster) PowerStateResponseOutput { return v.PowerState }).(PowerStateResponseOutput)
}

// The FQDN of private cluster.
func (o ManagedClusterOutput) PrivateFQDN() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.PrivateFQDN }).(pulumi.StringOutput)
}

// Private link resources associated with the cluster.
func (o ManagedClusterOutput) PrivateLinkResources() PrivateLinkResourceResponseArrayOutput {
	return o.ApplyT(func(v *ManagedCluster) PrivateLinkResourceResponseArrayOutput { return v.PrivateLinkResources }).(PrivateLinkResourceResponseArrayOutput)
}

// The current provisioning state.
func (o ManagedClusterOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Allow or deny public network access for AKS
func (o ManagedClusterOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringPtrOutput { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
func (o ManagedClusterOutput) ResourceUID() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.ResourceUID }).(pulumi.StringOutput)
}

// Security profile for the managed cluster.
func (o ManagedClusterOutput) SecurityProfile() ManagedClusterSecurityProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterSecurityProfileResponsePtrOutput { return v.SecurityProfile }).(ManagedClusterSecurityProfileResponsePtrOutput)
}

// Service mesh profile for a managed cluster.
func (o ManagedClusterOutput) ServiceMeshProfile() ServiceMeshProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ServiceMeshProfileResponsePtrOutput { return v.ServiceMeshProfile }).(ServiceMeshProfileResponsePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o ManagedClusterOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterServicePrincipalProfileResponsePtrOutput {
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// The managed cluster SKU.
func (o ManagedClusterOutput) Sku() ManagedClusterSKUResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterSKUResponsePtrOutput { return v.Sku }).(ManagedClusterSKUResponsePtrOutput)
}

// Storage profile for the managed cluster.
func (o ManagedClusterOutput) StorageProfile() ManagedClusterStorageProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterStorageProfileResponsePtrOutput { return v.StorageProfile }).(ManagedClusterStorageProfileResponsePtrOutput)
}

// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
func (o ManagedClusterOutput) SupportPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringPtrOutput { return v.SupportPlan }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ManagedClusterOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ManagedCluster) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ManagedClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ManagedClusterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedCluster) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Settings for upgrading a cluster.
func (o ManagedClusterOutput) UpgradeSettings() ClusterUpgradeSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ClusterUpgradeSettingsResponsePtrOutput { return v.UpgradeSettings }).(ClusterUpgradeSettingsResponsePtrOutput)
}

// The profile for Windows VMs in the Managed Cluster.
func (o ManagedClusterOutput) WindowsProfile() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterWindowsProfileResponsePtrOutput { return v.WindowsProfile }).(ManagedClusterWindowsProfileResponsePtrOutput)
}

// Workload Auto-scaler profile for the managed cluster.
func (o ManagedClusterOutput) WorkloadAutoScalerProfile() ManagedClusterWorkloadAutoScalerProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedClusterWorkloadAutoScalerProfileResponsePtrOutput {
		return v.WorkloadAutoScalerProfile
	}).(ManagedClusterWorkloadAutoScalerProfileResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedClusterOutput{})
}
