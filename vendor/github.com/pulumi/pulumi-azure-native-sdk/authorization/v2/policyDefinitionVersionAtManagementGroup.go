// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authorization

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The ID of the policy definition version.
// Azure REST API version: 2023-04-01.
//
// Other available API versions: 2024-05-01.
type PolicyDefinitionVersionAtManagementGroup struct {
	pulumi.CustomResourceState

	// The policy definition description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The name of the policy definition version.
	Name pulumi.StringOutput `pulumi:"name"`
	// The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
	Parameters ParameterDefinitionsValueResponseMapOutput `pulumi:"parameters"`
	// The policy rule.
	PolicyRule pulumi.AnyOutput `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
	PolicyType pulumi.StringPtrOutput `pulumi:"policyType"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource (Microsoft.Authorization/policyDefinitions/versions).
	Type pulumi.StringOutput `pulumi:"type"`
	// The policy definition version in #.#.# format.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewPolicyDefinitionVersionAtManagementGroup registers a new resource with the given unique name, arguments, and options.
func NewPolicyDefinitionVersionAtManagementGroup(ctx *pulumi.Context,
	name string, args *PolicyDefinitionVersionAtManagementGroupArgs, opts ...pulumi.ResourceOption) (*PolicyDefinitionVersionAtManagementGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ManagementGroupName'")
	}
	if args.PolicyDefinitionName == nil {
		return nil, errors.New("invalid value for required argument 'PolicyDefinitionName'")
	}
	if args.Mode == nil {
		args.Mode = pulumi.StringPtr("Indexed")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:authorization/v20230401:PolicyDefinitionVersionAtManagementGroup"),
		},
		{
			Type: pulumi.String("azure-native:authorization/v20240501:PolicyDefinitionVersionAtManagementGroup"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PolicyDefinitionVersionAtManagementGroup
	err := ctx.RegisterResource("azure-native:authorization:PolicyDefinitionVersionAtManagementGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyDefinitionVersionAtManagementGroup gets an existing PolicyDefinitionVersionAtManagementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyDefinitionVersionAtManagementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyDefinitionVersionAtManagementGroupState, opts ...pulumi.ResourceOption) (*PolicyDefinitionVersionAtManagementGroup, error) {
	var resource PolicyDefinitionVersionAtManagementGroup
	err := ctx.ReadResource("azure-native:authorization:PolicyDefinitionVersionAtManagementGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyDefinitionVersionAtManagementGroup resources.
type policyDefinitionVersionAtManagementGroupState struct {
}

type PolicyDefinitionVersionAtManagementGroupState struct {
}

func (PolicyDefinitionVersionAtManagementGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDefinitionVersionAtManagementGroupState)(nil)).Elem()
}

type policyDefinitionVersionAtManagementGroupArgs struct {
	// The policy definition description.
	Description *string `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName *string `pulumi:"displayName"`
	// The name of the management group. The name is case insensitive.
	ManagementGroupName string `pulumi:"managementGroupName"`
	// The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
	Metadata interface{} `pulumi:"metadata"`
	// The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
	Mode *string `pulumi:"mode"`
	// The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
	Parameters map[string]ParameterDefinitionsValue `pulumi:"parameters"`
	// The name of the policy definition.
	PolicyDefinitionName string `pulumi:"policyDefinitionName"`
	// The policy definition version.  The format is x.y.z where x is the major version number, y is the minor version number, and z is the patch number
	PolicyDefinitionVersion *string `pulumi:"policyDefinitionVersion"`
	// The policy rule.
	PolicyRule interface{} `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
	PolicyType *string `pulumi:"policyType"`
	// The policy definition version in #.#.# format.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a PolicyDefinitionVersionAtManagementGroup resource.
type PolicyDefinitionVersionAtManagementGroupArgs struct {
	// The policy definition description.
	Description pulumi.StringPtrInput
	// The display name of the policy definition.
	DisplayName pulumi.StringPtrInput
	// The name of the management group. The name is case insensitive.
	ManagementGroupName pulumi.StringInput
	// The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
	Metadata pulumi.Input
	// The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
	Mode pulumi.StringPtrInput
	// The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
	Parameters ParameterDefinitionsValueMapInput
	// The name of the policy definition.
	PolicyDefinitionName pulumi.StringInput
	// The policy definition version.  The format is x.y.z where x is the major version number, y is the minor version number, and z is the patch number
	PolicyDefinitionVersion pulumi.StringPtrInput
	// The policy rule.
	PolicyRule pulumi.Input
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
	PolicyType pulumi.StringPtrInput
	// The policy definition version in #.#.# format.
	Version pulumi.StringPtrInput
}

func (PolicyDefinitionVersionAtManagementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDefinitionVersionAtManagementGroupArgs)(nil)).Elem()
}

type PolicyDefinitionVersionAtManagementGroupInput interface {
	pulumi.Input

	ToPolicyDefinitionVersionAtManagementGroupOutput() PolicyDefinitionVersionAtManagementGroupOutput
	ToPolicyDefinitionVersionAtManagementGroupOutputWithContext(ctx context.Context) PolicyDefinitionVersionAtManagementGroupOutput
}

func (*PolicyDefinitionVersionAtManagementGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionVersionAtManagementGroup)(nil)).Elem()
}

func (i *PolicyDefinitionVersionAtManagementGroup) ToPolicyDefinitionVersionAtManagementGroupOutput() PolicyDefinitionVersionAtManagementGroupOutput {
	return i.ToPolicyDefinitionVersionAtManagementGroupOutputWithContext(context.Background())
}

func (i *PolicyDefinitionVersionAtManagementGroup) ToPolicyDefinitionVersionAtManagementGroupOutputWithContext(ctx context.Context) PolicyDefinitionVersionAtManagementGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionVersionAtManagementGroupOutput)
}

type PolicyDefinitionVersionAtManagementGroupOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionVersionAtManagementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionVersionAtManagementGroup)(nil)).Elem()
}

func (o PolicyDefinitionVersionAtManagementGroupOutput) ToPolicyDefinitionVersionAtManagementGroupOutput() PolicyDefinitionVersionAtManagementGroupOutput {
	return o
}

func (o PolicyDefinitionVersionAtManagementGroupOutput) ToPolicyDefinitionVersionAtManagementGroupOutputWithContext(ctx context.Context) PolicyDefinitionVersionAtManagementGroupOutput {
	return o
}

// The policy definition description.
func (o PolicyDefinitionVersionAtManagementGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the policy definition.
func (o PolicyDefinitionVersionAtManagementGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
func (o PolicyDefinitionVersionAtManagementGroupOutput) Metadata() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.AnyOutput { return v.Metadata }).(pulumi.AnyOutput)
}

// The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
func (o PolicyDefinitionVersionAtManagementGroupOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the policy definition version.
func (o PolicyDefinitionVersionAtManagementGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
func (o PolicyDefinitionVersionAtManagementGroupOutput) Parameters() ParameterDefinitionsValueResponseMapOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) ParameterDefinitionsValueResponseMapOutput {
		return v.Parameters
	}).(ParameterDefinitionsValueResponseMapOutput)
}

// The policy rule.
func (o PolicyDefinitionVersionAtManagementGroupOutput) PolicyRule() pulumi.AnyOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.AnyOutput { return v.PolicyRule }).(pulumi.AnyOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
func (o PolicyDefinitionVersionAtManagementGroupOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.StringPtrOutput { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// The system metadata relating to this resource.
func (o PolicyDefinitionVersionAtManagementGroupOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource (Microsoft.Authorization/policyDefinitions/versions).
func (o PolicyDefinitionVersionAtManagementGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The policy definition version in #.#.# format.
func (o PolicyDefinitionVersionAtManagementGroupOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionVersionAtManagementGroup) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyDefinitionVersionAtManagementGroupOutput{})
}
