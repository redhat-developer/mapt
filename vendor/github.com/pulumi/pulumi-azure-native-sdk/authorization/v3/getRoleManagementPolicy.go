// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the specified role management policy for a resource scope
//
// Uses Azure REST API version 2024-09-01-preview.
//
// Other available API versions: 2020-10-01, 2020-10-01-preview, 2024-02-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native authorization [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupRoleManagementPolicy(ctx *pulumi.Context, args *LookupRoleManagementPolicyArgs, opts ...pulumi.InvokeOption) (*LookupRoleManagementPolicyResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupRoleManagementPolicyResult
	err := ctx.Invoke("azure-native:authorization:getRoleManagementPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRoleManagementPolicyArgs struct {
	// The name (guid) of the role management policy to get.
	RoleManagementPolicyName string `pulumi:"roleManagementPolicyName"`
	// The scope of the role management policy.
	Scope string `pulumi:"scope"`
}

// Role management policy
type LookupRoleManagementPolicyResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The role management policy description.
	Description *string `pulumi:"description"`
	// The role management policy display name.
	DisplayName *string `pulumi:"displayName"`
	// The readonly computed rule applied to the policy.
	EffectiveRules []interface{} `pulumi:"effectiveRules"`
	// The role management policy Id.
	Id string `pulumi:"id"`
	// The role management policy is default policy.
	IsOrganizationDefault *bool `pulumi:"isOrganizationDefault"`
	// The name of the entity last modified it
	LastModifiedBy PrincipalResponse `pulumi:"lastModifiedBy"`
	// The last modified date time.
	LastModifiedDateTime string `pulumi:"lastModifiedDateTime"`
	// The role management policy name.
	Name string `pulumi:"name"`
	// Additional properties of scope
	PolicyProperties PolicyPropertiesResponse `pulumi:"policyProperties"`
	// The rule applied to the policy.
	Rules []interface{} `pulumi:"rules"`
	// The role management policy scope.
	Scope *string `pulumi:"scope"`
	// The role management policy type.
	Type string `pulumi:"type"`
}

func LookupRoleManagementPolicyOutput(ctx *pulumi.Context, args LookupRoleManagementPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupRoleManagementPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRoleManagementPolicyResultOutput, error) {
			args := v.(LookupRoleManagementPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:authorization:getRoleManagementPolicy", args, LookupRoleManagementPolicyResultOutput{}, options).(LookupRoleManagementPolicyResultOutput), nil
		}).(LookupRoleManagementPolicyResultOutput)
}

type LookupRoleManagementPolicyOutputArgs struct {
	// The name (guid) of the role management policy to get.
	RoleManagementPolicyName pulumi.StringInput `pulumi:"roleManagementPolicyName"`
	// The scope of the role management policy.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (LookupRoleManagementPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleManagementPolicyArgs)(nil)).Elem()
}

// Role management policy
type LookupRoleManagementPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupRoleManagementPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleManagementPolicyResult)(nil)).Elem()
}

func (o LookupRoleManagementPolicyResultOutput) ToLookupRoleManagementPolicyResultOutput() LookupRoleManagementPolicyResultOutput {
	return o
}

func (o LookupRoleManagementPolicyResultOutput) ToLookupRoleManagementPolicyResultOutputWithContext(ctx context.Context) LookupRoleManagementPolicyResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupRoleManagementPolicyResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The role management policy description.
func (o LookupRoleManagementPolicyResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The role management policy display name.
func (o LookupRoleManagementPolicyResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The readonly computed rule applied to the policy.
func (o LookupRoleManagementPolicyResultOutput) EffectiveRules() pulumi.ArrayOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) []interface{} { return v.EffectiveRules }).(pulumi.ArrayOutput)
}

// The role management policy Id.
func (o LookupRoleManagementPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The role management policy is default policy.
func (o LookupRoleManagementPolicyResultOutput) IsOrganizationDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) *bool { return v.IsOrganizationDefault }).(pulumi.BoolPtrOutput)
}

// The name of the entity last modified it
func (o LookupRoleManagementPolicyResultOutput) LastModifiedBy() PrincipalResponseOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) PrincipalResponse { return v.LastModifiedBy }).(PrincipalResponseOutput)
}

// The last modified date time.
func (o LookupRoleManagementPolicyResultOutput) LastModifiedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) string { return v.LastModifiedDateTime }).(pulumi.StringOutput)
}

// The role management policy name.
func (o LookupRoleManagementPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Additional properties of scope
func (o LookupRoleManagementPolicyResultOutput) PolicyProperties() PolicyPropertiesResponseOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) PolicyPropertiesResponse { return v.PolicyProperties }).(PolicyPropertiesResponseOutput)
}

// The rule applied to the policy.
func (o LookupRoleManagementPolicyResultOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// The role management policy scope.
func (o LookupRoleManagementPolicyResultOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The role management policy type.
func (o LookupRoleManagementPolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleManagementPolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoleManagementPolicyResultOutput{})
}
