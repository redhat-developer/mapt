// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a management lock at the resource group level.
//
// Uses Azure REST API version 2020-05-01.
func LookupManagementLockAtResourceGroupLevel(ctx *pulumi.Context, args *LookupManagementLockAtResourceGroupLevelArgs, opts ...pulumi.InvokeOption) (*LookupManagementLockAtResourceGroupLevelResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupManagementLockAtResourceGroupLevelResult
	err := ctx.Invoke("azure-native:authorization:getManagementLockAtResourceGroupLevel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagementLockAtResourceGroupLevelArgs struct {
	// The name of the lock to get.
	LockName string `pulumi:"lockName"`
	// The name of the locked resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The lock information.
type LookupManagementLockAtResourceGroupLevelResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The resource ID of the lock.
	Id string `pulumi:"id"`
	// The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.
	Level string `pulumi:"level"`
	// The name of the lock.
	Name string `pulumi:"name"`
	// Notes about the lock. Maximum of 512 characters.
	Notes *string `pulumi:"notes"`
	// The owners of the lock.
	Owners []ManagementLockOwnerResponse `pulumi:"owners"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The resource type of the lock - Microsoft.Authorization/locks.
	Type string `pulumi:"type"`
}

func LookupManagementLockAtResourceGroupLevelOutput(ctx *pulumi.Context, args LookupManagementLockAtResourceGroupLevelOutputArgs, opts ...pulumi.InvokeOption) LookupManagementLockAtResourceGroupLevelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupManagementLockAtResourceGroupLevelResultOutput, error) {
			args := v.(LookupManagementLockAtResourceGroupLevelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:authorization:getManagementLockAtResourceGroupLevel", args, LookupManagementLockAtResourceGroupLevelResultOutput{}, options).(LookupManagementLockAtResourceGroupLevelResultOutput), nil
		}).(LookupManagementLockAtResourceGroupLevelResultOutput)
}

type LookupManagementLockAtResourceGroupLevelOutputArgs struct {
	// The name of the lock to get.
	LockName pulumi.StringInput `pulumi:"lockName"`
	// The name of the locked resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupManagementLockAtResourceGroupLevelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementLockAtResourceGroupLevelArgs)(nil)).Elem()
}

// The lock information.
type LookupManagementLockAtResourceGroupLevelResultOutput struct{ *pulumi.OutputState }

func (LookupManagementLockAtResourceGroupLevelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementLockAtResourceGroupLevelResult)(nil)).Elem()
}

func (o LookupManagementLockAtResourceGroupLevelResultOutput) ToLookupManagementLockAtResourceGroupLevelResultOutput() LookupManagementLockAtResourceGroupLevelResultOutput {
	return o
}

func (o LookupManagementLockAtResourceGroupLevelResultOutput) ToLookupManagementLockAtResourceGroupLevelResultOutputWithContext(ctx context.Context) LookupManagementLockAtResourceGroupLevelResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The resource ID of the lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) string { return v.Id }).(pulumi.StringOutput)
}

// The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) string { return v.Level }).(pulumi.StringOutput)
}

// The name of the lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) string { return v.Name }).(pulumi.StringOutput)
}

// Notes about the lock. Maximum of 512 characters.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The owners of the lock.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Owners() ManagementLockOwnerResponseArrayOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) []ManagementLockOwnerResponse { return v.Owners }).(ManagementLockOwnerResponseArrayOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The resource type of the lock - Microsoft.Authorization/locks.
func (o LookupManagementLockAtResourceGroupLevelResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementLockAtResourceGroupLevelResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagementLockAtResourceGroupLevelResultOutput{})
}
