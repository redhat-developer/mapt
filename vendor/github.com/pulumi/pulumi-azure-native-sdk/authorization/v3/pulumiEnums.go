// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package authorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The recurrence type : weekly, monthly, etc.
type AccessReviewRecurrencePatternType string

const (
	AccessReviewRecurrencePatternTypeWeekly          = AccessReviewRecurrencePatternType("weekly")
	AccessReviewRecurrencePatternTypeAbsoluteMonthly = AccessReviewRecurrencePatternType("absoluteMonthly")
)

func (AccessReviewRecurrencePatternType) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewRecurrencePatternType)(nil)).Elem()
}

func (e AccessReviewRecurrencePatternType) ToAccessReviewRecurrencePatternTypeOutput() AccessReviewRecurrencePatternTypeOutput {
	return pulumi.ToOutput(e).(AccessReviewRecurrencePatternTypeOutput)
}

func (e AccessReviewRecurrencePatternType) ToAccessReviewRecurrencePatternTypeOutputWithContext(ctx context.Context) AccessReviewRecurrencePatternTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessReviewRecurrencePatternTypeOutput)
}

func (e AccessReviewRecurrencePatternType) ToAccessReviewRecurrencePatternTypePtrOutput() AccessReviewRecurrencePatternTypePtrOutput {
	return e.ToAccessReviewRecurrencePatternTypePtrOutputWithContext(context.Background())
}

func (e AccessReviewRecurrencePatternType) ToAccessReviewRecurrencePatternTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrencePatternTypePtrOutput {
	return AccessReviewRecurrencePatternType(e).ToAccessReviewRecurrencePatternTypeOutputWithContext(ctx).ToAccessReviewRecurrencePatternTypePtrOutputWithContext(ctx)
}

func (e AccessReviewRecurrencePatternType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessReviewRecurrencePatternType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessReviewRecurrencePatternType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessReviewRecurrencePatternType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessReviewRecurrencePatternTypeOutput struct{ *pulumi.OutputState }

func (AccessReviewRecurrencePatternTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewRecurrencePatternType)(nil)).Elem()
}

func (o AccessReviewRecurrencePatternTypeOutput) ToAccessReviewRecurrencePatternTypeOutput() AccessReviewRecurrencePatternTypeOutput {
	return o
}

func (o AccessReviewRecurrencePatternTypeOutput) ToAccessReviewRecurrencePatternTypeOutputWithContext(ctx context.Context) AccessReviewRecurrencePatternTypeOutput {
	return o
}

func (o AccessReviewRecurrencePatternTypeOutput) ToAccessReviewRecurrencePatternTypePtrOutput() AccessReviewRecurrencePatternTypePtrOutput {
	return o.ToAccessReviewRecurrencePatternTypePtrOutputWithContext(context.Background())
}

func (o AccessReviewRecurrencePatternTypeOutput) ToAccessReviewRecurrencePatternTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrencePatternTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessReviewRecurrencePatternType) *AccessReviewRecurrencePatternType {
		return &v
	}).(AccessReviewRecurrencePatternTypePtrOutput)
}

func (o AccessReviewRecurrencePatternTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessReviewRecurrencePatternTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessReviewRecurrencePatternType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessReviewRecurrencePatternTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessReviewRecurrencePatternTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessReviewRecurrencePatternType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessReviewRecurrencePatternTypePtrOutput struct{ *pulumi.OutputState }

func (AccessReviewRecurrencePatternTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessReviewRecurrencePatternType)(nil)).Elem()
}

func (o AccessReviewRecurrencePatternTypePtrOutput) ToAccessReviewRecurrencePatternTypePtrOutput() AccessReviewRecurrencePatternTypePtrOutput {
	return o
}

func (o AccessReviewRecurrencePatternTypePtrOutput) ToAccessReviewRecurrencePatternTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrencePatternTypePtrOutput {
	return o
}

func (o AccessReviewRecurrencePatternTypePtrOutput) Elem() AccessReviewRecurrencePatternTypeOutput {
	return o.ApplyT(func(v *AccessReviewRecurrencePatternType) AccessReviewRecurrencePatternType {
		if v != nil {
			return *v
		}
		var ret AccessReviewRecurrencePatternType
		return ret
	}).(AccessReviewRecurrencePatternTypeOutput)
}

func (o AccessReviewRecurrencePatternTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessReviewRecurrencePatternTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessReviewRecurrencePatternType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessReviewRecurrencePatternTypeInput is an input type that accepts values of the AccessReviewRecurrencePatternType enum
// A concrete instance of `AccessReviewRecurrencePatternTypeInput` can be one of the following:
//
//	AccessReviewRecurrencePatternTypeWeekly
//	AccessReviewRecurrencePatternTypeAbsoluteMonthly
type AccessReviewRecurrencePatternTypeInput interface {
	pulumi.Input

	ToAccessReviewRecurrencePatternTypeOutput() AccessReviewRecurrencePatternTypeOutput
	ToAccessReviewRecurrencePatternTypeOutputWithContext(context.Context) AccessReviewRecurrencePatternTypeOutput
}

var accessReviewRecurrencePatternTypePtrType = reflect.TypeOf((**AccessReviewRecurrencePatternType)(nil)).Elem()

type AccessReviewRecurrencePatternTypePtrInput interface {
	pulumi.Input

	ToAccessReviewRecurrencePatternTypePtrOutput() AccessReviewRecurrencePatternTypePtrOutput
	ToAccessReviewRecurrencePatternTypePtrOutputWithContext(context.Context) AccessReviewRecurrencePatternTypePtrOutput
}

type accessReviewRecurrencePatternTypePtr string

func AccessReviewRecurrencePatternTypePtr(v string) AccessReviewRecurrencePatternTypePtrInput {
	return (*accessReviewRecurrencePatternTypePtr)(&v)
}

func (*accessReviewRecurrencePatternTypePtr) ElementType() reflect.Type {
	return accessReviewRecurrencePatternTypePtrType
}

func (in *accessReviewRecurrencePatternTypePtr) ToAccessReviewRecurrencePatternTypePtrOutput() AccessReviewRecurrencePatternTypePtrOutput {
	return pulumi.ToOutput(in).(AccessReviewRecurrencePatternTypePtrOutput)
}

func (in *accessReviewRecurrencePatternTypePtr) ToAccessReviewRecurrencePatternTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrencePatternTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessReviewRecurrencePatternTypePtrOutput)
}

// The recurrence range type. The possible values are: endDate, noEnd, numbered.
type AccessReviewRecurrenceRangeType string

const (
	AccessReviewRecurrenceRangeTypeEndDate  = AccessReviewRecurrenceRangeType("endDate")
	AccessReviewRecurrenceRangeTypeNoEnd    = AccessReviewRecurrenceRangeType("noEnd")
	AccessReviewRecurrenceRangeTypeNumbered = AccessReviewRecurrenceRangeType("numbered")
)

func (AccessReviewRecurrenceRangeType) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewRecurrenceRangeType)(nil)).Elem()
}

func (e AccessReviewRecurrenceRangeType) ToAccessReviewRecurrenceRangeTypeOutput() AccessReviewRecurrenceRangeTypeOutput {
	return pulumi.ToOutput(e).(AccessReviewRecurrenceRangeTypeOutput)
}

func (e AccessReviewRecurrenceRangeType) ToAccessReviewRecurrenceRangeTypeOutputWithContext(ctx context.Context) AccessReviewRecurrenceRangeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessReviewRecurrenceRangeTypeOutput)
}

func (e AccessReviewRecurrenceRangeType) ToAccessReviewRecurrenceRangeTypePtrOutput() AccessReviewRecurrenceRangeTypePtrOutput {
	return e.ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(context.Background())
}

func (e AccessReviewRecurrenceRangeType) ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrenceRangeTypePtrOutput {
	return AccessReviewRecurrenceRangeType(e).ToAccessReviewRecurrenceRangeTypeOutputWithContext(ctx).ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(ctx)
}

func (e AccessReviewRecurrenceRangeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessReviewRecurrenceRangeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessReviewRecurrenceRangeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessReviewRecurrenceRangeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessReviewRecurrenceRangeTypeOutput struct{ *pulumi.OutputState }

func (AccessReviewRecurrenceRangeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewRecurrenceRangeType)(nil)).Elem()
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToAccessReviewRecurrenceRangeTypeOutput() AccessReviewRecurrenceRangeTypeOutput {
	return o
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToAccessReviewRecurrenceRangeTypeOutputWithContext(ctx context.Context) AccessReviewRecurrenceRangeTypeOutput {
	return o
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToAccessReviewRecurrenceRangeTypePtrOutput() AccessReviewRecurrenceRangeTypePtrOutput {
	return o.ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(context.Background())
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrenceRangeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessReviewRecurrenceRangeType) *AccessReviewRecurrenceRangeType {
		return &v
	}).(AccessReviewRecurrenceRangeTypePtrOutput)
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessReviewRecurrenceRangeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessReviewRecurrenceRangeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessReviewRecurrenceRangeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessReviewRecurrenceRangeTypePtrOutput struct{ *pulumi.OutputState }

func (AccessReviewRecurrenceRangeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessReviewRecurrenceRangeType)(nil)).Elem()
}

func (o AccessReviewRecurrenceRangeTypePtrOutput) ToAccessReviewRecurrenceRangeTypePtrOutput() AccessReviewRecurrenceRangeTypePtrOutput {
	return o
}

func (o AccessReviewRecurrenceRangeTypePtrOutput) ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrenceRangeTypePtrOutput {
	return o
}

func (o AccessReviewRecurrenceRangeTypePtrOutput) Elem() AccessReviewRecurrenceRangeTypeOutput {
	return o.ApplyT(func(v *AccessReviewRecurrenceRangeType) AccessReviewRecurrenceRangeType {
		if v != nil {
			return *v
		}
		var ret AccessReviewRecurrenceRangeType
		return ret
	}).(AccessReviewRecurrenceRangeTypeOutput)
}

func (o AccessReviewRecurrenceRangeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessReviewRecurrenceRangeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessReviewRecurrenceRangeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessReviewRecurrenceRangeTypeInput is an input type that accepts values of the AccessReviewRecurrenceRangeType enum
// A concrete instance of `AccessReviewRecurrenceRangeTypeInput` can be one of the following:
//
//	AccessReviewRecurrenceRangeTypeEndDate
//	AccessReviewRecurrenceRangeTypeNoEnd
//	AccessReviewRecurrenceRangeTypeNumbered
type AccessReviewRecurrenceRangeTypeInput interface {
	pulumi.Input

	ToAccessReviewRecurrenceRangeTypeOutput() AccessReviewRecurrenceRangeTypeOutput
	ToAccessReviewRecurrenceRangeTypeOutputWithContext(context.Context) AccessReviewRecurrenceRangeTypeOutput
}

var accessReviewRecurrenceRangeTypePtrType = reflect.TypeOf((**AccessReviewRecurrenceRangeType)(nil)).Elem()

type AccessReviewRecurrenceRangeTypePtrInput interface {
	pulumi.Input

	ToAccessReviewRecurrenceRangeTypePtrOutput() AccessReviewRecurrenceRangeTypePtrOutput
	ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(context.Context) AccessReviewRecurrenceRangeTypePtrOutput
}

type accessReviewRecurrenceRangeTypePtr string

func AccessReviewRecurrenceRangeTypePtr(v string) AccessReviewRecurrenceRangeTypePtrInput {
	return (*accessReviewRecurrenceRangeTypePtr)(&v)
}

func (*accessReviewRecurrenceRangeTypePtr) ElementType() reflect.Type {
	return accessReviewRecurrenceRangeTypePtrType
}

func (in *accessReviewRecurrenceRangeTypePtr) ToAccessReviewRecurrenceRangeTypePtrOutput() AccessReviewRecurrenceRangeTypePtrOutput {
	return pulumi.ToOutput(in).(AccessReviewRecurrenceRangeTypePtrOutput)
}

func (in *accessReviewRecurrenceRangeTypePtr) ToAccessReviewRecurrenceRangeTypePtrOutputWithContext(ctx context.Context) AccessReviewRecurrenceRangeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessReviewRecurrenceRangeTypePtrOutput)
}

// Represents a reviewer's decision for a given review
type AccessReviewResult string

const (
	AccessReviewResultApprove     = AccessReviewResult("Approve")
	AccessReviewResultDeny        = AccessReviewResult("Deny")
	AccessReviewResultNotReviewed = AccessReviewResult("NotReviewed")
	AccessReviewResultDontKnow    = AccessReviewResult("DontKnow")
	AccessReviewResultNotNotified = AccessReviewResult("NotNotified")
)

func (AccessReviewResult) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewResult)(nil)).Elem()
}

func (e AccessReviewResult) ToAccessReviewResultOutput() AccessReviewResultOutput {
	return pulumi.ToOutput(e).(AccessReviewResultOutput)
}

func (e AccessReviewResult) ToAccessReviewResultOutputWithContext(ctx context.Context) AccessReviewResultOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessReviewResultOutput)
}

func (e AccessReviewResult) ToAccessReviewResultPtrOutput() AccessReviewResultPtrOutput {
	return e.ToAccessReviewResultPtrOutputWithContext(context.Background())
}

func (e AccessReviewResult) ToAccessReviewResultPtrOutputWithContext(ctx context.Context) AccessReviewResultPtrOutput {
	return AccessReviewResult(e).ToAccessReviewResultOutputWithContext(ctx).ToAccessReviewResultPtrOutputWithContext(ctx)
}

func (e AccessReviewResult) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessReviewResult) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessReviewResult) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessReviewResult) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessReviewResultOutput struct{ *pulumi.OutputState }

func (AccessReviewResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessReviewResult)(nil)).Elem()
}

func (o AccessReviewResultOutput) ToAccessReviewResultOutput() AccessReviewResultOutput {
	return o
}

func (o AccessReviewResultOutput) ToAccessReviewResultOutputWithContext(ctx context.Context) AccessReviewResultOutput {
	return o
}

func (o AccessReviewResultOutput) ToAccessReviewResultPtrOutput() AccessReviewResultPtrOutput {
	return o.ToAccessReviewResultPtrOutputWithContext(context.Background())
}

func (o AccessReviewResultOutput) ToAccessReviewResultPtrOutputWithContext(ctx context.Context) AccessReviewResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessReviewResult) *AccessReviewResult {
		return &v
	}).(AccessReviewResultPtrOutput)
}

func (o AccessReviewResultOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessReviewResultOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessReviewResult) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessReviewResultOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessReviewResultOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessReviewResult) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessReviewResultPtrOutput struct{ *pulumi.OutputState }

func (AccessReviewResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessReviewResult)(nil)).Elem()
}

func (o AccessReviewResultPtrOutput) ToAccessReviewResultPtrOutput() AccessReviewResultPtrOutput {
	return o
}

func (o AccessReviewResultPtrOutput) ToAccessReviewResultPtrOutputWithContext(ctx context.Context) AccessReviewResultPtrOutput {
	return o
}

func (o AccessReviewResultPtrOutput) Elem() AccessReviewResultOutput {
	return o.ApplyT(func(v *AccessReviewResult) AccessReviewResult {
		if v != nil {
			return *v
		}
		var ret AccessReviewResult
		return ret
	}).(AccessReviewResultOutput)
}

func (o AccessReviewResultPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessReviewResultPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessReviewResult) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessReviewResultInput is an input type that accepts values of the AccessReviewResult enum
// A concrete instance of `AccessReviewResultInput` can be one of the following:
//
//	AccessReviewResultApprove
//	AccessReviewResultDeny
//	AccessReviewResultNotReviewed
//	AccessReviewResultDontKnow
//	AccessReviewResultNotNotified
type AccessReviewResultInput interface {
	pulumi.Input

	ToAccessReviewResultOutput() AccessReviewResultOutput
	ToAccessReviewResultOutputWithContext(context.Context) AccessReviewResultOutput
}

var accessReviewResultPtrType = reflect.TypeOf((**AccessReviewResult)(nil)).Elem()

type AccessReviewResultPtrInput interface {
	pulumi.Input

	ToAccessReviewResultPtrOutput() AccessReviewResultPtrOutput
	ToAccessReviewResultPtrOutputWithContext(context.Context) AccessReviewResultPtrOutput
}

type accessReviewResultPtr string

func AccessReviewResultPtr(v string) AccessReviewResultPtrInput {
	return (*accessReviewResultPtr)(&v)
}

func (*accessReviewResultPtr) ElementType() reflect.Type {
	return accessReviewResultPtrType
}

func (in *accessReviewResultPtr) ToAccessReviewResultPtrOutput() AccessReviewResultPtrOutput {
	return pulumi.ToOutput(in).(AccessReviewResultPtrOutput)
}

func (in *accessReviewResultPtr) ToAccessReviewResultPtrOutputWithContext(ctx context.Context) AccessReviewResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessReviewResultPtrOutput)
}

// The type of rule
type ApprovalMode string

const (
	ApprovalModeSingleStage = ApprovalMode("SingleStage")
	ApprovalModeSerial      = ApprovalMode("Serial")
	ApprovalModeParallel    = ApprovalMode("Parallel")
	ApprovalModeNoApproval  = ApprovalMode("NoApproval")
)

func (ApprovalMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalMode)(nil)).Elem()
}

func (e ApprovalMode) ToApprovalModeOutput() ApprovalModeOutput {
	return pulumi.ToOutput(e).(ApprovalModeOutput)
}

func (e ApprovalMode) ToApprovalModeOutputWithContext(ctx context.Context) ApprovalModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApprovalModeOutput)
}

func (e ApprovalMode) ToApprovalModePtrOutput() ApprovalModePtrOutput {
	return e.ToApprovalModePtrOutputWithContext(context.Background())
}

func (e ApprovalMode) ToApprovalModePtrOutputWithContext(ctx context.Context) ApprovalModePtrOutput {
	return ApprovalMode(e).ToApprovalModeOutputWithContext(ctx).ToApprovalModePtrOutputWithContext(ctx)
}

func (e ApprovalMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApprovalMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApprovalMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApprovalMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApprovalModeOutput struct{ *pulumi.OutputState }

func (ApprovalModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalMode)(nil)).Elem()
}

func (o ApprovalModeOutput) ToApprovalModeOutput() ApprovalModeOutput {
	return o
}

func (o ApprovalModeOutput) ToApprovalModeOutputWithContext(ctx context.Context) ApprovalModeOutput {
	return o
}

func (o ApprovalModeOutput) ToApprovalModePtrOutput() ApprovalModePtrOutput {
	return o.ToApprovalModePtrOutputWithContext(context.Background())
}

func (o ApprovalModeOutput) ToApprovalModePtrOutputWithContext(ctx context.Context) ApprovalModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApprovalMode) *ApprovalMode {
		return &v
	}).(ApprovalModePtrOutput)
}

func (o ApprovalModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApprovalModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApprovalMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApprovalModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApprovalModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApprovalMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApprovalModePtrOutput struct{ *pulumi.OutputState }

func (ApprovalModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApprovalMode)(nil)).Elem()
}

func (o ApprovalModePtrOutput) ToApprovalModePtrOutput() ApprovalModePtrOutput {
	return o
}

func (o ApprovalModePtrOutput) ToApprovalModePtrOutputWithContext(ctx context.Context) ApprovalModePtrOutput {
	return o
}

func (o ApprovalModePtrOutput) Elem() ApprovalModeOutput {
	return o.ApplyT(func(v *ApprovalMode) ApprovalMode {
		if v != nil {
			return *v
		}
		var ret ApprovalMode
		return ret
	}).(ApprovalModeOutput)
}

func (o ApprovalModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApprovalModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApprovalMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApprovalModeInput is an input type that accepts values of the ApprovalMode enum
// A concrete instance of `ApprovalModeInput` can be one of the following:
//
//	ApprovalModeSingleStage
//	ApprovalModeSerial
//	ApprovalModeParallel
//	ApprovalModeNoApproval
type ApprovalModeInput interface {
	pulumi.Input

	ToApprovalModeOutput() ApprovalModeOutput
	ToApprovalModeOutputWithContext(context.Context) ApprovalModeOutput
}

var approvalModePtrType = reflect.TypeOf((**ApprovalMode)(nil)).Elem()

type ApprovalModePtrInput interface {
	pulumi.Input

	ToApprovalModePtrOutput() ApprovalModePtrOutput
	ToApprovalModePtrOutputWithContext(context.Context) ApprovalModePtrOutput
}

type approvalModePtr string

func ApprovalModePtr(v string) ApprovalModePtrInput {
	return (*approvalModePtr)(&v)
}

func (*approvalModePtr) ElementType() reflect.Type {
	return approvalModePtrType
}

func (in *approvalModePtr) ToApprovalModePtrOutput() ApprovalModePtrOutput {
	return pulumi.ToOutput(in).(ApprovalModePtrOutput)
}

func (in *approvalModePtr) ToApprovalModePtrOutputWithContext(ctx context.Context) ApprovalModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApprovalModePtrOutput)
}

// The option whether validate the exemption is at or under the assignment scope.
type AssignmentScopeValidation string

const (
	// This option will validate the exemption is at or under the assignment scope.
	AssignmentScopeValidationDefault = AssignmentScopeValidation("Default")
	// This option will bypass the validation the exemption scope is at or under the policy assignment scope.
	AssignmentScopeValidationDoNotValidate = AssignmentScopeValidation("DoNotValidate")
)

func (AssignmentScopeValidation) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentScopeValidation)(nil)).Elem()
}

func (e AssignmentScopeValidation) ToAssignmentScopeValidationOutput() AssignmentScopeValidationOutput {
	return pulumi.ToOutput(e).(AssignmentScopeValidationOutput)
}

func (e AssignmentScopeValidation) ToAssignmentScopeValidationOutputWithContext(ctx context.Context) AssignmentScopeValidationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssignmentScopeValidationOutput)
}

func (e AssignmentScopeValidation) ToAssignmentScopeValidationPtrOutput() AssignmentScopeValidationPtrOutput {
	return e.ToAssignmentScopeValidationPtrOutputWithContext(context.Background())
}

func (e AssignmentScopeValidation) ToAssignmentScopeValidationPtrOutputWithContext(ctx context.Context) AssignmentScopeValidationPtrOutput {
	return AssignmentScopeValidation(e).ToAssignmentScopeValidationOutputWithContext(ctx).ToAssignmentScopeValidationPtrOutputWithContext(ctx)
}

func (e AssignmentScopeValidation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssignmentScopeValidation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssignmentScopeValidation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssignmentScopeValidation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssignmentScopeValidationOutput struct{ *pulumi.OutputState }

func (AssignmentScopeValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentScopeValidation)(nil)).Elem()
}

func (o AssignmentScopeValidationOutput) ToAssignmentScopeValidationOutput() AssignmentScopeValidationOutput {
	return o
}

func (o AssignmentScopeValidationOutput) ToAssignmentScopeValidationOutputWithContext(ctx context.Context) AssignmentScopeValidationOutput {
	return o
}

func (o AssignmentScopeValidationOutput) ToAssignmentScopeValidationPtrOutput() AssignmentScopeValidationPtrOutput {
	return o.ToAssignmentScopeValidationPtrOutputWithContext(context.Background())
}

func (o AssignmentScopeValidationOutput) ToAssignmentScopeValidationPtrOutputWithContext(ctx context.Context) AssignmentScopeValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssignmentScopeValidation) *AssignmentScopeValidation {
		return &v
	}).(AssignmentScopeValidationPtrOutput)
}

func (o AssignmentScopeValidationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssignmentScopeValidationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssignmentScopeValidation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssignmentScopeValidationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssignmentScopeValidationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssignmentScopeValidation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssignmentScopeValidationPtrOutput struct{ *pulumi.OutputState }

func (AssignmentScopeValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentScopeValidation)(nil)).Elem()
}

func (o AssignmentScopeValidationPtrOutput) ToAssignmentScopeValidationPtrOutput() AssignmentScopeValidationPtrOutput {
	return o
}

func (o AssignmentScopeValidationPtrOutput) ToAssignmentScopeValidationPtrOutputWithContext(ctx context.Context) AssignmentScopeValidationPtrOutput {
	return o
}

func (o AssignmentScopeValidationPtrOutput) Elem() AssignmentScopeValidationOutput {
	return o.ApplyT(func(v *AssignmentScopeValidation) AssignmentScopeValidation {
		if v != nil {
			return *v
		}
		var ret AssignmentScopeValidation
		return ret
	}).(AssignmentScopeValidationOutput)
}

func (o AssignmentScopeValidationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssignmentScopeValidationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssignmentScopeValidation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssignmentScopeValidationInput is an input type that accepts values of the AssignmentScopeValidation enum
// A concrete instance of `AssignmentScopeValidationInput` can be one of the following:
//
//	AssignmentScopeValidationDefault
//	AssignmentScopeValidationDoNotValidate
type AssignmentScopeValidationInput interface {
	pulumi.Input

	ToAssignmentScopeValidationOutput() AssignmentScopeValidationOutput
	ToAssignmentScopeValidationOutputWithContext(context.Context) AssignmentScopeValidationOutput
}

var assignmentScopeValidationPtrType = reflect.TypeOf((**AssignmentScopeValidation)(nil)).Elem()

type AssignmentScopeValidationPtrInput interface {
	pulumi.Input

	ToAssignmentScopeValidationPtrOutput() AssignmentScopeValidationPtrOutput
	ToAssignmentScopeValidationPtrOutputWithContext(context.Context) AssignmentScopeValidationPtrOutput
}

type assignmentScopeValidationPtr string

func AssignmentScopeValidationPtr(v string) AssignmentScopeValidationPtrInput {
	return (*assignmentScopeValidationPtr)(&v)
}

func (*assignmentScopeValidationPtr) ElementType() reflect.Type {
	return assignmentScopeValidationPtrType
}

func (in *assignmentScopeValidationPtr) ToAssignmentScopeValidationPtrOutput() AssignmentScopeValidationPtrOutput {
	return pulumi.ToOutput(in).(AssignmentScopeValidationPtrOutput)
}

func (in *assignmentScopeValidationPtr) ToAssignmentScopeValidationPtrOutputWithContext(ctx context.Context) AssignmentScopeValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssignmentScopeValidationPtrOutput)
}

// The type of policy assignment. Possible values are NotSpecified, System, SystemHidden, and Custom. Immutable.
type AssignmentType string

const (
	AssignmentTypeNotSpecified = AssignmentType("NotSpecified")
	AssignmentTypeSystem       = AssignmentType("System")
	AssignmentTypeSystemHidden = AssignmentType("SystemHidden")
	AssignmentTypeCustom       = AssignmentType("Custom")
)

func (AssignmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentType)(nil)).Elem()
}

func (e AssignmentType) ToAssignmentTypeOutput() AssignmentTypeOutput {
	return pulumi.ToOutput(e).(AssignmentTypeOutput)
}

func (e AssignmentType) ToAssignmentTypeOutputWithContext(ctx context.Context) AssignmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssignmentTypeOutput)
}

func (e AssignmentType) ToAssignmentTypePtrOutput() AssignmentTypePtrOutput {
	return e.ToAssignmentTypePtrOutputWithContext(context.Background())
}

func (e AssignmentType) ToAssignmentTypePtrOutputWithContext(ctx context.Context) AssignmentTypePtrOutput {
	return AssignmentType(e).ToAssignmentTypeOutputWithContext(ctx).ToAssignmentTypePtrOutputWithContext(ctx)
}

func (e AssignmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssignmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssignmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssignmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssignmentTypeOutput struct{ *pulumi.OutputState }

func (AssignmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentType)(nil)).Elem()
}

func (o AssignmentTypeOutput) ToAssignmentTypeOutput() AssignmentTypeOutput {
	return o
}

func (o AssignmentTypeOutput) ToAssignmentTypeOutputWithContext(ctx context.Context) AssignmentTypeOutput {
	return o
}

func (o AssignmentTypeOutput) ToAssignmentTypePtrOutput() AssignmentTypePtrOutput {
	return o.ToAssignmentTypePtrOutputWithContext(context.Background())
}

func (o AssignmentTypeOutput) ToAssignmentTypePtrOutputWithContext(ctx context.Context) AssignmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssignmentType) *AssignmentType {
		return &v
	}).(AssignmentTypePtrOutput)
}

func (o AssignmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssignmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssignmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssignmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssignmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssignmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssignmentTypePtrOutput struct{ *pulumi.OutputState }

func (AssignmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentType)(nil)).Elem()
}

func (o AssignmentTypePtrOutput) ToAssignmentTypePtrOutput() AssignmentTypePtrOutput {
	return o
}

func (o AssignmentTypePtrOutput) ToAssignmentTypePtrOutputWithContext(ctx context.Context) AssignmentTypePtrOutput {
	return o
}

func (o AssignmentTypePtrOutput) Elem() AssignmentTypeOutput {
	return o.ApplyT(func(v *AssignmentType) AssignmentType {
		if v != nil {
			return *v
		}
		var ret AssignmentType
		return ret
	}).(AssignmentTypeOutput)
}

func (o AssignmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssignmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssignmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssignmentTypeInput is an input type that accepts values of the AssignmentType enum
// A concrete instance of `AssignmentTypeInput` can be one of the following:
//
//	AssignmentTypeNotSpecified
//	AssignmentTypeSystem
//	AssignmentTypeSystemHidden
//	AssignmentTypeCustom
type AssignmentTypeInput interface {
	pulumi.Input

	ToAssignmentTypeOutput() AssignmentTypeOutput
	ToAssignmentTypeOutputWithContext(context.Context) AssignmentTypeOutput
}

var assignmentTypePtrType = reflect.TypeOf((**AssignmentType)(nil)).Elem()

type AssignmentTypePtrInput interface {
	pulumi.Input

	ToAssignmentTypePtrOutput() AssignmentTypePtrOutput
	ToAssignmentTypePtrOutputWithContext(context.Context) AssignmentTypePtrOutput
}

type assignmentTypePtr string

func AssignmentTypePtr(v string) AssignmentTypePtrInput {
	return (*assignmentTypePtr)(&v)
}

func (*assignmentTypePtr) ElementType() reflect.Type {
	return assignmentTypePtrType
}

func (in *assignmentTypePtr) ToAssignmentTypePtrOutput() AssignmentTypePtrOutput {
	return pulumi.ToOutput(in).(AssignmentTypePtrOutput)
}

func (in *assignmentTypePtr) ToAssignmentTypePtrOutputWithContext(ctx context.Context) AssignmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssignmentTypePtrOutput)
}

// This specifies the behavior for the autoReview feature when an access review completes.
type DefaultDecisionType string

const (
	DefaultDecisionTypeApprove        = DefaultDecisionType("Approve")
	DefaultDecisionTypeDeny           = DefaultDecisionType("Deny")
	DefaultDecisionTypeRecommendation = DefaultDecisionType("Recommendation")
)

func (DefaultDecisionType) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultDecisionType)(nil)).Elem()
}

func (e DefaultDecisionType) ToDefaultDecisionTypeOutput() DefaultDecisionTypeOutput {
	return pulumi.ToOutput(e).(DefaultDecisionTypeOutput)
}

func (e DefaultDecisionType) ToDefaultDecisionTypeOutputWithContext(ctx context.Context) DefaultDecisionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DefaultDecisionTypeOutput)
}

func (e DefaultDecisionType) ToDefaultDecisionTypePtrOutput() DefaultDecisionTypePtrOutput {
	return e.ToDefaultDecisionTypePtrOutputWithContext(context.Background())
}

func (e DefaultDecisionType) ToDefaultDecisionTypePtrOutputWithContext(ctx context.Context) DefaultDecisionTypePtrOutput {
	return DefaultDecisionType(e).ToDefaultDecisionTypeOutputWithContext(ctx).ToDefaultDecisionTypePtrOutputWithContext(ctx)
}

func (e DefaultDecisionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultDecisionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultDecisionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DefaultDecisionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DefaultDecisionTypeOutput struct{ *pulumi.OutputState }

func (DefaultDecisionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultDecisionType)(nil)).Elem()
}

func (o DefaultDecisionTypeOutput) ToDefaultDecisionTypeOutput() DefaultDecisionTypeOutput {
	return o
}

func (o DefaultDecisionTypeOutput) ToDefaultDecisionTypeOutputWithContext(ctx context.Context) DefaultDecisionTypeOutput {
	return o
}

func (o DefaultDecisionTypeOutput) ToDefaultDecisionTypePtrOutput() DefaultDecisionTypePtrOutput {
	return o.ToDefaultDecisionTypePtrOutputWithContext(context.Background())
}

func (o DefaultDecisionTypeOutput) ToDefaultDecisionTypePtrOutputWithContext(ctx context.Context) DefaultDecisionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DefaultDecisionType) *DefaultDecisionType {
		return &v
	}).(DefaultDecisionTypePtrOutput)
}

func (o DefaultDecisionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DefaultDecisionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultDecisionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DefaultDecisionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultDecisionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultDecisionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DefaultDecisionTypePtrOutput struct{ *pulumi.OutputState }

func (DefaultDecisionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultDecisionType)(nil)).Elem()
}

func (o DefaultDecisionTypePtrOutput) ToDefaultDecisionTypePtrOutput() DefaultDecisionTypePtrOutput {
	return o
}

func (o DefaultDecisionTypePtrOutput) ToDefaultDecisionTypePtrOutputWithContext(ctx context.Context) DefaultDecisionTypePtrOutput {
	return o
}

func (o DefaultDecisionTypePtrOutput) Elem() DefaultDecisionTypeOutput {
	return o.ApplyT(func(v *DefaultDecisionType) DefaultDecisionType {
		if v != nil {
			return *v
		}
		var ret DefaultDecisionType
		return ret
	}).(DefaultDecisionTypeOutput)
}

func (o DefaultDecisionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultDecisionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DefaultDecisionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DefaultDecisionTypeInput is an input type that accepts values of the DefaultDecisionType enum
// A concrete instance of `DefaultDecisionTypeInput` can be one of the following:
//
//	DefaultDecisionTypeApprove
//	DefaultDecisionTypeDeny
//	DefaultDecisionTypeRecommendation
type DefaultDecisionTypeInput interface {
	pulumi.Input

	ToDefaultDecisionTypeOutput() DefaultDecisionTypeOutput
	ToDefaultDecisionTypeOutputWithContext(context.Context) DefaultDecisionTypeOutput
}

var defaultDecisionTypePtrType = reflect.TypeOf((**DefaultDecisionType)(nil)).Elem()

type DefaultDecisionTypePtrInput interface {
	pulumi.Input

	ToDefaultDecisionTypePtrOutput() DefaultDecisionTypePtrOutput
	ToDefaultDecisionTypePtrOutputWithContext(context.Context) DefaultDecisionTypePtrOutput
}

type defaultDecisionTypePtr string

func DefaultDecisionTypePtr(v string) DefaultDecisionTypePtrInput {
	return (*defaultDecisionTypePtr)(&v)
}

func (*defaultDecisionTypePtr) ElementType() reflect.Type {
	return defaultDecisionTypePtrType
}

func (in *defaultDecisionTypePtr) ToDefaultDecisionTypePtrOutput() DefaultDecisionTypePtrOutput {
	return pulumi.ToOutput(in).(DefaultDecisionTypePtrOutput)
}

func (in *defaultDecisionTypePtr) ToDefaultDecisionTypePtrOutputWithContext(ctx context.Context) DefaultDecisionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DefaultDecisionTypePtrOutput)
}

// The type of enablement rule
type EnablementRules string

const (
	EnablementRulesMultiFactorAuthentication = EnablementRules("MultiFactorAuthentication")
	EnablementRulesJustification             = EnablementRules("Justification")
	EnablementRulesTicketing                 = EnablementRules("Ticketing")
)

func (EnablementRules) ElementType() reflect.Type {
	return reflect.TypeOf((*EnablementRules)(nil)).Elem()
}

func (e EnablementRules) ToEnablementRulesOutput() EnablementRulesOutput {
	return pulumi.ToOutput(e).(EnablementRulesOutput)
}

func (e EnablementRules) ToEnablementRulesOutputWithContext(ctx context.Context) EnablementRulesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnablementRulesOutput)
}

func (e EnablementRules) ToEnablementRulesPtrOutput() EnablementRulesPtrOutput {
	return e.ToEnablementRulesPtrOutputWithContext(context.Background())
}

func (e EnablementRules) ToEnablementRulesPtrOutputWithContext(ctx context.Context) EnablementRulesPtrOutput {
	return EnablementRules(e).ToEnablementRulesOutputWithContext(ctx).ToEnablementRulesPtrOutputWithContext(ctx)
}

func (e EnablementRules) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnablementRules) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnablementRules) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnablementRules) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnablementRulesOutput struct{ *pulumi.OutputState }

func (EnablementRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnablementRules)(nil)).Elem()
}

func (o EnablementRulesOutput) ToEnablementRulesOutput() EnablementRulesOutput {
	return o
}

func (o EnablementRulesOutput) ToEnablementRulesOutputWithContext(ctx context.Context) EnablementRulesOutput {
	return o
}

func (o EnablementRulesOutput) ToEnablementRulesPtrOutput() EnablementRulesPtrOutput {
	return o.ToEnablementRulesPtrOutputWithContext(context.Background())
}

func (o EnablementRulesOutput) ToEnablementRulesPtrOutputWithContext(ctx context.Context) EnablementRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnablementRules) *EnablementRules {
		return &v
	}).(EnablementRulesPtrOutput)
}

func (o EnablementRulesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnablementRulesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnablementRules) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnablementRulesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnablementRulesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnablementRules) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnablementRulesPtrOutput struct{ *pulumi.OutputState }

func (EnablementRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnablementRules)(nil)).Elem()
}

func (o EnablementRulesPtrOutput) ToEnablementRulesPtrOutput() EnablementRulesPtrOutput {
	return o
}

func (o EnablementRulesPtrOutput) ToEnablementRulesPtrOutputWithContext(ctx context.Context) EnablementRulesPtrOutput {
	return o
}

func (o EnablementRulesPtrOutput) Elem() EnablementRulesOutput {
	return o.ApplyT(func(v *EnablementRules) EnablementRules {
		if v != nil {
			return *v
		}
		var ret EnablementRules
		return ret
	}).(EnablementRulesOutput)
}

func (o EnablementRulesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnablementRulesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnablementRules) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnablementRulesInput is an input type that accepts values of the EnablementRules enum
// A concrete instance of `EnablementRulesInput` can be one of the following:
//
//	EnablementRulesMultiFactorAuthentication
//	EnablementRulesJustification
//	EnablementRulesTicketing
type EnablementRulesInput interface {
	pulumi.Input

	ToEnablementRulesOutput() EnablementRulesOutput
	ToEnablementRulesOutputWithContext(context.Context) EnablementRulesOutput
}

var enablementRulesPtrType = reflect.TypeOf((**EnablementRules)(nil)).Elem()

type EnablementRulesPtrInput interface {
	pulumi.Input

	ToEnablementRulesPtrOutput() EnablementRulesPtrOutput
	ToEnablementRulesPtrOutputWithContext(context.Context) EnablementRulesPtrOutput
}

type enablementRulesPtr string

func EnablementRulesPtr(v string) EnablementRulesPtrInput {
	return (*enablementRulesPtr)(&v)
}

func (*enablementRulesPtr) ElementType() reflect.Type {
	return enablementRulesPtrType
}

func (in *enablementRulesPtr) ToEnablementRulesPtrOutput() EnablementRulesPtrOutput {
	return pulumi.ToOutput(in).(EnablementRulesPtrOutput)
}

func (in *enablementRulesPtr) ToEnablementRulesPtrOutputWithContext(ctx context.Context) EnablementRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnablementRulesPtrOutput)
}

// The policy assignment enforcement mode. Possible values are Default, DoNotEnforce, and Enroll
type EnforcementMode string

const (
	// The policy effect is enforced during resource creation or update.
	EnforcementModeDefault = EnforcementMode("Default")
	// The policy effect is not enforced during resource creation or update.
	EnforcementModeDoNotEnforce = EnforcementMode("DoNotEnforce")
	// The policy effect is not enforced during resource creation or update until the resource or scope of the resource is enrolled to the assignment instance. Enrollment occurs upon deployment of the policy enrollment resource.
	EnforcementModeEnroll = EnforcementMode("Enroll")
)

func (EnforcementMode) ElementType() reflect.Type {
	return reflect.TypeOf((*EnforcementMode)(nil)).Elem()
}

func (e EnforcementMode) ToEnforcementModeOutput() EnforcementModeOutput {
	return pulumi.ToOutput(e).(EnforcementModeOutput)
}

func (e EnforcementMode) ToEnforcementModeOutputWithContext(ctx context.Context) EnforcementModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnforcementModeOutput)
}

func (e EnforcementMode) ToEnforcementModePtrOutput() EnforcementModePtrOutput {
	return e.ToEnforcementModePtrOutputWithContext(context.Background())
}

func (e EnforcementMode) ToEnforcementModePtrOutputWithContext(ctx context.Context) EnforcementModePtrOutput {
	return EnforcementMode(e).ToEnforcementModeOutputWithContext(ctx).ToEnforcementModePtrOutputWithContext(ctx)
}

func (e EnforcementMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnforcementMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnforcementMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnforcementMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnforcementModeOutput struct{ *pulumi.OutputState }

func (EnforcementModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnforcementMode)(nil)).Elem()
}

func (o EnforcementModeOutput) ToEnforcementModeOutput() EnforcementModeOutput {
	return o
}

func (o EnforcementModeOutput) ToEnforcementModeOutputWithContext(ctx context.Context) EnforcementModeOutput {
	return o
}

func (o EnforcementModeOutput) ToEnforcementModePtrOutput() EnforcementModePtrOutput {
	return o.ToEnforcementModePtrOutputWithContext(context.Background())
}

func (o EnforcementModeOutput) ToEnforcementModePtrOutputWithContext(ctx context.Context) EnforcementModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnforcementMode) *EnforcementMode {
		return &v
	}).(EnforcementModePtrOutput)
}

func (o EnforcementModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnforcementModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnforcementMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnforcementModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnforcementModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnforcementMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnforcementModePtrOutput struct{ *pulumi.OutputState }

func (EnforcementModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnforcementMode)(nil)).Elem()
}

func (o EnforcementModePtrOutput) ToEnforcementModePtrOutput() EnforcementModePtrOutput {
	return o
}

func (o EnforcementModePtrOutput) ToEnforcementModePtrOutputWithContext(ctx context.Context) EnforcementModePtrOutput {
	return o
}

func (o EnforcementModePtrOutput) Elem() EnforcementModeOutput {
	return o.ApplyT(func(v *EnforcementMode) EnforcementMode {
		if v != nil {
			return *v
		}
		var ret EnforcementMode
		return ret
	}).(EnforcementModeOutput)
}

func (o EnforcementModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnforcementModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnforcementMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnforcementModeInput is an input type that accepts values of the EnforcementMode enum
// A concrete instance of `EnforcementModeInput` can be one of the following:
//
//	EnforcementModeDefault
//	EnforcementModeDoNotEnforce
//	EnforcementModeEnroll
type EnforcementModeInput interface {
	pulumi.Input

	ToEnforcementModeOutput() EnforcementModeOutput
	ToEnforcementModeOutputWithContext(context.Context) EnforcementModeOutput
}

var enforcementModePtrType = reflect.TypeOf((**EnforcementMode)(nil)).Elem()

type EnforcementModePtrInput interface {
	pulumi.Input

	ToEnforcementModePtrOutput() EnforcementModePtrOutput
	ToEnforcementModePtrOutputWithContext(context.Context) EnforcementModePtrOutput
}

type enforcementModePtr string

func EnforcementModePtr(v string) EnforcementModePtrInput {
	return (*enforcementModePtr)(&v)
}

func (*enforcementModePtr) ElementType() reflect.Type {
	return enforcementModePtrType
}

func (in *enforcementModePtr) ToEnforcementModePtrOutput() EnforcementModePtrOutput {
	return pulumi.ToOutput(in).(EnforcementModePtrOutput)
}

func (in *enforcementModePtr) ToEnforcementModePtrOutputWithContext(ctx context.Context) EnforcementModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnforcementModePtrOutput)
}

type ExcludedPrincipalTypes string

const (
	ExcludedPrincipalTypesServicePrincipalsAsTarget    = ExcludedPrincipalTypes("ServicePrincipalsAsTarget")
	ExcludedPrincipalTypesServicePrincipalsAsRequestor = ExcludedPrincipalTypes("ServicePrincipalsAsRequestor")
)

func (ExcludedPrincipalTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPrincipalTypes)(nil)).Elem()
}

func (e ExcludedPrincipalTypes) ToExcludedPrincipalTypesOutput() ExcludedPrincipalTypesOutput {
	return pulumi.ToOutput(e).(ExcludedPrincipalTypesOutput)
}

func (e ExcludedPrincipalTypes) ToExcludedPrincipalTypesOutputWithContext(ctx context.Context) ExcludedPrincipalTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExcludedPrincipalTypesOutput)
}

func (e ExcludedPrincipalTypes) ToExcludedPrincipalTypesPtrOutput() ExcludedPrincipalTypesPtrOutput {
	return e.ToExcludedPrincipalTypesPtrOutputWithContext(context.Background())
}

func (e ExcludedPrincipalTypes) ToExcludedPrincipalTypesPtrOutputWithContext(ctx context.Context) ExcludedPrincipalTypesPtrOutput {
	return ExcludedPrincipalTypes(e).ToExcludedPrincipalTypesOutputWithContext(ctx).ToExcludedPrincipalTypesPtrOutputWithContext(ctx)
}

func (e ExcludedPrincipalTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExcludedPrincipalTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExcludedPrincipalTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExcludedPrincipalTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExcludedPrincipalTypesOutput struct{ *pulumi.OutputState }

func (ExcludedPrincipalTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPrincipalTypes)(nil)).Elem()
}

func (o ExcludedPrincipalTypesOutput) ToExcludedPrincipalTypesOutput() ExcludedPrincipalTypesOutput {
	return o
}

func (o ExcludedPrincipalTypesOutput) ToExcludedPrincipalTypesOutputWithContext(ctx context.Context) ExcludedPrincipalTypesOutput {
	return o
}

func (o ExcludedPrincipalTypesOutput) ToExcludedPrincipalTypesPtrOutput() ExcludedPrincipalTypesPtrOutput {
	return o.ToExcludedPrincipalTypesPtrOutputWithContext(context.Background())
}

func (o ExcludedPrincipalTypesOutput) ToExcludedPrincipalTypesPtrOutputWithContext(ctx context.Context) ExcludedPrincipalTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExcludedPrincipalTypes) *ExcludedPrincipalTypes {
		return &v
	}).(ExcludedPrincipalTypesPtrOutput)
}

func (o ExcludedPrincipalTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExcludedPrincipalTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExcludedPrincipalTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExcludedPrincipalTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExcludedPrincipalTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExcludedPrincipalTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExcludedPrincipalTypesPtrOutput struct{ *pulumi.OutputState }

func (ExcludedPrincipalTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExcludedPrincipalTypes)(nil)).Elem()
}

func (o ExcludedPrincipalTypesPtrOutput) ToExcludedPrincipalTypesPtrOutput() ExcludedPrincipalTypesPtrOutput {
	return o
}

func (o ExcludedPrincipalTypesPtrOutput) ToExcludedPrincipalTypesPtrOutputWithContext(ctx context.Context) ExcludedPrincipalTypesPtrOutput {
	return o
}

func (o ExcludedPrincipalTypesPtrOutput) Elem() ExcludedPrincipalTypesOutput {
	return o.ApplyT(func(v *ExcludedPrincipalTypes) ExcludedPrincipalTypes {
		if v != nil {
			return *v
		}
		var ret ExcludedPrincipalTypes
		return ret
	}).(ExcludedPrincipalTypesOutput)
}

func (o ExcludedPrincipalTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExcludedPrincipalTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExcludedPrincipalTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExcludedPrincipalTypesInput is an input type that accepts values of the ExcludedPrincipalTypes enum
// A concrete instance of `ExcludedPrincipalTypesInput` can be one of the following:
//
//	ExcludedPrincipalTypesServicePrincipalsAsTarget
//	ExcludedPrincipalTypesServicePrincipalsAsRequestor
type ExcludedPrincipalTypesInput interface {
	pulumi.Input

	ToExcludedPrincipalTypesOutput() ExcludedPrincipalTypesOutput
	ToExcludedPrincipalTypesOutputWithContext(context.Context) ExcludedPrincipalTypesOutput
}

var excludedPrincipalTypesPtrType = reflect.TypeOf((**ExcludedPrincipalTypes)(nil)).Elem()

type ExcludedPrincipalTypesPtrInput interface {
	pulumi.Input

	ToExcludedPrincipalTypesPtrOutput() ExcludedPrincipalTypesPtrOutput
	ToExcludedPrincipalTypesPtrOutputWithContext(context.Context) ExcludedPrincipalTypesPtrOutput
}

type excludedPrincipalTypesPtr string

func ExcludedPrincipalTypesPtr(v string) ExcludedPrincipalTypesPtrInput {
	return (*excludedPrincipalTypesPtr)(&v)
}

func (*excludedPrincipalTypesPtr) ElementType() reflect.Type {
	return excludedPrincipalTypesPtrType
}

func (in *excludedPrincipalTypesPtr) ToExcludedPrincipalTypesPtrOutput() ExcludedPrincipalTypesPtrOutput {
	return pulumi.ToOutput(in).(ExcludedPrincipalTypesPtrOutput)
}

func (in *excludedPrincipalTypesPtr) ToExcludedPrincipalTypesPtrOutputWithContext(ctx context.Context) ExcludedPrincipalTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExcludedPrincipalTypesPtrOutput)
}

// The policy exemption category. Possible values are Waiver and Mitigated.
type ExemptionCategory string

const (
	// This category of exemptions usually means the scope is not applicable for the policy.
	ExemptionCategoryWaiver = ExemptionCategory("Waiver")
	// This category of exemptions usually means the mitigation actions have been applied to the scope.
	ExemptionCategoryMitigated = ExemptionCategory("Mitigated")
)

func (ExemptionCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*ExemptionCategory)(nil)).Elem()
}

func (e ExemptionCategory) ToExemptionCategoryOutput() ExemptionCategoryOutput {
	return pulumi.ToOutput(e).(ExemptionCategoryOutput)
}

func (e ExemptionCategory) ToExemptionCategoryOutputWithContext(ctx context.Context) ExemptionCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExemptionCategoryOutput)
}

func (e ExemptionCategory) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return e.ToExemptionCategoryPtrOutputWithContext(context.Background())
}

func (e ExemptionCategory) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return ExemptionCategory(e).ToExemptionCategoryOutputWithContext(ctx).ToExemptionCategoryPtrOutputWithContext(ctx)
}

func (e ExemptionCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExemptionCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExemptionCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExemptionCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExemptionCategoryOutput struct{ *pulumi.OutputState }

func (ExemptionCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExemptionCategory)(nil)).Elem()
}

func (o ExemptionCategoryOutput) ToExemptionCategoryOutput() ExemptionCategoryOutput {
	return o
}

func (o ExemptionCategoryOutput) ToExemptionCategoryOutputWithContext(ctx context.Context) ExemptionCategoryOutput {
	return o
}

func (o ExemptionCategoryOutput) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return o.ToExemptionCategoryPtrOutputWithContext(context.Background())
}

func (o ExemptionCategoryOutput) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExemptionCategory) *ExemptionCategory {
		return &v
	}).(ExemptionCategoryPtrOutput)
}

func (o ExemptionCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExemptionCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExemptionCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExemptionCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExemptionCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExemptionCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExemptionCategoryPtrOutput struct{ *pulumi.OutputState }

func (ExemptionCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExemptionCategory)(nil)).Elem()
}

func (o ExemptionCategoryPtrOutput) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return o
}

func (o ExemptionCategoryPtrOutput) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return o
}

func (o ExemptionCategoryPtrOutput) Elem() ExemptionCategoryOutput {
	return o.ApplyT(func(v *ExemptionCategory) ExemptionCategory {
		if v != nil {
			return *v
		}
		var ret ExemptionCategory
		return ret
	}).(ExemptionCategoryOutput)
}

func (o ExemptionCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExemptionCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExemptionCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExemptionCategoryInput is an input type that accepts values of the ExemptionCategory enum
// A concrete instance of `ExemptionCategoryInput` can be one of the following:
//
//	ExemptionCategoryWaiver
//	ExemptionCategoryMitigated
type ExemptionCategoryInput interface {
	pulumi.Input

	ToExemptionCategoryOutput() ExemptionCategoryOutput
	ToExemptionCategoryOutputWithContext(context.Context) ExemptionCategoryOutput
}

var exemptionCategoryPtrType = reflect.TypeOf((**ExemptionCategory)(nil)).Elem()

type ExemptionCategoryPtrInput interface {
	pulumi.Input

	ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput
	ToExemptionCategoryPtrOutputWithContext(context.Context) ExemptionCategoryPtrOutput
}

type exemptionCategoryPtr string

func ExemptionCategoryPtr(v string) ExemptionCategoryPtrInput {
	return (*exemptionCategoryPtr)(&v)
}

func (*exemptionCategoryPtr) ElementType() reflect.Type {
	return exemptionCategoryPtrType
}

func (in *exemptionCategoryPtr) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return pulumi.ToOutput(in).(ExemptionCategoryPtrOutput)
}

func (in *exemptionCategoryPtr) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExemptionCategoryPtrOutput)
}

// The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.
type LockLevel string

const (
	LockLevelNotSpecified = LockLevel("NotSpecified")
	LockLevelCanNotDelete = LockLevel("CanNotDelete")
	LockLevelReadOnly     = LockLevel("ReadOnly")
)

func (LockLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*LockLevel)(nil)).Elem()
}

func (e LockLevel) ToLockLevelOutput() LockLevelOutput {
	return pulumi.ToOutput(e).(LockLevelOutput)
}

func (e LockLevel) ToLockLevelOutputWithContext(ctx context.Context) LockLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LockLevelOutput)
}

func (e LockLevel) ToLockLevelPtrOutput() LockLevelPtrOutput {
	return e.ToLockLevelPtrOutputWithContext(context.Background())
}

func (e LockLevel) ToLockLevelPtrOutputWithContext(ctx context.Context) LockLevelPtrOutput {
	return LockLevel(e).ToLockLevelOutputWithContext(ctx).ToLockLevelPtrOutputWithContext(ctx)
}

func (e LockLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LockLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LockLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LockLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LockLevelOutput struct{ *pulumi.OutputState }

func (LockLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LockLevel)(nil)).Elem()
}

func (o LockLevelOutput) ToLockLevelOutput() LockLevelOutput {
	return o
}

func (o LockLevelOutput) ToLockLevelOutputWithContext(ctx context.Context) LockLevelOutput {
	return o
}

func (o LockLevelOutput) ToLockLevelPtrOutput() LockLevelPtrOutput {
	return o.ToLockLevelPtrOutputWithContext(context.Background())
}

func (o LockLevelOutput) ToLockLevelPtrOutputWithContext(ctx context.Context) LockLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LockLevel) *LockLevel {
		return &v
	}).(LockLevelPtrOutput)
}

func (o LockLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LockLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LockLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LockLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LockLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LockLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LockLevelPtrOutput struct{ *pulumi.OutputState }

func (LockLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LockLevel)(nil)).Elem()
}

func (o LockLevelPtrOutput) ToLockLevelPtrOutput() LockLevelPtrOutput {
	return o
}

func (o LockLevelPtrOutput) ToLockLevelPtrOutputWithContext(ctx context.Context) LockLevelPtrOutput {
	return o
}

func (o LockLevelPtrOutput) Elem() LockLevelOutput {
	return o.ApplyT(func(v *LockLevel) LockLevel {
		if v != nil {
			return *v
		}
		var ret LockLevel
		return ret
	}).(LockLevelOutput)
}

func (o LockLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LockLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LockLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LockLevelInput is an input type that accepts values of the LockLevel enum
// A concrete instance of `LockLevelInput` can be one of the following:
//
//	LockLevelNotSpecified
//	LockLevelCanNotDelete
//	LockLevelReadOnly
type LockLevelInput interface {
	pulumi.Input

	ToLockLevelOutput() LockLevelOutput
	ToLockLevelOutputWithContext(context.Context) LockLevelOutput
}

var lockLevelPtrType = reflect.TypeOf((**LockLevel)(nil)).Elem()

type LockLevelPtrInput interface {
	pulumi.Input

	ToLockLevelPtrOutput() LockLevelPtrOutput
	ToLockLevelPtrOutputWithContext(context.Context) LockLevelPtrOutput
}

type lockLevelPtr string

func LockLevelPtr(v string) LockLevelPtrInput {
	return (*lockLevelPtr)(&v)
}

func (*lockLevelPtr) ElementType() reflect.Type {
	return lockLevelPtrType
}

func (in *lockLevelPtr) ToLockLevelPtrOutput() LockLevelPtrOutput {
	return pulumi.ToOutput(in).(LockLevelPtrOutput)
}

func (in *lockLevelPtr) ToLockLevelPtrOutputWithContext(ctx context.Context) LockLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LockLevelPtrOutput)
}

// The type of notification.
type NotificationDeliveryMechanism string

const (
	NotificationDeliveryMechanismEmail = NotificationDeliveryMechanism("Email")
)

func (NotificationDeliveryMechanism) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDeliveryMechanism)(nil)).Elem()
}

func (e NotificationDeliveryMechanism) ToNotificationDeliveryMechanismOutput() NotificationDeliveryMechanismOutput {
	return pulumi.ToOutput(e).(NotificationDeliveryMechanismOutput)
}

func (e NotificationDeliveryMechanism) ToNotificationDeliveryMechanismOutputWithContext(ctx context.Context) NotificationDeliveryMechanismOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NotificationDeliveryMechanismOutput)
}

func (e NotificationDeliveryMechanism) ToNotificationDeliveryMechanismPtrOutput() NotificationDeliveryMechanismPtrOutput {
	return e.ToNotificationDeliveryMechanismPtrOutputWithContext(context.Background())
}

func (e NotificationDeliveryMechanism) ToNotificationDeliveryMechanismPtrOutputWithContext(ctx context.Context) NotificationDeliveryMechanismPtrOutput {
	return NotificationDeliveryMechanism(e).ToNotificationDeliveryMechanismOutputWithContext(ctx).ToNotificationDeliveryMechanismPtrOutputWithContext(ctx)
}

func (e NotificationDeliveryMechanism) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationDeliveryMechanism) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationDeliveryMechanism) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationDeliveryMechanism) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NotificationDeliveryMechanismOutput struct{ *pulumi.OutputState }

func (NotificationDeliveryMechanismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDeliveryMechanism)(nil)).Elem()
}

func (o NotificationDeliveryMechanismOutput) ToNotificationDeliveryMechanismOutput() NotificationDeliveryMechanismOutput {
	return o
}

func (o NotificationDeliveryMechanismOutput) ToNotificationDeliveryMechanismOutputWithContext(ctx context.Context) NotificationDeliveryMechanismOutput {
	return o
}

func (o NotificationDeliveryMechanismOutput) ToNotificationDeliveryMechanismPtrOutput() NotificationDeliveryMechanismPtrOutput {
	return o.ToNotificationDeliveryMechanismPtrOutputWithContext(context.Background())
}

func (o NotificationDeliveryMechanismOutput) ToNotificationDeliveryMechanismPtrOutputWithContext(ctx context.Context) NotificationDeliveryMechanismPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationDeliveryMechanism) *NotificationDeliveryMechanism {
		return &v
	}).(NotificationDeliveryMechanismPtrOutput)
}

func (o NotificationDeliveryMechanismOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NotificationDeliveryMechanismOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationDeliveryMechanism) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NotificationDeliveryMechanismOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationDeliveryMechanismOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationDeliveryMechanism) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NotificationDeliveryMechanismPtrOutput struct{ *pulumi.OutputState }

func (NotificationDeliveryMechanismPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationDeliveryMechanism)(nil)).Elem()
}

func (o NotificationDeliveryMechanismPtrOutput) ToNotificationDeliveryMechanismPtrOutput() NotificationDeliveryMechanismPtrOutput {
	return o
}

func (o NotificationDeliveryMechanismPtrOutput) ToNotificationDeliveryMechanismPtrOutputWithContext(ctx context.Context) NotificationDeliveryMechanismPtrOutput {
	return o
}

func (o NotificationDeliveryMechanismPtrOutput) Elem() NotificationDeliveryMechanismOutput {
	return o.ApplyT(func(v *NotificationDeliveryMechanism) NotificationDeliveryMechanism {
		if v != nil {
			return *v
		}
		var ret NotificationDeliveryMechanism
		return ret
	}).(NotificationDeliveryMechanismOutput)
}

func (o NotificationDeliveryMechanismPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationDeliveryMechanismPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NotificationDeliveryMechanism) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NotificationDeliveryMechanismInput is an input type that accepts values of the NotificationDeliveryMechanism enum
// A concrete instance of `NotificationDeliveryMechanismInput` can be one of the following:
//
//	NotificationDeliveryMechanismEmail
type NotificationDeliveryMechanismInput interface {
	pulumi.Input

	ToNotificationDeliveryMechanismOutput() NotificationDeliveryMechanismOutput
	ToNotificationDeliveryMechanismOutputWithContext(context.Context) NotificationDeliveryMechanismOutput
}

var notificationDeliveryMechanismPtrType = reflect.TypeOf((**NotificationDeliveryMechanism)(nil)).Elem()

type NotificationDeliveryMechanismPtrInput interface {
	pulumi.Input

	ToNotificationDeliveryMechanismPtrOutput() NotificationDeliveryMechanismPtrOutput
	ToNotificationDeliveryMechanismPtrOutputWithContext(context.Context) NotificationDeliveryMechanismPtrOutput
}

type notificationDeliveryMechanismPtr string

func NotificationDeliveryMechanismPtr(v string) NotificationDeliveryMechanismPtrInput {
	return (*notificationDeliveryMechanismPtr)(&v)
}

func (*notificationDeliveryMechanismPtr) ElementType() reflect.Type {
	return notificationDeliveryMechanismPtrType
}

func (in *notificationDeliveryMechanismPtr) ToNotificationDeliveryMechanismPtrOutput() NotificationDeliveryMechanismPtrOutput {
	return pulumi.ToOutput(in).(NotificationDeliveryMechanismPtrOutput)
}

func (in *notificationDeliveryMechanismPtr) ToNotificationDeliveryMechanismPtrOutputWithContext(ctx context.Context) NotificationDeliveryMechanismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NotificationDeliveryMechanismPtrOutput)
}

// The notification level.
type NotificationLevel string

const (
	NotificationLevelNone     = NotificationLevel("None")
	NotificationLevelCritical = NotificationLevel("Critical")
	NotificationLevelAll      = NotificationLevel("All")
)

func (NotificationLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationLevel)(nil)).Elem()
}

func (e NotificationLevel) ToNotificationLevelOutput() NotificationLevelOutput {
	return pulumi.ToOutput(e).(NotificationLevelOutput)
}

func (e NotificationLevel) ToNotificationLevelOutputWithContext(ctx context.Context) NotificationLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NotificationLevelOutput)
}

func (e NotificationLevel) ToNotificationLevelPtrOutput() NotificationLevelPtrOutput {
	return e.ToNotificationLevelPtrOutputWithContext(context.Background())
}

func (e NotificationLevel) ToNotificationLevelPtrOutputWithContext(ctx context.Context) NotificationLevelPtrOutput {
	return NotificationLevel(e).ToNotificationLevelOutputWithContext(ctx).ToNotificationLevelPtrOutputWithContext(ctx)
}

func (e NotificationLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NotificationLevelOutput struct{ *pulumi.OutputState }

func (NotificationLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationLevel)(nil)).Elem()
}

func (o NotificationLevelOutput) ToNotificationLevelOutput() NotificationLevelOutput {
	return o
}

func (o NotificationLevelOutput) ToNotificationLevelOutputWithContext(ctx context.Context) NotificationLevelOutput {
	return o
}

func (o NotificationLevelOutput) ToNotificationLevelPtrOutput() NotificationLevelPtrOutput {
	return o.ToNotificationLevelPtrOutputWithContext(context.Background())
}

func (o NotificationLevelOutput) ToNotificationLevelPtrOutputWithContext(ctx context.Context) NotificationLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationLevel) *NotificationLevel {
		return &v
	}).(NotificationLevelPtrOutput)
}

func (o NotificationLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NotificationLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NotificationLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NotificationLevelPtrOutput struct{ *pulumi.OutputState }

func (NotificationLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationLevel)(nil)).Elem()
}

func (o NotificationLevelPtrOutput) ToNotificationLevelPtrOutput() NotificationLevelPtrOutput {
	return o
}

func (o NotificationLevelPtrOutput) ToNotificationLevelPtrOutputWithContext(ctx context.Context) NotificationLevelPtrOutput {
	return o
}

func (o NotificationLevelPtrOutput) Elem() NotificationLevelOutput {
	return o.ApplyT(func(v *NotificationLevel) NotificationLevel {
		if v != nil {
			return *v
		}
		var ret NotificationLevel
		return ret
	}).(NotificationLevelOutput)
}

func (o NotificationLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NotificationLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NotificationLevelInput is an input type that accepts values of the NotificationLevel enum
// A concrete instance of `NotificationLevelInput` can be one of the following:
//
//	NotificationLevelNone
//	NotificationLevelCritical
//	NotificationLevelAll
type NotificationLevelInput interface {
	pulumi.Input

	ToNotificationLevelOutput() NotificationLevelOutput
	ToNotificationLevelOutputWithContext(context.Context) NotificationLevelOutput
}

var notificationLevelPtrType = reflect.TypeOf((**NotificationLevel)(nil)).Elem()

type NotificationLevelPtrInput interface {
	pulumi.Input

	ToNotificationLevelPtrOutput() NotificationLevelPtrOutput
	ToNotificationLevelPtrOutputWithContext(context.Context) NotificationLevelPtrOutput
}

type notificationLevelPtr string

func NotificationLevelPtr(v string) NotificationLevelPtrInput {
	return (*notificationLevelPtr)(&v)
}

func (*notificationLevelPtr) ElementType() reflect.Type {
	return notificationLevelPtrType
}

func (in *notificationLevelPtr) ToNotificationLevelPtrOutput() NotificationLevelPtrOutput {
	return pulumi.ToOutput(in).(NotificationLevelPtrOutput)
}

func (in *notificationLevelPtr) ToNotificationLevelPtrOutputWithContext(ctx context.Context) NotificationLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NotificationLevelPtrOutput)
}

// The override kind.
type OverrideKind string

const (
	// It will override the policy effect type.
	OverrideKindPolicyEffect = OverrideKind("policyEffect")
	// It will override the definition version property value of the policy assignment.
	OverrideKindDefinitionVersion = OverrideKind("definitionVersion")
)

func (OverrideKind) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideKind)(nil)).Elem()
}

func (e OverrideKind) ToOverrideKindOutput() OverrideKindOutput {
	return pulumi.ToOutput(e).(OverrideKindOutput)
}

func (e OverrideKind) ToOverrideKindOutputWithContext(ctx context.Context) OverrideKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OverrideKindOutput)
}

func (e OverrideKind) ToOverrideKindPtrOutput() OverrideKindPtrOutput {
	return e.ToOverrideKindPtrOutputWithContext(context.Background())
}

func (e OverrideKind) ToOverrideKindPtrOutputWithContext(ctx context.Context) OverrideKindPtrOutput {
	return OverrideKind(e).ToOverrideKindOutputWithContext(ctx).ToOverrideKindPtrOutputWithContext(ctx)
}

func (e OverrideKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OverrideKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OverrideKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OverrideKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OverrideKindOutput struct{ *pulumi.OutputState }

func (OverrideKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideKind)(nil)).Elem()
}

func (o OverrideKindOutput) ToOverrideKindOutput() OverrideKindOutput {
	return o
}

func (o OverrideKindOutput) ToOverrideKindOutputWithContext(ctx context.Context) OverrideKindOutput {
	return o
}

func (o OverrideKindOutput) ToOverrideKindPtrOutput() OverrideKindPtrOutput {
	return o.ToOverrideKindPtrOutputWithContext(context.Background())
}

func (o OverrideKindOutput) ToOverrideKindPtrOutputWithContext(ctx context.Context) OverrideKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OverrideKind) *OverrideKind {
		return &v
	}).(OverrideKindPtrOutput)
}

func (o OverrideKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OverrideKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OverrideKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OverrideKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OverrideKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OverrideKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OverrideKindPtrOutput struct{ *pulumi.OutputState }

func (OverrideKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OverrideKind)(nil)).Elem()
}

func (o OverrideKindPtrOutput) ToOverrideKindPtrOutput() OverrideKindPtrOutput {
	return o
}

func (o OverrideKindPtrOutput) ToOverrideKindPtrOutputWithContext(ctx context.Context) OverrideKindPtrOutput {
	return o
}

func (o OverrideKindPtrOutput) Elem() OverrideKindOutput {
	return o.ApplyT(func(v *OverrideKind) OverrideKind {
		if v != nil {
			return *v
		}
		var ret OverrideKind
		return ret
	}).(OverrideKindOutput)
}

func (o OverrideKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OverrideKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OverrideKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OverrideKindInput is an input type that accepts values of the OverrideKind enum
// A concrete instance of `OverrideKindInput` can be one of the following:
//
//	OverrideKindPolicyEffect
//	OverrideKindDefinitionVersion
type OverrideKindInput interface {
	pulumi.Input

	ToOverrideKindOutput() OverrideKindOutput
	ToOverrideKindOutputWithContext(context.Context) OverrideKindOutput
}

var overrideKindPtrType = reflect.TypeOf((**OverrideKind)(nil)).Elem()

type OverrideKindPtrInput interface {
	pulumi.Input

	ToOverrideKindPtrOutput() OverrideKindPtrOutput
	ToOverrideKindPtrOutputWithContext(context.Context) OverrideKindPtrOutput
}

type overrideKindPtr string

func OverrideKindPtr(v string) OverrideKindPtrInput {
	return (*overrideKindPtr)(&v)
}

func (*overrideKindPtr) ElementType() reflect.Type {
	return overrideKindPtrType
}

func (in *overrideKindPtr) ToOverrideKindPtrOutput() OverrideKindPtrOutput {
	return pulumi.ToOutput(in).(OverrideKindPtrOutput)
}

func (in *overrideKindPtr) ToOverrideKindPtrOutputWithContext(ctx context.Context) OverrideKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OverrideKindPtrOutput)
}

// Determines whether the setting is enabled, disabled or report only.
type PIMOnlyMode string

const (
	PIMOnlyModeDisabled   = PIMOnlyMode("Disabled")
	PIMOnlyModeEnabled    = PIMOnlyMode("Enabled")
	PIMOnlyModeReportOnly = PIMOnlyMode("ReportOnly")
)

func (PIMOnlyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*PIMOnlyMode)(nil)).Elem()
}

func (e PIMOnlyMode) ToPIMOnlyModeOutput() PIMOnlyModeOutput {
	return pulumi.ToOutput(e).(PIMOnlyModeOutput)
}

func (e PIMOnlyMode) ToPIMOnlyModeOutputWithContext(ctx context.Context) PIMOnlyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PIMOnlyModeOutput)
}

func (e PIMOnlyMode) ToPIMOnlyModePtrOutput() PIMOnlyModePtrOutput {
	return e.ToPIMOnlyModePtrOutputWithContext(context.Background())
}

func (e PIMOnlyMode) ToPIMOnlyModePtrOutputWithContext(ctx context.Context) PIMOnlyModePtrOutput {
	return PIMOnlyMode(e).ToPIMOnlyModeOutputWithContext(ctx).ToPIMOnlyModePtrOutputWithContext(ctx)
}

func (e PIMOnlyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PIMOnlyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PIMOnlyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PIMOnlyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PIMOnlyModeOutput struct{ *pulumi.OutputState }

func (PIMOnlyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PIMOnlyMode)(nil)).Elem()
}

func (o PIMOnlyModeOutput) ToPIMOnlyModeOutput() PIMOnlyModeOutput {
	return o
}

func (o PIMOnlyModeOutput) ToPIMOnlyModeOutputWithContext(ctx context.Context) PIMOnlyModeOutput {
	return o
}

func (o PIMOnlyModeOutput) ToPIMOnlyModePtrOutput() PIMOnlyModePtrOutput {
	return o.ToPIMOnlyModePtrOutputWithContext(context.Background())
}

func (o PIMOnlyModeOutput) ToPIMOnlyModePtrOutputWithContext(ctx context.Context) PIMOnlyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PIMOnlyMode) *PIMOnlyMode {
		return &v
	}).(PIMOnlyModePtrOutput)
}

func (o PIMOnlyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PIMOnlyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PIMOnlyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PIMOnlyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PIMOnlyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PIMOnlyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PIMOnlyModePtrOutput struct{ *pulumi.OutputState }

func (PIMOnlyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PIMOnlyMode)(nil)).Elem()
}

func (o PIMOnlyModePtrOutput) ToPIMOnlyModePtrOutput() PIMOnlyModePtrOutput {
	return o
}

func (o PIMOnlyModePtrOutput) ToPIMOnlyModePtrOutputWithContext(ctx context.Context) PIMOnlyModePtrOutput {
	return o
}

func (o PIMOnlyModePtrOutput) Elem() PIMOnlyModeOutput {
	return o.ApplyT(func(v *PIMOnlyMode) PIMOnlyMode {
		if v != nil {
			return *v
		}
		var ret PIMOnlyMode
		return ret
	}).(PIMOnlyModeOutput)
}

func (o PIMOnlyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PIMOnlyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PIMOnlyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PIMOnlyModeInput is an input type that accepts values of the PIMOnlyMode enum
// A concrete instance of `PIMOnlyModeInput` can be one of the following:
//
//	PIMOnlyModeDisabled
//	PIMOnlyModeEnabled
//	PIMOnlyModeReportOnly
type PIMOnlyModeInput interface {
	pulumi.Input

	ToPIMOnlyModeOutput() PIMOnlyModeOutput
	ToPIMOnlyModeOutputWithContext(context.Context) PIMOnlyModeOutput
}

var pimonlyModePtrType = reflect.TypeOf((**PIMOnlyMode)(nil)).Elem()

type PIMOnlyModePtrInput interface {
	pulumi.Input

	ToPIMOnlyModePtrOutput() PIMOnlyModePtrOutput
	ToPIMOnlyModePtrOutputWithContext(context.Context) PIMOnlyModePtrOutput
}

type pimonlyModePtr string

func PIMOnlyModePtr(v string) PIMOnlyModePtrInput {
	return (*pimonlyModePtr)(&v)
}

func (*pimonlyModePtr) ElementType() reflect.Type {
	return pimonlyModePtrType
}

func (in *pimonlyModePtr) ToPIMOnlyModePtrOutput() PIMOnlyModePtrOutput {
	return pulumi.ToOutput(in).(PIMOnlyModePtrOutput)
}

func (in *pimonlyModePtr) ToPIMOnlyModePtrOutputWithContext(ctx context.Context) PIMOnlyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PIMOnlyModePtrOutput)
}

// The data type of the parameter.
type ParameterType string

const (
	ParameterTypeString   = ParameterType("String")
	ParameterTypeArray    = ParameterType("Array")
	ParameterTypeObject   = ParameterType("Object")
	ParameterTypeBoolean  = ParameterType("Boolean")
	ParameterTypeInteger  = ParameterType("Integer")
	ParameterTypeFloat    = ParameterType("Float")
	ParameterTypeDateTime = ParameterType("DateTime")
)

func (ParameterType) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterType)(nil)).Elem()
}

func (e ParameterType) ToParameterTypeOutput() ParameterTypeOutput {
	return pulumi.ToOutput(e).(ParameterTypeOutput)
}

func (e ParameterType) ToParameterTypeOutputWithContext(ctx context.Context) ParameterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ParameterTypeOutput)
}

func (e ParameterType) ToParameterTypePtrOutput() ParameterTypePtrOutput {
	return e.ToParameterTypePtrOutputWithContext(context.Background())
}

func (e ParameterType) ToParameterTypePtrOutputWithContext(ctx context.Context) ParameterTypePtrOutput {
	return ParameterType(e).ToParameterTypeOutputWithContext(ctx).ToParameterTypePtrOutputWithContext(ctx)
}

func (e ParameterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ParameterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ParameterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ParameterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ParameterTypeOutput struct{ *pulumi.OutputState }

func (ParameterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterType)(nil)).Elem()
}

func (o ParameterTypeOutput) ToParameterTypeOutput() ParameterTypeOutput {
	return o
}

func (o ParameterTypeOutput) ToParameterTypeOutputWithContext(ctx context.Context) ParameterTypeOutput {
	return o
}

func (o ParameterTypeOutput) ToParameterTypePtrOutput() ParameterTypePtrOutput {
	return o.ToParameterTypePtrOutputWithContext(context.Background())
}

func (o ParameterTypeOutput) ToParameterTypePtrOutputWithContext(ctx context.Context) ParameterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParameterType) *ParameterType {
		return &v
	}).(ParameterTypePtrOutput)
}

func (o ParameterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ParameterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ParameterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ParameterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ParameterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ParameterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ParameterTypePtrOutput struct{ *pulumi.OutputState }

func (ParameterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterType)(nil)).Elem()
}

func (o ParameterTypePtrOutput) ToParameterTypePtrOutput() ParameterTypePtrOutput {
	return o
}

func (o ParameterTypePtrOutput) ToParameterTypePtrOutputWithContext(ctx context.Context) ParameterTypePtrOutput {
	return o
}

func (o ParameterTypePtrOutput) Elem() ParameterTypeOutput {
	return o.ApplyT(func(v *ParameterType) ParameterType {
		if v != nil {
			return *v
		}
		var ret ParameterType
		return ret
	}).(ParameterTypeOutput)
}

func (o ParameterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ParameterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ParameterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ParameterTypeInput is an input type that accepts values of the ParameterType enum
// A concrete instance of `ParameterTypeInput` can be one of the following:
//
//	ParameterTypeString
//	ParameterTypeArray
//	ParameterTypeObject
//	ParameterTypeBoolean
//	ParameterTypeInteger
//	ParameterTypeFloat
//	ParameterTypeDateTime
type ParameterTypeInput interface {
	pulumi.Input

	ToParameterTypeOutput() ParameterTypeOutput
	ToParameterTypeOutputWithContext(context.Context) ParameterTypeOutput
}

var parameterTypePtrType = reflect.TypeOf((**ParameterType)(nil)).Elem()

type ParameterTypePtrInput interface {
	pulumi.Input

	ToParameterTypePtrOutput() ParameterTypePtrOutput
	ToParameterTypePtrOutputWithContext(context.Context) ParameterTypePtrOutput
}

type parameterTypePtr string

func ParameterTypePtr(v string) ParameterTypePtrInput {
	return (*parameterTypePtr)(&v)
}

func (*parameterTypePtr) ElementType() reflect.Type {
	return parameterTypePtrType
}

func (in *parameterTypePtr) ToParameterTypePtrOutput() ParameterTypePtrOutput {
	return pulumi.ToOutput(in).(ParameterTypePtrOutput)
}

func (in *parameterTypePtr) ToParameterTypePtrOutputWithContext(ctx context.Context) ParameterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ParameterTypePtrOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
type PolicyType string

const (
	PolicyTypeNotSpecified = PolicyType("NotSpecified")
	PolicyTypeBuiltIn      = PolicyType("BuiltIn")
	PolicyTypeCustom       = PolicyType("Custom")
	PolicyTypeStatic       = PolicyType("Static")
)

func (PolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyType)(nil)).Elem()
}

func (e PolicyType) ToPolicyTypeOutput() PolicyTypeOutput {
	return pulumi.ToOutput(e).(PolicyTypeOutput)
}

func (e PolicyType) ToPolicyTypeOutputWithContext(ctx context.Context) PolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PolicyTypeOutput)
}

func (e PolicyType) ToPolicyTypePtrOutput() PolicyTypePtrOutput {
	return e.ToPolicyTypePtrOutputWithContext(context.Background())
}

func (e PolicyType) ToPolicyTypePtrOutputWithContext(ctx context.Context) PolicyTypePtrOutput {
	return PolicyType(e).ToPolicyTypeOutputWithContext(ctx).ToPolicyTypePtrOutputWithContext(ctx)
}

func (e PolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PolicyTypeOutput struct{ *pulumi.OutputState }

func (PolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyType)(nil)).Elem()
}

func (o PolicyTypeOutput) ToPolicyTypeOutput() PolicyTypeOutput {
	return o
}

func (o PolicyTypeOutput) ToPolicyTypeOutputWithContext(ctx context.Context) PolicyTypeOutput {
	return o
}

func (o PolicyTypeOutput) ToPolicyTypePtrOutput() PolicyTypePtrOutput {
	return o.ToPolicyTypePtrOutputWithContext(context.Background())
}

func (o PolicyTypeOutput) ToPolicyTypePtrOutputWithContext(ctx context.Context) PolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyType) *PolicyType {
		return &v
	}).(PolicyTypePtrOutput)
}

func (o PolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PolicyTypePtrOutput struct{ *pulumi.OutputState }

func (PolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyType)(nil)).Elem()
}

func (o PolicyTypePtrOutput) ToPolicyTypePtrOutput() PolicyTypePtrOutput {
	return o
}

func (o PolicyTypePtrOutput) ToPolicyTypePtrOutputWithContext(ctx context.Context) PolicyTypePtrOutput {
	return o
}

func (o PolicyTypePtrOutput) Elem() PolicyTypeOutput {
	return o.ApplyT(func(v *PolicyType) PolicyType {
		if v != nil {
			return *v
		}
		var ret PolicyType
		return ret
	}).(PolicyTypeOutput)
}

func (o PolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PolicyTypeInput is an input type that accepts values of the PolicyType enum
// A concrete instance of `PolicyTypeInput` can be one of the following:
//
//	PolicyTypeNotSpecified
//	PolicyTypeBuiltIn
//	PolicyTypeCustom
//	PolicyTypeStatic
type PolicyTypeInput interface {
	pulumi.Input

	ToPolicyTypeOutput() PolicyTypeOutput
	ToPolicyTypeOutputWithContext(context.Context) PolicyTypeOutput
}

var policyTypePtrType = reflect.TypeOf((**PolicyType)(nil)).Elem()

type PolicyTypePtrInput interface {
	pulumi.Input

	ToPolicyTypePtrOutput() PolicyTypePtrOutput
	ToPolicyTypePtrOutputWithContext(context.Context) PolicyTypePtrOutput
}

type policyTypePtr string

func PolicyTypePtr(v string) PolicyTypePtrInput {
	return (*policyTypePtr)(&v)
}

func (*policyTypePtr) ElementType() reflect.Type {
	return policyTypePtrType
}

func (in *policyTypePtr) ToPolicyTypePtrOutput() PolicyTypePtrOutput {
	return pulumi.ToOutput(in).(PolicyTypePtrOutput)
}

func (in *policyTypePtr) ToPolicyTypePtrOutputWithContext(ctx context.Context) PolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PolicyTypePtrOutput)
}

// The principal type of the assigned principal ID.
type PrincipalType string

const (
	PrincipalTypeUser             = PrincipalType("User")
	PrincipalTypeGroup            = PrincipalType("Group")
	PrincipalTypeServicePrincipal = PrincipalType("ServicePrincipal")
	PrincipalTypeForeignGroup     = PrincipalType("ForeignGroup")
	PrincipalTypeDevice           = PrincipalType("Device")
)

func (PrincipalType) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (e PrincipalType) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return pulumi.ToOutput(e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return e.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return PrincipalType(e).ToPrincipalTypeOutputWithContext(ctx).ToPrincipalTypePtrOutputWithContext(ctx)
}

func (e PrincipalType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrincipalTypeOutput struct{ *pulumi.OutputState }

func (PrincipalTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrincipalType) *PrincipalType {
		return &v
	}).(PrincipalTypePtrOutput)
}

func (o PrincipalTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrincipalTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrincipalTypePtrOutput struct{ *pulumi.OutputState }

func (PrincipalTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalType)(nil)).Elem()
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) Elem() PrincipalTypeOutput {
	return o.ApplyT(func(v *PrincipalType) PrincipalType {
		if v != nil {
			return *v
		}
		var ret PrincipalType
		return ret
	}).(PrincipalTypeOutput)
}

func (o PrincipalTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrincipalType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrincipalTypeInput is an input type that accepts values of the PrincipalType enum
// A concrete instance of `PrincipalTypeInput` can be one of the following:
//
//	PrincipalTypeUser
//	PrincipalTypeGroup
//	PrincipalTypeServicePrincipal
//	PrincipalTypeForeignGroup
//	PrincipalTypeDevice
type PrincipalTypeInput interface {
	pulumi.Input

	ToPrincipalTypeOutput() PrincipalTypeOutput
	ToPrincipalTypeOutputWithContext(context.Context) PrincipalTypeOutput
}

var principalTypePtrType = reflect.TypeOf((**PrincipalType)(nil)).Elem()

type PrincipalTypePtrInput interface {
	pulumi.Input

	ToPrincipalTypePtrOutput() PrincipalTypePtrOutput
	ToPrincipalTypePtrOutputWithContext(context.Context) PrincipalTypePtrOutput
}

type principalTypePtr string

func PrincipalTypePtr(v string) PrincipalTypePtrInput {
	return (*principalTypePtr)(&v)
}

func (*principalTypePtr) ElementType() reflect.Type {
	return principalTypePtrType
}

func (in *principalTypePtr) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return pulumi.ToOutput(in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrincipalTypePtrOutput)
}

type PublicNetworkAccessOptions string

const (
	PublicNetworkAccessOptionsEnabled  = PublicNetworkAccessOptions("Enabled")
	PublicNetworkAccessOptionsDisabled = PublicNetworkAccessOptions("Disabled")
)

func (PublicNetworkAccessOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessOptions)(nil)).Elem()
}

func (e PublicNetworkAccessOptions) ToPublicNetworkAccessOptionsOutput() PublicNetworkAccessOptionsOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOptionsOutput)
}

func (e PublicNetworkAccessOptions) ToPublicNetworkAccessOptionsOutputWithContext(ctx context.Context) PublicNetworkAccessOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOptionsOutput)
}

func (e PublicNetworkAccessOptions) ToPublicNetworkAccessOptionsPtrOutput() PublicNetworkAccessOptionsPtrOutput {
	return e.ToPublicNetworkAccessOptionsPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessOptions) ToPublicNetworkAccessOptionsPtrOutputWithContext(ctx context.Context) PublicNetworkAccessOptionsPtrOutput {
	return PublicNetworkAccessOptions(e).ToPublicNetworkAccessOptionsOutputWithContext(ctx).ToPublicNetworkAccessOptionsPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccessOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOptionsOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessOptions)(nil)).Elem()
}

func (o PublicNetworkAccessOptionsOutput) ToPublicNetworkAccessOptionsOutput() PublicNetworkAccessOptionsOutput {
	return o
}

func (o PublicNetworkAccessOptionsOutput) ToPublicNetworkAccessOptionsOutputWithContext(ctx context.Context) PublicNetworkAccessOptionsOutput {
	return o
}

func (o PublicNetworkAccessOptionsOutput) ToPublicNetworkAccessOptionsPtrOutput() PublicNetworkAccessOptionsPtrOutput {
	return o.ToPublicNetworkAccessOptionsPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOptionsOutput) ToPublicNetworkAccessOptionsPtrOutputWithContext(ctx context.Context) PublicNetworkAccessOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccessOptions) *PublicNetworkAccessOptions {
		return &v
	}).(PublicNetworkAccessOptionsPtrOutput)
}

func (o PublicNetworkAccessOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessOptionsPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccessOptions)(nil)).Elem()
}

func (o PublicNetworkAccessOptionsPtrOutput) ToPublicNetworkAccessOptionsPtrOutput() PublicNetworkAccessOptionsPtrOutput {
	return o
}

func (o PublicNetworkAccessOptionsPtrOutput) ToPublicNetworkAccessOptionsPtrOutputWithContext(ctx context.Context) PublicNetworkAccessOptionsPtrOutput {
	return o
}

func (o PublicNetworkAccessOptionsPtrOutput) Elem() PublicNetworkAccessOptionsOutput {
	return o.ApplyT(func(v *PublicNetworkAccessOptions) PublicNetworkAccessOptions {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccessOptions
		return ret
	}).(PublicNetworkAccessOptionsOutput)
}

func (o PublicNetworkAccessOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccessOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessOptionsInput is an input type that accepts values of the PublicNetworkAccessOptions enum
// A concrete instance of `PublicNetworkAccessOptionsInput` can be one of the following:
//
//	PublicNetworkAccessOptionsEnabled
//	PublicNetworkAccessOptionsDisabled
type PublicNetworkAccessOptionsInput interface {
	pulumi.Input

	ToPublicNetworkAccessOptionsOutput() PublicNetworkAccessOptionsOutput
	ToPublicNetworkAccessOptionsOutputWithContext(context.Context) PublicNetworkAccessOptionsOutput
}

var publicNetworkAccessOptionsPtrType = reflect.TypeOf((**PublicNetworkAccessOptions)(nil)).Elem()

type PublicNetworkAccessOptionsPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessOptionsPtrOutput() PublicNetworkAccessOptionsPtrOutput
	ToPublicNetworkAccessOptionsPtrOutputWithContext(context.Context) PublicNetworkAccessOptionsPtrOutput
}

type publicNetworkAccessOptionsPtr string

func PublicNetworkAccessOptionsPtr(v string) PublicNetworkAccessOptionsPtrInput {
	return (*publicNetworkAccessOptionsPtr)(&v)
}

func (*publicNetworkAccessOptionsPtr) ElementType() reflect.Type {
	return publicNetworkAccessOptionsPtrType
}

func (in *publicNetworkAccessOptionsPtr) ToPublicNetworkAccessOptionsPtrOutput() PublicNetworkAccessOptionsPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessOptionsPtrOutput)
}

func (in *publicNetworkAccessOptionsPtr) ToPublicNetworkAccessOptionsPtrOutputWithContext(ctx context.Context) PublicNetworkAccessOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessOptionsPtrOutput)
}

// The recipient type.
type RecipientType string

const (
	RecipientTypeRequestor = RecipientType("Requestor")
	RecipientTypeApprover  = RecipientType("Approver")
	RecipientTypeAdmin     = RecipientType("Admin")
)

func (RecipientType) ElementType() reflect.Type {
	return reflect.TypeOf((*RecipientType)(nil)).Elem()
}

func (e RecipientType) ToRecipientTypeOutput() RecipientTypeOutput {
	return pulumi.ToOutput(e).(RecipientTypeOutput)
}

func (e RecipientType) ToRecipientTypeOutputWithContext(ctx context.Context) RecipientTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecipientTypeOutput)
}

func (e RecipientType) ToRecipientTypePtrOutput() RecipientTypePtrOutput {
	return e.ToRecipientTypePtrOutputWithContext(context.Background())
}

func (e RecipientType) ToRecipientTypePtrOutputWithContext(ctx context.Context) RecipientTypePtrOutput {
	return RecipientType(e).ToRecipientTypeOutputWithContext(ctx).ToRecipientTypePtrOutputWithContext(ctx)
}

func (e RecipientType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecipientType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecipientType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecipientType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecipientTypeOutput struct{ *pulumi.OutputState }

func (RecipientTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecipientType)(nil)).Elem()
}

func (o RecipientTypeOutput) ToRecipientTypeOutput() RecipientTypeOutput {
	return o
}

func (o RecipientTypeOutput) ToRecipientTypeOutputWithContext(ctx context.Context) RecipientTypeOutput {
	return o
}

func (o RecipientTypeOutput) ToRecipientTypePtrOutput() RecipientTypePtrOutput {
	return o.ToRecipientTypePtrOutputWithContext(context.Background())
}

func (o RecipientTypeOutput) ToRecipientTypePtrOutputWithContext(ctx context.Context) RecipientTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecipientType) *RecipientType {
		return &v
	}).(RecipientTypePtrOutput)
}

func (o RecipientTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecipientTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecipientType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecipientTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecipientTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecipientType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecipientTypePtrOutput struct{ *pulumi.OutputState }

func (RecipientTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecipientType)(nil)).Elem()
}

func (o RecipientTypePtrOutput) ToRecipientTypePtrOutput() RecipientTypePtrOutput {
	return o
}

func (o RecipientTypePtrOutput) ToRecipientTypePtrOutputWithContext(ctx context.Context) RecipientTypePtrOutput {
	return o
}

func (o RecipientTypePtrOutput) Elem() RecipientTypeOutput {
	return o.ApplyT(func(v *RecipientType) RecipientType {
		if v != nil {
			return *v
		}
		var ret RecipientType
		return ret
	}).(RecipientTypeOutput)
}

func (o RecipientTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecipientTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecipientType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecipientTypeInput is an input type that accepts values of the RecipientType enum
// A concrete instance of `RecipientTypeInput` can be one of the following:
//
//	RecipientTypeRequestor
//	RecipientTypeApprover
//	RecipientTypeAdmin
type RecipientTypeInput interface {
	pulumi.Input

	ToRecipientTypeOutput() RecipientTypeOutput
	ToRecipientTypeOutputWithContext(context.Context) RecipientTypeOutput
}

var recipientTypePtrType = reflect.TypeOf((**RecipientType)(nil)).Elem()

type RecipientTypePtrInput interface {
	pulumi.Input

	ToRecipientTypePtrOutput() RecipientTypePtrOutput
	ToRecipientTypePtrOutputWithContext(context.Context) RecipientTypePtrOutput
}

type recipientTypePtr string

func RecipientTypePtr(v string) RecipientTypePtrInput {
	return (*recipientTypePtr)(&v)
}

func (*recipientTypePtr) ElementType() reflect.Type {
	return recipientTypePtrType
}

func (in *recipientTypePtr) ToRecipientTypePtrOutput() RecipientTypePtrOutput {
	return pulumi.ToOutput(in).(RecipientTypePtrOutput)
}

func (in *recipientTypePtr) ToRecipientTypePtrOutputWithContext(ctx context.Context) RecipientTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecipientTypePtrOutput)
}

// The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc
type RequestType string

const (
	RequestTypeAdminAssign    = RequestType("AdminAssign")
	RequestTypeAdminRemove    = RequestType("AdminRemove")
	RequestTypeAdminUpdate    = RequestType("AdminUpdate")
	RequestTypeAdminExtend    = RequestType("AdminExtend")
	RequestTypeAdminRenew     = RequestType("AdminRenew")
	RequestTypeSelfActivate   = RequestType("SelfActivate")
	RequestTypeSelfDeactivate = RequestType("SelfDeactivate")
	RequestTypeSelfExtend     = RequestType("SelfExtend")
	RequestTypeSelfRenew      = RequestType("SelfRenew")
)

// The identity type. This is the only required field when adding a system or user assigned identity to a resource.
type ResourceIdentityType string

const (
	// Indicates that a system assigned identity is associated with the resource.
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
	// Indicates that a system assigned identity is associated with the resource.
	ResourceIdentityTypeUserAssigned = ResourceIdentityType("UserAssigned")
	// Indicates that no identity is associated with the resource or that the existing identity should be removed.
	ResourceIdentityTypeNone = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
//	ResourceIdentityTypeUserAssigned
//	ResourceIdentityTypeNone
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

// The type of rule
type RoleManagementPolicyRuleType string

const (
	RoleManagementPolicyRuleTypeRoleManagementPolicyApprovalRule              = RoleManagementPolicyRuleType("RoleManagementPolicyApprovalRule")
	RoleManagementPolicyRuleTypeRoleManagementPolicyAuthenticationContextRule = RoleManagementPolicyRuleType("RoleManagementPolicyAuthenticationContextRule")
	RoleManagementPolicyRuleTypeRoleManagementPolicyEnablementRule            = RoleManagementPolicyRuleType("RoleManagementPolicyEnablementRule")
	RoleManagementPolicyRuleTypeRoleManagementPolicyExpirationRule            = RoleManagementPolicyRuleType("RoleManagementPolicyExpirationRule")
	RoleManagementPolicyRuleTypeRoleManagementPolicyNotificationRule          = RoleManagementPolicyRuleType("RoleManagementPolicyNotificationRule")
	RoleManagementPolicyRuleTypeRoleManagementPolicyPimOnlyModeRule           = RoleManagementPolicyRuleType("RoleManagementPolicyPimOnlyModeRule")
)

// The selector kind.
type SelectorKind string

const (
	// The selector kind to filter policies by the resource location.
	SelectorKindResourceLocation = SelectorKind("resourceLocation")
	// The selector kind to filter policies by the resource type.
	SelectorKindResourceType = SelectorKind("resourceType")
	// The selector kind to filter policies by the resource without location.
	SelectorKindResourceWithoutLocation = SelectorKind("resourceWithoutLocation")
	// The selector kind to filter policies by the policy definition reference ID.
	SelectorKindPolicyDefinitionReferenceId = SelectorKind("policyDefinitionReferenceId")
)

func (SelectorKind) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectorKind)(nil)).Elem()
}

func (e SelectorKind) ToSelectorKindOutput() SelectorKindOutput {
	return pulumi.ToOutput(e).(SelectorKindOutput)
}

func (e SelectorKind) ToSelectorKindOutputWithContext(ctx context.Context) SelectorKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SelectorKindOutput)
}

func (e SelectorKind) ToSelectorKindPtrOutput() SelectorKindPtrOutput {
	return e.ToSelectorKindPtrOutputWithContext(context.Background())
}

func (e SelectorKind) ToSelectorKindPtrOutputWithContext(ctx context.Context) SelectorKindPtrOutput {
	return SelectorKind(e).ToSelectorKindOutputWithContext(ctx).ToSelectorKindPtrOutputWithContext(ctx)
}

func (e SelectorKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SelectorKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SelectorKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SelectorKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SelectorKindOutput struct{ *pulumi.OutputState }

func (SelectorKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectorKind)(nil)).Elem()
}

func (o SelectorKindOutput) ToSelectorKindOutput() SelectorKindOutput {
	return o
}

func (o SelectorKindOutput) ToSelectorKindOutputWithContext(ctx context.Context) SelectorKindOutput {
	return o
}

func (o SelectorKindOutput) ToSelectorKindPtrOutput() SelectorKindPtrOutput {
	return o.ToSelectorKindPtrOutputWithContext(context.Background())
}

func (o SelectorKindOutput) ToSelectorKindPtrOutputWithContext(ctx context.Context) SelectorKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SelectorKind) *SelectorKind {
		return &v
	}).(SelectorKindPtrOutput)
}

func (o SelectorKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SelectorKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SelectorKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SelectorKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SelectorKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SelectorKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SelectorKindPtrOutput struct{ *pulumi.OutputState }

func (SelectorKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SelectorKind)(nil)).Elem()
}

func (o SelectorKindPtrOutput) ToSelectorKindPtrOutput() SelectorKindPtrOutput {
	return o
}

func (o SelectorKindPtrOutput) ToSelectorKindPtrOutputWithContext(ctx context.Context) SelectorKindPtrOutput {
	return o
}

func (o SelectorKindPtrOutput) Elem() SelectorKindOutput {
	return o.ApplyT(func(v *SelectorKind) SelectorKind {
		if v != nil {
			return *v
		}
		var ret SelectorKind
		return ret
	}).(SelectorKindOutput)
}

func (o SelectorKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SelectorKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SelectorKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SelectorKindInput is an input type that accepts values of the SelectorKind enum
// A concrete instance of `SelectorKindInput` can be one of the following:
//
//	SelectorKindResourceLocation
//	SelectorKindResourceType
//	SelectorKindResourceWithoutLocation
//	SelectorKindPolicyDefinitionReferenceId
type SelectorKindInput interface {
	pulumi.Input

	ToSelectorKindOutput() SelectorKindOutput
	ToSelectorKindOutputWithContext(context.Context) SelectorKindOutput
}

var selectorKindPtrType = reflect.TypeOf((**SelectorKind)(nil)).Elem()

type SelectorKindPtrInput interface {
	pulumi.Input

	ToSelectorKindPtrOutput() SelectorKindPtrOutput
	ToSelectorKindPtrOutputWithContext(context.Context) SelectorKindPtrOutput
}

type selectorKindPtr string

func SelectorKindPtr(v string) SelectorKindPtrInput {
	return (*selectorKindPtr)(&v)
}

func (*selectorKindPtr) ElementType() reflect.Type {
	return selectorKindPtrType
}

func (in *selectorKindPtr) ToSelectorKindPtrOutput() SelectorKindPtrOutput {
	return pulumi.ToOutput(in).(SelectorKindPtrOutput)
}

func (in *selectorKindPtr) ToSelectorKindPtrOutputWithContext(ctx context.Context) SelectorKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SelectorKindPtrOutput)
}

// Type of the role eligibility schedule expiration
type Type string

const (
	TypeAfterDuration = Type("AfterDuration")
	TypeAfterDateTime = Type("AfterDateTime")
	TypeNoExpiration  = Type("NoExpiration")
)

func (Type) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (e Type) ToTypeOutput() TypeOutput {
	return pulumi.ToOutput(e).(TypeOutput)
}

func (e Type) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TypeOutput)
}

func (e Type) ToTypePtrOutput() TypePtrOutput {
	return e.ToTypePtrOutputWithContext(context.Background())
}

func (e Type) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return Type(e).ToTypeOutputWithContext(ctx).ToTypePtrOutputWithContext(ctx)
}

func (e Type) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Type) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TypeOutput struct{ *pulumi.OutputState }

func (TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (o TypeOutput) ToTypeOutput() TypeOutput {
	return o
}

func (o TypeOutput) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return o
}

func (o TypeOutput) ToTypePtrOutput() TypePtrOutput {
	return o.ToTypePtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Type) *Type {
		return &v
	}).(TypePtrOutput)
}

func (o TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TypePtrOutput struct{ *pulumi.OutputState }

func (TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Type)(nil)).Elem()
}

func (o TypePtrOutput) ToTypePtrOutput() TypePtrOutput {
	return o
}

func (o TypePtrOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o
}

func (o TypePtrOutput) Elem() TypeOutput {
	return o.ApplyT(func(v *Type) Type {
		if v != nil {
			return *v
		}
		var ret Type
		return ret
	}).(TypeOutput)
}

func (o TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TypeInput is an input type that accepts values of the Type enum
// A concrete instance of `TypeInput` can be one of the following:
//
//	TypeAfterDuration
//	TypeAfterDateTime
//	TypeNoExpiration
type TypeInput interface {
	pulumi.Input

	ToTypeOutput() TypeOutput
	ToTypeOutputWithContext(context.Context) TypeOutput
}

var typePtrType = reflect.TypeOf((**Type)(nil)).Elem()

type TypePtrInput interface {
	pulumi.Input

	ToTypePtrOutput() TypePtrOutput
	ToTypePtrOutputWithContext(context.Context) TypePtrOutput
}

type typePtr string

func TypePtr(v string) TypePtrInput {
	return (*typePtr)(&v)
}

func (*typePtr) ElementType() reflect.Type {
	return typePtrType
}

func (in *typePtr) ToTypePtrOutput() TypePtrOutput {
	return pulumi.ToOutput(in).(TypePtrOutput)
}

func (in *typePtr) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TypePtrOutput)
}

// The type of user.
type UserType string

const (
	UserTypeUser             = UserType("User")
	UserTypeGroup            = UserType("Group")
	UserTypeServicePrincipal = UserType("ServicePrincipal")
)

func (UserType) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (e UserType) ToUserTypeOutput() UserTypeOutput {
	return pulumi.ToOutput(e).(UserTypeOutput)
}

func (e UserType) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserTypeOutput)
}

func (e UserType) ToUserTypePtrOutput() UserTypePtrOutput {
	return e.ToUserTypePtrOutputWithContext(context.Background())
}

func (e UserType) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return UserType(e).ToUserTypeOutputWithContext(ctx).ToUserTypePtrOutputWithContext(ctx)
}

func (e UserType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserTypeOutput struct{ *pulumi.OutputState }

func (UserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (o UserTypeOutput) ToUserTypeOutput() UserTypeOutput {
	return o
}

func (o UserTypeOutput) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return o
}

func (o UserTypeOutput) ToUserTypePtrOutput() UserTypePtrOutput {
	return o.ToUserTypePtrOutputWithContext(context.Background())
}

func (o UserTypeOutput) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserType) *UserType {
		return &v
	}).(UserTypePtrOutput)
}

func (o UserTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserTypePtrOutput struct{ *pulumi.OutputState }

func (UserTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserType)(nil)).Elem()
}

func (o UserTypePtrOutput) ToUserTypePtrOutput() UserTypePtrOutput {
	return o
}

func (o UserTypePtrOutput) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return o
}

func (o UserTypePtrOutput) Elem() UserTypeOutput {
	return o.ApplyT(func(v *UserType) UserType {
		if v != nil {
			return *v
		}
		var ret UserType
		return ret
	}).(UserTypeOutput)
}

func (o UserTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserTypeInput is an input type that accepts values of the UserType enum
// A concrete instance of `UserTypeInput` can be one of the following:
//
//	UserTypeUser
//	UserTypeGroup
//	UserTypeServicePrincipal
type UserTypeInput interface {
	pulumi.Input

	ToUserTypeOutput() UserTypeOutput
	ToUserTypeOutputWithContext(context.Context) UserTypeOutput
}

var userTypePtrType = reflect.TypeOf((**UserType)(nil)).Elem()

type UserTypePtrInput interface {
	pulumi.Input

	ToUserTypePtrOutput() UserTypePtrOutput
	ToUserTypePtrOutputWithContext(context.Context) UserTypePtrOutput
}

type userTypePtr string

func UserTypePtr(v string) UserTypePtrInput {
	return (*userTypePtr)(&v)
}

func (*userTypePtr) ElementType() reflect.Type {
	return userTypePtrType
}

func (in *userTypePtr) ToUserTypePtrOutput() UserTypePtrOutput {
	return pulumi.ToOutput(in).(UserTypePtrOutput)
}

func (in *userTypePtr) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessReviewRecurrencePatternTypeOutput{})
	pulumi.RegisterOutputType(AccessReviewRecurrencePatternTypePtrOutput{})
	pulumi.RegisterOutputType(AccessReviewRecurrenceRangeTypeOutput{})
	pulumi.RegisterOutputType(AccessReviewRecurrenceRangeTypePtrOutput{})
	pulumi.RegisterOutputType(AccessReviewResultOutput{})
	pulumi.RegisterOutputType(AccessReviewResultPtrOutput{})
	pulumi.RegisterOutputType(ApprovalModeOutput{})
	pulumi.RegisterOutputType(ApprovalModePtrOutput{})
	pulumi.RegisterOutputType(AssignmentScopeValidationOutput{})
	pulumi.RegisterOutputType(AssignmentScopeValidationPtrOutput{})
	pulumi.RegisterOutputType(AssignmentTypeOutput{})
	pulumi.RegisterOutputType(AssignmentTypePtrOutput{})
	pulumi.RegisterOutputType(DefaultDecisionTypeOutput{})
	pulumi.RegisterOutputType(DefaultDecisionTypePtrOutput{})
	pulumi.RegisterOutputType(EnablementRulesOutput{})
	pulumi.RegisterOutputType(EnablementRulesPtrOutput{})
	pulumi.RegisterOutputType(EnforcementModeOutput{})
	pulumi.RegisterOutputType(EnforcementModePtrOutput{})
	pulumi.RegisterOutputType(ExcludedPrincipalTypesOutput{})
	pulumi.RegisterOutputType(ExcludedPrincipalTypesPtrOutput{})
	pulumi.RegisterOutputType(ExemptionCategoryOutput{})
	pulumi.RegisterOutputType(ExemptionCategoryPtrOutput{})
	pulumi.RegisterOutputType(LockLevelOutput{})
	pulumi.RegisterOutputType(LockLevelPtrOutput{})
	pulumi.RegisterOutputType(NotificationDeliveryMechanismOutput{})
	pulumi.RegisterOutputType(NotificationDeliveryMechanismPtrOutput{})
	pulumi.RegisterOutputType(NotificationLevelOutput{})
	pulumi.RegisterOutputType(NotificationLevelPtrOutput{})
	pulumi.RegisterOutputType(OverrideKindOutput{})
	pulumi.RegisterOutputType(OverrideKindPtrOutput{})
	pulumi.RegisterOutputType(PIMOnlyModeOutput{})
	pulumi.RegisterOutputType(PIMOnlyModePtrOutput{})
	pulumi.RegisterOutputType(ParameterTypeOutput{})
	pulumi.RegisterOutputType(ParameterTypePtrOutput{})
	pulumi.RegisterOutputType(PolicyTypeOutput{})
	pulumi.RegisterOutputType(PolicyTypePtrOutput{})
	pulumi.RegisterOutputType(PrincipalTypeOutput{})
	pulumi.RegisterOutputType(PrincipalTypePtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOptionsOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOptionsPtrOutput{})
	pulumi.RegisterOutputType(RecipientTypeOutput{})
	pulumi.RegisterOutputType(RecipientTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SelectorKindOutput{})
	pulumi.RegisterOutputType(SelectorKindPtrOutput{})
	pulumi.RegisterOutputType(TypeOutput{})
	pulumi.RegisterOutputType(TypePtrOutput{})
	pulumi.RegisterOutputType(UserTypeOutput{})
	pulumi.RegisterOutputType(UserTypePtrOutput{})
}
