// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified authorization from the specified express route circuit.
//
// Uses Azure REST API version 2024-05-01.
//
// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupExpressRouteCircuitAuthorization(ctx *pulumi.Context, args *LookupExpressRouteCircuitAuthorizationArgs, opts ...pulumi.InvokeOption) (*LookupExpressRouteCircuitAuthorizationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupExpressRouteCircuitAuthorizationResult
	err := ctx.Invoke("azure-native:network:getExpressRouteCircuitAuthorization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExpressRouteCircuitAuthorizationArgs struct {
	// The name of the authorization.
	AuthorizationName string `pulumi:"authorizationName"`
	// The name of the express route circuit.
	CircuitName string `pulumi:"circuitName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Authorization in an ExpressRouteCircuit resource.
type LookupExpressRouteCircuitAuthorizationResult struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The reference to the ExpressRoute connection resource using the authorization.
	ConnectionResourceUri string `pulumi:"connectionResourceUri"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the authorization resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

func LookupExpressRouteCircuitAuthorizationOutput(ctx *pulumi.Context, args LookupExpressRouteCircuitAuthorizationOutputArgs, opts ...pulumi.InvokeOption) LookupExpressRouteCircuitAuthorizationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupExpressRouteCircuitAuthorizationResultOutput, error) {
			args := v.(LookupExpressRouteCircuitAuthorizationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getExpressRouteCircuitAuthorization", args, LookupExpressRouteCircuitAuthorizationResultOutput{}, options).(LookupExpressRouteCircuitAuthorizationResultOutput), nil
		}).(LookupExpressRouteCircuitAuthorizationResultOutput)
}

type LookupExpressRouteCircuitAuthorizationOutputArgs struct {
	// The name of the authorization.
	AuthorizationName pulumi.StringInput `pulumi:"authorizationName"`
	// The name of the express route circuit.
	CircuitName pulumi.StringInput `pulumi:"circuitName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupExpressRouteCircuitAuthorizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExpressRouteCircuitAuthorizationArgs)(nil)).Elem()
}

// Authorization in an ExpressRouteCircuit resource.
type LookupExpressRouteCircuitAuthorizationResultOutput struct{ *pulumi.OutputState }

func (LookupExpressRouteCircuitAuthorizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExpressRouteCircuitAuthorizationResult)(nil)).Elem()
}

func (o LookupExpressRouteCircuitAuthorizationResultOutput) ToLookupExpressRouteCircuitAuthorizationResultOutput() LookupExpressRouteCircuitAuthorizationResultOutput {
	return o
}

func (o LookupExpressRouteCircuitAuthorizationResultOutput) ToLookupExpressRouteCircuitAuthorizationResultOutputWithContext(ctx context.Context) LookupExpressRouteCircuitAuthorizationResultOutput {
	return o
}

// The authorization key.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The authorization use status.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The reference to the ExpressRoute connection resource using the authorization.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) ConnectionResourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) string { return v.ConnectionResourceUri }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the authorization resource.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o LookupExpressRouteCircuitAuthorizationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitAuthorizationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExpressRouteCircuitAuthorizationResultOutput{})
}
