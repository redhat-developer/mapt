// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get specified scope connection created by this Network Manager.
//
// Uses Azure REST API version 2024-05-01.
//
// Other available API versions: 2022-01-01, 2022-02-01-preview, 2022-04-01-preview, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupScopeConnection(ctx *pulumi.Context, args *LookupScopeConnectionArgs, opts ...pulumi.InvokeOption) (*LookupScopeConnectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupScopeConnectionResult
	err := ctx.Invoke("azure-native:network:getScopeConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupScopeConnectionArgs struct {
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name for the cross-tenant connection.
	ScopeConnectionName string `pulumi:"scopeConnectionName"`
}

// The Scope Connections resource
type LookupScopeConnectionResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// A description of the scope connection.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource ID.
	ResourceId *string `pulumi:"resourceId"`
	// The system metadata related to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Tenant ID.
	TenantId *string `pulumi:"tenantId"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupScopeConnectionOutput(ctx *pulumi.Context, args LookupScopeConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupScopeConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupScopeConnectionResultOutput, error) {
			args := v.(LookupScopeConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getScopeConnection", args, LookupScopeConnectionResultOutput{}, options).(LookupScopeConnectionResultOutput), nil
		}).(LookupScopeConnectionResultOutput)
}

type LookupScopeConnectionOutputArgs struct {
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name for the cross-tenant connection.
	ScopeConnectionName pulumi.StringInput `pulumi:"scopeConnectionName"`
}

func (LookupScopeConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScopeConnectionArgs)(nil)).Elem()
}

// The Scope Connections resource
type LookupScopeConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupScopeConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScopeConnectionResult)(nil)).Elem()
}

func (o LookupScopeConnectionResultOutput) ToLookupScopeConnectionResultOutput() LookupScopeConnectionResultOutput {
	return o
}

func (o LookupScopeConnectionResultOutput) ToLookupScopeConnectionResultOutputWithContext(ctx context.Context) LookupScopeConnectionResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupScopeConnectionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A description of the scope connection.
func (o LookupScopeConnectionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupScopeConnectionResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupScopeConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupScopeConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupScopeConnectionResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The system metadata related to this resource.
func (o LookupScopeConnectionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Tenant ID.
func (o LookupScopeConnectionResultOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o LookupScopeConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopeConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScopeConnectionResultOutput{})
}
