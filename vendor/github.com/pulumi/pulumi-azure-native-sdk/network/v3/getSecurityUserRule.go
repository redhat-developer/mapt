// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a security user rule.
//
// Uses Azure REST API version 2024-05-01.
//
// Other available API versions: 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupSecurityUserRule(ctx *pulumi.Context, args *LookupSecurityUserRuleArgs, opts ...pulumi.InvokeOption) (*LookupSecurityUserRuleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityUserRuleResult
	err := ctx.Invoke("azure-native:network:getSecurityUserRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSecurityUserRuleArgs struct {
	// The name of the network manager Security Configuration.
	ConfigurationName string `pulumi:"configurationName"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName string `pulumi:"ruleCollectionName"`
	// The name of the rule.
	RuleName string `pulumi:"ruleName"`
}

// Network security user rule.
type LookupSecurityUserRuleResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// A description for this rule.
	Description *string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security configuration user rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
	// The system metadata related to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupSecurityUserRuleOutput(ctx *pulumi.Context, args LookupSecurityUserRuleOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityUserRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecurityUserRuleResultOutput, error) {
			args := v.(LookupSecurityUserRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getSecurityUserRule", args, LookupSecurityUserRuleResultOutput{}, options).(LookupSecurityUserRuleResultOutput), nil
		}).(LookupSecurityUserRuleResultOutput)
}

type LookupSecurityUserRuleOutputArgs struct {
	// The name of the network manager Security Configuration.
	ConfigurationName pulumi.StringInput `pulumi:"configurationName"`
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName pulumi.StringInput `pulumi:"ruleCollectionName"`
	// The name of the rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
}

func (LookupSecurityUserRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityUserRuleArgs)(nil)).Elem()
}

// Network security user rule.
type LookupSecurityUserRuleResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityUserRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityUserRuleResult)(nil)).Elem()
}

func (o LookupSecurityUserRuleResultOutput) ToLookupSecurityUserRuleResultOutput() LookupSecurityUserRuleResultOutput {
	return o
}

func (o LookupSecurityUserRuleResultOutput) ToLookupSecurityUserRuleResultOutputWithContext(ctx context.Context) LookupSecurityUserRuleResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupSecurityUserRuleResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A description for this rule.
func (o LookupSecurityUserRuleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o LookupSecurityUserRuleResultOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o LookupSecurityUserRuleResultOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o LookupSecurityUserRuleResultOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupSecurityUserRuleResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupSecurityUserRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupSecurityUserRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network protocol this rule applies to.
func (o LookupSecurityUserRuleResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security configuration user rule resource.
func (o LookupSecurityUserRuleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier for this resource.
func (o LookupSecurityUserRuleResultOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The source port ranges.
func (o LookupSecurityUserRuleResultOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o LookupSecurityUserRuleResultOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// The system metadata related to this resource.
func (o LookupSecurityUserRuleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o LookupSecurityUserRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityUserRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityUserRuleResultOutput{})
}
