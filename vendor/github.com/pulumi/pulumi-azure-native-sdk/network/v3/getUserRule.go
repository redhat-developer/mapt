// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a user rule.
//
// Uses Azure REST API version 2022-04-01-preview.
//
// Other available API versions: 2021-02-01-preview, 2022-02-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupUserRule(ctx *pulumi.Context, args *LookupUserRuleArgs, opts ...pulumi.InvokeOption) (*LookupUserRuleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupUserRuleResult
	err := ctx.Invoke("azure-native:network:getUserRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUserRuleArgs struct {
	// The name of the network manager Security Configuration.
	ConfigurationName string `pulumi:"configurationName"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName string `pulumi:"ruleCollectionName"`
	// The name of the rule.
	RuleName string `pulumi:"ruleName"`
}

// Network security user rule.
type LookupUserRuleResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// A description for this rule.
	Description *string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Custom'.
	Kind string `pulumi:"kind"`
	// Resource name.
	Name string `pulumi:"name"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security configuration user rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
	// The system metadata related to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupUserRuleOutput(ctx *pulumi.Context, args LookupUserRuleOutputArgs, opts ...pulumi.InvokeOption) LookupUserRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserRuleResultOutput, error) {
			args := v.(LookupUserRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getUserRule", args, LookupUserRuleResultOutput{}, options).(LookupUserRuleResultOutput), nil
		}).(LookupUserRuleResultOutput)
}

type LookupUserRuleOutputArgs struct {
	// The name of the network manager Security Configuration.
	ConfigurationName pulumi.StringInput `pulumi:"configurationName"`
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName pulumi.StringInput `pulumi:"ruleCollectionName"`
	// The name of the rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
}

func (LookupUserRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserRuleArgs)(nil)).Elem()
}

// Network security user rule.
type LookupUserRuleResultOutput struct{ *pulumi.OutputState }

func (LookupUserRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserRuleResult)(nil)).Elem()
}

func (o LookupUserRuleResultOutput) ToLookupUserRuleResultOutput() LookupUserRuleResultOutput {
	return o
}

func (o LookupUserRuleResultOutput) ToLookupUserRuleResultOutputWithContext(ctx context.Context) LookupUserRuleResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupUserRuleResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A description for this rule.
func (o LookupUserRuleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserRuleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o LookupUserRuleResultOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserRuleResult) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o LookupUserRuleResultOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v LookupUserRuleResult) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o LookupUserRuleResultOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupUserRuleResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupUserRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Custom'.
func (o LookupUserRuleResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupUserRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network protocol this rule applies to.
func (o LookupUserRuleResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security configuration user rule resource.
func (o LookupUserRuleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The source port ranges.
func (o LookupUserRuleResultOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserRuleResult) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o LookupUserRuleResultOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v LookupUserRuleResult) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// The system metadata related to this resource.
func (o LookupUserRuleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupUserRuleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o LookupUserRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserRuleResultOutput{})
}
