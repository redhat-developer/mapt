// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified subnet by virtual network and resource group.
//
// Uses Azure REST API version 2024-05-01.
//
// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupSubnet(ctx *pulumi.Context, args *LookupSubnetArgs, opts ...pulumi.InvokeOption) (*LookupSubnetResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSubnetResult
	err := ctx.Invoke("azure-native:network:getSubnet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupSubnetArgs struct {
	// Expands referenced resources.
	Expand *string `pulumi:"expand"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the subnet.
	SubnetName string `pulumi:"subnetName"`
	// The name of the virtual network.
	VirtualNetworkName string `pulumi:"virtualNetworkName"`
}

// Subnet in a virtual network resource.
type LookupSubnetResult struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIPConfigurations []ApplicationGatewayIPConfigurationResponse `pulumi:"applicationGatewayIPConfigurations"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
	DefaultOutboundAccess *bool `pulumi:"defaultOutboundAccess"`
	// An array of references to the delegations on the subnet.
	Delegations []DelegationResponse `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResourceResponse `pulumi:"ipAllocations"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles []IPConfigurationProfileResponse `pulumi:"ipConfigurationProfiles"`
	// An array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// A list of IPAM Pools for allocating IP address prefixes.
	IpamPoolPrefixAllocations []IpamPoolPrefixAllocationResponse `pulumi:"ipamPoolPrefixAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResourceResponse `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// An array of references to private endpoints.
	PrivateEndpoints []PrivateEndpointResponse `pulumi:"privateEndpoints"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the subnet resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose string `pulumi:"purpose"`
	// An array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// An array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLinkResponse `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyResponse `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
	// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
	SharingScope *string `pulumi:"sharingScope"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupSubnetResult
func (val *LookupSubnetResult) Defaults() *LookupSubnetResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		privateEndpointNetworkPolicies_ := "Disabled"
		tmp.PrivateEndpointNetworkPolicies = &privateEndpointNetworkPolicies_
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		privateLinkServiceNetworkPolicies_ := "Enabled"
		tmp.PrivateLinkServiceNetworkPolicies = &privateLinkServiceNetworkPolicies_
	}
	return &tmp
}
func LookupSubnetOutput(ctx *pulumi.Context, args LookupSubnetOutputArgs, opts ...pulumi.InvokeOption) LookupSubnetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSubnetResultOutput, error) {
			args := v.(LookupSubnetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getSubnet", args, LookupSubnetResultOutput{}, options).(LookupSubnetResultOutput), nil
		}).(LookupSubnetResultOutput)
}

type LookupSubnetOutputArgs struct {
	// Expands referenced resources.
	Expand pulumi.StringPtrInput `pulumi:"expand"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the subnet.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// The name of the virtual network.
	VirtualNetworkName pulumi.StringInput `pulumi:"virtualNetworkName"`
}

func (LookupSubnetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetArgs)(nil)).Elem()
}

// Subnet in a virtual network resource.
type LookupSubnetResultOutput struct{ *pulumi.OutputState }

func (LookupSubnetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetResult)(nil)).Elem()
}

func (o LookupSubnetResultOutput) ToLookupSubnetResultOutput() LookupSubnetResultOutput {
	return o
}

func (o LookupSubnetResultOutput) ToLookupSubnetResultOutputWithContext(ctx context.Context) LookupSubnetResultOutput {
	return o
}

// The address prefix for the subnet.
func (o LookupSubnetResultOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o LookupSubnetResultOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o LookupSubnetResultOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []ApplicationGatewayIPConfigurationResponse {
		return v.ApplicationGatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// The Azure API version of the resource.
func (o LookupSubnetResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
func (o LookupSubnetResultOutput) DefaultOutboundAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *bool { return v.DefaultOutboundAccess }).(pulumi.BoolPtrOutput)
}

// An array of references to the delegations on the subnet.
func (o LookupSubnetResultOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []DelegationResponse { return v.Delegations }).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupSubnetResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupSubnetResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o LookupSubnetResultOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []SubResourceResponse { return v.IpAllocations }).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o LookupSubnetResultOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []IPConfigurationProfileResponse { return v.IpConfigurationProfiles }).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o LookupSubnetResultOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// A list of IPAM Pools for allocating IP address prefixes.
func (o LookupSubnetResultOutput) IpamPoolPrefixAllocations() IpamPoolPrefixAllocationResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []IpamPoolPrefixAllocationResponse { return v.IpamPoolPrefixAllocations }).(IpamPoolPrefixAllocationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LookupSubnetResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o LookupSubnetResultOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *SubResourceResponse { return v.NatGateway }).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o LookupSubnetResultOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o LookupSubnetResultOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o LookupSubnetResultOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []PrivateEndpointResponse { return v.PrivateEndpoints }).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o LookupSubnetResultOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o LookupSubnetResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o LookupSubnetResultOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.Purpose }).(pulumi.StringOutput)
}

// An array of references to the external resources using subnet.
func (o LookupSubnetResultOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []ResourceNavigationLinkResponse { return v.ResourceNavigationLinks }).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o LookupSubnetResultOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o LookupSubnetResultOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []ServiceAssociationLinkResponse { return v.ServiceAssociationLinks }).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o LookupSubnetResultOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []ServiceEndpointPolicyResponse { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o LookupSubnetResultOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []ServiceEndpointPropertiesFormatResponse { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
func (o LookupSubnetResultOutput) SharingScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *string { return v.SharingScope }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o LookupSubnetResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubnetResultOutput{})
}
