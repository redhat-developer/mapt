// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Authorization in an ExpressRouteCircuit resource.
//
// Uses Azure REST API version 2024-05-01. In version 2.x of the Azure Native provider, it used API version 2023-02-01.
//
// Other available API versions: 2018-06-01, 2018-07-01, 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type ExpressRouteCircuitAuthorization struct {
	pulumi.CustomResourceState

	// The authorization key.
	AuthorizationKey pulumi.StringPtrOutput `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus pulumi.StringPtrOutput `pulumi:"authorizationUseStatus"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The reference to the ExpressRoute connection resource using the authorization.
	ConnectionResourceUri pulumi.StringOutput `pulumi:"connectionResourceUri"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The provisioning state of the authorization resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewExpressRouteCircuitAuthorization registers a new resource with the given unique name, arguments, and options.
func NewExpressRouteCircuitAuthorization(ctx *pulumi.Context,
	name string, args *ExpressRouteCircuitAuthorizationArgs, opts ...pulumi.ResourceOption) (*ExpressRouteCircuitAuthorization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CircuitName == nil {
		return nil, errors.New("invalid value for required argument 'CircuitName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20150501preview:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20150615:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20160330:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20160601:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20160901:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20161201:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20170301:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20170601:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20170801:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20170901:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20171001:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20171101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180201:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180401:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180601:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180701:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180801:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20181001:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20181101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20181201:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190201:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190401:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190601:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190701:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190801:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190901:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20191101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20191201:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200301:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200401:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200501:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200601:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200701:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200801:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20201101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210201:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210301:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210501:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210801:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220501:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220701:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220901:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20221101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230201:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230401:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230501:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230601:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230901:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20231101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240101:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240301:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240501:ExpressRouteCircuitAuthorization"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240701:ExpressRouteCircuitAuthorization"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ExpressRouteCircuitAuthorization
	err := ctx.RegisterResource("azure-native:network:ExpressRouteCircuitAuthorization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExpressRouteCircuitAuthorization gets an existing ExpressRouteCircuitAuthorization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExpressRouteCircuitAuthorization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExpressRouteCircuitAuthorizationState, opts ...pulumi.ResourceOption) (*ExpressRouteCircuitAuthorization, error) {
	var resource ExpressRouteCircuitAuthorization
	err := ctx.ReadResource("azure-native:network:ExpressRouteCircuitAuthorization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExpressRouteCircuitAuthorization resources.
type expressRouteCircuitAuthorizationState struct {
}

type ExpressRouteCircuitAuthorizationState struct {
}

func (ExpressRouteCircuitAuthorizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*expressRouteCircuitAuthorizationState)(nil)).Elem()
}

type expressRouteCircuitAuthorizationArgs struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The name of the authorization.
	AuthorizationName *string `pulumi:"authorizationName"`
	// The authorization use status.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// The name of the express route circuit.
	CircuitName string `pulumi:"circuitName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ExpressRouteCircuitAuthorization resource.
type ExpressRouteCircuitAuthorizationArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput
	// The name of the authorization.
	AuthorizationName pulumi.StringPtrInput
	// The authorization use status.
	AuthorizationUseStatus pulumi.StringPtrInput
	// The name of the express route circuit.
	CircuitName pulumi.StringInput
	// Resource ID.
	Id pulumi.StringPtrInput
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (ExpressRouteCircuitAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*expressRouteCircuitAuthorizationArgs)(nil)).Elem()
}

type ExpressRouteCircuitAuthorizationInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationOutput() ExpressRouteCircuitAuthorizationOutput
	ToExpressRouteCircuitAuthorizationOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationOutput
}

func (*ExpressRouteCircuitAuthorization) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitAuthorization)(nil)).Elem()
}

func (i *ExpressRouteCircuitAuthorization) ToExpressRouteCircuitAuthorizationOutput() ExpressRouteCircuitAuthorizationOutput {
	return i.ToExpressRouteCircuitAuthorizationOutputWithContext(context.Background())
}

func (i *ExpressRouteCircuitAuthorization) ToExpressRouteCircuitAuthorizationOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationOutput)
}

type ExpressRouteCircuitAuthorizationOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitAuthorization)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationOutput) ToExpressRouteCircuitAuthorizationOutput() ExpressRouteCircuitAuthorizationOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationOutput) ToExpressRouteCircuitAuthorizationOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringPtrOutput { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The authorization use status.
func (o ExpressRouteCircuitAuthorizationOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringPtrOutput { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o ExpressRouteCircuitAuthorizationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The reference to the ExpressRoute connection resource using the authorization.
func (o ExpressRouteCircuitAuthorizationOutput) ConnectionResourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringOutput { return v.ConnectionResourceUri }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the authorization resource.
func (o ExpressRouteCircuitAuthorizationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ExpressRouteCircuitAuthorizationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitAuthorization) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationOutput{})
}
