// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Network routing rule.
//
// Uses Azure REST API version 2024-05-01. In version 2.x of the Azure Native provider, it used API version 2024-03-01.
//
// Other available API versions: 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type RoutingRule struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// A description for this rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates the destination for this particular rule.
	Destination RoutingRuleRouteDestinationResponseOutput `pulumi:"destination"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates the next hop for this particular rule.
	NextHop RoutingRuleNextHopResponseOutput `pulumi:"nextHop"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Unique identifier for this resource.
	ResourceGuid pulumi.StringOutput `pulumi:"resourceGuid"`
	// The system metadata related to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRoutingRule registers a new resource with the given unique name, arguments, and options.
func NewRoutingRule(ctx *pulumi.Context,
	name string, args *RoutingRuleArgs, opts ...pulumi.ResourceOption) (*RoutingRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationName'")
	}
	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.NetworkManagerName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerName'")
	}
	if args.NextHop == nil {
		return nil, errors.New("invalid value for required argument 'NextHop'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RuleCollectionName == nil {
		return nil, errors.New("invalid value for required argument 'RuleCollectionName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20240301:RoutingRule"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240501:RoutingRule"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240701:RoutingRule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RoutingRule
	err := ctx.RegisterResource("azure-native:network:RoutingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoutingRule gets an existing RoutingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoutingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoutingRuleState, opts ...pulumi.ResourceOption) (*RoutingRule, error) {
	var resource RoutingRule
	err := ctx.ReadResource("azure-native:network:RoutingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoutingRule resources.
type routingRuleState struct {
}

type RoutingRuleState struct {
}

func (RoutingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*routingRuleState)(nil)).Elem()
}

type routingRuleArgs struct {
	// The name of the network manager Routing Configuration.
	ConfigurationName string `pulumi:"configurationName"`
	// A description for this rule.
	Description *string `pulumi:"description"`
	// Indicates the destination for this particular rule.
	Destination RoutingRuleRouteDestination `pulumi:"destination"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// Indicates the next hop for this particular rule.
	NextHop RoutingRuleNextHop `pulumi:"nextHop"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the network manager routing Configuration rule collection.
	RuleCollectionName string `pulumi:"ruleCollectionName"`
	// The name of the rule.
	RuleName *string `pulumi:"ruleName"`
}

// The set of arguments for constructing a RoutingRule resource.
type RoutingRuleArgs struct {
	// The name of the network manager Routing Configuration.
	ConfigurationName pulumi.StringInput
	// A description for this rule.
	Description pulumi.StringPtrInput
	// Indicates the destination for this particular rule.
	Destination RoutingRuleRouteDestinationInput
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput
	// Indicates the next hop for this particular rule.
	NextHop RoutingRuleNextHopInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the network manager routing Configuration rule collection.
	RuleCollectionName pulumi.StringInput
	// The name of the rule.
	RuleName pulumi.StringPtrInput
}

func (RoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routingRuleArgs)(nil)).Elem()
}

type RoutingRuleInput interface {
	pulumi.Input

	ToRoutingRuleOutput() RoutingRuleOutput
	ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput
}

func (*RoutingRule) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRule)(nil)).Elem()
}

func (i *RoutingRule) ToRoutingRuleOutput() RoutingRuleOutput {
	return i.ToRoutingRuleOutputWithContext(context.Background())
}

func (i *RoutingRule) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleOutput)
}

type RoutingRuleOutput struct{ *pulumi.OutputState }

func (RoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRule)(nil)).Elem()
}

func (o RoutingRuleOutput) ToRoutingRuleOutput() RoutingRuleOutput {
	return o
}

func (o RoutingRuleOutput) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return o
}

// The Azure API version of the resource.
func (o RoutingRuleOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A description for this rule.
func (o RoutingRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates the destination for this particular rule.
func (o RoutingRuleOutput) Destination() RoutingRuleRouteDestinationResponseOutput {
	return o.ApplyT(func(v *RoutingRule) RoutingRuleRouteDestinationResponseOutput { return v.Destination }).(RoutingRuleRouteDestinationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RoutingRuleOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Resource name.
func (o RoutingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates the next hop for this particular rule.
func (o RoutingRuleOutput) NextHop() RoutingRuleNextHopResponseOutput {
	return o.ApplyT(func(v *RoutingRule) RoutingRuleNextHopResponseOutput { return v.NextHop }).(RoutingRuleNextHopResponseOutput)
}

// The provisioning state of the resource.
func (o RoutingRuleOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier for this resource.
func (o RoutingRuleOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The system metadata related to this resource.
func (o RoutingRuleOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *RoutingRule) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o RoutingRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RoutingRuleOutput{})
}
