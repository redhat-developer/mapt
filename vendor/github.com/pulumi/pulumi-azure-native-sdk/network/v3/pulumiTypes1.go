// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Reference to a public IP address.
type ReferencedPublicIpAddressResponse struct {
	// The PublicIPAddress Reference.
	Id *string `pulumi:"id"`
}

// Reference to a public IP address.
type ReferencedPublicIpAddressResponseOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseOutput {
	return o
}

// The PublicIPAddress Reference.
func (o ReferencedPublicIpAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferencedPublicIpAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ReferencedPublicIpAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) Index(i pulumi.IntInput) ReferencedPublicIpAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferencedPublicIpAddressResponse {
		return vs[0].([]ReferencedPublicIpAddressResponse)[vs[1].(int)]
	}).(ReferencedPublicIpAddressResponseOutput)
}

// Gateway Resiliency based Recommendations
type ResiliencyRecommendationComponentsResponse struct {
	// Current Score of the gateway
	CurrentScore *string `pulumi:"currentScore"`
	// Max score that the gateway can achieve if the specified recommendation is applied
	MaxScore *string `pulumi:"maxScore"`
	// Name of the Resiliency based Recommendation Component
	Name *string `pulumi:"name"`
	// List of Gateway Resiliency based Recommendations
	Recommendations []GatewayResiliencyRecommendationResponse `pulumi:"recommendations"`
}

// Gateway Resiliency based Recommendations
type ResiliencyRecommendationComponentsResponseOutput struct{ *pulumi.OutputState }

func (ResiliencyRecommendationComponentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyRecommendationComponentsResponse)(nil)).Elem()
}

func (o ResiliencyRecommendationComponentsResponseOutput) ToResiliencyRecommendationComponentsResponseOutput() ResiliencyRecommendationComponentsResponseOutput {
	return o
}

func (o ResiliencyRecommendationComponentsResponseOutput) ToResiliencyRecommendationComponentsResponseOutputWithContext(ctx context.Context) ResiliencyRecommendationComponentsResponseOutput {
	return o
}

// Current Score of the gateway
func (o ResiliencyRecommendationComponentsResponseOutput) CurrentScore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyRecommendationComponentsResponse) *string { return v.CurrentScore }).(pulumi.StringPtrOutput)
}

// Max score that the gateway can achieve if the specified recommendation is applied
func (o ResiliencyRecommendationComponentsResponseOutput) MaxScore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyRecommendationComponentsResponse) *string { return v.MaxScore }).(pulumi.StringPtrOutput)
}

// Name of the Resiliency based Recommendation Component
func (o ResiliencyRecommendationComponentsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyRecommendationComponentsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of Gateway Resiliency based Recommendations
func (o ResiliencyRecommendationComponentsResponseOutput) Recommendations() GatewayResiliencyRecommendationResponseArrayOutput {
	return o.ApplyT(func(v ResiliencyRecommendationComponentsResponse) []GatewayResiliencyRecommendationResponse {
		return v.Recommendations
	}).(GatewayResiliencyRecommendationResponseArrayOutput)
}

type ResiliencyRecommendationComponentsResponseArrayOutput struct{ *pulumi.OutputState }

func (ResiliencyRecommendationComponentsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResiliencyRecommendationComponentsResponse)(nil)).Elem()
}

func (o ResiliencyRecommendationComponentsResponseArrayOutput) ToResiliencyRecommendationComponentsResponseArrayOutput() ResiliencyRecommendationComponentsResponseArrayOutput {
	return o
}

func (o ResiliencyRecommendationComponentsResponseArrayOutput) ToResiliencyRecommendationComponentsResponseArrayOutputWithContext(ctx context.Context) ResiliencyRecommendationComponentsResponseArrayOutput {
	return o
}

func (o ResiliencyRecommendationComponentsResponseArrayOutput) Index(i pulumi.IntInput) ResiliencyRecommendationComponentsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResiliencyRecommendationComponentsResponse {
		return vs[0].([]ResiliencyRecommendationComponentsResponse)[vs[1].(int)]
	}).(ResiliencyRecommendationComponentsResponseOutput)
}

// Representation of basic resource information.
type ResourceBasicsResponse struct {
	// List of IP address prefixes of the resource.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// ResourceId of the Azure resource.
	ResourceId *string `pulumi:"resourceId"`
}

// Representation of basic resource information.
type ResourceBasicsResponseOutput struct{ *pulumi.OutputState }

func (ResourceBasicsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceBasicsResponse)(nil)).Elem()
}

func (o ResourceBasicsResponseOutput) ToResourceBasicsResponseOutput() ResourceBasicsResponseOutput {
	return o
}

func (o ResourceBasicsResponseOutput) ToResourceBasicsResponseOutputWithContext(ctx context.Context) ResourceBasicsResponseOutput {
	return o
}

// List of IP address prefixes of the resource.
func (o ResourceBasicsResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceBasicsResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// ResourceId of the Azure resource.
func (o ResourceBasicsResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceBasicsResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ResourceBasicsResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceBasicsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceBasicsResponse)(nil)).Elem()
}

func (o ResourceBasicsResponseArrayOutput) ToResourceBasicsResponseArrayOutput() ResourceBasicsResponseArrayOutput {
	return o
}

func (o ResourceBasicsResponseArrayOutput) ToResourceBasicsResponseArrayOutputWithContext(ctx context.Context) ResourceBasicsResponseArrayOutput {
	return o
}

func (o ResourceBasicsResponseArrayOutput) Index(i pulumi.IntInput) ResourceBasicsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceBasicsResponse {
		return vs[0].([]ResourceBasicsResponse)[vs[1].(int)]
	}).(ResourceBasicsResponseOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ResourceNavigationLinkInput is an input type that accepts ResourceNavigationLinkArgs and ResourceNavigationLinkOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkInput` via:
//
//	ResourceNavigationLinkArgs{...}
type ResourceNavigationLinkInput interface {
	pulumi.Input

	ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput
	ToResourceNavigationLinkOutputWithContext(context.Context) ResourceNavigationLinkOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ResourceNavigationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return i.ToResourceNavigationLinkOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLinkArrayInput is an input type that accepts ResourceNavigationLinkArray and ResourceNavigationLinkArrayOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkArrayInput` via:
//
//	ResourceNavigationLinkArray{ ResourceNavigationLinkArgs{...} }
type ResourceNavigationLinkArrayInput interface {
	pulumi.Input

	ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput
	ToResourceNavigationLinkArrayOutputWithContext(context.Context) ResourceNavigationLinkArrayOutput
}

type ResourceNavigationLinkArray []ResourceNavigationLinkInput

func (ResourceNavigationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return i.ToResourceNavigationLinkArrayOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkArrayOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return o
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return o
}

// Resource ID.
func (o ResourceNavigationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ResourceNavigationLinkArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLink {
		return vs[0].([]ResourceNavigationLink)[vs[1].(int)]
	}).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the resource navigation link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return o
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ResourceNavigationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ResourceNavigationLinkResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Link to the external resource.
func (o ResourceNavigationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource navigation link resource.
func (o ResourceNavigationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ResourceNavigationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceNavigationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLinkResponse {
		return vs[0].([]ResourceNavigationLinkResponse)[vs[1].(int)]
	}).(ResourceNavigationLinkResponseOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParameters struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParameters
func (val *RetentionPolicyParameters) Defaults() *RetentionPolicyParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		days_ := 0
		tmp.Days = &days_
	}
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// RetentionPolicyParametersInput is an input type that accepts RetentionPolicyParametersArgs and RetentionPolicyParametersOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersInput` via:
//
//	RetentionPolicyParametersArgs{...}
type RetentionPolicyParametersInput interface {
	pulumi.Input

	ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput
	ToRetentionPolicyParametersOutputWithContext(context.Context) RetentionPolicyParametersOutput
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersArgs struct {
	// Number of days to retain flow log records.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParametersArgs
func (val *RetentionPolicyParametersArgs) Defaults() *RetentionPolicyParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		tmp.Days = pulumi.IntPtr(0)
	}
	if tmp.Enabled == nil {
		tmp.Enabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RetentionPolicyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParameters)(nil)).Elem()
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput {
	return i.ToRetentionPolicyParametersOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersOutputWithContext(ctx context.Context) RetentionPolicyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersOutput)
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return i.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersOutput).ToRetentionPolicyParametersPtrOutputWithContext(ctx)
}

// RetentionPolicyParametersPtrInput is an input type that accepts RetentionPolicyParametersArgs, RetentionPolicyParametersPtr and RetentionPolicyParametersPtrOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersPtrInput` via:
//
//	        RetentionPolicyParametersArgs{...}
//
//	or:
//
//	        nil
type RetentionPolicyParametersPtrInput interface {
	pulumi.Input

	ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput
	ToRetentionPolicyParametersPtrOutputWithContext(context.Context) RetentionPolicyParametersPtrOutput
}

type retentionPolicyParametersPtrType RetentionPolicyParametersArgs

func RetentionPolicyParametersPtr(v *RetentionPolicyParametersArgs) RetentionPolicyParametersPtrInput {
	return (*retentionPolicyParametersPtrType)(v)
}

func (*retentionPolicyParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParameters)(nil)).Elem()
}

func (i *retentionPolicyParametersPtrType) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return i.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (i *retentionPolicyParametersPtrType) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersPtrOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParameters)(nil)).Elem()
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput {
	return o
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersOutputWithContext(ctx context.Context) RetentionPolicyParametersOutput {
	return o
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return o.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetentionPolicyParameters) *RetentionPolicyParameters {
		return &v
	}).(RetentionPolicyParametersPtrOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParameters) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParameters) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersPtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParameters)(nil)).Elem()
}

func (o RetentionPolicyParametersPtrOutput) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return o
}

func (o RetentionPolicyParametersPtrOutput) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return o
}

func (o RetentionPolicyParametersPtrOutput) Elem() RetentionPolicyParametersOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) RetentionPolicyParameters {
		if v != nil {
			return *v
		}
		var ret RetentionPolicyParameters
		return ret
	}).(RetentionPolicyParametersOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponse struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParametersResponse
func (val *RetentionPolicyParametersResponse) Defaults() *RetentionPolicyParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		days_ := 0
		tmp.Days = &days_
	}
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutput() RetentionPolicyParametersResponseOutput {
	return o
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutputWithContext(ctx context.Context) RetentionPolicyParametersResponseOutput {
	return o
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) Elem() RetentionPolicyParametersResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) RetentionPolicyParametersResponse {
		if v != nil {
			return *v
		}
		var ret RetentionPolicyParametersResponse
		return ret
	}).(RetentionPolicyParametersResponseOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Route resource.
type RouteType struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// RouteTypeInput is an input type that accepts RouteTypeArgs and RouteTypeOutput values.
// You can construct a concrete instance of `RouteTypeInput` via:
//
//	RouteTypeArgs{...}
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

// Route resource.
type RouteTypeArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (i RouteTypeArgs) ToRouteTypeOutput() RouteTypeOutput {
	return i.ToRouteTypeOutputWithContext(context.Background())
}

func (i RouteTypeArgs) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeOutput)
}

// RouteTypeArrayInput is an input type that accepts RouteTypeArray and RouteTypeArrayOutput values.
// You can construct a concrete instance of `RouteTypeArrayInput` via:
//
//	RouteTypeArray{ RouteTypeArgs{...} }
type RouteTypeArrayInput interface {
	pulumi.Input

	ToRouteTypeArrayOutput() RouteTypeArrayOutput
	ToRouteTypeArrayOutputWithContext(context.Context) RouteTypeArrayOutput
}

type RouteTypeArray []RouteTypeInput

func (RouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (i RouteTypeArray) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return i.ToRouteTypeArrayOutputWithContext(context.Background())
}

func (i RouteTypeArray) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeArrayOutput)
}

// Route resource.
type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteTypeOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteTypeOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteType) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o RouteTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RouteTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) Index(i pulumi.IntInput) RouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteType {
		return vs[0].([]RouteType)[vs[1].(int)]
	}).(RouteTypeOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleType struct {
	// The access type of the rule.
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities []string `pulumi:"communities"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The rule type of the rule.
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRuleTypeInput is an input type that accepts RouteFilterRuleTypeArgs and RouteFilterRuleTypeOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeInput` via:
//
//	RouteFilterRuleTypeArgs{...}
type RouteFilterRuleTypeInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput
	ToRouteFilterRuleTypeOutputWithContext(context.Context) RouteFilterRuleTypeOutput
}

// Route Filter Rule Resource.
type RouteFilterRuleTypeArgs struct {
	// The access type of the rule.
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The rule type of the rule.
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return i.ToRouteFilterRuleTypeOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeOutput)
}

// RouteFilterRuleTypeArrayInput is an input type that accepts RouteFilterRuleTypeArray and RouteFilterRuleTypeArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeArrayInput` via:
//
//	RouteFilterRuleTypeArray{ RouteFilterRuleTypeArgs{...} }
type RouteFilterRuleTypeArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput
	ToRouteFilterRuleTypeArrayOutputWithContext(context.Context) RouteFilterRuleTypeArrayOutput
}

type RouteFilterRuleTypeArray []RouteFilterRuleTypeInput

func (RouteFilterRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return i.ToRouteFilterRuleTypeArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeArrayOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return o
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return o
}

// The access type of the rule.
func (o RouteFilterRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRuleTypeOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleType) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o RouteFilterRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule type of the rule.
func (o RouteFilterRuleTypeOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleType {
		return vs[0].([]RouteFilterRuleType)[vs[1].(int)]
	}).(RouteFilterRuleTypeOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleResponse struct {
	// The access type of the rule.
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities []string `pulumi:"communities"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the route filter rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The rule type of the rule.
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// Route Filter Rule Resource.
type RouteFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return o
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return o
}

// The access type of the rule.
func (o RouteFilterRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRuleResponseOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteFilterRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteFilterRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the route filter rule resource.
func (o RouteFilterRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The rule type of the rule.
func (o RouteFilterRuleResponseOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleResponse {
		return vs[0].([]RouteFilterRuleResponse)[vs[1].(int)]
	}).(RouteFilterRuleResponseOutput)
}

// A RouteMap Rule.
type RouteMapRule struct {
	// List of actions which will be applied on a match.
	Actions []Action `pulumi:"actions"`
	// List of matching criterion which will be applied to traffic.
	MatchCriteria []Criterion `pulumi:"matchCriteria"`
	// The unique name for the rule.
	Name *string `pulumi:"name"`
	// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
	NextStepIfMatched *string `pulumi:"nextStepIfMatched"`
}

// RouteMapRuleInput is an input type that accepts RouteMapRuleArgs and RouteMapRuleOutput values.
// You can construct a concrete instance of `RouteMapRuleInput` via:
//
//	RouteMapRuleArgs{...}
type RouteMapRuleInput interface {
	pulumi.Input

	ToRouteMapRuleOutput() RouteMapRuleOutput
	ToRouteMapRuleOutputWithContext(context.Context) RouteMapRuleOutput
}

// A RouteMap Rule.
type RouteMapRuleArgs struct {
	// List of actions which will be applied on a match.
	Actions ActionArrayInput `pulumi:"actions"`
	// List of matching criterion which will be applied to traffic.
	MatchCriteria CriterionArrayInput `pulumi:"matchCriteria"`
	// The unique name for the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
	NextStepIfMatched pulumi.StringPtrInput `pulumi:"nextStepIfMatched"`
}

func (RouteMapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRule)(nil)).Elem()
}

func (i RouteMapRuleArgs) ToRouteMapRuleOutput() RouteMapRuleOutput {
	return i.ToRouteMapRuleOutputWithContext(context.Background())
}

func (i RouteMapRuleArgs) ToRouteMapRuleOutputWithContext(ctx context.Context) RouteMapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleOutput)
}

// RouteMapRuleArrayInput is an input type that accepts RouteMapRuleArray and RouteMapRuleArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleArrayInput` via:
//
//	RouteMapRuleArray{ RouteMapRuleArgs{...} }
type RouteMapRuleArrayInput interface {
	pulumi.Input

	ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput
	ToRouteMapRuleArrayOutputWithContext(context.Context) RouteMapRuleArrayOutput
}

type RouteMapRuleArray []RouteMapRuleInput

func (RouteMapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRule)(nil)).Elem()
}

func (i RouteMapRuleArray) ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput {
	return i.ToRouteMapRuleArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleArray) ToRouteMapRuleArrayOutputWithContext(ctx context.Context) RouteMapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleArrayOutput)
}

// A RouteMap Rule.
type RouteMapRuleOutput struct{ *pulumi.OutputState }

func (RouteMapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRule)(nil)).Elem()
}

func (o RouteMapRuleOutput) ToRouteMapRuleOutput() RouteMapRuleOutput {
	return o
}

func (o RouteMapRuleOutput) ToRouteMapRuleOutputWithContext(ctx context.Context) RouteMapRuleOutput {
	return o
}

// List of actions which will be applied on a match.
func (o RouteMapRuleOutput) Actions() ActionArrayOutput {
	return o.ApplyT(func(v RouteMapRule) []Action { return v.Actions }).(ActionArrayOutput)
}

// List of matching criterion which will be applied to traffic.
func (o RouteMapRuleOutput) MatchCriteria() CriterionArrayOutput {
	return o.ApplyT(func(v RouteMapRule) []Criterion { return v.MatchCriteria }).(CriterionArrayOutput)
}

// The unique name for the rule.
func (o RouteMapRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
func (o RouteMapRuleOutput) NextStepIfMatched() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRule) *string { return v.NextStepIfMatched }).(pulumi.StringPtrOutput)
}

type RouteMapRuleArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRule)(nil)).Elem()
}

func (o RouteMapRuleArrayOutput) ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput {
	return o
}

func (o RouteMapRuleArrayOutput) ToRouteMapRuleArrayOutputWithContext(ctx context.Context) RouteMapRuleArrayOutput {
	return o
}

func (o RouteMapRuleArrayOutput) Index(i pulumi.IntInput) RouteMapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRule {
		return vs[0].([]RouteMapRule)[vs[1].(int)]
	}).(RouteMapRuleOutput)
}

// A RouteMap Rule.
type RouteMapRuleResponse struct {
	// List of actions which will be applied on a match.
	Actions []ActionResponse `pulumi:"actions"`
	// List of matching criterion which will be applied to traffic.
	MatchCriteria []CriterionResponse `pulumi:"matchCriteria"`
	// The unique name for the rule.
	Name *string `pulumi:"name"`
	// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
	NextStepIfMatched *string `pulumi:"nextStepIfMatched"`
}

// A RouteMap Rule.
type RouteMapRuleResponseOutput struct{ *pulumi.OutputState }

func (RouteMapRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleResponse)(nil)).Elem()
}

func (o RouteMapRuleResponseOutput) ToRouteMapRuleResponseOutput() RouteMapRuleResponseOutput {
	return o
}

func (o RouteMapRuleResponseOutput) ToRouteMapRuleResponseOutputWithContext(ctx context.Context) RouteMapRuleResponseOutput {
	return o
}

// List of actions which will be applied on a match.
func (o RouteMapRuleResponseOutput) Actions() ActionResponseArrayOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) []ActionResponse { return v.Actions }).(ActionResponseArrayOutput)
}

// List of matching criterion which will be applied to traffic.
func (o RouteMapRuleResponseOutput) MatchCriteria() CriterionResponseArrayOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) []CriterionResponse { return v.MatchCriteria }).(CriterionResponseArrayOutput)
}

// The unique name for the rule.
func (o RouteMapRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
func (o RouteMapRuleResponseOutput) NextStepIfMatched() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) *string { return v.NextStepIfMatched }).(pulumi.StringPtrOutput)
}

type RouteMapRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleResponse)(nil)).Elem()
}

func (o RouteMapRuleResponseArrayOutput) ToRouteMapRuleResponseArrayOutput() RouteMapRuleResponseArrayOutput {
	return o
}

func (o RouteMapRuleResponseArrayOutput) ToRouteMapRuleResponseArrayOutputWithContext(ctx context.Context) RouteMapRuleResponseArrayOutput {
	return o
}

func (o RouteMapRuleResponseArrayOutput) Index(i pulumi.IntInput) RouteMapRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRuleResponse {
		return vs[0].([]RouteMapRuleResponse)[vs[1].(int)]
	}).(RouteMapRuleResponseOutput)
}

// Route resource.
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
	HasBgpOverride bool `pulumi:"hasBgpOverride"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the route resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Route resource.
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
func (o RouteResponseOutput) HasBgpOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v RouteResponse) bool { return v.HasBgpOverride }).(pulumi.BoolOutput)
}

// Resource ID.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the route resource.
func (o RouteResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource.
func (o RouteResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

type RouteSourceDetailsResponse struct {
	// Express Route Circuit identifier
	Circuit *string `pulumi:"circuit"`
	// Flag to indicate if the route learned from the primary device is active or passive
	Pri *string `pulumi:"pri"`
	// Flag to indicate if the route learned from the secondary device is active or passive
	Sec *string `pulumi:"sec"`
}

type RouteSourceDetailsResponseOutput struct{ *pulumi.OutputState }

func (RouteSourceDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSourceDetailsResponse)(nil)).Elem()
}

func (o RouteSourceDetailsResponseOutput) ToRouteSourceDetailsResponseOutput() RouteSourceDetailsResponseOutput {
	return o
}

func (o RouteSourceDetailsResponseOutput) ToRouteSourceDetailsResponseOutputWithContext(ctx context.Context) RouteSourceDetailsResponseOutput {
	return o
}

// Express Route Circuit identifier
func (o RouteSourceDetailsResponseOutput) Circuit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSourceDetailsResponse) *string { return v.Circuit }).(pulumi.StringPtrOutput)
}

// Flag to indicate if the route learned from the primary device is active or passive
func (o RouteSourceDetailsResponseOutput) Pri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSourceDetailsResponse) *string { return v.Pri }).(pulumi.StringPtrOutput)
}

// Flag to indicate if the route learned from the secondary device is active or passive
func (o RouteSourceDetailsResponseOutput) Sec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSourceDetailsResponse) *string { return v.Sec }).(pulumi.StringPtrOutput)
}

type RouteSourceDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteSourceDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSourceDetailsResponse)(nil)).Elem()
}

func (o RouteSourceDetailsResponseArrayOutput) ToRouteSourceDetailsResponseArrayOutput() RouteSourceDetailsResponseArrayOutput {
	return o
}

func (o RouteSourceDetailsResponseArrayOutput) ToRouteSourceDetailsResponseArrayOutputWithContext(ctx context.Context) RouteSourceDetailsResponseArrayOutput {
	return o
}

func (o RouteSourceDetailsResponseArrayOutput) Index(i pulumi.IntInput) RouteSourceDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSourceDetailsResponse {
		return vs[0].([]RouteSourceDetailsResponse)[vs[1].(int)]
	}).(RouteSourceDetailsResponseOutput)
}

// Route table resource.
type RouteTableType struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteType `pulumi:"routes"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableTypeInput is an input type that accepts RouteTableTypeArgs and RouteTableTypeOutput values.
// You can construct a concrete instance of `RouteTableTypeInput` via:
//
//	RouteTableTypeArgs{...}
type RouteTableTypeInput interface {
	pulumi.Input

	ToRouteTableTypeOutput() RouteTableTypeOutput
	ToRouteTableTypeOutputWithContext(context.Context) RouteTableTypeOutput
}

// Route table resource.
type RouteTableTypeArgs struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteTypeArrayInput `pulumi:"routes"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return i.ToRouteTableTypeOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput)
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput).ToRouteTableTypePtrOutputWithContext(ctx)
}

// RouteTableTypePtrInput is an input type that accepts RouteTableTypeArgs, RouteTableTypePtr and RouteTableTypePtrOutput values.
// You can construct a concrete instance of `RouteTableTypePtrInput` via:
//
//	        RouteTableTypeArgs{...}
//
//	or:
//
//	        nil
type RouteTableTypePtrInput interface {
	pulumi.Input

	ToRouteTableTypePtrOutput() RouteTableTypePtrOutput
	ToRouteTableTypePtrOutputWithContext(context.Context) RouteTableTypePtrOutput
}

type routeTableTypePtrType RouteTableTypeArgs

func RouteTableTypePtr(v *RouteTableTypeArgs) RouteTableTypePtrInput {
	return (*routeTableTypePtrType)(v)
}

func (*routeTableTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypePtrOutput)
}

// Route table resource.
type RouteTableTypeOutput struct{ *pulumi.OutputState }

func (RouteTableTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTableType) *RouteTableType {
		return &v
	}).(RouteTableTypePtrOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypeOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableType) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypeOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v RouteTableType) []RouteType { return v.Routes }).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTableTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTableTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) Elem() RouteTableTypeOutput {
	return o.ApplyT(func(v *RouteTableType) RouteTableType {
		if v != nil {
			return *v
		}
		var ret RouteTableType
		return ret
	}).(RouteTableTypeOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypePtrOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v *RouteTableType) []RouteType {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the route table resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the route table.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponseOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the route table.
func (o RouteTableResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse {
		if v != nil {
			return *v
		}
		var ret RouteTableResponse
		return ret
	}).(RouteTableResponseOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponsePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the route table.
func (o RouteTableResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfiguration struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable *SubResource `pulumi:"associatedRouteTable"`
	// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
	InboundRouteMap *SubResource `pulumi:"inboundRouteMap"`
	// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
	OutboundRouteMap *SubResource `pulumi:"outboundRouteMap"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables *PropagatedRouteTable `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes *VnetRoute `pulumi:"vnetRoutes"`
}

// RoutingConfigurationInput is an input type that accepts RoutingConfigurationArgs and RoutingConfigurationOutput values.
// You can construct a concrete instance of `RoutingConfigurationInput` via:
//
//	RoutingConfigurationArgs{...}
type RoutingConfigurationInput interface {
	pulumi.Input

	ToRoutingConfigurationOutput() RoutingConfigurationOutput
	ToRoutingConfigurationOutputWithContext(context.Context) RoutingConfigurationOutput
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationArgs struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable SubResourcePtrInput `pulumi:"associatedRouteTable"`
	// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
	InboundRouteMap SubResourcePtrInput `pulumi:"inboundRouteMap"`
	// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
	OutboundRouteMap SubResourcePtrInput `pulumi:"outboundRouteMap"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables PropagatedRouteTablePtrInput `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes VnetRoutePtrInput `pulumi:"vnetRoutes"`
}

func (RoutingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfiguration)(nil)).Elem()
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationOutput() RoutingConfigurationOutput {
	return i.ToRoutingConfigurationOutputWithContext(context.Background())
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationOutputWithContext(ctx context.Context) RoutingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationOutput)
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return i.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationOutput).ToRoutingConfigurationPtrOutputWithContext(ctx)
}

// RoutingConfigurationPtrInput is an input type that accepts RoutingConfigurationArgs, RoutingConfigurationPtr and RoutingConfigurationPtrOutput values.
// You can construct a concrete instance of `RoutingConfigurationPtrInput` via:
//
//	        RoutingConfigurationArgs{...}
//
//	or:
//
//	        nil
type RoutingConfigurationPtrInput interface {
	pulumi.Input

	ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput
	ToRoutingConfigurationPtrOutputWithContext(context.Context) RoutingConfigurationPtrOutput
}

type routingConfigurationPtrType RoutingConfigurationArgs

func RoutingConfigurationPtr(v *RoutingConfigurationArgs) RoutingConfigurationPtrInput {
	return (*routingConfigurationPtrType)(v)
}

func (*routingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfiguration)(nil)).Elem()
}

func (i *routingConfigurationPtrType) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return i.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (i *routingConfigurationPtrType) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationPtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfiguration)(nil)).Elem()
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationOutput() RoutingConfigurationOutput {
	return o
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationOutputWithContext(ctx context.Context) RoutingConfigurationOutput {
	return o
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return o.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingConfiguration) *RoutingConfiguration {
		return &v
	}).(RoutingConfigurationPtrOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationOutput) AssociatedRouteTable() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *SubResource { return v.AssociatedRouteTable }).(SubResourcePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationOutput) InboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *SubResource { return v.InboundRouteMap }).(SubResourcePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationOutput) OutboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *SubResource { return v.OutboundRouteMap }).(SubResourcePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationOutput) PropagatedRouteTables() PropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *PropagatedRouteTable { return v.PropagatedRouteTables }).(PropagatedRouteTablePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationOutput) VnetRoutes() VnetRoutePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *VnetRoute { return v.VnetRoutes }).(VnetRoutePtrOutput)
}

type RoutingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfiguration)(nil)).Elem()
}

func (o RoutingConfigurationPtrOutput) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return o
}

func (o RoutingConfigurationPtrOutput) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return o
}

func (o RoutingConfigurationPtrOutput) Elem() RoutingConfigurationOutput {
	return o.ApplyT(func(v *RoutingConfiguration) RoutingConfiguration {
		if v != nil {
			return *v
		}
		var ret RoutingConfiguration
		return ret
	}).(RoutingConfigurationOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationPtrOutput) AssociatedRouteTable() SubResourcePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTable
	}).(SubResourcePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationPtrOutput) InboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.InboundRouteMap
	}).(SubResourcePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationPtrOutput) OutboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMap
	}).(SubResourcePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationPtrOutput) PropagatedRouteTables() PropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *PropagatedRouteTable {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTables
	}).(PropagatedRouteTablePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationPtrOutput) VnetRoutes() VnetRoutePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *VnetRoute {
		if v == nil {
			return nil
		}
		return v.VnetRoutes
	}).(VnetRoutePtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationResponse struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable *SubResourceResponse `pulumi:"associatedRouteTable"`
	// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
	InboundRouteMap *SubResourceResponse `pulumi:"inboundRouteMap"`
	// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
	OutboundRouteMap *SubResourceResponse `pulumi:"outboundRouteMap"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables *PropagatedRouteTableResponse `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes *VnetRouteResponse `pulumi:"vnetRoutes"`
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfigurationResponse)(nil)).Elem()
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponseOutput() RoutingConfigurationResponseOutput {
	return o
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponseOutputWithContext(ctx context.Context) RoutingConfigurationResponseOutput {
	return o
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationResponseOutput) AssociatedRouteTable() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *SubResourceResponse { return v.AssociatedRouteTable }).(SubResourceResponsePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationResponseOutput) InboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *SubResourceResponse { return v.InboundRouteMap }).(SubResourceResponsePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationResponseOutput) OutboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *SubResourceResponse { return v.OutboundRouteMap }).(SubResourceResponsePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationResponseOutput) PropagatedRouteTables() PropagatedRouteTableResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *PropagatedRouteTableResponse { return v.PropagatedRouteTables }).(PropagatedRouteTableResponsePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationResponseOutput) VnetRoutes() VnetRouteResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *VnetRouteResponse { return v.VnetRoutes }).(VnetRouteResponsePtrOutput)
}

type RoutingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfigurationResponse)(nil)).Elem()
}

func (o RoutingConfigurationResponsePtrOutput) ToRoutingConfigurationResponsePtrOutput() RoutingConfigurationResponsePtrOutput {
	return o
}

func (o RoutingConfigurationResponsePtrOutput) ToRoutingConfigurationResponsePtrOutputWithContext(ctx context.Context) RoutingConfigurationResponsePtrOutput {
	return o
}

func (o RoutingConfigurationResponsePtrOutput) Elem() RoutingConfigurationResponseOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) RoutingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret RoutingConfigurationResponse
		return ret
	}).(RoutingConfigurationResponseOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationResponsePtrOutput) AssociatedRouteTable() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTable
	}).(SubResourceResponsePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationResponsePtrOutput) InboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundRouteMap
	}).(SubResourceResponsePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationResponsePtrOutput) OutboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMap
	}).(SubResourceResponsePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationResponsePtrOutput) PropagatedRouteTables() PropagatedRouteTableResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *PropagatedRouteTableResponse {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTables
	}).(PropagatedRouteTableResponsePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationResponsePtrOutput) VnetRoutes() VnetRouteResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *VnetRouteResponse {
		if v == nil {
			return nil
		}
		return v.VnetRoutes
	}).(VnetRouteResponsePtrOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicy struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations []string `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name string `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop string `pulumi:"nextHop"`
}

// RoutingPolicyInput is an input type that accepts RoutingPolicyArgs and RoutingPolicyOutput values.
// You can construct a concrete instance of `RoutingPolicyInput` via:
//
//	RoutingPolicyArgs{...}
type RoutingPolicyInput interface {
	pulumi.Input

	ToRoutingPolicyOutput() RoutingPolicyOutput
	ToRoutingPolicyOutputWithContext(context.Context) RoutingPolicyOutput
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyArgs struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (RoutingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicy)(nil)).Elem()
}

func (i RoutingPolicyArgs) ToRoutingPolicyOutput() RoutingPolicyOutput {
	return i.ToRoutingPolicyOutputWithContext(context.Background())
}

func (i RoutingPolicyArgs) ToRoutingPolicyOutputWithContext(ctx context.Context) RoutingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPolicyOutput)
}

// RoutingPolicyArrayInput is an input type that accepts RoutingPolicyArray and RoutingPolicyArrayOutput values.
// You can construct a concrete instance of `RoutingPolicyArrayInput` via:
//
//	RoutingPolicyArray{ RoutingPolicyArgs{...} }
type RoutingPolicyArrayInput interface {
	pulumi.Input

	ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput
	ToRoutingPolicyArrayOutputWithContext(context.Context) RoutingPolicyArrayOutput
}

type RoutingPolicyArray []RoutingPolicyInput

func (RoutingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicy)(nil)).Elem()
}

func (i RoutingPolicyArray) ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput {
	return i.ToRoutingPolicyArrayOutputWithContext(context.Background())
}

func (i RoutingPolicyArray) ToRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPolicyArrayOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyOutput struct{ *pulumi.OutputState }

func (RoutingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicy)(nil)).Elem()
}

func (o RoutingPolicyOutput) ToRoutingPolicyOutput() RoutingPolicyOutput {
	return o
}

func (o RoutingPolicyOutput) ToRoutingPolicyOutputWithContext(ctx context.Context) RoutingPolicyOutput {
	return o
}

// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
func (o RoutingPolicyOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingPolicy) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The unique name for the routing policy.
func (o RoutingPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop resource id on which this routing policy is applicable to.
func (o RoutingPolicyOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicy) string { return v.NextHop }).(pulumi.StringOutput)
}

type RoutingPolicyArrayOutput struct{ *pulumi.OutputState }

func (RoutingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicy)(nil)).Elem()
}

func (o RoutingPolicyArrayOutput) ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput {
	return o
}

func (o RoutingPolicyArrayOutput) ToRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingPolicyArrayOutput {
	return o
}

func (o RoutingPolicyArrayOutput) Index(i pulumi.IntInput) RoutingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingPolicy {
		return vs[0].([]RoutingPolicy)[vs[1].(int)]
	}).(RoutingPolicyOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyResponse struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations []string `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name string `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop string `pulumi:"nextHop"`
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyResponseOutput struct{ *pulumi.OutputState }

func (RoutingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicyResponse)(nil)).Elem()
}

func (o RoutingPolicyResponseOutput) ToRoutingPolicyResponseOutput() RoutingPolicyResponseOutput {
	return o
}

func (o RoutingPolicyResponseOutput) ToRoutingPolicyResponseOutputWithContext(ctx context.Context) RoutingPolicyResponseOutput {
	return o
}

// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
func (o RoutingPolicyResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The unique name for the routing policy.
func (o RoutingPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop resource id on which this routing policy is applicable to.
func (o RoutingPolicyResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

type RoutingPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicyResponse)(nil)).Elem()
}

func (o RoutingPolicyResponseArrayOutput) ToRoutingPolicyResponseArrayOutput() RoutingPolicyResponseArrayOutput {
	return o
}

func (o RoutingPolicyResponseArrayOutput) ToRoutingPolicyResponseArrayOutputWithContext(ctx context.Context) RoutingPolicyResponseArrayOutput {
	return o
}

func (o RoutingPolicyResponseArrayOutput) Index(i pulumi.IntInput) RoutingPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingPolicyResponse {
		return vs[0].([]RoutingPolicyResponse)[vs[1].(int)]
	}).(RoutingPolicyResponseOutput)
}

// Next hop.
type RoutingRuleNextHop struct {
	// Next hop address. Only required if the next hop type is VirtualAppliance.
	NextHopAddress *string `pulumi:"nextHopAddress"`
	// Next hop type.
	NextHopType string `pulumi:"nextHopType"`
}

// RoutingRuleNextHopInput is an input type that accepts RoutingRuleNextHopArgs and RoutingRuleNextHopOutput values.
// You can construct a concrete instance of `RoutingRuleNextHopInput` via:
//
//	RoutingRuleNextHopArgs{...}
type RoutingRuleNextHopInput interface {
	pulumi.Input

	ToRoutingRuleNextHopOutput() RoutingRuleNextHopOutput
	ToRoutingRuleNextHopOutputWithContext(context.Context) RoutingRuleNextHopOutput
}

// Next hop.
type RoutingRuleNextHopArgs struct {
	// Next hop address. Only required if the next hop type is VirtualAppliance.
	NextHopAddress pulumi.StringPtrInput `pulumi:"nextHopAddress"`
	// Next hop type.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (RoutingRuleNextHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleNextHop)(nil)).Elem()
}

func (i RoutingRuleNextHopArgs) ToRoutingRuleNextHopOutput() RoutingRuleNextHopOutput {
	return i.ToRoutingRuleNextHopOutputWithContext(context.Background())
}

func (i RoutingRuleNextHopArgs) ToRoutingRuleNextHopOutputWithContext(ctx context.Context) RoutingRuleNextHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleNextHopOutput)
}

// Next hop.
type RoutingRuleNextHopOutput struct{ *pulumi.OutputState }

func (RoutingRuleNextHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleNextHop)(nil)).Elem()
}

func (o RoutingRuleNextHopOutput) ToRoutingRuleNextHopOutput() RoutingRuleNextHopOutput {
	return o
}

func (o RoutingRuleNextHopOutput) ToRoutingRuleNextHopOutputWithContext(ctx context.Context) RoutingRuleNextHopOutput {
	return o
}

// Next hop address. Only required if the next hop type is VirtualAppliance.
func (o RoutingRuleNextHopOutput) NextHopAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleNextHop) *string { return v.NextHopAddress }).(pulumi.StringPtrOutput)
}

// Next hop type.
func (o RoutingRuleNextHopOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleNextHop) string { return v.NextHopType }).(pulumi.StringOutput)
}

// Next hop.
type RoutingRuleNextHopResponse struct {
	// Next hop address. Only required if the next hop type is VirtualAppliance.
	NextHopAddress *string `pulumi:"nextHopAddress"`
	// Next hop type.
	NextHopType string `pulumi:"nextHopType"`
}

// Next hop.
type RoutingRuleNextHopResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleNextHopResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleNextHopResponse)(nil)).Elem()
}

func (o RoutingRuleNextHopResponseOutput) ToRoutingRuleNextHopResponseOutput() RoutingRuleNextHopResponseOutput {
	return o
}

func (o RoutingRuleNextHopResponseOutput) ToRoutingRuleNextHopResponseOutputWithContext(ctx context.Context) RoutingRuleNextHopResponseOutput {
	return o
}

// Next hop address. Only required if the next hop type is VirtualAppliance.
func (o RoutingRuleNextHopResponseOutput) NextHopAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleNextHopResponse) *string { return v.NextHopAddress }).(pulumi.StringPtrOutput)
}

// Next hop type.
func (o RoutingRuleNextHopResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleNextHopResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// Route destination.
type RoutingRuleRouteDestination struct {
	// Destination address.
	DestinationAddress string `pulumi:"destinationAddress"`
	// Destination type.
	Type string `pulumi:"type"`
}

// RoutingRuleRouteDestinationInput is an input type that accepts RoutingRuleRouteDestinationArgs and RoutingRuleRouteDestinationOutput values.
// You can construct a concrete instance of `RoutingRuleRouteDestinationInput` via:
//
//	RoutingRuleRouteDestinationArgs{...}
type RoutingRuleRouteDestinationInput interface {
	pulumi.Input

	ToRoutingRuleRouteDestinationOutput() RoutingRuleRouteDestinationOutput
	ToRoutingRuleRouteDestinationOutputWithContext(context.Context) RoutingRuleRouteDestinationOutput
}

// Route destination.
type RoutingRuleRouteDestinationArgs struct {
	// Destination address.
	DestinationAddress pulumi.StringInput `pulumi:"destinationAddress"`
	// Destination type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RoutingRuleRouteDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleRouteDestination)(nil)).Elem()
}

func (i RoutingRuleRouteDestinationArgs) ToRoutingRuleRouteDestinationOutput() RoutingRuleRouteDestinationOutput {
	return i.ToRoutingRuleRouteDestinationOutputWithContext(context.Background())
}

func (i RoutingRuleRouteDestinationArgs) ToRoutingRuleRouteDestinationOutputWithContext(ctx context.Context) RoutingRuleRouteDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleRouteDestinationOutput)
}

// Route destination.
type RoutingRuleRouteDestinationOutput struct{ *pulumi.OutputState }

func (RoutingRuleRouteDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleRouteDestination)(nil)).Elem()
}

func (o RoutingRuleRouteDestinationOutput) ToRoutingRuleRouteDestinationOutput() RoutingRuleRouteDestinationOutput {
	return o
}

func (o RoutingRuleRouteDestinationOutput) ToRoutingRuleRouteDestinationOutputWithContext(ctx context.Context) RoutingRuleRouteDestinationOutput {
	return o
}

// Destination address.
func (o RoutingRuleRouteDestinationOutput) DestinationAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleRouteDestination) string { return v.DestinationAddress }).(pulumi.StringOutput)
}

// Destination type.
func (o RoutingRuleRouteDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleRouteDestination) string { return v.Type }).(pulumi.StringOutput)
}

// Route destination.
type RoutingRuleRouteDestinationResponse struct {
	// Destination address.
	DestinationAddress string `pulumi:"destinationAddress"`
	// Destination type.
	Type string `pulumi:"type"`
}

// Route destination.
type RoutingRuleRouteDestinationResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleRouteDestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleRouteDestinationResponse)(nil)).Elem()
}

func (o RoutingRuleRouteDestinationResponseOutput) ToRoutingRuleRouteDestinationResponseOutput() RoutingRuleRouteDestinationResponseOutput {
	return o
}

func (o RoutingRuleRouteDestinationResponseOutput) ToRoutingRuleRouteDestinationResponseOutputWithContext(ctx context.Context) RoutingRuleRouteDestinationResponseOutput {
	return o
}

// Destination address.
func (o RoutingRuleRouteDestinationResponseOutput) DestinationAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleRouteDestinationResponse) string { return v.DestinationAddress }).(pulumi.StringOutput)
}

// Destination type.
func (o RoutingRuleRouteDestinationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleRouteDestinationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Network security rule.
type SecurityRuleType struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// SecurityRuleTypeInput is an input type that accepts SecurityRuleTypeArgs and SecurityRuleTypeOutput values.
// You can construct a concrete instance of `SecurityRuleTypeInput` via:
//
//	SecurityRuleTypeArgs{...}
type SecurityRuleTypeInput interface {
	pulumi.Input

	ToSecurityRuleTypeOutput() SecurityRuleTypeOutput
	ToSecurityRuleTypeOutputWithContext(context.Context) SecurityRuleTypeOutput
}

// Network security rule.
type SecurityRuleTypeArgs struct {
	// The network traffic is allowed or denied.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecurityRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return i.ToSecurityRuleTypeOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeOutput)
}

// SecurityRuleTypeArrayInput is an input type that accepts SecurityRuleTypeArray and SecurityRuleTypeArrayOutput values.
// You can construct a concrete instance of `SecurityRuleTypeArrayInput` via:
//
//	SecurityRuleTypeArray{ SecurityRuleTypeArgs{...} }
type SecurityRuleTypeArrayInput interface {
	pulumi.Input

	ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput
	ToSecurityRuleTypeArrayOutputWithContext(context.Context) SecurityRuleTypeArrayOutput
}

type SecurityRuleTypeArray []SecurityRuleTypeInput

func (SecurityRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return i.ToSecurityRuleTypeArrayOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeArrayOutput)
}

// Network security rule.
type SecurityRuleTypeOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return o
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleTypeOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleTypeOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleTypeOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.DestinationApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleTypeOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleTypeOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRuleTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleTypeOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleTypeOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleTypeOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.SourceApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleTypeOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o SecurityRuleTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecurityRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) Index(i pulumi.IntInput) SecurityRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleType {
		return vs[0].([]SecurityRuleType)[vs[1].(int)]
	}).(SecurityRuleTypeOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleResponseOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleResponseOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security rule resource.
func (o SecurityRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleResponseOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleResponseOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o SecurityRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// Network manager security user group item.
type SecurityUserGroupItem struct {
	// Network manager group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
}

// SecurityUserGroupItemInput is an input type that accepts SecurityUserGroupItemArgs and SecurityUserGroupItemOutput values.
// You can construct a concrete instance of `SecurityUserGroupItemInput` via:
//
//	SecurityUserGroupItemArgs{...}
type SecurityUserGroupItemInput interface {
	pulumi.Input

	ToSecurityUserGroupItemOutput() SecurityUserGroupItemOutput
	ToSecurityUserGroupItemOutputWithContext(context.Context) SecurityUserGroupItemOutput
}

// Network manager security user group item.
type SecurityUserGroupItemArgs struct {
	// Network manager group Id.
	NetworkGroupId pulumi.StringInput `pulumi:"networkGroupId"`
}

func (SecurityUserGroupItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityUserGroupItem)(nil)).Elem()
}

func (i SecurityUserGroupItemArgs) ToSecurityUserGroupItemOutput() SecurityUserGroupItemOutput {
	return i.ToSecurityUserGroupItemOutputWithContext(context.Background())
}

func (i SecurityUserGroupItemArgs) ToSecurityUserGroupItemOutputWithContext(ctx context.Context) SecurityUserGroupItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityUserGroupItemOutput)
}

// SecurityUserGroupItemArrayInput is an input type that accepts SecurityUserGroupItemArray and SecurityUserGroupItemArrayOutput values.
// You can construct a concrete instance of `SecurityUserGroupItemArrayInput` via:
//
//	SecurityUserGroupItemArray{ SecurityUserGroupItemArgs{...} }
type SecurityUserGroupItemArrayInput interface {
	pulumi.Input

	ToSecurityUserGroupItemArrayOutput() SecurityUserGroupItemArrayOutput
	ToSecurityUserGroupItemArrayOutputWithContext(context.Context) SecurityUserGroupItemArrayOutput
}

type SecurityUserGroupItemArray []SecurityUserGroupItemInput

func (SecurityUserGroupItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityUserGroupItem)(nil)).Elem()
}

func (i SecurityUserGroupItemArray) ToSecurityUserGroupItemArrayOutput() SecurityUserGroupItemArrayOutput {
	return i.ToSecurityUserGroupItemArrayOutputWithContext(context.Background())
}

func (i SecurityUserGroupItemArray) ToSecurityUserGroupItemArrayOutputWithContext(ctx context.Context) SecurityUserGroupItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityUserGroupItemArrayOutput)
}

// Network manager security user group item.
type SecurityUserGroupItemOutput struct{ *pulumi.OutputState }

func (SecurityUserGroupItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityUserGroupItem)(nil)).Elem()
}

func (o SecurityUserGroupItemOutput) ToSecurityUserGroupItemOutput() SecurityUserGroupItemOutput {
	return o
}

func (o SecurityUserGroupItemOutput) ToSecurityUserGroupItemOutputWithContext(ctx context.Context) SecurityUserGroupItemOutput {
	return o
}

// Network manager group Id.
func (o SecurityUserGroupItemOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityUserGroupItem) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

type SecurityUserGroupItemArrayOutput struct{ *pulumi.OutputState }

func (SecurityUserGroupItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityUserGroupItem)(nil)).Elem()
}

func (o SecurityUserGroupItemArrayOutput) ToSecurityUserGroupItemArrayOutput() SecurityUserGroupItemArrayOutput {
	return o
}

func (o SecurityUserGroupItemArrayOutput) ToSecurityUserGroupItemArrayOutputWithContext(ctx context.Context) SecurityUserGroupItemArrayOutput {
	return o
}

func (o SecurityUserGroupItemArrayOutput) Index(i pulumi.IntInput) SecurityUserGroupItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityUserGroupItem {
		return vs[0].([]SecurityUserGroupItem)[vs[1].(int)]
	}).(SecurityUserGroupItemOutput)
}

// Network manager security user group item.
type SecurityUserGroupItemResponse struct {
	// Network manager group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
}

// Network manager security user group item.
type SecurityUserGroupItemResponseOutput struct{ *pulumi.OutputState }

func (SecurityUserGroupItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityUserGroupItemResponse)(nil)).Elem()
}

func (o SecurityUserGroupItemResponseOutput) ToSecurityUserGroupItemResponseOutput() SecurityUserGroupItemResponseOutput {
	return o
}

func (o SecurityUserGroupItemResponseOutput) ToSecurityUserGroupItemResponseOutputWithContext(ctx context.Context) SecurityUserGroupItemResponseOutput {
	return o
}

// Network manager group Id.
func (o SecurityUserGroupItemResponseOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityUserGroupItemResponse) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

type SecurityUserGroupItemResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityUserGroupItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityUserGroupItemResponse)(nil)).Elem()
}

func (o SecurityUserGroupItemResponseArrayOutput) ToSecurityUserGroupItemResponseArrayOutput() SecurityUserGroupItemResponseArrayOutput {
	return o
}

func (o SecurityUserGroupItemResponseArrayOutput) ToSecurityUserGroupItemResponseArrayOutputWithContext(ctx context.Context) SecurityUserGroupItemResponseArrayOutput {
	return o
}

func (o SecurityUserGroupItemResponseArrayOutput) Index(i pulumi.IntInput) SecurityUserGroupItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityUserGroupItemResponse {
		return vs[0].([]SecurityUserGroupItemResponse)[vs[1].(int)]
	}).(SecurityUserGroupItemResponseOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ServiceAssociationLinkInput is an input type that accepts ServiceAssociationLinkArgs and ServiceAssociationLinkOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkInput` via:
//
//	ServiceAssociationLinkArgs{...}
type ServiceAssociationLinkInput interface {
	pulumi.Input

	ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput
	ToServiceAssociationLinkOutputWithContext(context.Context) ServiceAssociationLinkOutput
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServiceAssociationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return i.ToServiceAssociationLinkOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkOutput)
}

// ServiceAssociationLinkArrayInput is an input type that accepts ServiceAssociationLinkArray and ServiceAssociationLinkArrayOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkArrayInput` via:
//
//	ServiceAssociationLinkArray{ ServiceAssociationLinkArgs{...} }
type ServiceAssociationLinkArrayInput interface {
	pulumi.Input

	ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput
	ToServiceAssociationLinkArrayOutputWithContext(context.Context) ServiceAssociationLinkArrayOutput
}

type ServiceAssociationLinkArray []ServiceAssociationLinkInput

func (ServiceAssociationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLink)(nil)).Elem()
}

func (i ServiceAssociationLinkArray) ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput {
	return i.ToServiceAssociationLinkArrayOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkArray) ToServiceAssociationLinkArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkArrayOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return o
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return o
}

// Resource ID.
func (o ServiceAssociationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServiceAssociationLinkArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLink)(nil)).Elem()
}

func (o ServiceAssociationLinkArrayOutput) ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput {
	return o
}

func (o ServiceAssociationLinkArrayOutput) ToServiceAssociationLinkArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkArrayOutput {
	return o
}

func (o ServiceAssociationLinkArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLink {
		return vs[0].([]ServiceAssociationLink)[vs[1].(int)]
	}).(ServiceAssociationLinkOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponse struct {
	// If true, the resource can be deleted.
	AllowDelete *bool `pulumi:"allowDelete"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service association link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return o
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return o
}

// If true, the resource can be deleted.
func (o ServiceAssociationLinkResponseOutput) AllowDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *bool { return v.AllowDelete }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceAssociationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceAssociationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// A list of locations.
func (o ServiceAssociationLinkResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service association link resource.
func (o ServiceAssociationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ServiceAssociationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceAssociationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLinkResponse {
		return vs[0].([]ServiceAssociationLinkResponse)[vs[1].(int)]
	}).(ServiceAssociationLinkResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyType struct {
	// A collection of contextual service endpoint policy.
	ContextualServiceEndpointPolicies []string `pulumi:"contextualServiceEndpointPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The alias indicating if the policy belongs to a service
	ServiceAlias *string `pulumi:"serviceAlias"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionType `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ServiceEndpointPolicyTypeInput is an input type that accepts ServiceEndpointPolicyTypeArgs and ServiceEndpointPolicyTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeInput` via:
//
//	ServiceEndpointPolicyTypeArgs{...}
type ServiceEndpointPolicyTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput
	ToServiceEndpointPolicyTypeOutputWithContext(context.Context) ServiceEndpointPolicyTypeOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeArgs struct {
	// A collection of contextual service endpoint policy.
	ContextualServiceEndpointPolicies pulumi.StringArrayInput `pulumi:"contextualServiceEndpointPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The alias indicating if the policy belongs to a service
	ServiceAlias pulumi.StringPtrInput `pulumi:"serviceAlias"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionTypeArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ServiceEndpointPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return i.ToServiceEndpointPolicyTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeOutput)
}

// ServiceEndpointPolicyTypeArrayInput is an input type that accepts ServiceEndpointPolicyTypeArray and ServiceEndpointPolicyTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeArrayInput` via:
//
//	ServiceEndpointPolicyTypeArray{ ServiceEndpointPolicyTypeArgs{...} }
type ServiceEndpointPolicyTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput
	ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyTypeArrayOutput
}

type ServiceEndpointPolicyTypeArray []ServiceEndpointPolicyTypeInput

func (ServiceEndpointPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return i.ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return o
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return o
}

// A collection of contextual service endpoint policy.
func (o ServiceEndpointPolicyTypeOutput) ContextualServiceEndpointPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) []string { return v.ContextualServiceEndpointPolicies }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The alias indicating if the policy belongs to a service
func (o ServiceEndpointPolicyTypeOutput) ServiceAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.ServiceAlias }).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyTypeOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) []ServiceEndpointPolicyDefinitionType {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceEndpointPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyType {
		return vs[0].([]ServiceEndpointPolicyType)[vs[1].(int)]
	}).(ServiceEndpointPolicyTypeOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionType struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// ServiceEndpointPolicyDefinitionTypeInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArgs and ServiceEndpointPolicyDefinitionTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeInput` via:
//
//	ServiceEndpointPolicyDefinitionTypeArgs{...}
type ServiceEndpointPolicyDefinitionTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput
	ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceEndpointPolicyDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// ServiceEndpointPolicyDefinitionTypeArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArray and ServiceEndpointPolicyDefinitionTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeArrayInput` via:
//
//	ServiceEndpointPolicyDefinitionTypeArray{ ServiceEndpointPolicyDefinitionTypeArgs{...} }
type ServiceEndpointPolicyDefinitionTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput
	ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput
}

type ServiceEndpointPolicyDefinitionTypeArray []ServiceEndpointPolicyDefinitionTypeInput

func (ServiceEndpointPolicyDefinitionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionTypeOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPolicyDefinitionTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionType {
		return vs[0].([]ServiceEndpointPolicyDefinitionType)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponse struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service endpoint policy definition resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service endpoint policy definition resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPolicyDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionResponse {
		return vs[0].([]ServiceEndpointPolicyDefinitionResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponse struct {
	// A collection of contextual service endpoint policy.
	ContextualServiceEndpointPolicies []string `pulumi:"contextualServiceEndpointPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Kind of service endpoint policy. This is metadata used for the Azure portal experience.
	Kind string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the service endpoint policy resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The alias indicating if the policy belongs to a service
	ServiceAlias *string `pulumi:"serviceAlias"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionResponse `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return o
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return o
}

// A collection of contextual service endpoint policy.
func (o ServiceEndpointPolicyResponseOutput) ContextualServiceEndpointPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []string { return v.ContextualServiceEndpointPolicies }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of service endpoint policy. This is metadata used for the Azure portal experience.
func (o ServiceEndpointPolicyResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o ServiceEndpointPolicyResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ServiceEndpointPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The alias indicating if the policy belongs to a service
func (o ServiceEndpointPolicyResponseOutput) ServiceAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.ServiceAlias }).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyResponseOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []ServiceEndpointPolicyDefinitionResponse {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// A collection of references to subnets.
func (o ServiceEndpointPolicyResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ServiceEndpointPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceEndpointPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyResponse {
		return vs[0].([]ServiceEndpointPolicyResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyResponseOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// SubResource as network identifier.
	NetworkIdentifier *SubResource `pulumi:"networkIdentifier"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatInput is an input type that accepts ServiceEndpointPropertiesFormatArgs and ServiceEndpointPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatInput` via:
//
//	ServiceEndpointPropertiesFormatArgs{...}
type ServiceEndpointPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput
	ToServiceEndpointPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPropertiesFormatOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// SubResource as network identifier.
	NetworkIdentifier SubResourcePtrInput `pulumi:"networkIdentifier"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return i.ToServiceEndpointPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatOutput)
}

// ServiceEndpointPropertiesFormatArrayInput is an input type that accepts ServiceEndpointPropertiesFormatArray and ServiceEndpointPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatArrayInput` via:
//
//	ServiceEndpointPropertiesFormatArray{ ServiceEndpointPropertiesFormatArgs{...} }
type ServiceEndpointPropertiesFormatArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput
	ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatArrayOutput
}

type ServiceEndpointPropertiesFormatArray []ServiceEndpointPropertiesFormatInput

func (ServiceEndpointPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return i.ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// SubResource as network identifier.
func (o ServiceEndpointPropertiesFormatOutput) NetworkIdentifier() SubResourcePtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *SubResource { return v.NetworkIdentifier }).(SubResourcePtrOutput)
}

// The provisioning state of the resource.
func (o ServiceEndpointPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormat {
		return vs[0].([]ServiceEndpointPropertiesFormat)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponse struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// SubResource as network identifier.
	NetworkIdentifier *SubResourceResponse `pulumi:"networkIdentifier"`
	// The provisioning state of the service endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// SubResource as network identifier.
func (o ServiceEndpointPropertiesFormatResponseOutput) NetworkIdentifier() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *SubResourceResponse { return v.NetworkIdentifier }).(SubResourceResponsePtrOutput)
}

// The provisioning state of the service endpoint resource.
func (o ServiceEndpointPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormatResponse {
		return vs[0].([]ServiceEndpointPropertiesFormatResponse)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatResponseOutput)
}

// Parameters for SharedKey.
type SharedKeyPropertiesResponse struct {
	// The provisioning state of the SharedKey resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The value of the shared key for the vpn link connection.
	SharedKey *string `pulumi:"sharedKey"`
	// The length of the shared key for the vpn link connection.
	SharedKeyLength *int `pulumi:"sharedKeyLength"`
}

// Parameters for SharedKey.
type SharedKeyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SharedKeyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedKeyPropertiesResponse)(nil)).Elem()
}

func (o SharedKeyPropertiesResponseOutput) ToSharedKeyPropertiesResponseOutput() SharedKeyPropertiesResponseOutput {
	return o
}

func (o SharedKeyPropertiesResponseOutput) ToSharedKeyPropertiesResponseOutputWithContext(ctx context.Context) SharedKeyPropertiesResponseOutput {
	return o
}

// The provisioning state of the SharedKey resource.
func (o SharedKeyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SharedKeyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The value of the shared key for the vpn link connection.
func (o SharedKeyPropertiesResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedKeyPropertiesResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The length of the shared key for the vpn link connection.
func (o SharedKeyPropertiesResponseOutput) SharedKeyLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SharedKeyPropertiesResponse) *int { return v.SharedKeyLength }).(pulumi.IntPtrOutput)
}

type SingleQueryResultResponse struct {
	// Describes what is the signature enforces
	Description *string `pulumi:"description"`
	// Describes the list of destination ports related to this signature
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Describes in which direction signature is being enforced: 0 - OutBound, 1 - InBound, 2 - Any, 3 - Internal, 4 - InternalOutbound, 5 - InternalInbound
	Direction *int `pulumi:"direction"`
	// Describes the groups the signature belongs to
	Group *string `pulumi:"group"`
	// Describes if this override is inherited from base policy or not
	InheritedFromParentPolicy *bool `pulumi:"inheritedFromParentPolicy"`
	// Describes the last updated time of the signature (provided from 3rd party vendor)
	LastUpdated *string `pulumi:"lastUpdated"`
	// The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
	Mode *int `pulumi:"mode"`
	// Describes the protocol the signatures is being enforced in
	Protocol *string `pulumi:"protocol"`
	// Describes the severity of signature: 1 - High, 2 - Medium, 3 - Low
	Severity *int `pulumi:"severity"`
	// The ID of the signature
	SignatureId *int `pulumi:"signatureId"`
	// Describes the list of source ports related to this signature
	SourcePorts []string `pulumi:"sourcePorts"`
}

type SingleQueryResultResponseOutput struct{ *pulumi.OutputState }

func (SingleQueryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleQueryResultResponse)(nil)).Elem()
}

func (o SingleQueryResultResponseOutput) ToSingleQueryResultResponseOutput() SingleQueryResultResponseOutput {
	return o
}

func (o SingleQueryResultResponseOutput) ToSingleQueryResultResponseOutputWithContext(ctx context.Context) SingleQueryResultResponseOutput {
	return o
}

// Describes what is the signature enforces
func (o SingleQueryResultResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Describes the list of destination ports related to this signature
func (o SingleQueryResultResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Describes in which direction signature is being enforced: 0 - OutBound, 1 - InBound, 2 - Any, 3 - Internal, 4 - InternalOutbound, 5 - InternalInbound
func (o SingleQueryResultResponseOutput) Direction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.Direction }).(pulumi.IntPtrOutput)
}

// Describes the groups the signature belongs to
func (o SingleQueryResultResponseOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// Describes if this override is inherited from base policy or not
func (o SingleQueryResultResponseOutput) InheritedFromParentPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *bool { return v.InheritedFromParentPolicy }).(pulumi.BoolPtrOutput)
}

// Describes the last updated time of the signature (provided from 3rd party vendor)
func (o SingleQueryResultResponseOutput) LastUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.LastUpdated }).(pulumi.StringPtrOutput)
}

// The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
func (o SingleQueryResultResponseOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Describes the protocol the signatures is being enforced in
func (o SingleQueryResultResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Describes the severity of signature: 1 - High, 2 - Medium, 3 - Low
func (o SingleQueryResultResponseOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

// The ID of the signature
func (o SingleQueryResultResponseOutput) SignatureId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.SignatureId }).(pulumi.IntPtrOutput)
}

// Describes the list of source ports related to this signature
func (o SingleQueryResultResponseOutput) SourcePorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) []string { return v.SourcePorts }).(pulumi.StringArrayOutput)
}

type SingleQueryResultResponseArrayOutput struct{ *pulumi.OutputState }

func (SingleQueryResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SingleQueryResultResponse)(nil)).Elem()
}

func (o SingleQueryResultResponseArrayOutput) ToSingleQueryResultResponseArrayOutput() SingleQueryResultResponseArrayOutput {
	return o
}

func (o SingleQueryResultResponseArrayOutput) ToSingleQueryResultResponseArrayOutputWithContext(ctx context.Context) SingleQueryResultResponseArrayOutput {
	return o
}

func (o SingleQueryResultResponseArrayOutput) Index(i pulumi.IntInput) SingleQueryResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SingleQueryResultResponse {
		return vs[0].([]SingleQueryResultResponse)[vs[1].(int)]
	}).(SingleQueryResultResponseOutput)
}

// The sku of this Bastion Host.
type Sku struct {
	// The name of the sku of this Bastion Host.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for Sku
func (val *Sku) Defaults() *Sku {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := "Standard"
		tmp.Name = &name_
	}
	return &tmp
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The sku of this Bastion Host.
type SkuArgs struct {
	// The name of the sku of this Bastion Host.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for SkuArgs
func (val *SkuArgs) Defaults() *SkuArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("Standard")
	}
	return &tmp
}
func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The sku of this Bastion Host.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The name of the sku of this Bastion Host.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The name of the sku of this Bastion Host.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku of this Bastion Host.
type SkuResponse struct {
	// The name of the sku of this Bastion Host.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for SkuResponse
func (val *SkuResponse) Defaults() *SkuResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := "Standard"
		tmp.Name = &name_
	}
	return &tmp
}

// The sku of this Bastion Host.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The name of the sku of this Bastion Host.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The name of the sku of this Bastion Host.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of static CIDR resource.
type StaticCidrProperties struct {
	// List of IP address prefixes of the resource.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	Description     *string  `pulumi:"description"`
	// Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.
	NumberOfIPAddressesToAllocate *string `pulumi:"numberOfIPAddressesToAllocate"`
}

// StaticCidrPropertiesInput is an input type that accepts StaticCidrPropertiesArgs and StaticCidrPropertiesOutput values.
// You can construct a concrete instance of `StaticCidrPropertiesInput` via:
//
//	StaticCidrPropertiesArgs{...}
type StaticCidrPropertiesInput interface {
	pulumi.Input

	ToStaticCidrPropertiesOutput() StaticCidrPropertiesOutput
	ToStaticCidrPropertiesOutputWithContext(context.Context) StaticCidrPropertiesOutput
}

// Properties of static CIDR resource.
type StaticCidrPropertiesArgs struct {
	// List of IP address prefixes of the resource.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	Description     pulumi.StringPtrInput   `pulumi:"description"`
	// Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.
	NumberOfIPAddressesToAllocate pulumi.StringPtrInput `pulumi:"numberOfIPAddressesToAllocate"`
}

func (StaticCidrPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticCidrProperties)(nil)).Elem()
}

func (i StaticCidrPropertiesArgs) ToStaticCidrPropertiesOutput() StaticCidrPropertiesOutput {
	return i.ToStaticCidrPropertiesOutputWithContext(context.Background())
}

func (i StaticCidrPropertiesArgs) ToStaticCidrPropertiesOutputWithContext(ctx context.Context) StaticCidrPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticCidrPropertiesOutput)
}

func (i StaticCidrPropertiesArgs) ToStaticCidrPropertiesPtrOutput() StaticCidrPropertiesPtrOutput {
	return i.ToStaticCidrPropertiesPtrOutputWithContext(context.Background())
}

func (i StaticCidrPropertiesArgs) ToStaticCidrPropertiesPtrOutputWithContext(ctx context.Context) StaticCidrPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticCidrPropertiesOutput).ToStaticCidrPropertiesPtrOutputWithContext(ctx)
}

// StaticCidrPropertiesPtrInput is an input type that accepts StaticCidrPropertiesArgs, StaticCidrPropertiesPtr and StaticCidrPropertiesPtrOutput values.
// You can construct a concrete instance of `StaticCidrPropertiesPtrInput` via:
//
//	        StaticCidrPropertiesArgs{...}
//
//	or:
//
//	        nil
type StaticCidrPropertiesPtrInput interface {
	pulumi.Input

	ToStaticCidrPropertiesPtrOutput() StaticCidrPropertiesPtrOutput
	ToStaticCidrPropertiesPtrOutputWithContext(context.Context) StaticCidrPropertiesPtrOutput
}

type staticCidrPropertiesPtrType StaticCidrPropertiesArgs

func StaticCidrPropertiesPtr(v *StaticCidrPropertiesArgs) StaticCidrPropertiesPtrInput {
	return (*staticCidrPropertiesPtrType)(v)
}

func (*staticCidrPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticCidrProperties)(nil)).Elem()
}

func (i *staticCidrPropertiesPtrType) ToStaticCidrPropertiesPtrOutput() StaticCidrPropertiesPtrOutput {
	return i.ToStaticCidrPropertiesPtrOutputWithContext(context.Background())
}

func (i *staticCidrPropertiesPtrType) ToStaticCidrPropertiesPtrOutputWithContext(ctx context.Context) StaticCidrPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticCidrPropertiesPtrOutput)
}

// Properties of static CIDR resource.
type StaticCidrPropertiesOutput struct{ *pulumi.OutputState }

func (StaticCidrPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticCidrProperties)(nil)).Elem()
}

func (o StaticCidrPropertiesOutput) ToStaticCidrPropertiesOutput() StaticCidrPropertiesOutput {
	return o
}

func (o StaticCidrPropertiesOutput) ToStaticCidrPropertiesOutputWithContext(ctx context.Context) StaticCidrPropertiesOutput {
	return o
}

func (o StaticCidrPropertiesOutput) ToStaticCidrPropertiesPtrOutput() StaticCidrPropertiesPtrOutput {
	return o.ToStaticCidrPropertiesPtrOutputWithContext(context.Background())
}

func (o StaticCidrPropertiesOutput) ToStaticCidrPropertiesPtrOutputWithContext(ctx context.Context) StaticCidrPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticCidrProperties) *StaticCidrProperties {
		return &v
	}).(StaticCidrPropertiesPtrOutput)
}

// List of IP address prefixes of the resource.
func (o StaticCidrPropertiesOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticCidrProperties) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

func (o StaticCidrPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticCidrProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.
func (o StaticCidrPropertiesOutput) NumberOfIPAddressesToAllocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticCidrProperties) *string { return v.NumberOfIPAddressesToAllocate }).(pulumi.StringPtrOutput)
}

type StaticCidrPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StaticCidrPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticCidrProperties)(nil)).Elem()
}

func (o StaticCidrPropertiesPtrOutput) ToStaticCidrPropertiesPtrOutput() StaticCidrPropertiesPtrOutput {
	return o
}

func (o StaticCidrPropertiesPtrOutput) ToStaticCidrPropertiesPtrOutputWithContext(ctx context.Context) StaticCidrPropertiesPtrOutput {
	return o
}

func (o StaticCidrPropertiesPtrOutput) Elem() StaticCidrPropertiesOutput {
	return o.ApplyT(func(v *StaticCidrProperties) StaticCidrProperties {
		if v != nil {
			return *v
		}
		var ret StaticCidrProperties
		return ret
	}).(StaticCidrPropertiesOutput)
}

// List of IP address prefixes of the resource.
func (o StaticCidrPropertiesPtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StaticCidrProperties) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

func (o StaticCidrPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticCidrProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.
func (o StaticCidrPropertiesPtrOutput) NumberOfIPAddressesToAllocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticCidrProperties) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfIPAddressesToAllocate
	}).(pulumi.StringPtrOutput)
}

// Properties of static CIDR resource.
type StaticCidrPropertiesResponse struct {
	// List of IP address prefixes of the resource.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	Description     *string  `pulumi:"description"`
	// Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.
	NumberOfIPAddressesToAllocate *string `pulumi:"numberOfIPAddressesToAllocate"`
	// Provisioning states of a resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Total number of IP addresses allocated for the static CIDR resource.
	TotalNumberOfIPAddresses string `pulumi:"totalNumberOfIPAddresses"`
}

// Properties of static CIDR resource.
type StaticCidrPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StaticCidrPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticCidrPropertiesResponse)(nil)).Elem()
}

func (o StaticCidrPropertiesResponseOutput) ToStaticCidrPropertiesResponseOutput() StaticCidrPropertiesResponseOutput {
	return o
}

func (o StaticCidrPropertiesResponseOutput) ToStaticCidrPropertiesResponseOutputWithContext(ctx context.Context) StaticCidrPropertiesResponseOutput {
	return o
}

// List of IP address prefixes of the resource.
func (o StaticCidrPropertiesResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticCidrPropertiesResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

func (o StaticCidrPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticCidrPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space.
func (o StaticCidrPropertiesResponseOutput) NumberOfIPAddressesToAllocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticCidrPropertiesResponse) *string { return v.NumberOfIPAddressesToAllocate }).(pulumi.StringPtrOutput)
}

// Provisioning states of a resource.
func (o StaticCidrPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v StaticCidrPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Total number of IP addresses allocated for the static CIDR resource.
func (o StaticCidrPropertiesResponseOutput) TotalNumberOfIPAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v StaticCidrPropertiesResponse) string { return v.TotalNumberOfIPAddresses }).(pulumi.StringOutput)
}

// List of all Static Routes.
type StaticRoute struct {
	// List of all address prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name *string `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// StaticRouteInput is an input type that accepts StaticRouteArgs and StaticRouteOutput values.
// You can construct a concrete instance of `StaticRouteInput` via:
//
//	StaticRouteArgs{...}
type StaticRouteInput interface {
	pulumi.Input

	ToStaticRouteOutput() StaticRouteOutput
	ToStaticRouteOutputWithContext(context.Context) StaticRouteOutput
}

// List of all Static Routes.
type StaticRouteArgs struct {
	// List of all address prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (StaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoute)(nil)).Elem()
}

func (i StaticRouteArgs) ToStaticRouteOutput() StaticRouteOutput {
	return i.ToStaticRouteOutputWithContext(context.Background())
}

func (i StaticRouteArgs) ToStaticRouteOutputWithContext(ctx context.Context) StaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteOutput)
}

// StaticRouteArrayInput is an input type that accepts StaticRouteArray and StaticRouteArrayOutput values.
// You can construct a concrete instance of `StaticRouteArrayInput` via:
//
//	StaticRouteArray{ StaticRouteArgs{...} }
type StaticRouteArrayInput interface {
	pulumi.Input

	ToStaticRouteArrayOutput() StaticRouteArrayOutput
	ToStaticRouteArrayOutputWithContext(context.Context) StaticRouteArrayOutput
}

type StaticRouteArray []StaticRouteInput

func (StaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoute)(nil)).Elem()
}

func (i StaticRouteArray) ToStaticRouteArrayOutput() StaticRouteArrayOutput {
	return i.ToStaticRouteArrayOutputWithContext(context.Background())
}

func (i StaticRouteArray) ToStaticRouteArrayOutputWithContext(ctx context.Context) StaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteArrayOutput)
}

// List of all Static Routes.
type StaticRouteOutput struct{ *pulumi.OutputState }

func (StaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoute)(nil)).Elem()
}

func (o StaticRouteOutput) ToStaticRouteOutput() StaticRouteOutput {
	return o
}

func (o StaticRouteOutput) ToStaticRouteOutputWithContext(ctx context.Context) StaticRouteOutput {
	return o
}

// List of all address prefixes.
func (o StaticRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name of the StaticRoute that is unique within a VnetRoute.
func (o StaticRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ip address of the next hop.
func (o StaticRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type StaticRouteArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoute)(nil)).Elem()
}

func (o StaticRouteArrayOutput) ToStaticRouteArrayOutput() StaticRouteArrayOutput {
	return o
}

func (o StaticRouteArrayOutput) ToStaticRouteArrayOutputWithContext(ctx context.Context) StaticRouteArrayOutput {
	return o
}

func (o StaticRouteArrayOutput) Index(i pulumi.IntInput) StaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRoute {
		return vs[0].([]StaticRoute)[vs[1].(int)]
	}).(StaticRouteOutput)
}

// List of all Static Routes.
type StaticRouteResponse struct {
	// List of all address prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name *string `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// List of all Static Routes.
type StaticRouteResponseOutput struct{ *pulumi.OutputState }

func (StaticRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteResponse)(nil)).Elem()
}

func (o StaticRouteResponseOutput) ToStaticRouteResponseOutput() StaticRouteResponseOutput {
	return o
}

func (o StaticRouteResponseOutput) ToStaticRouteResponseOutputWithContext(ctx context.Context) StaticRouteResponseOutput {
	return o
}

// List of all address prefixes.
func (o StaticRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name of the StaticRoute that is unique within a VnetRoute.
func (o StaticRouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ip address of the next hop.
func (o StaticRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type StaticRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteResponse)(nil)).Elem()
}

func (o StaticRouteResponseArrayOutput) ToStaticRouteResponseArrayOutput() StaticRouteResponseArrayOutput {
	return o
}

func (o StaticRouteResponseArrayOutput) ToStaticRouteResponseArrayOutputWithContext(ctx context.Context) StaticRouteResponseArrayOutput {
	return o
}

func (o StaticRouteResponseArrayOutput) Index(i pulumi.IntInput) StaticRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRouteResponse {
		return vs[0].([]StaticRouteResponse)[vs[1].(int)]
	}).(StaticRouteResponseOutput)
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfig struct {
	// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
	VnetLocalRouteOverrideCriteria *string `pulumi:"vnetLocalRouteOverrideCriteria"`
}

// StaticRoutesConfigInput is an input type that accepts StaticRoutesConfigArgs and StaticRoutesConfigOutput values.
// You can construct a concrete instance of `StaticRoutesConfigInput` via:
//
//	StaticRoutesConfigArgs{...}
type StaticRoutesConfigInput interface {
	pulumi.Input

	ToStaticRoutesConfigOutput() StaticRoutesConfigOutput
	ToStaticRoutesConfigOutputWithContext(context.Context) StaticRoutesConfigOutput
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigArgs struct {
	// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
	VnetLocalRouteOverrideCriteria pulumi.StringPtrInput `pulumi:"vnetLocalRouteOverrideCriteria"`
}

func (StaticRoutesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesConfig)(nil)).Elem()
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigOutput() StaticRoutesConfigOutput {
	return i.ToStaticRoutesConfigOutputWithContext(context.Background())
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigOutputWithContext(ctx context.Context) StaticRoutesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesConfigOutput)
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return i.ToStaticRoutesConfigPtrOutputWithContext(context.Background())
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesConfigOutput).ToStaticRoutesConfigPtrOutputWithContext(ctx)
}

// StaticRoutesConfigPtrInput is an input type that accepts StaticRoutesConfigArgs, StaticRoutesConfigPtr and StaticRoutesConfigPtrOutput values.
// You can construct a concrete instance of `StaticRoutesConfigPtrInput` via:
//
//	        StaticRoutesConfigArgs{...}
//
//	or:
//
//	        nil
type StaticRoutesConfigPtrInput interface {
	pulumi.Input

	ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput
	ToStaticRoutesConfigPtrOutputWithContext(context.Context) StaticRoutesConfigPtrOutput
}

type staticRoutesConfigPtrType StaticRoutesConfigArgs

func StaticRoutesConfigPtr(v *StaticRoutesConfigArgs) StaticRoutesConfigPtrInput {
	return (*staticRoutesConfigPtrType)(v)
}

func (*staticRoutesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRoutesConfig)(nil)).Elem()
}

func (i *staticRoutesConfigPtrType) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return i.ToStaticRoutesConfigPtrOutputWithContext(context.Background())
}

func (i *staticRoutesConfigPtrType) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesConfigPtrOutput)
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesConfig)(nil)).Elem()
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigOutput() StaticRoutesConfigOutput {
	return o
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigOutputWithContext(ctx context.Context) StaticRoutesConfigOutput {
	return o
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return o.ToStaticRoutesConfigPtrOutputWithContext(context.Background())
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticRoutesConfig) *StaticRoutesConfig {
		return &v
	}).(StaticRoutesConfigPtrOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoutesConfig) *string { return v.VnetLocalRouteOverrideCriteria }).(pulumi.StringPtrOutput)
}

type StaticRoutesConfigPtrOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRoutesConfig)(nil)).Elem()
}

func (o StaticRoutesConfigPtrOutput) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return o
}

func (o StaticRoutesConfigPtrOutput) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return o
}

func (o StaticRoutesConfigPtrOutput) Elem() StaticRoutesConfigOutput {
	return o.ApplyT(func(v *StaticRoutesConfig) StaticRoutesConfig {
		if v != nil {
			return *v
		}
		var ret StaticRoutesConfig
		return ret
	}).(StaticRoutesConfigOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigPtrOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticRoutesConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetLocalRouteOverrideCriteria
	}).(pulumi.StringPtrOutput)
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigResponse struct {
	// Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
	PropagateStaticRoutes bool `pulumi:"propagateStaticRoutes"`
	// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
	VnetLocalRouteOverrideCriteria *string `pulumi:"vnetLocalRouteOverrideCriteria"`
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigResponseOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesConfigResponse)(nil)).Elem()
}

func (o StaticRoutesConfigResponseOutput) ToStaticRoutesConfigResponseOutput() StaticRoutesConfigResponseOutput {
	return o
}

func (o StaticRoutesConfigResponseOutput) ToStaticRoutesConfigResponseOutputWithContext(ctx context.Context) StaticRoutesConfigResponseOutput {
	return o
}

// Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
func (o StaticRoutesConfigResponseOutput) PropagateStaticRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v StaticRoutesConfigResponse) bool { return v.PropagateStaticRoutes }).(pulumi.BoolOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigResponseOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoutesConfigResponse) *string { return v.VnetLocalRouteOverrideCriteria }).(pulumi.StringPtrOutput)
}

type StaticRoutesConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRoutesConfigResponse)(nil)).Elem()
}

func (o StaticRoutesConfigResponsePtrOutput) ToStaticRoutesConfigResponsePtrOutput() StaticRoutesConfigResponsePtrOutput {
	return o
}

func (o StaticRoutesConfigResponsePtrOutput) ToStaticRoutesConfigResponsePtrOutputWithContext(ctx context.Context) StaticRoutesConfigResponsePtrOutput {
	return o
}

func (o StaticRoutesConfigResponsePtrOutput) Elem() StaticRoutesConfigResponseOutput {
	return o.ApplyT(func(v *StaticRoutesConfigResponse) StaticRoutesConfigResponse {
		if v != nil {
			return *v
		}
		var ret StaticRoutesConfigResponse
		return ret
	}).(StaticRoutesConfigResponseOutput)
}

// Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
func (o StaticRoutesConfigResponsePtrOutput) PropagateStaticRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticRoutesConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.PropagateStaticRoutes
	}).(pulumi.BoolPtrOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigResponsePtrOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticRoutesConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetLocalRouteOverrideCriteria
	}).(pulumi.StringPtrOutput)
}

// Reference to another subresource.
type SubResource struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//	SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Reference to another subresource.
type SubResourceArgs struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//	        SubResourceArgs{...}
//
//	or:
//
//	        nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//	SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// Reference to another subresource.
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource {
		if v != nil {
			return *v
		}
		var ret SubResource
		return ret
	}).(SubResourceOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Reference to another subresource.
type SubResourceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another subresource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse {
		if v != nil {
			return *v
		}
		var ret SubResourceResponse
		return ret
	}).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetType struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIPConfigurations []ApplicationGatewayIPConfiguration `pulumi:"applicationGatewayIPConfigurations"`
	// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
	DefaultOutboundAccess *bool `pulumi:"defaultOutboundAccess"`
	// An array of references to the delegations on the subnet.
	Delegations []Delegation `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResource `pulumi:"ipAllocations"`
	// A list of IPAM Pools for allocating IP address prefixes.
	IpamPoolPrefixAllocations []IpamPoolPrefixAllocation `pulumi:"ipamPoolPrefixAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResource `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLink `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableType `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLink `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyType `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `pulumi:"serviceEndpoints"`
	// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
	SharingScope *string `pulumi:"sharingScope"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetType
func (val *SubnetType) Defaults() *SubnetType {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		privateEndpointNetworkPolicies_ := "Disabled"
		tmp.PrivateEndpointNetworkPolicies = &privateEndpointNetworkPolicies_
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		privateLinkServiceNetworkPolicies_ := "Enabled"
		tmp.PrivateLinkServiceNetworkPolicies = &privateLinkServiceNetworkPolicies_
	}
	return &tmp
}

// SubnetTypeInput is an input type that accepts SubnetTypeArgs and SubnetTypeOutput values.
// You can construct a concrete instance of `SubnetTypeInput` via:
//
//	SubnetTypeArgs{...}
type SubnetTypeInput interface {
	pulumi.Input

	ToSubnetTypeOutput() SubnetTypeOutput
	ToSubnetTypeOutputWithContext(context.Context) SubnetTypeOutput
}

// Subnet in a virtual network resource.
type SubnetTypeArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIPConfigurations ApplicationGatewayIPConfigurationArrayInput `pulumi:"applicationGatewayIPConfigurations"`
	// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
	DefaultOutboundAccess pulumi.BoolPtrInput `pulumi:"defaultOutboundAccess"`
	// An array of references to the delegations on the subnet.
	Delegations DelegationArrayInput `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations SubResourceArrayInput `pulumi:"ipAllocations"`
	// A list of IPAM Pools for allocating IP address prefixes.
	IpamPoolPrefixAllocations IpamPoolPrefixAllocationArrayInput `pulumi:"ipamPoolPrefixAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway SubResourcePtrInput `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies pulumi.StringPtrInput `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies pulumi.StringPtrInput `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks ResourceNavigationLinkArrayInput `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable RouteTableTypePtrInput `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks ServiceAssociationLinkArrayInput `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies ServiceEndpointPolicyTypeArrayInput `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatArrayInput `pulumi:"serviceEndpoints"`
	// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
	SharingScope pulumi.StringPtrInput `pulumi:"sharingScope"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetTypeArgs
func (val *SubnetTypeArgs) Defaults() *SubnetTypeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		tmp.PrivateEndpointNetworkPolicies = pulumi.StringPtr("Disabled")
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		tmp.PrivateLinkServiceNetworkPolicies = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (SubnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (i SubnetTypeArgs) ToSubnetTypeOutput() SubnetTypeOutput {
	return i.ToSubnetTypeOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput)
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput).ToSubnetTypePtrOutputWithContext(ctx)
}

// SubnetTypePtrInput is an input type that accepts SubnetTypeArgs, SubnetTypePtr and SubnetTypePtrOutput values.
// You can construct a concrete instance of `SubnetTypePtrInput` via:
//
//	        SubnetTypeArgs{...}
//
//	or:
//
//	        nil
type SubnetTypePtrInput interface {
	pulumi.Input

	ToSubnetTypePtrOutput() SubnetTypePtrOutput
	ToSubnetTypePtrOutputWithContext(context.Context) SubnetTypePtrOutput
}

type subnetTypePtrType SubnetTypeArgs

func SubnetTypePtr(v *SubnetTypeArgs) SubnetTypePtrInput {
	return (*subnetTypePtrType)(v)
}

func (*subnetTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypePtrOutput)
}

// SubnetTypeArrayInput is an input type that accepts SubnetTypeArray and SubnetTypeArrayOutput values.
// You can construct a concrete instance of `SubnetTypeArrayInput` via:
//
//	SubnetTypeArray{ SubnetTypeArgs{...} }
type SubnetTypeArrayInput interface {
	pulumi.Input

	ToSubnetTypeArrayOutput() SubnetTypeArrayOutput
	ToSubnetTypeArrayOutputWithContext(context.Context) SubnetTypeArrayOutput
}

type SubnetTypeArray []SubnetTypeInput

func (SubnetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return i.ToSubnetTypeArrayOutputWithContext(context.Background())
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetTypeOutput struct{ *pulumi.OutputState }

func (SubnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (o SubnetTypeOutput) ToSubnetTypeOutput() SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetType) *SubnetType {
		return &v
	}).(SubnetTypePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetTypeOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetType) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetTypeOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v SubnetType) []ApplicationGatewayIPConfiguration { return v.ApplicationGatewayIPConfigurations }).(ApplicationGatewayIPConfigurationArrayOutput)
}

// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
func (o SubnetTypeOutput) DefaultOutboundAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubnetType) *bool { return v.DefaultOutboundAccess }).(pulumi.BoolPtrOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetTypeOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v SubnetType) []Delegation { return v.Delegations }).(DelegationArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetTypeOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v SubnetType) []SubResource { return v.IpAllocations }).(SubResourceArrayOutput)
}

// A list of IPAM Pools for allocating IP address prefixes.
func (o SubnetTypeOutput) IpamPoolPrefixAllocations() IpamPoolPrefixAllocationArrayOutput {
	return o.ApplyT(func(v SubnetType) []IpamPoolPrefixAllocation { return v.IpamPoolPrefixAllocations }).(IpamPoolPrefixAllocationArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetTypeOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v SubnetType) *SubResource { return v.NatGateway }).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetTypeOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetTypeOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetTypeOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetTypeOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v SubnetType) []ResourceNavigationLink { return v.ResourceNavigationLinks }).(ResourceNavigationLinkArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetTypeOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *RouteTableType { return v.RouteTable }).(RouteTableTypePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetTypeOutput) ServiceAssociationLinks() ServiceAssociationLinkArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceAssociationLink { return v.ServiceAssociationLinks }).(ServiceAssociationLinkArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetTypeOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceEndpointPolicyType { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetTypeOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceEndpointPropertiesFormat { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatArrayOutput)
}

// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
func (o SubnetTypeOutput) SharingScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.SharingScope }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o SubnetTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SubnetTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) Elem() SubnetTypeOutput {
	return o.ApplyT(func(v *SubnetType) SubnetType {
		if v != nil {
			return *v
		}
		var ret SubnetType
		return ret
	}).(SubnetTypeOutput)
}

// The address prefix for the subnet.
func (o SubnetTypePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetTypePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetType) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetTypePtrOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ApplicationGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationArrayOutput)
}

// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
func (o SubnetTypePtrOutput) DefaultOutboundAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubnetType) *bool {
		if v == nil {
			return nil
		}
		return v.DefaultOutboundAccess
	}).(pulumi.BoolPtrOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetTypePtrOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v *SubnetType) []Delegation {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetTypePtrOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v *SubnetType) []SubResource {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceArrayOutput)
}

// A list of IPAM Pools for allocating IP address prefixes.
func (o SubnetTypePtrOutput) IpamPoolPrefixAllocations() IpamPoolPrefixAllocationArrayOutput {
	return o.ApplyT(func(v *SubnetType) []IpamPoolPrefixAllocation {
		if v == nil {
			return nil
		}
		return v.IpamPoolPrefixAllocations
	}).(IpamPoolPrefixAllocationArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetTypePtrOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v *SubnetType) *SubResource {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetTypePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *NetworkSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupTypePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetTypePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetTypePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetTypePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ResourceNavigationLink {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetTypePtrOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *RouteTableType {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableTypePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetTypePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceAssociationLink {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetTypePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceEndpointPolicyType {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetTypePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceEndpointPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatArrayOutput)
}

// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
func (o SubnetTypePtrOutput) SharingScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.SharingScope
	}).(pulumi.StringPtrOutput)
}

// Resource type.
func (o SubnetTypePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SubnetTypeArrayOutput struct{ *pulumi.OutputState }

func (SubnetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) Index(i pulumi.IntInput) SubnetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetType {
		return vs[0].([]SubnetType)[vs[1].(int)]
	}).(SubnetTypeOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIPConfigurations []ApplicationGatewayIPConfigurationResponse `pulumi:"applicationGatewayIPConfigurations"`
	// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
	DefaultOutboundAccess *bool `pulumi:"defaultOutboundAccess"`
	// An array of references to the delegations on the subnet.
	Delegations []DelegationResponse `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of references to interface endpoints
	InterfaceEndpoints []InterfaceEndpointResponse `pulumi:"interfaceEndpoints"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResourceResponse `pulumi:"ipAllocations"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles []IPConfigurationProfileResponse `pulumi:"ipConfigurationProfiles"`
	// An array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// A list of IPAM Pools for allocating IP address prefixes.
	IpamPoolPrefixAllocations []IpamPoolPrefixAllocationResponse `pulumi:"ipamPoolPrefixAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResourceResponse `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// An array of references to private endpoints.
	PrivateEndpoints []PrivateEndpointResponse `pulumi:"privateEndpoints"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the subnet resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose string `pulumi:"purpose"`
	// An array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// An array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLinkResponse `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyResponse `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
	// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
	SharingScope *string `pulumi:"sharingScope"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetResponse
func (val *SubnetResponse) Defaults() *SubnetResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		privateEndpointNetworkPolicies_ := "Disabled"
		tmp.PrivateEndpointNetworkPolicies = &privateEndpointNetworkPolicies_
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		privateLinkServiceNetworkPolicies_ := "Enabled"
		tmp.PrivateLinkServiceNetworkPolicies = &privateLinkServiceNetworkPolicies_
	}
	return &tmp
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

// The address prefix for the subnet.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetResponseOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ApplicationGatewayIPConfigurationResponse {
		return v.ApplicationGatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
func (o SubnetResponseOutput) DefaultOutboundAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *bool { return v.DefaultOutboundAccess }).(pulumi.BoolPtrOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponseOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []DelegationResponse { return v.Delegations }).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of references to interface endpoints
func (o SubnetResponseOutput) InterfaceEndpoints() InterfaceEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []InterfaceEndpointResponse { return v.InterfaceEndpoints }).(InterfaceEndpointResponseArrayOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponseOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []SubResourceResponse { return v.IpAllocations }).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponseOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationProfileResponse { return v.IpConfigurationProfiles }).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// A list of IPAM Pools for allocating IP address prefixes.
func (o SubnetResponseOutput) IpamPoolPrefixAllocations() IpamPoolPrefixAllocationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IpamPoolPrefixAllocationResponse { return v.IpamPoolPrefixAllocations }).(IpamPoolPrefixAllocationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponseOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubResourceResponse { return v.NatGateway }).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponseOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponseOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []PrivateEndpointResponse { return v.PrivateEndpoints }).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponseOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponseOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Purpose }).(pulumi.StringOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponseOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ResourceNavigationLinkResponse { return v.ResourceNavigationLinks }).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponseOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceAssociationLinkResponse { return v.ServiceAssociationLinks }).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponseOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPolicyResponse { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponseOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPropertiesFormatResponse { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
func (o SubnetResponseOutput) SharingScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.SharingScope }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o SubnetResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse {
		if v != nil {
			return *v
		}
		var ret SubnetResponse
		return ret
	}).(SubnetResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetResponsePtrOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ApplicationGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet.
func (o SubnetResponsePtrOutput) DefaultOutboundAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DefaultOutboundAccess
	}).(pulumi.BoolPtrOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponsePtrOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []DelegationResponse {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of references to interface endpoints
func (o SubnetResponsePtrOutput) InterfaceEndpoints() InterfaceEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []InterfaceEndpointResponse {
		if v == nil {
			return nil
		}
		return v.InterfaceEndpoints
	}).(InterfaceEndpointResponseArrayOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponsePtrOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponsePtrOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationProfileResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurationProfiles
	}).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// A list of IPAM Pools for allocating IP address prefixes.
func (o SubnetResponsePtrOutput) IpamPoolPrefixAllocations() IpamPoolPrefixAllocationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IpamPoolPrefixAllocationResponse {
		if v == nil {
			return nil
		}
		return v.IpamPoolPrefixAllocations
	}).(IpamPoolPrefixAllocationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponsePtrOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponsePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponsePtrOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoints
	}).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponsePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponsePtrOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Purpose
	}).(pulumi.StringPtrOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponsePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ResourceNavigationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponsePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceAssociationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponsePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponsePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty.
func (o SubnetResponsePtrOutput) SharingScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.SharingScope
	}).(pulumi.StringPtrOutput)
}

// Resource type.
func (o SubnetResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

type SubscriptionId struct {
	// Subscription id in the ARM id format.
	Id *string `pulumi:"id"`
}

// SubscriptionIdInput is an input type that accepts SubscriptionIdArgs and SubscriptionIdOutput values.
// You can construct a concrete instance of `SubscriptionIdInput` via:
//
//	SubscriptionIdArgs{...}
type SubscriptionIdInput interface {
	pulumi.Input

	ToSubscriptionIdOutput() SubscriptionIdOutput
	ToSubscriptionIdOutputWithContext(context.Context) SubscriptionIdOutput
}

type SubscriptionIdArgs struct {
	// Subscription id in the ARM id format.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubscriptionIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionId)(nil)).Elem()
}

func (i SubscriptionIdArgs) ToSubscriptionIdOutput() SubscriptionIdOutput {
	return i.ToSubscriptionIdOutputWithContext(context.Background())
}

func (i SubscriptionIdArgs) ToSubscriptionIdOutputWithContext(ctx context.Context) SubscriptionIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIdOutput)
}

// SubscriptionIdArrayInput is an input type that accepts SubscriptionIdArray and SubscriptionIdArrayOutput values.
// You can construct a concrete instance of `SubscriptionIdArrayInput` via:
//
//	SubscriptionIdArray{ SubscriptionIdArgs{...} }
type SubscriptionIdArrayInput interface {
	pulumi.Input

	ToSubscriptionIdArrayOutput() SubscriptionIdArrayOutput
	ToSubscriptionIdArrayOutputWithContext(context.Context) SubscriptionIdArrayOutput
}

type SubscriptionIdArray []SubscriptionIdInput

func (SubscriptionIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionId)(nil)).Elem()
}

func (i SubscriptionIdArray) ToSubscriptionIdArrayOutput() SubscriptionIdArrayOutput {
	return i.ToSubscriptionIdArrayOutputWithContext(context.Background())
}

func (i SubscriptionIdArray) ToSubscriptionIdArrayOutputWithContext(ctx context.Context) SubscriptionIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIdArrayOutput)
}

type SubscriptionIdOutput struct{ *pulumi.OutputState }

func (SubscriptionIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionId)(nil)).Elem()
}

func (o SubscriptionIdOutput) ToSubscriptionIdOutput() SubscriptionIdOutput {
	return o
}

func (o SubscriptionIdOutput) ToSubscriptionIdOutputWithContext(ctx context.Context) SubscriptionIdOutput {
	return o
}

// Subscription id in the ARM id format.
func (o SubscriptionIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubscriptionIdArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionId)(nil)).Elem()
}

func (o SubscriptionIdArrayOutput) ToSubscriptionIdArrayOutput() SubscriptionIdArrayOutput {
	return o
}

func (o SubscriptionIdArrayOutput) ToSubscriptionIdArrayOutputWithContext(ctx context.Context) SubscriptionIdArrayOutput {
	return o
}

func (o SubscriptionIdArrayOutput) Index(i pulumi.IntInput) SubscriptionIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionId {
		return vs[0].([]SubscriptionId)[vs[1].(int)]
	}).(SubscriptionIdOutput)
}

type SubscriptionIdResponse struct {
	// Subscription id in the ARM id format.
	Id *string `pulumi:"id"`
}

type SubscriptionIdResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIdResponse)(nil)).Elem()
}

func (o SubscriptionIdResponseOutput) ToSubscriptionIdResponseOutput() SubscriptionIdResponseOutput {
	return o
}

func (o SubscriptionIdResponseOutput) ToSubscriptionIdResponseOutputWithContext(ctx context.Context) SubscriptionIdResponseOutput {
	return o
}

// Subscription id in the ARM id format.
func (o SubscriptionIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubscriptionIdResponseArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionIdResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionIdResponse)(nil)).Elem()
}

func (o SubscriptionIdResponseArrayOutput) ToSubscriptionIdResponseArrayOutput() SubscriptionIdResponseArrayOutput {
	return o
}

func (o SubscriptionIdResponseArrayOutput) ToSubscriptionIdResponseArrayOutputWithContext(ctx context.Context) SubscriptionIdResponseArrayOutput {
	return o
}

func (o SubscriptionIdResponseArrayOutput) Index(i pulumi.IntInput) SubscriptionIdResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionIdResponse {
		return vs[0].([]SubscriptionIdResponse)[vs[1].(int)]
	}).(SubscriptionIdResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationProperties struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// TrafficAnalyticsConfigurationPropertiesInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesArgs and TrafficAnalyticsConfigurationPropertiesOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesInput` via:
//
//	TrafficAnalyticsConfigurationPropertiesArgs{...}
type TrafficAnalyticsConfigurationPropertiesInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput
	ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesArgs struct {
	// Flag to enable/disable traffic analytics.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval pulumi.IntPtrInput `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion pulumi.StringPtrInput `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (TrafficAnalyticsConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesOutput)
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesOutput).ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx)
}

// TrafficAnalyticsConfigurationPropertiesPtrInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesArgs, TrafficAnalyticsConfigurationPropertiesPtr and TrafficAnalyticsConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesPtrInput` via:
//
//	        TrafficAnalyticsConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type TrafficAnalyticsConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput
	ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput
}

type trafficAnalyticsConfigurationPropertiesPtrType TrafficAnalyticsConfigurationPropertiesArgs

func TrafficAnalyticsConfigurationPropertiesPtr(v *TrafficAnalyticsConfigurationPropertiesArgs) TrafficAnalyticsConfigurationPropertiesPtrInput {
	return (*trafficAnalyticsConfigurationPropertiesPtrType)(v)
}

func (*trafficAnalyticsConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (i *trafficAnalyticsConfigurationPropertiesPtrType) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsConfigurationPropertiesPtrType) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficAnalyticsConfigurationProperties) *TrafficAnalyticsConfigurationProperties {
		return &v
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) TrafficAnalyticsConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsConfigurationProperties
		return ret
	}).(TrafficAnalyticsConfigurationPropertiesOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponse struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutput() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) TrafficAnalyticsConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsConfigurationPropertiesResponse
		return ret
	}).(TrafficAnalyticsConfigurationPropertiesResponseOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsProperties struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationProperties `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// TrafficAnalyticsPropertiesInput is an input type that accepts TrafficAnalyticsPropertiesArgs and TrafficAnalyticsPropertiesOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesInput` via:
//
//	TrafficAnalyticsPropertiesArgs{...}
type TrafficAnalyticsPropertiesInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput
	ToTrafficAnalyticsPropertiesOutputWithContext(context.Context) TrafficAnalyticsPropertiesOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesArgs struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration TrafficAnalyticsConfigurationPropertiesPtrInput `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

func (TrafficAnalyticsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsProperties)(nil)).Elem()
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput {
	return i.ToTrafficAnalyticsPropertiesOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesOutput)
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return i.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesOutput).ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx)
}

// TrafficAnalyticsPropertiesPtrInput is an input type that accepts TrafficAnalyticsPropertiesArgs, TrafficAnalyticsPropertiesPtr and TrafficAnalyticsPropertiesPtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesPtrInput` via:
//
//	        TrafficAnalyticsPropertiesArgs{...}
//
//	or:
//
//	        nil
type TrafficAnalyticsPropertiesPtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput
	ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Context) TrafficAnalyticsPropertiesPtrOutput
}

type trafficAnalyticsPropertiesPtrType TrafficAnalyticsPropertiesArgs

func TrafficAnalyticsPropertiesPtr(v *TrafficAnalyticsPropertiesArgs) TrafficAnalyticsPropertiesPtrInput {
	return (*trafficAnalyticsPropertiesPtrType)(v)
}

func (*trafficAnalyticsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsProperties)(nil)).Elem()
}

func (i *trafficAnalyticsPropertiesPtrType) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return i.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsPropertiesPtrType) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsProperties)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput {
	return o
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesOutput {
	return o
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return o.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficAnalyticsProperties) *TrafficAnalyticsProperties {
		return &v
	}).(TrafficAnalyticsPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsProperties) *TrafficAnalyticsConfigurationProperties {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

type TrafficAnalyticsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsProperties)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesPtrOutput) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesPtrOutput) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesPtrOutput) Elem() TrafficAnalyticsPropertiesOutput {
	return o.ApplyT(func(v *TrafficAnalyticsProperties) TrafficAnalyticsProperties {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsProperties
		return ret
	}).(TrafficAnalyticsPropertiesOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesPtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsProperties) *TrafficAnalyticsConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponse struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationPropertiesResponse `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutput() TrafficAnalyticsPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponseOutput {
	return o
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponseOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

type TrafficAnalyticsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) Elem() TrafficAnalyticsPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) TrafficAnalyticsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsPropertiesResponse
		return ret
	}).(TrafficAnalyticsPropertiesResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponsePtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicy struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges []string `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges []string `pulumi:"remoteAddressRanges"`
}

// TrafficSelectorPolicyInput is an input type that accepts TrafficSelectorPolicyArgs and TrafficSelectorPolicyOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyInput` via:
//
//	TrafficSelectorPolicyArgs{...}
type TrafficSelectorPolicyInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput
	ToTrafficSelectorPolicyOutputWithContext(context.Context) TrafficSelectorPolicyOutput
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyArgs struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges pulumi.StringArrayInput `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges pulumi.StringArrayInput `pulumi:"remoteAddressRanges"`
}

func (TrafficSelectorPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicy)(nil)).Elem()
}

func (i TrafficSelectorPolicyArgs) ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput {
	return i.ToTrafficSelectorPolicyOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyArgs) ToTrafficSelectorPolicyOutputWithContext(ctx context.Context) TrafficSelectorPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyOutput)
}

// TrafficSelectorPolicyArrayInput is an input type that accepts TrafficSelectorPolicyArray and TrafficSelectorPolicyArrayOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyArrayInput` via:
//
//	TrafficSelectorPolicyArray{ TrafficSelectorPolicyArgs{...} }
type TrafficSelectorPolicyArrayInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput
	ToTrafficSelectorPolicyArrayOutputWithContext(context.Context) TrafficSelectorPolicyArrayOutput
}

type TrafficSelectorPolicyArray []TrafficSelectorPolicyInput

func (TrafficSelectorPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicy)(nil)).Elem()
}

func (i TrafficSelectorPolicyArray) ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput {
	return i.ToTrafficSelectorPolicyArrayOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyArray) ToTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyArrayOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicy)(nil)).Elem()
}

func (o TrafficSelectorPolicyOutput) ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput {
	return o
}

func (o TrafficSelectorPolicyOutput) ToTrafficSelectorPolicyOutputWithContext(ctx context.Context) TrafficSelectorPolicyOutput {
	return o
}

// A collection of local address spaces in CIDR format.
func (o TrafficSelectorPolicyOutput) LocalAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicy) []string { return v.LocalAddressRanges }).(pulumi.StringArrayOutput)
}

// A collection of remote address spaces in CIDR format.
func (o TrafficSelectorPolicyOutput) RemoteAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicy) []string { return v.RemoteAddressRanges }).(pulumi.StringArrayOutput)
}

type TrafficSelectorPolicyArrayOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicy)(nil)).Elem()
}

func (o TrafficSelectorPolicyArrayOutput) ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput {
	return o
}

func (o TrafficSelectorPolicyArrayOutput) ToTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyArrayOutput {
	return o
}

func (o TrafficSelectorPolicyArrayOutput) Index(i pulumi.IntInput) TrafficSelectorPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficSelectorPolicy {
		return vs[0].([]TrafficSelectorPolicy)[vs[1].(int)]
	}).(TrafficSelectorPolicyOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyResponse struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges []string `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges []string `pulumi:"remoteAddressRanges"`
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyResponseOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (o TrafficSelectorPolicyResponseOutput) ToTrafficSelectorPolicyResponseOutput() TrafficSelectorPolicyResponseOutput {
	return o
}

func (o TrafficSelectorPolicyResponseOutput) ToTrafficSelectorPolicyResponseOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseOutput {
	return o
}

// A collection of local address spaces in CIDR format.
func (o TrafficSelectorPolicyResponseOutput) LocalAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicyResponse) []string { return v.LocalAddressRanges }).(pulumi.StringArrayOutput)
}

// A collection of remote address spaces in CIDR format.
func (o TrafficSelectorPolicyResponseOutput) RemoteAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicyResponse) []string { return v.RemoteAddressRanges }).(pulumi.StringArrayOutput)
}

type TrafficSelectorPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (o TrafficSelectorPolicyResponseArrayOutput) ToTrafficSelectorPolicyResponseArrayOutput() TrafficSelectorPolicyResponseArrayOutput {
	return o
}

func (o TrafficSelectorPolicyResponseArrayOutput) ToTrafficSelectorPolicyResponseArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseArrayOutput {
	return o
}

func (o TrafficSelectorPolicyResponseArrayOutput) Index(i pulumi.IntInput) TrafficSelectorPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficSelectorPolicyResponse {
		return vs[0].([]TrafficSelectorPolicyResponse)[vs[1].(int)]
	}).(TrafficSelectorPolicyResponseOutput)
}

// VirtualNetworkGatewayConnection properties.
type TunnelConnectionHealthResponse struct {
	// Virtual Network Gateway connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime string `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel string `pulumi:"tunnel"`
}

// VirtualNetworkGatewayConnection properties.
type TunnelConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return o
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return o
}

// Virtual Network Gateway connection status.
func (o TunnelConnectionHealthResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The Egress Bytes Transferred in this connection.
func (o TunnelConnectionHealthResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// The Ingress Bytes Transferred in this connection.
func (o TunnelConnectionHealthResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// The time at which connection was established in Utc format.
func (o TunnelConnectionHealthResponseOutput) LastConnectionEstablishedUtcTime() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.LastConnectionEstablishedUtcTime }).(pulumi.StringOutput)
}

// Tunnel name.
func (o TunnelConnectionHealthResponseOutput) Tunnel() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.Tunnel }).(pulumi.StringOutput)
}

type TunnelConnectionHealthResponseArrayOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) Index(i pulumi.IntInput) TunnelConnectionHealthResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TunnelConnectionHealthResponse {
		return vs[0].([]TunnelConnectionHealthResponse)[vs[1].(int)]
	}).(TunnelConnectionHealthResponseOutput)
}

// Describes a Virtual Machine.
type VM struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// VMInput is an input type that accepts VMArgs and VMOutput values.
// You can construct a concrete instance of `VMInput` via:
//
//	VMArgs{...}
type VMInput interface {
	pulumi.Input

	ToVMOutput() VMOutput
	ToVMOutputWithContext(context.Context) VMOutput
}

// Describes a Virtual Machine.
type VMArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (VMArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VM)(nil)).Elem()
}

func (i VMArgs) ToVMOutput() VMOutput {
	return i.ToVMOutputWithContext(context.Background())
}

func (i VMArgs) ToVMOutputWithContext(ctx context.Context) VMOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMOutput)
}

// Describes a Virtual Machine.
type VMOutput struct{ *pulumi.OutputState }

func (VMOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VM)(nil)).Elem()
}

func (o VMOutput) ToVMOutput() VMOutput {
	return o
}

func (o VMOutput) ToVMOutputWithContext(ctx context.Context) VMOutput {
	return o
}

// Resource ID.
func (o VMOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VM) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VMOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VM) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VMOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VM) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Describes a Virtual Machine.
type VMResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Describes a Virtual Machine.
type VMResponseOutput struct{ *pulumi.OutputState }

func (VMResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMResponse)(nil)).Elem()
}

func (o VMResponseOutput) ToVMResponseOutput() VMResponseOutput {
	return o
}

func (o VMResponseOutput) ToVMResponseOutputWithContext(ctx context.Context) VMResponseOutput {
	return o
}

// Resource ID.
func (o VMResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VMResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VMResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VMResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource tags.
func (o VMResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VMResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VMResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of Verifier Workspace resource.
type VerifierWorkspaceProperties struct {
	Description *string `pulumi:"description"`
}

// VerifierWorkspacePropertiesInput is an input type that accepts VerifierWorkspacePropertiesArgs and VerifierWorkspacePropertiesOutput values.
// You can construct a concrete instance of `VerifierWorkspacePropertiesInput` via:
//
//	VerifierWorkspacePropertiesArgs{...}
type VerifierWorkspacePropertiesInput interface {
	pulumi.Input

	ToVerifierWorkspacePropertiesOutput() VerifierWorkspacePropertiesOutput
	ToVerifierWorkspacePropertiesOutputWithContext(context.Context) VerifierWorkspacePropertiesOutput
}

// Properties of Verifier Workspace resource.
type VerifierWorkspacePropertiesArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (VerifierWorkspacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerifierWorkspaceProperties)(nil)).Elem()
}

func (i VerifierWorkspacePropertiesArgs) ToVerifierWorkspacePropertiesOutput() VerifierWorkspacePropertiesOutput {
	return i.ToVerifierWorkspacePropertiesOutputWithContext(context.Background())
}

func (i VerifierWorkspacePropertiesArgs) ToVerifierWorkspacePropertiesOutputWithContext(ctx context.Context) VerifierWorkspacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerifierWorkspacePropertiesOutput)
}

func (i VerifierWorkspacePropertiesArgs) ToVerifierWorkspacePropertiesPtrOutput() VerifierWorkspacePropertiesPtrOutput {
	return i.ToVerifierWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i VerifierWorkspacePropertiesArgs) ToVerifierWorkspacePropertiesPtrOutputWithContext(ctx context.Context) VerifierWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerifierWorkspacePropertiesOutput).ToVerifierWorkspacePropertiesPtrOutputWithContext(ctx)
}

// VerifierWorkspacePropertiesPtrInput is an input type that accepts VerifierWorkspacePropertiesArgs, VerifierWorkspacePropertiesPtr and VerifierWorkspacePropertiesPtrOutput values.
// You can construct a concrete instance of `VerifierWorkspacePropertiesPtrInput` via:
//
//	        VerifierWorkspacePropertiesArgs{...}
//
//	or:
//
//	        nil
type VerifierWorkspacePropertiesPtrInput interface {
	pulumi.Input

	ToVerifierWorkspacePropertiesPtrOutput() VerifierWorkspacePropertiesPtrOutput
	ToVerifierWorkspacePropertiesPtrOutputWithContext(context.Context) VerifierWorkspacePropertiesPtrOutput
}

type verifierWorkspacePropertiesPtrType VerifierWorkspacePropertiesArgs

func VerifierWorkspacePropertiesPtr(v *VerifierWorkspacePropertiesArgs) VerifierWorkspacePropertiesPtrInput {
	return (*verifierWorkspacePropertiesPtrType)(v)
}

func (*verifierWorkspacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VerifierWorkspaceProperties)(nil)).Elem()
}

func (i *verifierWorkspacePropertiesPtrType) ToVerifierWorkspacePropertiesPtrOutput() VerifierWorkspacePropertiesPtrOutput {
	return i.ToVerifierWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i *verifierWorkspacePropertiesPtrType) ToVerifierWorkspacePropertiesPtrOutputWithContext(ctx context.Context) VerifierWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerifierWorkspacePropertiesPtrOutput)
}

// Properties of Verifier Workspace resource.
type VerifierWorkspacePropertiesOutput struct{ *pulumi.OutputState }

func (VerifierWorkspacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerifierWorkspaceProperties)(nil)).Elem()
}

func (o VerifierWorkspacePropertiesOutput) ToVerifierWorkspacePropertiesOutput() VerifierWorkspacePropertiesOutput {
	return o
}

func (o VerifierWorkspacePropertiesOutput) ToVerifierWorkspacePropertiesOutputWithContext(ctx context.Context) VerifierWorkspacePropertiesOutput {
	return o
}

func (o VerifierWorkspacePropertiesOutput) ToVerifierWorkspacePropertiesPtrOutput() VerifierWorkspacePropertiesPtrOutput {
	return o.ToVerifierWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (o VerifierWorkspacePropertiesOutput) ToVerifierWorkspacePropertiesPtrOutputWithContext(ctx context.Context) VerifierWorkspacePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VerifierWorkspaceProperties) *VerifierWorkspaceProperties {
		return &v
	}).(VerifierWorkspacePropertiesPtrOutput)
}

func (o VerifierWorkspacePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerifierWorkspaceProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type VerifierWorkspacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VerifierWorkspacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VerifierWorkspaceProperties)(nil)).Elem()
}

func (o VerifierWorkspacePropertiesPtrOutput) ToVerifierWorkspacePropertiesPtrOutput() VerifierWorkspacePropertiesPtrOutput {
	return o
}

func (o VerifierWorkspacePropertiesPtrOutput) ToVerifierWorkspacePropertiesPtrOutputWithContext(ctx context.Context) VerifierWorkspacePropertiesPtrOutput {
	return o
}

func (o VerifierWorkspacePropertiesPtrOutput) Elem() VerifierWorkspacePropertiesOutput {
	return o.ApplyT(func(v *VerifierWorkspaceProperties) VerifierWorkspaceProperties {
		if v != nil {
			return *v
		}
		var ret VerifierWorkspaceProperties
		return ret
	}).(VerifierWorkspacePropertiesOutput)
}

func (o VerifierWorkspacePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VerifierWorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Properties of Verifier Workspace resource.
type VerifierWorkspacePropertiesResponse struct {
	Description *string `pulumi:"description"`
	// Provisioning states of a resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties of Verifier Workspace resource.
type VerifierWorkspacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VerifierWorkspacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerifierWorkspacePropertiesResponse)(nil)).Elem()
}

func (o VerifierWorkspacePropertiesResponseOutput) ToVerifierWorkspacePropertiesResponseOutput() VerifierWorkspacePropertiesResponseOutput {
	return o
}

func (o VerifierWorkspacePropertiesResponseOutput) ToVerifierWorkspacePropertiesResponseOutputWithContext(ctx context.Context) VerifierWorkspacePropertiesResponseOutput {
	return o
}

func (o VerifierWorkspacePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerifierWorkspacePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Provisioning states of a resource.
func (o VerifierWorkspacePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VerifierWorkspacePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicProperties struct {
	// Flag (true or false) for Intent for Public Ip on additional nic
	HasPublicIp *bool `pulumi:"hasPublicIp"`
	// Name of additional nic
	Name *string `pulumi:"name"`
}

// VirtualApplianceAdditionalNicPropertiesInput is an input type that accepts VirtualApplianceAdditionalNicPropertiesArgs and VirtualApplianceAdditionalNicPropertiesOutput values.
// You can construct a concrete instance of `VirtualApplianceAdditionalNicPropertiesInput` via:
//
//	VirtualApplianceAdditionalNicPropertiesArgs{...}
type VirtualApplianceAdditionalNicPropertiesInput interface {
	pulumi.Input

	ToVirtualApplianceAdditionalNicPropertiesOutput() VirtualApplianceAdditionalNicPropertiesOutput
	ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(context.Context) VirtualApplianceAdditionalNicPropertiesOutput
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesArgs struct {
	// Flag (true or false) for Intent for Public Ip on additional nic
	HasPublicIp pulumi.BoolPtrInput `pulumi:"hasPublicIp"`
	// Name of additional nic
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualApplianceAdditionalNicPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (i VirtualApplianceAdditionalNicPropertiesArgs) ToVirtualApplianceAdditionalNicPropertiesOutput() VirtualApplianceAdditionalNicPropertiesOutput {
	return i.ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(context.Background())
}

func (i VirtualApplianceAdditionalNicPropertiesArgs) ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceAdditionalNicPropertiesOutput)
}

// VirtualApplianceAdditionalNicPropertiesArrayInput is an input type that accepts VirtualApplianceAdditionalNicPropertiesArray and VirtualApplianceAdditionalNicPropertiesArrayOutput values.
// You can construct a concrete instance of `VirtualApplianceAdditionalNicPropertiesArrayInput` via:
//
//	VirtualApplianceAdditionalNicPropertiesArray{ VirtualApplianceAdditionalNicPropertiesArgs{...} }
type VirtualApplianceAdditionalNicPropertiesArrayInput interface {
	pulumi.Input

	ToVirtualApplianceAdditionalNicPropertiesArrayOutput() VirtualApplianceAdditionalNicPropertiesArrayOutput
	ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(context.Context) VirtualApplianceAdditionalNicPropertiesArrayOutput
}

type VirtualApplianceAdditionalNicPropertiesArray []VirtualApplianceAdditionalNicPropertiesInput

func (VirtualApplianceAdditionalNicPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (i VirtualApplianceAdditionalNicPropertiesArray) ToVirtualApplianceAdditionalNicPropertiesArrayOutput() VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return i.ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(context.Background())
}

func (i VirtualApplianceAdditionalNicPropertiesArray) ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceAdditionalNicPropertiesArrayOutput)
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesOutput) ToVirtualApplianceAdditionalNicPropertiesOutput() VirtualApplianceAdditionalNicPropertiesOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesOutput) ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesOutput {
	return o
}

// Flag (true or false) for Intent for Public Ip on additional nic
func (o VirtualApplianceAdditionalNicPropertiesOutput) HasPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicProperties) *bool { return v.HasPublicIp }).(pulumi.BoolPtrOutput)
}

// Name of additional nic
func (o VirtualApplianceAdditionalNicPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualApplianceAdditionalNicPropertiesArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesArrayOutput) ToVirtualApplianceAdditionalNicPropertiesArrayOutput() VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesArrayOutput) ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesArrayOutput) Index(i pulumi.IntInput) VirtualApplianceAdditionalNicPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceAdditionalNicProperties {
		return vs[0].([]VirtualApplianceAdditionalNicProperties)[vs[1].(int)]
	}).(VirtualApplianceAdditionalNicPropertiesOutput)
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesResponse struct {
	// Flag (true or false) for Intent for Public Ip on additional nic
	HasPublicIp *bool `pulumi:"hasPublicIp"`
	// Name of additional nic
	Name *string `pulumi:"name"`
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceAdditionalNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) ToVirtualApplianceAdditionalNicPropertiesResponseOutput() VirtualApplianceAdditionalNicPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) ToVirtualApplianceAdditionalNicPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesResponseOutput {
	return o
}

// Flag (true or false) for Intent for Public Ip on additional nic
func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) HasPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicPropertiesResponse) *bool { return v.HasPublicIp }).(pulumi.BoolPtrOutput)
}

// Name of additional nic
func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualApplianceAdditionalNicPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceAdditionalNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) ToVirtualApplianceAdditionalNicPropertiesResponseArrayOutput() VirtualApplianceAdditionalNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) ToVirtualApplianceAdditionalNicPropertiesResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplianceAdditionalNicPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceAdditionalNicPropertiesResponse {
		return vs[0].([]VirtualApplianceAdditionalNicPropertiesResponse)[vs[1].(int)]
	}).(VirtualApplianceAdditionalNicPropertiesResponseOutput)
}

// Represents a single IP configuration.
type VirtualApplianceIPConfiguration struct {
	// Name of the IP configuration.
	Name *string `pulumi:"name"`
	// Represents a single IP configuration properties.
	Properties *VirtualApplianceIPConfigurationProperties `pulumi:"properties"`
}

// VirtualApplianceIPConfigurationInput is an input type that accepts VirtualApplianceIPConfigurationArgs and VirtualApplianceIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualApplianceIPConfigurationInput` via:
//
//	VirtualApplianceIPConfigurationArgs{...}
type VirtualApplianceIPConfigurationInput interface {
	pulumi.Input

	ToVirtualApplianceIPConfigurationOutput() VirtualApplianceIPConfigurationOutput
	ToVirtualApplianceIPConfigurationOutputWithContext(context.Context) VirtualApplianceIPConfigurationOutput
}

// Represents a single IP configuration.
type VirtualApplianceIPConfigurationArgs struct {
	// Name of the IP configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Represents a single IP configuration properties.
	Properties VirtualApplianceIPConfigurationPropertiesPtrInput `pulumi:"properties"`
}

func (VirtualApplianceIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceIPConfiguration)(nil)).Elem()
}

func (i VirtualApplianceIPConfigurationArgs) ToVirtualApplianceIPConfigurationOutput() VirtualApplianceIPConfigurationOutput {
	return i.ToVirtualApplianceIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualApplianceIPConfigurationArgs) ToVirtualApplianceIPConfigurationOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceIPConfigurationOutput)
}

// VirtualApplianceIPConfigurationArrayInput is an input type that accepts VirtualApplianceIPConfigurationArray and VirtualApplianceIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualApplianceIPConfigurationArrayInput` via:
//
//	VirtualApplianceIPConfigurationArray{ VirtualApplianceIPConfigurationArgs{...} }
type VirtualApplianceIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualApplianceIPConfigurationArrayOutput() VirtualApplianceIPConfigurationArrayOutput
	ToVirtualApplianceIPConfigurationArrayOutputWithContext(context.Context) VirtualApplianceIPConfigurationArrayOutput
}

type VirtualApplianceIPConfigurationArray []VirtualApplianceIPConfigurationInput

func (VirtualApplianceIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceIPConfiguration)(nil)).Elem()
}

func (i VirtualApplianceIPConfigurationArray) ToVirtualApplianceIPConfigurationArrayOutput() VirtualApplianceIPConfigurationArrayOutput {
	return i.ToVirtualApplianceIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualApplianceIPConfigurationArray) ToVirtualApplianceIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceIPConfigurationArrayOutput)
}

// Represents a single IP configuration.
type VirtualApplianceIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceIPConfiguration)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationOutput) ToVirtualApplianceIPConfigurationOutput() VirtualApplianceIPConfigurationOutput {
	return o
}

func (o VirtualApplianceIPConfigurationOutput) ToVirtualApplianceIPConfigurationOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationOutput {
	return o
}

// Name of the IP configuration.
func (o VirtualApplianceIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Represents a single IP configuration properties.
func (o VirtualApplianceIPConfigurationOutput) Properties() VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualApplianceIPConfiguration) *VirtualApplianceIPConfigurationProperties {
		return v.Properties
	}).(VirtualApplianceIPConfigurationPropertiesPtrOutput)
}

type VirtualApplianceIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceIPConfiguration)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationArrayOutput) ToVirtualApplianceIPConfigurationArrayOutput() VirtualApplianceIPConfigurationArrayOutput {
	return o
}

func (o VirtualApplianceIPConfigurationArrayOutput) ToVirtualApplianceIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationArrayOutput {
	return o
}

func (o VirtualApplianceIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualApplianceIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceIPConfiguration {
		return vs[0].([]VirtualApplianceIPConfiguration)[vs[1].(int)]
	}).(VirtualApplianceIPConfigurationOutput)
}

// Represents a single IP configuration properties.
type VirtualApplianceIPConfigurationProperties struct {
	// Whether or not this is primary IP configuration of the NIC.
	Primary *bool `pulumi:"primary"`
}

// VirtualApplianceIPConfigurationPropertiesInput is an input type that accepts VirtualApplianceIPConfigurationPropertiesArgs and VirtualApplianceIPConfigurationPropertiesOutput values.
// You can construct a concrete instance of `VirtualApplianceIPConfigurationPropertiesInput` via:
//
//	VirtualApplianceIPConfigurationPropertiesArgs{...}
type VirtualApplianceIPConfigurationPropertiesInput interface {
	pulumi.Input

	ToVirtualApplianceIPConfigurationPropertiesOutput() VirtualApplianceIPConfigurationPropertiesOutput
	ToVirtualApplianceIPConfigurationPropertiesOutputWithContext(context.Context) VirtualApplianceIPConfigurationPropertiesOutput
}

// Represents a single IP configuration properties.
type VirtualApplianceIPConfigurationPropertiesArgs struct {
	// Whether or not this is primary IP configuration of the NIC.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (VirtualApplianceIPConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceIPConfigurationProperties)(nil)).Elem()
}

func (i VirtualApplianceIPConfigurationPropertiesArgs) ToVirtualApplianceIPConfigurationPropertiesOutput() VirtualApplianceIPConfigurationPropertiesOutput {
	return i.ToVirtualApplianceIPConfigurationPropertiesOutputWithContext(context.Background())
}

func (i VirtualApplianceIPConfigurationPropertiesArgs) ToVirtualApplianceIPConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceIPConfigurationPropertiesOutput)
}

func (i VirtualApplianceIPConfigurationPropertiesArgs) ToVirtualApplianceIPConfigurationPropertiesPtrOutput() VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return i.ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualApplianceIPConfigurationPropertiesArgs) ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceIPConfigurationPropertiesOutput).ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(ctx)
}

// VirtualApplianceIPConfigurationPropertiesPtrInput is an input type that accepts VirtualApplianceIPConfigurationPropertiesArgs, VirtualApplianceIPConfigurationPropertiesPtr and VirtualApplianceIPConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualApplianceIPConfigurationPropertiesPtrInput` via:
//
//	        VirtualApplianceIPConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualApplianceIPConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualApplianceIPConfigurationPropertiesPtrOutput() VirtualApplianceIPConfigurationPropertiesPtrOutput
	ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(context.Context) VirtualApplianceIPConfigurationPropertiesPtrOutput
}

type virtualApplianceIPConfigurationPropertiesPtrType VirtualApplianceIPConfigurationPropertiesArgs

func VirtualApplianceIPConfigurationPropertiesPtr(v *VirtualApplianceIPConfigurationPropertiesArgs) VirtualApplianceIPConfigurationPropertiesPtrInput {
	return (*virtualApplianceIPConfigurationPropertiesPtrType)(v)
}

func (*virtualApplianceIPConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceIPConfigurationProperties)(nil)).Elem()
}

func (i *virtualApplianceIPConfigurationPropertiesPtrType) ToVirtualApplianceIPConfigurationPropertiesPtrOutput() VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return i.ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualApplianceIPConfigurationPropertiesPtrType) ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceIPConfigurationPropertiesPtrOutput)
}

// Represents a single IP configuration properties.
type VirtualApplianceIPConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceIPConfigurationProperties)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationPropertiesOutput) ToVirtualApplianceIPConfigurationPropertiesOutput() VirtualApplianceIPConfigurationPropertiesOutput {
	return o
}

func (o VirtualApplianceIPConfigurationPropertiesOutput) ToVirtualApplianceIPConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesOutput {
	return o
}

func (o VirtualApplianceIPConfigurationPropertiesOutput) ToVirtualApplianceIPConfigurationPropertiesPtrOutput() VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return o.ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualApplianceIPConfigurationPropertiesOutput) ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualApplianceIPConfigurationProperties) *VirtualApplianceIPConfigurationProperties {
		return &v
	}).(VirtualApplianceIPConfigurationPropertiesPtrOutput)
}

// Whether or not this is primary IP configuration of the NIC.
func (o VirtualApplianceIPConfigurationPropertiesOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplianceIPConfigurationProperties) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type VirtualApplianceIPConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceIPConfigurationProperties)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationPropertiesPtrOutput) ToVirtualApplianceIPConfigurationPropertiesPtrOutput() VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceIPConfigurationPropertiesPtrOutput) ToVirtualApplianceIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceIPConfigurationPropertiesPtrOutput) Elem() VirtualApplianceIPConfigurationPropertiesOutput {
	return o.ApplyT(func(v *VirtualApplianceIPConfigurationProperties) VirtualApplianceIPConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceIPConfigurationProperties
		return ret
	}).(VirtualApplianceIPConfigurationPropertiesOutput)
}

// Whether or not this is primary IP configuration of the NIC.
func (o VirtualApplianceIPConfigurationPropertiesPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceIPConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Represents a single IP configuration properties.
type VirtualApplianceIPConfigurationPropertiesResponse struct {
	// Whether or not this is primary IP configuration of the NIC.
	Primary *bool `pulumi:"primary"`
}

// Represents a single IP configuration properties.
type VirtualApplianceIPConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceIPConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationPropertiesResponseOutput) ToVirtualApplianceIPConfigurationPropertiesResponseOutput() VirtualApplianceIPConfigurationPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceIPConfigurationPropertiesResponseOutput) ToVirtualApplianceIPConfigurationPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesResponseOutput {
	return o
}

// Whether or not this is primary IP configuration of the NIC.
func (o VirtualApplianceIPConfigurationPropertiesResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplianceIPConfigurationPropertiesResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type VirtualApplianceIPConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceIPConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationPropertiesResponsePtrOutput) ToVirtualApplianceIPConfigurationPropertiesResponsePtrOutput() VirtualApplianceIPConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceIPConfigurationPropertiesResponsePtrOutput) ToVirtualApplianceIPConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceIPConfigurationPropertiesResponsePtrOutput) Elem() VirtualApplianceIPConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualApplianceIPConfigurationPropertiesResponse) VirtualApplianceIPConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceIPConfigurationPropertiesResponse
		return ret
	}).(VirtualApplianceIPConfigurationPropertiesResponseOutput)
}

// Whether or not this is primary IP configuration of the NIC.
func (o VirtualApplianceIPConfigurationPropertiesResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceIPConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Represents a single IP configuration.
type VirtualApplianceIPConfigurationResponse struct {
	// Name of the IP configuration.
	Name *string `pulumi:"name"`
	// Represents a single IP configuration properties.
	Properties *VirtualApplianceIPConfigurationPropertiesResponse `pulumi:"properties"`
}

// Represents a single IP configuration.
type VirtualApplianceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationResponseOutput) ToVirtualApplianceIPConfigurationResponseOutput() VirtualApplianceIPConfigurationResponseOutput {
	return o
}

func (o VirtualApplianceIPConfigurationResponseOutput) ToVirtualApplianceIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationResponseOutput {
	return o
}

// Name of the IP configuration.
func (o VirtualApplianceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Represents a single IP configuration properties.
func (o VirtualApplianceIPConfigurationResponseOutput) Properties() VirtualApplianceIPConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualApplianceIPConfigurationResponse) *VirtualApplianceIPConfigurationPropertiesResponse {
		return v.Properties
	}).(VirtualApplianceIPConfigurationPropertiesResponsePtrOutput)
}

type VirtualApplianceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualApplianceIPConfigurationResponseArrayOutput) ToVirtualApplianceIPConfigurationResponseArrayOutput() VirtualApplianceIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualApplianceIPConfigurationResponseArrayOutput) ToVirtualApplianceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualApplianceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplianceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceIPConfigurationResponse {
		return vs[0].([]VirtualApplianceIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualApplianceIPConfigurationResponseOutput)
}

// Represents a single NIC configuration.
type VirtualApplianceNetworkInterfaceConfiguration struct {
	// NIC type. This should be either PublicNic or PrivateNic.
	NicType *string `pulumi:"nicType"`
	// Represents a single NIC configuration properties.
	Properties *VirtualApplianceNetworkInterfaceConfigurationProperties `pulumi:"properties"`
}

// VirtualApplianceNetworkInterfaceConfigurationInput is an input type that accepts VirtualApplianceNetworkInterfaceConfigurationArgs and VirtualApplianceNetworkInterfaceConfigurationOutput values.
// You can construct a concrete instance of `VirtualApplianceNetworkInterfaceConfigurationInput` via:
//
//	VirtualApplianceNetworkInterfaceConfigurationArgs{...}
type VirtualApplianceNetworkInterfaceConfigurationInput interface {
	pulumi.Input

	ToVirtualApplianceNetworkInterfaceConfigurationOutput() VirtualApplianceNetworkInterfaceConfigurationOutput
	ToVirtualApplianceNetworkInterfaceConfigurationOutputWithContext(context.Context) VirtualApplianceNetworkInterfaceConfigurationOutput
}

// Represents a single NIC configuration.
type VirtualApplianceNetworkInterfaceConfigurationArgs struct {
	// NIC type. This should be either PublicNic or PrivateNic.
	NicType pulumi.StringPtrInput `pulumi:"nicType"`
	// Represents a single NIC configuration properties.
	Properties VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrInput `pulumi:"properties"`
}

func (VirtualApplianceNetworkInterfaceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i VirtualApplianceNetworkInterfaceConfigurationArgs) ToVirtualApplianceNetworkInterfaceConfigurationOutput() VirtualApplianceNetworkInterfaceConfigurationOutput {
	return i.ToVirtualApplianceNetworkInterfaceConfigurationOutputWithContext(context.Background())
}

func (i VirtualApplianceNetworkInterfaceConfigurationArgs) ToVirtualApplianceNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceNetworkInterfaceConfigurationOutput)
}

// VirtualApplianceNetworkInterfaceConfigurationArrayInput is an input type that accepts VirtualApplianceNetworkInterfaceConfigurationArray and VirtualApplianceNetworkInterfaceConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualApplianceNetworkInterfaceConfigurationArrayInput` via:
//
//	VirtualApplianceNetworkInterfaceConfigurationArray{ VirtualApplianceNetworkInterfaceConfigurationArgs{...} }
type VirtualApplianceNetworkInterfaceConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualApplianceNetworkInterfaceConfigurationArrayOutput() VirtualApplianceNetworkInterfaceConfigurationArrayOutput
	ToVirtualApplianceNetworkInterfaceConfigurationArrayOutputWithContext(context.Context) VirtualApplianceNetworkInterfaceConfigurationArrayOutput
}

type VirtualApplianceNetworkInterfaceConfigurationArray []VirtualApplianceNetworkInterfaceConfigurationInput

func (VirtualApplianceNetworkInterfaceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i VirtualApplianceNetworkInterfaceConfigurationArray) ToVirtualApplianceNetworkInterfaceConfigurationArrayOutput() VirtualApplianceNetworkInterfaceConfigurationArrayOutput {
	return i.ToVirtualApplianceNetworkInterfaceConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualApplianceNetworkInterfaceConfigurationArray) ToVirtualApplianceNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceNetworkInterfaceConfigurationArrayOutput)
}

// Represents a single NIC configuration.
type VirtualApplianceNetworkInterfaceConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationOutput) ToVirtualApplianceNetworkInterfaceConfigurationOutput() VirtualApplianceNetworkInterfaceConfigurationOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationOutput) ToVirtualApplianceNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationOutput {
	return o
}

// NIC type. This should be either PublicNic or PrivateNic.
func (o VirtualApplianceNetworkInterfaceConfigurationOutput) NicType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceNetworkInterfaceConfiguration) *string { return v.NicType }).(pulumi.StringPtrOutput)
}

// Represents a single NIC configuration properties.
func (o VirtualApplianceNetworkInterfaceConfigurationOutput) Properties() VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualApplianceNetworkInterfaceConfiguration) *VirtualApplianceNetworkInterfaceConfigurationProperties {
		return v.Properties
	}).(VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput)
}

type VirtualApplianceNetworkInterfaceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationArrayOutput) ToVirtualApplianceNetworkInterfaceConfigurationArrayOutput() VirtualApplianceNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationArrayOutput) ToVirtualApplianceNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualApplianceNetworkInterfaceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceNetworkInterfaceConfiguration {
		return vs[0].([]VirtualApplianceNetworkInterfaceConfiguration)[vs[1].(int)]
	}).(VirtualApplianceNetworkInterfaceConfigurationOutput)
}

// Represents a single NIC configuration properties.
type VirtualApplianceNetworkInterfaceConfigurationProperties struct {
	IpConfigurations []VirtualApplianceIPConfiguration `pulumi:"ipConfigurations"`
}

// VirtualApplianceNetworkInterfaceConfigurationPropertiesInput is an input type that accepts VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs and VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput values.
// You can construct a concrete instance of `VirtualApplianceNetworkInterfaceConfigurationPropertiesInput` via:
//
//	VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs{...}
type VirtualApplianceNetworkInterfaceConfigurationPropertiesInput interface {
	pulumi.Input

	ToVirtualApplianceNetworkInterfaceConfigurationPropertiesOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput
	ToVirtualApplianceNetworkInterfaceConfigurationPropertiesOutputWithContext(context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput
}

// Represents a single NIC configuration properties.
type VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs struct {
	IpConfigurations VirtualApplianceIPConfigurationArrayInput `pulumi:"ipConfigurations"`
}

func (VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNetworkInterfaceConfigurationProperties)(nil)).Elem()
}

func (i VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput {
	return i.ToVirtualApplianceNetworkInterfaceConfigurationPropertiesOutputWithContext(context.Background())
}

func (i VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput)
}

func (i VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return i.ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput).ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(ctx)
}

// VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrInput is an input type that accepts VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs, VirtualApplianceNetworkInterfaceConfigurationPropertiesPtr and VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrInput` via:
//
//	        VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput
	ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput
}

type virtualApplianceNetworkInterfaceConfigurationPropertiesPtrType VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs

func VirtualApplianceNetworkInterfaceConfigurationPropertiesPtr(v *VirtualApplianceNetworkInterfaceConfigurationPropertiesArgs) VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrInput {
	return (*virtualApplianceNetworkInterfaceConfigurationPropertiesPtrType)(v)
}

func (*virtualApplianceNetworkInterfaceConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceNetworkInterfaceConfigurationProperties)(nil)).Elem()
}

func (i *virtualApplianceNetworkInterfaceConfigurationPropertiesPtrType) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return i.ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualApplianceNetworkInterfaceConfigurationPropertiesPtrType) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput)
}

// Represents a single NIC configuration properties.
type VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNetworkInterfaceConfigurationProperties)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return o.ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualApplianceNetworkInterfaceConfigurationProperties) *VirtualApplianceNetworkInterfaceConfigurationProperties {
		return &v
	}).(VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput)
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput) IpConfigurations() VirtualApplianceIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualApplianceNetworkInterfaceConfigurationProperties) []VirtualApplianceIPConfiguration {
		return v.IpConfigurations
	}).(VirtualApplianceIPConfigurationArrayOutput)
}

type VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceNetworkInterfaceConfigurationProperties)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput) Elem() VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *VirtualApplianceNetworkInterfaceConfigurationProperties) VirtualApplianceNetworkInterfaceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceNetworkInterfaceConfigurationProperties
		return ret
	}).(VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput)
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput) IpConfigurations() VirtualApplianceIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualApplianceNetworkInterfaceConfigurationProperties) []VirtualApplianceIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualApplianceIPConfigurationArrayOutput)
}

// Represents a single NIC configuration properties.
type VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse struct {
	IpConfigurations []VirtualApplianceIPConfigurationResponse `pulumi:"ipConfigurations"`
}

// Represents a single NIC configuration properties.
type VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput) IpConfigurations() VirtualApplianceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse) []VirtualApplianceIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualApplianceIPConfigurationResponseArrayOutput)
}

type VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput() VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput) ToVirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput) Elem() VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse) VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse
		return ret
	}).(VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput)
}

func (o VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput) IpConfigurations() VirtualApplianceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse) []VirtualApplianceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualApplianceIPConfigurationResponseArrayOutput)
}

// Represents a single NIC configuration.
type VirtualApplianceNetworkInterfaceConfigurationResponse struct {
	// NIC type. This should be either PublicNic or PrivateNic.
	NicType *string `pulumi:"nicType"`
	// Represents a single NIC configuration properties.
	Properties *VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse `pulumi:"properties"`
}

// Represents a single NIC configuration.
type VirtualApplianceNetworkInterfaceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationResponseOutput) ToVirtualApplianceNetworkInterfaceConfigurationResponseOutput() VirtualApplianceNetworkInterfaceConfigurationResponseOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationResponseOutput) ToVirtualApplianceNetworkInterfaceConfigurationResponseOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationResponseOutput {
	return o
}

// NIC type. This should be either PublicNic or PrivateNic.
func (o VirtualApplianceNetworkInterfaceConfigurationResponseOutput) NicType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceNetworkInterfaceConfigurationResponse) *string { return v.NicType }).(pulumi.StringPtrOutput)
}

// Represents a single NIC configuration properties.
func (o VirtualApplianceNetworkInterfaceConfigurationResponseOutput) Properties() VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualApplianceNetworkInterfaceConfigurationResponse) *VirtualApplianceNetworkInterfaceConfigurationPropertiesResponse {
		return v.Properties
	}).(VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput)
}

type VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput) ToVirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput() VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput) ToVirtualApplianceNetworkInterfaceConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplianceNetworkInterfaceConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceNetworkInterfaceConfigurationResponse {
		return vs[0].([]VirtualApplianceNetworkInterfaceConfigurationResponse)[vs[1].(int)]
	}).(VirtualApplianceNetworkInterfaceConfigurationResponseOutput)
}

// Network Virtual Appliance NIC properties.
type VirtualApplianceNicPropertiesResponse struct {
	// Instance on which nic is attached.
	InstanceName string `pulumi:"instanceName"`
	// NIC name.
	Name string `pulumi:"name"`
	// NIC type - PublicNic, PrivateNic, or AdditionalNic.
	NicType string `pulumi:"nicType"`
	// Private IP address.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP address.
	PublicIpAddress string `pulumi:"publicIpAddress"`
}

// Network Virtual Appliance NIC properties.
type VirtualApplianceNicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNicPropertiesResponseOutput) ToVirtualApplianceNicPropertiesResponseOutput() VirtualApplianceNicPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseOutput) ToVirtualApplianceNicPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseOutput {
	return o
}

// Instance on which nic is attached.
func (o VirtualApplianceNicPropertiesResponseOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.InstanceName }).(pulumi.StringOutput)
}

// NIC name.
func (o VirtualApplianceNicPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// NIC type - PublicNic, PrivateNic, or AdditionalNic.
func (o VirtualApplianceNicPropertiesResponseOutput) NicType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.NicType }).(pulumi.StringOutput)
}

// Private IP address.
func (o VirtualApplianceNicPropertiesResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP address.
func (o VirtualApplianceNicPropertiesResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

type VirtualApplianceNicPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNicPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) ToVirtualApplianceNicPropertiesResponseArrayOutput() VirtualApplianceNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) ToVirtualApplianceNicPropertiesResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplianceNicPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceNicPropertiesResponse {
		return vs[0].([]VirtualApplianceNicPropertiesResponse)[vs[1].(int)]
	}).(VirtualApplianceNicPropertiesResponseOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuProperties struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit *string `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion *string `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor *string `pulumi:"vendor"`
}

// VirtualApplianceSkuPropertiesInput is an input type that accepts VirtualApplianceSkuPropertiesArgs and VirtualApplianceSkuPropertiesOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesInput` via:
//
//	VirtualApplianceSkuPropertiesArgs{...}
type VirtualApplianceSkuPropertiesInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput
	ToVirtualApplianceSkuPropertiesOutputWithContext(context.Context) VirtualApplianceSkuPropertiesOutput
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesArgs struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit pulumi.StringPtrInput `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion pulumi.StringPtrInput `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor pulumi.StringPtrInput `pulumi:"vendor"`
}

func (VirtualApplianceSkuPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuProperties)(nil)).Elem()
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput {
	return i.ToVirtualApplianceSkuPropertiesOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesOutput)
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return i.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesOutput).ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx)
}

// VirtualApplianceSkuPropertiesPtrInput is an input type that accepts VirtualApplianceSkuPropertiesArgs, VirtualApplianceSkuPropertiesPtr and VirtualApplianceSkuPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesPtrInput` via:
//
//	        VirtualApplianceSkuPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualApplianceSkuPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput
	ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Context) VirtualApplianceSkuPropertiesPtrOutput
}

type virtualApplianceSkuPropertiesPtrType VirtualApplianceSkuPropertiesArgs

func VirtualApplianceSkuPropertiesPtr(v *VirtualApplianceSkuPropertiesArgs) VirtualApplianceSkuPropertiesPtrInput {
	return (*virtualApplianceSkuPropertiesPtrType)(v)
}

func (*virtualApplianceSkuPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuProperties)(nil)).Elem()
}

func (i *virtualApplianceSkuPropertiesPtrType) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return i.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualApplianceSkuPropertiesPtrType) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuProperties)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return o.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualApplianceSkuProperties) *VirtualApplianceSkuProperties {
		return &v
	}).(VirtualApplianceSkuPropertiesPtrOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.BundledScaleUnit }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.MarketPlaceVersion }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type VirtualApplianceSkuPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuProperties)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesPtrOutput) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesPtrOutput) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesPtrOutput) Elem() VirtualApplianceSkuPropertiesOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) VirtualApplianceSkuProperties {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceSkuProperties
		return ret
	}).(VirtualApplianceSkuPropertiesOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesPtrOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.BundledScaleUnit
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesPtrOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.MarketPlaceVersion
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesPtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesResponse struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit *string `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion *string `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor *string `pulumi:"vendor"`
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponseOutput() VirtualApplianceSkuPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponseOutput {
	return o
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesResponseOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.BundledScaleUnit }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesResponseOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.MarketPlaceVersion }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesResponseOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type VirtualApplianceSkuPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutput() VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) Elem() VirtualApplianceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) VirtualApplianceSkuPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceSkuPropertiesResponse
		return ret
	}).(VirtualApplianceSkuPropertiesResponseOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BundledScaleUnit
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MarketPlaceVersion
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubId struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// VirtualHubIdInput is an input type that accepts VirtualHubIdArgs and VirtualHubIdOutput values.
// You can construct a concrete instance of `VirtualHubIdInput` via:
//
//	VirtualHubIdArgs{...}
type VirtualHubIdInput interface {
	pulumi.Input

	ToVirtualHubIdOutput() VirtualHubIdOutput
	ToVirtualHubIdOutputWithContext(context.Context) VirtualHubIdOutput
}

// Virtual Hub identifier.
type VirtualHubIdArgs struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VirtualHubIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return i.ToVirtualHubIdOutputWithContext(context.Background())
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdOutput)
}

// Virtual Hub identifier.
type VirtualHubIdOutput struct{ *pulumi.OutputState }

func (VirtualHubIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return o
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return o
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdResponse struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// Virtual Hub identifier.
type VirtualHubIdResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubIdResponse)(nil)).Elem()
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput {
	return o
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutputWithContext(ctx context.Context) VirtualHubIdResponseOutput {
	return o
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// VirtualHub route.
type VirtualHubRoute struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteInput is an input type that accepts VirtualHubRouteArgs and VirtualHubRouteOutput values.
// You can construct a concrete instance of `VirtualHubRouteInput` via:
//
//	VirtualHubRouteArgs{...}
type VirtualHubRouteInput interface {
	pulumi.Input

	ToVirtualHubRouteOutput() VirtualHubRouteOutput
	ToVirtualHubRouteOutputWithContext(context.Context) VirtualHubRouteOutput
}

// VirtualHub route.
type VirtualHubRouteArgs struct {
	// List of all addressPrefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return i.ToVirtualHubRouteOutputWithContext(context.Background())
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteOutput)
}

// VirtualHubRouteArrayInput is an input type that accepts VirtualHubRouteArray and VirtualHubRouteArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteArrayInput` via:
//
//	VirtualHubRouteArray{ VirtualHubRouteArgs{...} }
type VirtualHubRouteArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput
	ToVirtualHubRouteArrayOutputWithContext(context.Context) VirtualHubRouteArrayOutput
}

type VirtualHubRouteArray []VirtualHubRouteInput

func (VirtualHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return i.ToVirtualHubRouteArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteArrayOutput)
}

// VirtualHub route.
type VirtualHubRouteOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return o
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRoute {
		return vs[0].([]VirtualHubRoute)[vs[1].(int)]
	}).(VirtualHubRouteOutput)
}

// VirtualHub route.
type VirtualHubRouteResponse struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHub route.
type VirtualHubRouteResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput {
	return o
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutputWithContext(ctx context.Context) VirtualHubRouteResponseOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteResponse {
		return vs[0].([]VirtualHubRouteResponse)[vs[1].(int)]
	}).(VirtualHubRouteResponseOutput)
}

// VirtualHub route table.
type VirtualHubRouteTable struct {
	// List of all routes.
	Routes []VirtualHubRoute `pulumi:"routes"`
}

// VirtualHubRouteTableInput is an input type that accepts VirtualHubRouteTableArgs and VirtualHubRouteTableOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableInput` via:
//
//	VirtualHubRouteTableArgs{...}
type VirtualHubRouteTableInput interface {
	pulumi.Input

	ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput
	ToVirtualHubRouteTableOutputWithContext(context.Context) VirtualHubRouteTableOutput
}

// VirtualHub route table.
type VirtualHubRouteTableArgs struct {
	// List of all routes.
	Routes VirtualHubRouteArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return i.ToVirtualHubRouteTableOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput)
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput).ToVirtualHubRouteTablePtrOutputWithContext(ctx)
}

// VirtualHubRouteTablePtrInput is an input type that accepts VirtualHubRouteTableArgs, VirtualHubRouteTablePtr and VirtualHubRouteTablePtrOutput values.
// You can construct a concrete instance of `VirtualHubRouteTablePtrInput` via:
//
//	        VirtualHubRouteTableArgs{...}
//
//	or:
//
//	        nil
type VirtualHubRouteTablePtrInput interface {
	pulumi.Input

	ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput
	ToVirtualHubRouteTablePtrOutputWithContext(context.Context) VirtualHubRouteTablePtrOutput
}

type virtualHubRouteTablePtrType VirtualHubRouteTableArgs

func VirtualHubRouteTablePtr(v *VirtualHubRouteTableArgs) VirtualHubRouteTablePtrInput {
	return (*virtualHubRouteTablePtrType)(v)
}

func (*virtualHubRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTablePtrOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualHubRouteTable) *VirtualHubRouteTable {
		return &v
	}).(VirtualHubRouteTablePtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTable) []VirtualHubRoute { return v.Routes }).(VirtualHubRouteArrayOutput)
}

type VirtualHubRouteTablePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) Elem() VirtualHubRouteTableOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) VirtualHubRouteTable {
		if v != nil {
			return *v
		}
		var ret VirtualHubRouteTable
		return ret
	}).(VirtualHubRouteTableOutput)
}

// List of all routes.
func (o VirtualHubRouteTablePtrOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) []VirtualHubRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteArrayOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableResponse struct {
	// List of all routes.
	Routes []VirtualHubRouteResponse `pulumi:"routes"`
}

// VirtualHub route table.
type VirtualHubRouteTableResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput {
	return o
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableResponseOutput {
	return o
}

// List of all routes.
func (o VirtualHubRouteTableResponseOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableResponse) []VirtualHubRouteResponse { return v.Routes }).(VirtualHubRouteResponseArrayOutput)
}

type VirtualHubRouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) Elem() VirtualHubRouteTableResponseOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) VirtualHubRouteTableResponse {
		if v != nil {
			return *v
		}
		var ret VirtualHubRouteTableResponse
		return ret
	}).(VirtualHubRouteTableResponseOutput)
}

// List of all routes.
func (o VirtualHubRouteTableResponsePtrOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) []VirtualHubRouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteResponseArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Type struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of all routes.
	Routes []VirtualHubRouteV2 `pulumi:"routes"`
}

// VirtualHubRouteTableV2TypeInput is an input type that accepts VirtualHubRouteTableV2TypeArgs and VirtualHubRouteTableV2TypeOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2TypeInput` via:
//
//	VirtualHubRouteTableV2TypeArgs{...}
type VirtualHubRouteTableV2TypeInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput
	ToVirtualHubRouteTableV2TypeOutputWithContext(context.Context) VirtualHubRouteTableV2TypeOutput
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2TypeArgs struct {
	// List of all connections attached to this route table v2.
	AttachedConnections pulumi.StringArrayInput `pulumi:"attachedConnections"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of all routes.
	Routes VirtualHubRouteV2ArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableV2TypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (i VirtualHubRouteTableV2TypeArgs) ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput {
	return i.ToVirtualHubRouteTableV2TypeOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2TypeArgs) ToVirtualHubRouteTableV2TypeOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2TypeOutput)
}

// VirtualHubRouteTableV2TypeArrayInput is an input type that accepts VirtualHubRouteTableV2TypeArray and VirtualHubRouteTableV2TypeArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2TypeArrayInput` via:
//
//	VirtualHubRouteTableV2TypeArray{ VirtualHubRouteTableV2TypeArgs{...} }
type VirtualHubRouteTableV2TypeArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput
	ToVirtualHubRouteTableV2TypeArrayOutputWithContext(context.Context) VirtualHubRouteTableV2TypeArrayOutput
}

type VirtualHubRouteTableV2TypeArray []VirtualHubRouteTableV2TypeInput

func (VirtualHubRouteTableV2TypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (i VirtualHubRouteTableV2TypeArray) ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput {
	return i.ToVirtualHubRouteTableV2TypeArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2TypeArray) ToVirtualHubRouteTableV2TypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2TypeArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2TypeOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (o VirtualHubRouteTableV2TypeOutput) ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeOutput) ToVirtualHubRouteTableV2TypeOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeOutput {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2TypeOutput) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2TypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2TypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2TypeOutput) Routes() VirtualHubRouteV2ArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) []VirtualHubRouteV2 { return v.Routes }).(VirtualHubRouteV2ArrayOutput)
}

type VirtualHubRouteTableV2TypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2TypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (o VirtualHubRouteTableV2TypeArrayOutput) ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeArrayOutput) ToVirtualHubRouteTableV2TypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2TypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2Type {
		return vs[0].([]VirtualHubRouteTableV2Type)[vs[1].(int)]
	}).(VirtualHubRouteTableV2TypeOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Response struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the virtual hub route table v2 resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of all routes.
	Routes []VirtualHubRouteV2Response `pulumi:"routes"`
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutput() VirtualHubRouteTableV2ResponseOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseOutput {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2ResponseOutput) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualHubRouteTableV2ResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2ResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2ResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual hub route table v2 resource.
func (o VirtualHubRouteTableV2ResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2ResponseOutput) Routes() VirtualHubRouteV2ResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []VirtualHubRouteV2Response { return v.Routes }).(VirtualHubRouteV2ResponseArrayOutput)
}

type VirtualHubRouteTableV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutput() VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2Response {
		return vs[0].([]VirtualHubRouteTableV2Response)[vs[1].(int)]
	}).(VirtualHubRouteTableV2ResponseOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2 struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteV2Input is an input type that accepts VirtualHubRouteV2Args and VirtualHubRouteV2Output values.
// You can construct a concrete instance of `VirtualHubRouteV2Input` via:
//
//	VirtualHubRouteV2Args{...}
type VirtualHubRouteV2Input interface {
	pulumi.Input

	ToVirtualHubRouteV2Output() VirtualHubRouteV2Output
	ToVirtualHubRouteV2OutputWithContext(context.Context) VirtualHubRouteV2Output
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Args struct {
	// The type of destinations.
	DestinationType pulumi.StringPtrInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The type of next hops.
	NextHopType pulumi.StringPtrInput `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops pulumi.StringArrayInput `pulumi:"nextHops"`
}

func (VirtualHubRouteV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return i.ToVirtualHubRouteV2OutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2Output)
}

// VirtualHubRouteV2ArrayInput is an input type that accepts VirtualHubRouteV2Array and VirtualHubRouteV2ArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteV2ArrayInput` via:
//
//	VirtualHubRouteV2Array{ VirtualHubRouteV2Args{...} }
type VirtualHubRouteV2ArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput
	ToVirtualHubRouteV2ArrayOutputWithContext(context.Context) VirtualHubRouteV2ArrayOutput
}

type VirtualHubRouteV2Array []VirtualHubRouteV2Input

func (VirtualHubRouteV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return i.ToVirtualHubRouteV2ArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2ArrayOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Output struct{ *pulumi.OutputState }

func (VirtualHubRouteV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return o
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2Output) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2Output) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2Output) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2Output) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2 {
		return vs[0].([]VirtualHubRouteV2)[vs[1].(int)]
	}).(VirtualHubRouteV2Output)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Response struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutput() VirtualHubRouteV2ResponseOutput {
	return o
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseOutput {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2ResponseOutput) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2ResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2ResponseOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2ResponseOutput) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutput() VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2Response {
		return vs[0].([]VirtualHubRouteV2Response)[vs[1].(int)]
	}).(VirtualHubRouteV2ResponseOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunities struct {
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity string `pulumi:"virtualNetworkCommunity"`
}

// VirtualNetworkBgpCommunitiesInput is an input type that accepts VirtualNetworkBgpCommunitiesArgs and VirtualNetworkBgpCommunitiesOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesInput` via:
//
//	VirtualNetworkBgpCommunitiesArgs{...}
type VirtualNetworkBgpCommunitiesInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput
	ToVirtualNetworkBgpCommunitiesOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesOutput
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesArgs struct {
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity pulumi.StringInput `pulumi:"virtualNetworkCommunity"`
}

func (VirtualNetworkBgpCommunitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput {
	return i.ToVirtualNetworkBgpCommunitiesOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesOutput)
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesOutput).ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx)
}

// VirtualNetworkBgpCommunitiesPtrInput is an input type that accepts VirtualNetworkBgpCommunitiesArgs, VirtualNetworkBgpCommunitiesPtr and VirtualNetworkBgpCommunitiesPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesPtrInput` via:
//
//	        VirtualNetworkBgpCommunitiesArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkBgpCommunitiesPtrInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput
	ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesPtrOutput
}

type virtualNetworkBgpCommunitiesPtrType VirtualNetworkBgpCommunitiesArgs

func VirtualNetworkBgpCommunitiesPtr(v *VirtualNetworkBgpCommunitiesArgs) VirtualNetworkBgpCommunitiesPtrInput {
	return (*virtualNetworkBgpCommunitiesPtrType)(v)
}

func (*virtualNetworkBgpCommunitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (i *virtualNetworkBgpCommunitiesPtrType) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkBgpCommunitiesPtrType) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkBgpCommunities) *VirtualNetworkBgpCommunities {
		return &v
	}).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesOutput) VirtualNetworkCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunities) string { return v.VirtualNetworkCommunity }).(pulumi.StringOutput)
}

type VirtualNetworkBgpCommunitiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) Elem() VirtualNetworkBgpCommunitiesOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunities) VirtualNetworkBgpCommunities {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkBgpCommunities
		return ret
	}).(VirtualNetworkBgpCommunitiesOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesPtrOutput) VirtualNetworkCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunities) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkCommunity
	}).(pulumi.StringPtrOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesResponse struct {
	// The BGP community associated with the region of the virtual network.
	RegionalCommunity string `pulumi:"regionalCommunity"`
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity string `pulumi:"virtualNetworkCommunity"`
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponseOutput() VirtualNetworkBgpCommunitiesResponseOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponseOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponseOutput {
	return o
}

// The BGP community associated with the region of the virtual network.
func (o VirtualNetworkBgpCommunitiesResponseOutput) RegionalCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunitiesResponse) string { return v.RegionalCommunity }).(pulumi.StringOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesResponseOutput) VirtualNetworkCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunitiesResponse) string { return v.VirtualNetworkCommunity }).(pulumi.StringOutput)
}

type VirtualNetworkBgpCommunitiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutput() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) Elem() VirtualNetworkBgpCommunitiesResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) VirtualNetworkBgpCommunitiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkBgpCommunitiesResponse
		return ret
	}).(VirtualNetworkBgpCommunitiesResponseOutput)
}

// The BGP community associated with the region of the virtual network.
func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) RegionalCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegionalCommunity
	}).(pulumi.StringPtrOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) VirtualNetworkCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkCommunity
	}).(pulumi.StringPtrOutput)
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryption struct {
	// Indicates if encryption is enabled on the virtual network.
	Enabled bool `pulumi:"enabled"`
	// If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
	Enforcement *string `pulumi:"enforcement"`
}

// VirtualNetworkEncryptionInput is an input type that accepts VirtualNetworkEncryptionArgs and VirtualNetworkEncryptionOutput values.
// You can construct a concrete instance of `VirtualNetworkEncryptionInput` via:
//
//	VirtualNetworkEncryptionArgs{...}
type VirtualNetworkEncryptionInput interface {
	pulumi.Input

	ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput
	ToVirtualNetworkEncryptionOutputWithContext(context.Context) VirtualNetworkEncryptionOutput
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionArgs struct {
	// Indicates if encryption is enabled on the virtual network.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
	Enforcement pulumi.StringPtrInput `pulumi:"enforcement"`
}

func (VirtualNetworkEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryption)(nil)).Elem()
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput {
	return i.ToVirtualNetworkEncryptionOutputWithContext(context.Background())
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionOutputWithContext(ctx context.Context) VirtualNetworkEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionOutput)
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return i.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionOutput).ToVirtualNetworkEncryptionPtrOutputWithContext(ctx)
}

// VirtualNetworkEncryptionPtrInput is an input type that accepts VirtualNetworkEncryptionArgs, VirtualNetworkEncryptionPtr and VirtualNetworkEncryptionPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkEncryptionPtrInput` via:
//
//	        VirtualNetworkEncryptionArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkEncryptionPtrInput interface {
	pulumi.Input

	ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput
	ToVirtualNetworkEncryptionPtrOutputWithContext(context.Context) VirtualNetworkEncryptionPtrOutput
}

type virtualNetworkEncryptionPtrType VirtualNetworkEncryptionArgs

func VirtualNetworkEncryptionPtr(v *VirtualNetworkEncryptionArgs) VirtualNetworkEncryptionPtrInput {
	return (*virtualNetworkEncryptionPtrType)(v)
}

func (*virtualNetworkEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryption)(nil)).Elem()
}

func (i *virtualNetworkEncryptionPtrType) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return i.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkEncryptionPtrType) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionPtrOutput)
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryption)(nil)).Elem()
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput {
	return o
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionOutputWithContext(ctx context.Context) VirtualNetworkEncryptionOutput {
	return o
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return o.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkEncryption) *VirtualNetworkEncryption {
		return &v
	}).(VirtualNetworkEncryptionPtrOutput)
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
func (o VirtualNetworkEncryptionOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkEncryption) *string { return v.Enforcement }).(pulumi.StringPtrOutput)
}

type VirtualNetworkEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryption)(nil)).Elem()
}

func (o VirtualNetworkEncryptionPtrOutput) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return o
}

func (o VirtualNetworkEncryptionPtrOutput) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return o
}

func (o VirtualNetworkEncryptionPtrOutput) Elem() VirtualNetworkEncryptionOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) VirtualNetworkEncryption {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkEncryption
		return ret
	}).(VirtualNetworkEncryptionOutput)
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
func (o VirtualNetworkEncryptionPtrOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Enforcement
	}).(pulumi.StringPtrOutput)
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionResponse struct {
	// Indicates if encryption is enabled on the virtual network.
	Enabled bool `pulumi:"enabled"`
	// If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
	Enforcement *string `pulumi:"enforcement"`
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryptionResponse)(nil)).Elem()
}

func (o VirtualNetworkEncryptionResponseOutput) ToVirtualNetworkEncryptionResponseOutput() VirtualNetworkEncryptionResponseOutput {
	return o
}

func (o VirtualNetworkEncryptionResponseOutput) ToVirtualNetworkEncryptionResponseOutputWithContext(ctx context.Context) VirtualNetworkEncryptionResponseOutput {
	return o
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkEncryptionResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
func (o VirtualNetworkEncryptionResponseOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkEncryptionResponse) *string { return v.Enforcement }).(pulumi.StringPtrOutput)
}

type VirtualNetworkEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryptionResponse)(nil)).Elem()
}

func (o VirtualNetworkEncryptionResponsePtrOutput) ToVirtualNetworkEncryptionResponsePtrOutput() VirtualNetworkEncryptionResponsePtrOutput {
	return o
}

func (o VirtualNetworkEncryptionResponsePtrOutput) ToVirtualNetworkEncryptionResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionResponsePtrOutput {
	return o
}

func (o VirtualNetworkEncryptionResponsePtrOutput) Elem() VirtualNetworkEncryptionResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryptionResponse) VirtualNetworkEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkEncryptionResponse
		return ret
	}).(VirtualNetworkEncryptionResponseOutput)
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryptionResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability.
func (o VirtualNetworkEncryptionResponsePtrOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Enforcement
	}).(pulumi.StringPtrOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayType struct {
	// ActiveActive flag.
	ActiveActive *bool `pulumi:"activeActive"`
	// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
	AdminState *string `pulumi:"adminState"`
	// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
	AllowRemoteVnetTraffic *bool `pulumi:"allowRemoteVnetTraffic"`
	// Configures this gateway to accept traffic from remote Virtual WAN networks.
	AllowVirtualWanTraffic *bool `pulumi:"allowVirtualWanTraffic"`
	// Autoscale configuration for virutal network gateway
	AutoScaleConfiguration *VirtualNetworkGatewayAutoScaleConfiguration `pulumi:"autoScaleConfiguration"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes *AddressSpace `pulumi:"customRoutes"`
	// disableIPSecReplayProtection flag.
	DisableIPSecReplayProtection *bool `pulumi:"disableIPSecReplayProtection"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgpRouteTranslationForNat flag.
	EnableBgpRouteTranslationForNat *bool `pulumi:"enableBgpRouteTranslationForNat"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding *bool `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress *bool `pulumi:"enablePrivateIpAddress"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResource `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The identity of the virtual network gateway, if configured.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfiguration `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// NatRules for virtual network gateway.
	NatRules []VirtualNetworkGatewayNatRuleType `pulumi:"natRules"`
	// Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed
	ResiliencyModel *string `pulumi:"resiliencyModel"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VNetExtendedLocationResourceId *string `pulumi:"vNetExtendedLocationResourceId"`
	// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
	VirtualNetworkGatewayPolicyGroups []VirtualNetworkGatewayPolicyGroup `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfiguration `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration *string `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayTypeInput is an input type that accepts VirtualNetworkGatewayTypeArgs and VirtualNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypeInput` via:
//
//	VirtualNetworkGatewayTypeArgs{...}
type VirtualNetworkGatewayTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput
	ToVirtualNetworkGatewayTypeOutputWithContext(context.Context) VirtualNetworkGatewayTypeOutput
}

// A common class for general resource information.
type VirtualNetworkGatewayTypeArgs struct {
	// ActiveActive flag.
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
	// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
	AllowRemoteVnetTraffic pulumi.BoolPtrInput `pulumi:"allowRemoteVnetTraffic"`
	// Configures this gateway to accept traffic from remote Virtual WAN networks.
	AllowVirtualWanTraffic pulumi.BoolPtrInput `pulumi:"allowVirtualWanTraffic"`
	// Autoscale configuration for virutal network gateway
	AutoScaleConfiguration VirtualNetworkGatewayAutoScaleConfigurationPtrInput `pulumi:"autoScaleConfiguration"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes AddressSpacePtrInput `pulumi:"customRoutes"`
	// disableIPSecReplayProtection flag.
	DisableIPSecReplayProtection pulumi.BoolPtrInput `pulumi:"disableIPSecReplayProtection"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// EnableBgpRouteTranslationForNat flag.
	EnableBgpRouteTranslationForNat pulumi.BoolPtrInput `pulumi:"enableBgpRouteTranslationForNat"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding pulumi.BoolPtrInput `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress pulumi.BoolPtrInput `pulumi:"enablePrivateIpAddress"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation ExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourcePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The identity of the virtual network gateway, if configured.
	Identity ManagedServiceIdentityPtrInput `pulumi:"identity"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// NatRules for virtual network gateway.
	NatRules VirtualNetworkGatewayNatRuleTypeArrayInput `pulumi:"natRules"`
	// Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed
	ResiliencyModel pulumi.StringPtrInput `pulumi:"resiliencyModel"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VNetExtendedLocationResourceId pulumi.StringPtrInput `pulumi:"vNetExtendedLocationResourceId"`
	// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
	VirtualNetworkGatewayPolicyGroups VirtualNetworkGatewayPolicyGroupArrayInput `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationPtrInput `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration pulumi.StringPtrInput `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return i.ToVirtualNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput)
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput).ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayTypePtrInput is an input type that accepts VirtualNetworkGatewayTypeArgs, VirtualNetworkGatewayTypePtr and VirtualNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypePtrInput` via:
//
//	        VirtualNetworkGatewayTypeArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput
	ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Context) VirtualNetworkGatewayTypePtrOutput
}

type virtualNetworkGatewayTypePtrType VirtualNetworkGatewayTypeArgs

func VirtualNetworkGatewayTypePtr(v *VirtualNetworkGatewayTypeArgs) VirtualNetworkGatewayTypePtrInput {
	return (*virtualNetworkGatewayTypePtrType)(v)
}

func (*virtualNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypePtrOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayType) *VirtualNetworkGatewayType {
		return &v
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayTypeOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayTypeOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayTypeOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.AllowRemoteVnetTraffic }).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayTypeOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.AllowVirtualWanTraffic }).(pulumi.BoolPtrOutput)
}

// Autoscale configuration for virutal network gateway
func (o VirtualNetworkGatewayTypeOutput) AutoScaleConfiguration() VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewayAutoScaleConfiguration {
		return v.AutoScaleConfiguration
	}).(VirtualNetworkGatewayAutoScaleConfigurationPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayTypeOutput) CustomRoutes() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *AddressSpace { return v.CustomRoutes }).(AddressSpacePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayTypeOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.DisableIPSecReplayProtection }).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayTypeOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableBgpRouteTranslationForNat }).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayTypeOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableDnsForwarding }).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayTypeOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnablePrivateIpAddress }).(pulumi.BoolPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *ExtendedLocation { return v.ExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypeOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *SubResource { return v.GatewayDefaultSite }).(SubResourcePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The identity of the virtual network gateway, if configured.
func (o VirtualNetworkGatewayTypeOutput) Identity() ManagedServiceIdentityPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *ManagedServiceIdentity { return v.Identity }).(ManagedServiceIdentityPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration { return v.IpConfigurations }).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) NatRules() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayNatRuleType { return v.NatRules }).(VirtualNetworkGatewayNatRuleTypeArrayOutput)
}

// Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed
func (o VirtualNetworkGatewayTypeOutput) ResiliencyModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.ResiliencyModel }).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewaySku { return v.Sku }).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayTypeOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VNetExtendedLocationResourceId }).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayTypeOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayPolicyGroup {
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypeOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VpnClientConfiguration { return v.VpnClientConfiguration }).(VpnClientConfigurationPtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayTypeOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnGatewayGeneration }).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) Elem() VirtualNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) VirtualNetworkGatewayType {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayType
		return ret
	}).(VirtualNetworkGatewayTypeOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayTypePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayTypePtrOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.AdminState
	}).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayTypePtrOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayTypePtrOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVirtualWanTraffic
	}).(pulumi.BoolPtrOutput)
}

// Autoscale configuration for virutal network gateway
func (o VirtualNetworkGatewayTypePtrOutput) AutoScaleConfiguration() VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VirtualNetworkGatewayAutoScaleConfiguration {
		if v == nil {
			return nil
		}
		return v.AutoScaleConfiguration
	}).(VirtualNetworkGatewayAutoScaleConfigurationPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayTypePtrOutput) CustomRoutes() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.CustomRoutes
	}).(AddressSpacePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayTypePtrOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIPSecReplayProtection
	}).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayTypePtrOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgpRouteTranslationForNat
	}).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnsForwarding
	}).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateIpAddress
	}).(pulumi.BoolPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourcePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The identity of the virtual network gateway, if configured.
func (o VirtualNetworkGatewayTypePtrOutput) Identity() ManagedServiceIdentityPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *ManagedServiceIdentity {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(ManagedServiceIdentityPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) NatRules() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayNatRuleType {
		if v == nil {
			return nil
		}
		return v.NatRules
	}).(VirtualNetworkGatewayNatRuleTypeArrayOutput)
}

// Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed
func (o VirtualNetworkGatewayTypePtrOutput) ResiliencyModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.ResiliencyModel
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VirtualNetworkGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayTypePtrOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VNetExtendedLocationResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayTypePtrOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayPolicyGroup {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypePtrOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VpnClientConfiguration {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationPtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayTypePtrOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnGatewayGeneration
	}).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayAutoScaleBounds struct {
	// Maximum Scale Units for Autoscale configuration
	Max *int `pulumi:"max"`
	// Minimum scale Units for Autoscale configuration
	Min *int `pulumi:"min"`
}

// VirtualNetworkGatewayAutoScaleBoundsInput is an input type that accepts VirtualNetworkGatewayAutoScaleBoundsArgs and VirtualNetworkGatewayAutoScaleBoundsOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayAutoScaleBoundsInput` via:
//
//	VirtualNetworkGatewayAutoScaleBoundsArgs{...}
type VirtualNetworkGatewayAutoScaleBoundsInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayAutoScaleBoundsOutput() VirtualNetworkGatewayAutoScaleBoundsOutput
	ToVirtualNetworkGatewayAutoScaleBoundsOutputWithContext(context.Context) VirtualNetworkGatewayAutoScaleBoundsOutput
}

type VirtualNetworkGatewayAutoScaleBoundsArgs struct {
	// Maximum Scale Units for Autoscale configuration
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Minimum scale Units for Autoscale configuration
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (VirtualNetworkGatewayAutoScaleBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayAutoScaleBounds)(nil)).Elem()
}

func (i VirtualNetworkGatewayAutoScaleBoundsArgs) ToVirtualNetworkGatewayAutoScaleBoundsOutput() VirtualNetworkGatewayAutoScaleBoundsOutput {
	return i.ToVirtualNetworkGatewayAutoScaleBoundsOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayAutoScaleBoundsArgs) ToVirtualNetworkGatewayAutoScaleBoundsOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayAutoScaleBoundsOutput)
}

func (i VirtualNetworkGatewayAutoScaleBoundsArgs) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutput() VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return i.ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayAutoScaleBoundsArgs) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayAutoScaleBoundsOutput).ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayAutoScaleBoundsPtrInput is an input type that accepts VirtualNetworkGatewayAutoScaleBoundsArgs, VirtualNetworkGatewayAutoScaleBoundsPtr and VirtualNetworkGatewayAutoScaleBoundsPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayAutoScaleBoundsPtrInput` via:
//
//	        VirtualNetworkGatewayAutoScaleBoundsArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayAutoScaleBoundsPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayAutoScaleBoundsPtrOutput() VirtualNetworkGatewayAutoScaleBoundsPtrOutput
	ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(context.Context) VirtualNetworkGatewayAutoScaleBoundsPtrOutput
}

type virtualNetworkGatewayAutoScaleBoundsPtrType VirtualNetworkGatewayAutoScaleBoundsArgs

func VirtualNetworkGatewayAutoScaleBoundsPtr(v *VirtualNetworkGatewayAutoScaleBoundsArgs) VirtualNetworkGatewayAutoScaleBoundsPtrInput {
	return (*virtualNetworkGatewayAutoScaleBoundsPtrType)(v)
}

func (*virtualNetworkGatewayAutoScaleBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayAutoScaleBounds)(nil)).Elem()
}

func (i *virtualNetworkGatewayAutoScaleBoundsPtrType) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutput() VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return i.ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayAutoScaleBoundsPtrType) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayAutoScaleBoundsPtrOutput)
}

type VirtualNetworkGatewayAutoScaleBoundsOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayAutoScaleBounds)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleBoundsOutput) ToVirtualNetworkGatewayAutoScaleBoundsOutput() VirtualNetworkGatewayAutoScaleBoundsOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleBoundsOutput) ToVirtualNetworkGatewayAutoScaleBoundsOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleBoundsOutput) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutput() VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return o.ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayAutoScaleBoundsOutput) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayAutoScaleBounds) *VirtualNetworkGatewayAutoScaleBounds {
		return &v
	}).(VirtualNetworkGatewayAutoScaleBoundsPtrOutput)
}

// Maximum Scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayAutoScaleBounds) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Minimum scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayAutoScaleBounds) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type VirtualNetworkGatewayAutoScaleBoundsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayAutoScaleBounds)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleBoundsPtrOutput) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutput() VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleBoundsPtrOutput) ToVirtualNetworkGatewayAutoScaleBoundsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleBoundsPtrOutput) Elem() VirtualNetworkGatewayAutoScaleBoundsOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleBounds) VirtualNetworkGatewayAutoScaleBounds {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayAutoScaleBounds
		return ret
	}).(VirtualNetworkGatewayAutoScaleBoundsOutput)
}

// Maximum Scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleBounds) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// Minimum scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleBounds) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type VirtualNetworkGatewayAutoScaleBoundsResponse struct {
	// Maximum Scale Units for Autoscale configuration
	Max *int `pulumi:"max"`
	// Minimum scale Units for Autoscale configuration
	Min *int `pulumi:"min"`
}

type VirtualNetworkGatewayAutoScaleBoundsResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleBoundsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayAutoScaleBoundsResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleBoundsResponseOutput) ToVirtualNetworkGatewayAutoScaleBoundsResponseOutput() VirtualNetworkGatewayAutoScaleBoundsResponseOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleBoundsResponseOutput) ToVirtualNetworkGatewayAutoScaleBoundsResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsResponseOutput {
	return o
}

// Maximum Scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayAutoScaleBoundsResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Minimum scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayAutoScaleBoundsResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayAutoScaleBoundsResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput) ToVirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput() VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput) ToVirtualNetworkGatewayAutoScaleBoundsResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput) Elem() VirtualNetworkGatewayAutoScaleBoundsResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleBoundsResponse) VirtualNetworkGatewayAutoScaleBoundsResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayAutoScaleBoundsResponse
		return ret
	}).(VirtualNetworkGatewayAutoScaleBoundsResponseOutput)
}

// Maximum Scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleBoundsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// Minimum scale Units for Autoscale configuration
func (o VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleBoundsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Gateway Autoscale Configuration details
type VirtualNetworkGatewayAutoScaleConfiguration struct {
	// The bounds of the autoscale configuration
	Bounds *VirtualNetworkGatewayAutoScaleBounds `pulumi:"bounds"`
}

// VirtualNetworkGatewayAutoScaleConfigurationInput is an input type that accepts VirtualNetworkGatewayAutoScaleConfigurationArgs and VirtualNetworkGatewayAutoScaleConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayAutoScaleConfigurationInput` via:
//
//	VirtualNetworkGatewayAutoScaleConfigurationArgs{...}
type VirtualNetworkGatewayAutoScaleConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayAutoScaleConfigurationOutput() VirtualNetworkGatewayAutoScaleConfigurationOutput
	ToVirtualNetworkGatewayAutoScaleConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayAutoScaleConfigurationOutput
}

// Virtual Network Gateway Autoscale Configuration details
type VirtualNetworkGatewayAutoScaleConfigurationArgs struct {
	// The bounds of the autoscale configuration
	Bounds VirtualNetworkGatewayAutoScaleBoundsPtrInput `pulumi:"bounds"`
}

func (VirtualNetworkGatewayAutoScaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayAutoScaleConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayAutoScaleConfigurationArgs) ToVirtualNetworkGatewayAutoScaleConfigurationOutput() VirtualNetworkGatewayAutoScaleConfigurationOutput {
	return i.ToVirtualNetworkGatewayAutoScaleConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayAutoScaleConfigurationArgs) ToVirtualNetworkGatewayAutoScaleConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayAutoScaleConfigurationOutput)
}

func (i VirtualNetworkGatewayAutoScaleConfigurationArgs) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutput() VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return i.ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayAutoScaleConfigurationArgs) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayAutoScaleConfigurationOutput).ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayAutoScaleConfigurationPtrInput is an input type that accepts VirtualNetworkGatewayAutoScaleConfigurationArgs, VirtualNetworkGatewayAutoScaleConfigurationPtr and VirtualNetworkGatewayAutoScaleConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayAutoScaleConfigurationPtrInput` via:
//
//	        VirtualNetworkGatewayAutoScaleConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayAutoScaleConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutput() VirtualNetworkGatewayAutoScaleConfigurationPtrOutput
	ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(context.Context) VirtualNetworkGatewayAutoScaleConfigurationPtrOutput
}

type virtualNetworkGatewayAutoScaleConfigurationPtrType VirtualNetworkGatewayAutoScaleConfigurationArgs

func VirtualNetworkGatewayAutoScaleConfigurationPtr(v *VirtualNetworkGatewayAutoScaleConfigurationArgs) VirtualNetworkGatewayAutoScaleConfigurationPtrInput {
	return (*virtualNetworkGatewayAutoScaleConfigurationPtrType)(v)
}

func (*virtualNetworkGatewayAutoScaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayAutoScaleConfiguration)(nil)).Elem()
}

func (i *virtualNetworkGatewayAutoScaleConfigurationPtrType) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutput() VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return i.ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayAutoScaleConfigurationPtrType) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayAutoScaleConfigurationPtrOutput)
}

// Virtual Network Gateway Autoscale Configuration details
type VirtualNetworkGatewayAutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayAutoScaleConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleConfigurationOutput) ToVirtualNetworkGatewayAutoScaleConfigurationOutput() VirtualNetworkGatewayAutoScaleConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleConfigurationOutput) ToVirtualNetworkGatewayAutoScaleConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleConfigurationOutput) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutput() VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return o.ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayAutoScaleConfigurationOutput) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayAutoScaleConfiguration) *VirtualNetworkGatewayAutoScaleConfiguration {
		return &v
	}).(VirtualNetworkGatewayAutoScaleConfigurationPtrOutput)
}

// The bounds of the autoscale configuration
func (o VirtualNetworkGatewayAutoScaleConfigurationOutput) Bounds() VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayAutoScaleConfiguration) *VirtualNetworkGatewayAutoScaleBounds {
		return v.Bounds
	}).(VirtualNetworkGatewayAutoScaleBoundsPtrOutput)
}

type VirtualNetworkGatewayAutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayAutoScaleConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleConfigurationPtrOutput) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutput() VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleConfigurationPtrOutput) ToVirtualNetworkGatewayAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleConfigurationPtrOutput) Elem() VirtualNetworkGatewayAutoScaleConfigurationOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleConfiguration) VirtualNetworkGatewayAutoScaleConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayAutoScaleConfiguration
		return ret
	}).(VirtualNetworkGatewayAutoScaleConfigurationOutput)
}

// The bounds of the autoscale configuration
func (o VirtualNetworkGatewayAutoScaleConfigurationPtrOutput) Bounds() VirtualNetworkGatewayAutoScaleBoundsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleConfiguration) *VirtualNetworkGatewayAutoScaleBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(VirtualNetworkGatewayAutoScaleBoundsPtrOutput)
}

// Virtual Network Gateway Autoscale Configuration details
type VirtualNetworkGatewayAutoScaleConfigurationResponse struct {
	// The bounds of the autoscale configuration
	Bounds *VirtualNetworkGatewayAutoScaleBoundsResponse `pulumi:"bounds"`
}

// Virtual Network Gateway Autoscale Configuration details
type VirtualNetworkGatewayAutoScaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayAutoScaleConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleConfigurationResponseOutput) ToVirtualNetworkGatewayAutoScaleConfigurationResponseOutput() VirtualNetworkGatewayAutoScaleConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleConfigurationResponseOutput) ToVirtualNetworkGatewayAutoScaleConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationResponseOutput {
	return o
}

// The bounds of the autoscale configuration
func (o VirtualNetworkGatewayAutoScaleConfigurationResponseOutput) Bounds() VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayAutoScaleConfigurationResponse) *VirtualNetworkGatewayAutoScaleBoundsResponse {
		return v.Bounds
	}).(VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput)
}

type VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayAutoScaleConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput) ToVirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput() VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput) ToVirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput) Elem() VirtualNetworkGatewayAutoScaleConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleConfigurationResponse) VirtualNetworkGatewayAutoScaleConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayAutoScaleConfigurationResponse
		return ret
	}).(VirtualNetworkGatewayAutoScaleConfigurationResponseOutput)
}

// The bounds of the autoscale configuration
func (o VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput) Bounds() VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayAutoScaleConfigurationResponse) *VirtualNetworkGatewayAutoScaleBoundsResponse {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the public IP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArgs and VirtualNetworkGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInput` via:
//
//	VirtualNetworkGatewayIPConfigurationArgs{...}
type VirtualNetworkGatewayIPConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput
	ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationOutput
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the public IP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationOutput)
}

// VirtualNetworkGatewayIPConfigurationArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArray and VirtualNetworkGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationArrayInput` via:
//
//	VirtualNetworkGatewayIPConfigurationArray{ VirtualNetworkGatewayIPConfigurationArgs{...} }
type VirtualNetworkGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput
	ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput
}

type VirtualNetworkGatewayIPConfigurationArray []VirtualNetworkGatewayIPConfigurationInput

func (VirtualNetworkGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o VirtualNetworkGatewayIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfiguration {
		return vs[0].([]VirtualNetworkGatewayIPConfiguration)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Private IP Address for this gateway.
	PrivateIPAddress string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the virtual network gateway IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Private IP Address for this gateway.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.PrivateIPAddress }).(pulumi.StringOutput)
}

// The private IP address allocation method.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual network gateway IP configuration resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfigurationResponse {
		return vs[0].([]VirtualNetworkGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleType struct {
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMapping `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMapping `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type *string `pulumi:"type"`
}

// VirtualNetworkGatewayNatRuleTypeInput is an input type that accepts VirtualNetworkGatewayNatRuleTypeArgs and VirtualNetworkGatewayNatRuleTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleTypeInput` via:
//
//	VirtualNetworkGatewayNatRuleTypeArgs{...}
type VirtualNetworkGatewayNatRuleTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleTypeOutput() VirtualNetworkGatewayNatRuleTypeOutput
	ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleTypeOutput
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleTypeArgs struct {
	// The private IP address external mapping for NAT.
	ExternalMappings VpnNatRuleMappingArrayInput `pulumi:"externalMappings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings VpnNatRuleMappingArrayInput `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId pulumi.StringPtrInput `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualNetworkGatewayNatRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleTypeArgs) ToVirtualNetworkGatewayNatRuleTypeOutput() VirtualNetworkGatewayNatRuleTypeOutput {
	return i.ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleTypeArgs) ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleTypeOutput)
}

// VirtualNetworkGatewayNatRuleTypeArrayInput is an input type that accepts VirtualNetworkGatewayNatRuleTypeArray and VirtualNetworkGatewayNatRuleTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleTypeArrayInput` via:
//
//	VirtualNetworkGatewayNatRuleTypeArray{ VirtualNetworkGatewayNatRuleTypeArgs{...} }
type VirtualNetworkGatewayNatRuleTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleTypeArrayOutput() VirtualNetworkGatewayNatRuleTypeArrayOutput
	ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleTypeArrayOutput
}

type VirtualNetworkGatewayNatRuleTypeArray []VirtualNetworkGatewayNatRuleTypeInput

func (VirtualNetworkGatewayNatRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleTypeArray) ToVirtualNetworkGatewayNatRuleTypeArrayOutput() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return i.ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleTypeArray) ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleTypeArrayOutput)
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleTypeOutput) ToVirtualNetworkGatewayNatRuleTypeOutput() VirtualNetworkGatewayNatRuleTypeOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleTypeOutput) ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeOutput {
	return o
}

// The private IP address external mapping for NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) ExternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) []VpnNatRuleMapping { return v.ExternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address internal mapping for NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) InternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) []VpnNatRuleMapping { return v.InternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VirtualNetworkGatewayNatRuleTypeOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of NAT rule for VPN NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayNatRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleTypeArrayOutput) ToVirtualNetworkGatewayNatRuleTypeArrayOutput() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleTypeArrayOutput) ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayNatRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayNatRuleType {
		return vs[0].([]VirtualNetworkGatewayNatRuleType)[vs[1].(int)]
	}).(VirtualNetworkGatewayNatRuleTypeOutput)
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMappingResponse `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMappingResponse `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the NAT Rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleResponseOutput) ToVirtualNetworkGatewayNatRuleResponseOutput() VirtualNetworkGatewayNatRuleResponseOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleResponseOutput) ToVirtualNetworkGatewayNatRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The private IP address external mapping for NAT.
func (o VirtualNetworkGatewayNatRuleResponseOutput) ExternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.ExternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address internal mapping for NAT.
func (o VirtualNetworkGatewayNatRuleResponseOutput) InternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.InternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VirtualNetworkGatewayNatRuleResponseOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the NAT Rule resource.
func (o VirtualNetworkGatewayNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleResponseArrayOutput) ToVirtualNetworkGatewayNatRuleResponseArrayOutput() VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleResponseArrayOutput) ToVirtualNetworkGatewayNatRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayNatRuleResponse {
		return vs[0].([]VirtualNetworkGatewayNatRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayNatRuleResponseOutput)
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
	IsDefault bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
	PolicyMembers []VirtualNetworkGatewayPolicyGroupMember `pulumi:"policyMembers"`
	// Priority for VirtualNetworkGatewayPolicyGroup.
	Priority int `pulumi:"priority"`
}

// VirtualNetworkGatewayPolicyGroupInput is an input type that accepts VirtualNetworkGatewayPolicyGroupArgs and VirtualNetworkGatewayPolicyGroupOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupInput` via:
//
//	VirtualNetworkGatewayPolicyGroupArgs{...}
type VirtualNetworkGatewayPolicyGroupInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput
	ToVirtualNetworkGatewayPolicyGroupOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupOutput
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
	PolicyMembers VirtualNetworkGatewayPolicyGroupMemberArrayInput `pulumi:"policyMembers"`
	// Priority for VirtualNetworkGatewayPolicyGroup.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (VirtualNetworkGatewayPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupArgs) ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupArgs) ToVirtualNetworkGatewayPolicyGroupOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupOutput)
}

// VirtualNetworkGatewayPolicyGroupArrayInput is an input type that accepts VirtualNetworkGatewayPolicyGroupArray and VirtualNetworkGatewayPolicyGroupArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupArrayInput` via:
//
//	VirtualNetworkGatewayPolicyGroupArray{ VirtualNetworkGatewayPolicyGroupArgs{...} }
type VirtualNetworkGatewayPolicyGroupArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput
	ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput
}

type VirtualNetworkGatewayPolicyGroupArray []VirtualNetworkGatewayPolicyGroupInput

func (VirtualNetworkGatewayPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupArray) ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupArray) ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupArrayOutput)
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupOutput) ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupOutput) ToVirtualNetworkGatewayPolicyGroupOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupOutput {
	return o
}

// Resource ID.
func (o VirtualNetworkGatewayPolicyGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
func (o VirtualNetworkGatewayPolicyGroupOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayPolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupOutput) PolicyMembers() VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) []VirtualNetworkGatewayPolicyGroupMember {
		return v.PolicyMembers
	}).(VirtualNetworkGatewayPolicyGroupMemberArrayOutput)
}

// Priority for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) int { return v.Priority }).(pulumi.IntOutput)
}

type VirtualNetworkGatewayPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroup {
		return vs[0].([]VirtualNetworkGatewayPolicyGroup)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupOutput)
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMember struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VirtualNetworkGatewayPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VirtualNetworkGatewayPolicyGroupMemberInput is an input type that accepts VirtualNetworkGatewayPolicyGroupMemberArgs and VirtualNetworkGatewayPolicyGroupMemberOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupMemberInput` via:
//
//	VirtualNetworkGatewayPolicyGroupMemberArgs{...}
type VirtualNetworkGatewayPolicyGroupMemberInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupMemberOutput() VirtualNetworkGatewayPolicyGroupMemberOutput
	ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupMemberOutput
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberArgs struct {
	// The Vpn Policy member attribute type.
	AttributeType pulumi.StringPtrInput `pulumi:"attributeType"`
	// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
	AttributeValue pulumi.StringPtrInput `pulumi:"attributeValue"`
	// Name of the VirtualNetworkGatewayPolicyGroupMember.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualNetworkGatewayPolicyGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupMemberArgs) ToVirtualNetworkGatewayPolicyGroupMemberOutput() VirtualNetworkGatewayPolicyGroupMemberOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupMemberArgs) ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupMemberOutput)
}

// VirtualNetworkGatewayPolicyGroupMemberArrayInput is an input type that accepts VirtualNetworkGatewayPolicyGroupMemberArray and VirtualNetworkGatewayPolicyGroupMemberArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupMemberArrayInput` via:
//
//	VirtualNetworkGatewayPolicyGroupMemberArray{ VirtualNetworkGatewayPolicyGroupMemberArgs{...} }
type VirtualNetworkGatewayPolicyGroupMemberArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupMemberArrayOutput() VirtualNetworkGatewayPolicyGroupMemberArrayOutput
	ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupMemberArrayOutput
}

type VirtualNetworkGatewayPolicyGroupMemberArray []VirtualNetworkGatewayPolicyGroupMemberInput

func (VirtualNetworkGatewayPolicyGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupMemberArray) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutput() VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupMemberArray) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupMemberArrayOutput)
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberOutput) ToVirtualNetworkGatewayPolicyGroupMemberOutput() VirtualNetworkGatewayPolicyGroupMemberOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberOutput) ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VirtualNetworkGatewayPolicyGroupMemberOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMember) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMember) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayPolicyGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutput() VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroupMember {
		return vs[0].([]VirtualNetworkGatewayPolicyGroupMember)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupMemberOutput)
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberResponse struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VirtualNetworkGatewayPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseOutput() VirtualNetworkGatewayPolicyGroupMemberResponseOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberResponseOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMemberResponse) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMemberResponse) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMemberResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput() VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupMemberResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroupMemberResponse {
		return vs[0].([]VirtualNetworkGatewayPolicyGroupMemberResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupMemberResponseOutput)
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
	IsDefault bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
	PolicyMembers []VirtualNetworkGatewayPolicyGroupMemberResponse `pulumi:"policyMembers"`
	// Priority for VirtualNetworkGatewayPolicyGroup.
	Priority int `pulumi:"priority"`
	// The provisioning state of the VirtualNetworkGatewayPolicyGroup resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of references to vngClientConnectionConfigurations.
	VngClientConnectionConfigurations []SubResourceResponse `pulumi:"vngClientConnectionConfigurations"`
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupResponseOutput) ToVirtualNetworkGatewayPolicyGroupResponseOutput() VirtualNetworkGatewayPolicyGroupResponseOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupResponseOutput) ToVirtualNetworkGatewayPolicyGroupResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) PolicyMembers() VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) []VirtualNetworkGatewayPolicyGroupMemberResponse {
		return v.PolicyMembers
	}).(VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput)
}

// Priority for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// The provisioning state of the VirtualNetworkGatewayPolicyGroup resource.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of references to vngClientConnectionConfigurations.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) VngClientConnectionConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) []SubResourceResponse {
		return v.VngClientConnectionConfigurations
	}).(SubResourceResponseArrayOutput)
}

type VirtualNetworkGatewayPolicyGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupResponseArrayOutput() VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroupResponse {
		return vs[0].([]VirtualNetworkGatewayPolicyGroupResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupResponseOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayResponse struct {
	// ActiveActive flag.
	ActiveActive *bool `pulumi:"activeActive"`
	// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
	AdminState *string `pulumi:"adminState"`
	// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
	AllowRemoteVnetTraffic *bool `pulumi:"allowRemoteVnetTraffic"`
	// Configures this gateway to accept traffic from remote Virtual WAN networks.
	AllowVirtualWanTraffic *bool `pulumi:"allowVirtualWanTraffic"`
	// Autoscale configuration for virutal network gateway
	AutoScaleConfiguration *VirtualNetworkGatewayAutoScaleConfigurationResponse `pulumi:"autoScaleConfiguration"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes *AddressSpaceResponse `pulumi:"customRoutes"`
	// disableIPSecReplayProtection flag.
	DisableIPSecReplayProtection *bool `pulumi:"disableIPSecReplayProtection"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgpRouteTranslationForNat flag.
	EnableBgpRouteTranslationForNat *bool `pulumi:"enableBgpRouteTranslationForNat"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding *bool `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress *bool `pulumi:"enablePrivateIpAddress"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResourceResponse `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The identity of the virtual network gateway, if configured.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The IP address allocated by the gateway to which dns requests can be sent.
	InboundDnsForwardingEndpoint string `pulumi:"inboundDnsForwardingEndpoint"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// NatRules for virtual network gateway.
	NatRules []VirtualNetworkGatewayNatRuleResponse `pulumi:"natRules"`
	// The provisioning state of the virtual network gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed
	ResiliencyModel *string `pulumi:"resiliencyModel"`
	// The resource GUID property of the virtual network gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VNetExtendedLocationResourceId *string `pulumi:"vNetExtendedLocationResourceId"`
	// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
	VirtualNetworkGatewayPolicyGroups []VirtualNetworkGatewayPolicyGroupResponse `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfigurationResponse `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration *string `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType *string `pulumi:"vpnType"`
}

// A common class for general resource information.
type VirtualNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return o
}

// ActiveActive flag.
func (o VirtualNetworkGatewayResponseOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayResponseOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayResponseOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.AllowRemoteVnetTraffic }).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayResponseOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.AllowVirtualWanTraffic }).(pulumi.BoolPtrOutput)
}

// Autoscale configuration for virutal network gateway
func (o VirtualNetworkGatewayResponseOutput) AutoScaleConfiguration() VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewayAutoScaleConfigurationResponse {
		return v.AutoScaleConfiguration
	}).(VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayResponseOutput) CustomRoutes() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *AddressSpaceResponse { return v.CustomRoutes }).(AddressSpaceResponsePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayResponseOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.DisableIPSecReplayProtection }).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayResponseOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableBgpRouteTranslationForNat }).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayResponseOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableDnsForwarding }).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayResponseOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnablePrivateIpAddress }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponseOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *SubResourceResponse { return v.GatewayDefaultSite }).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The identity of the virtual network gateway, if configured.
func (o VirtualNetworkGatewayResponseOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The IP address allocated by the gateway to which dns requests can be sent.
func (o VirtualNetworkGatewayResponseOutput) InboundDnsForwardingEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.InboundDnsForwardingEndpoint }).(pulumi.StringOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) NatRules() VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayNatRuleResponse { return v.NatRules }).(VirtualNetworkGatewayNatRuleResponseArrayOutput)
}

// The provisioning state of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed
func (o VirtualNetworkGatewayResponseOutput) ResiliencyModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.ResiliencyModel }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse { return v.Sku }).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayResponseOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VNetExtendedLocationResourceId }).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayResponseOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayPolicyGroupResponse {
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupResponseArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponseOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse { return v.VpnClientConfiguration }).(VpnClientConfigurationResponsePtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayResponseOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnGatewayGeneration }).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) Elem() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) VirtualNetworkGatewayResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayResponse
		return ret
	}).(VirtualNetworkGatewayResponseOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayResponsePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayResponsePtrOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminState
	}).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayResponsePtrOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayResponsePtrOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVirtualWanTraffic
	}).(pulumi.BoolPtrOutput)
}

// Autoscale configuration for virutal network gateway
func (o VirtualNetworkGatewayResponsePtrOutput) AutoScaleConfiguration() VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VirtualNetworkGatewayAutoScaleConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.AutoScaleConfiguration
	}).(VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayResponsePtrOutput) CustomRoutes() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.CustomRoutes
	}).(AddressSpaceResponsePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayResponsePtrOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIPSecReplayProtection
	}).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgpRouteTranslationForNat
	}).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnsForwarding
	}).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateIpAddress
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The identity of the virtual network gateway, if configured.
func (o VirtualNetworkGatewayResponsePtrOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *ManagedServiceIdentityResponse {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(ManagedServiceIdentityResponsePtrOutput)
}

// The IP address allocated by the gateway to which dns requests can be sent.
func (o VirtualNetworkGatewayResponsePtrOutput) InboundDnsForwardingEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InboundDnsForwardingEndpoint
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) NatRules() VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.NatRules
	}).(VirtualNetworkGatewayNatRuleResponseArrayOutput)
}

// The provisioning state of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed
func (o VirtualNetworkGatewayResponsePtrOutput) ResiliencyModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResiliencyModel
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayResponsePtrOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VNetExtendedLocationResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayPolicyGroupResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupResponseArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnGatewayGeneration
	}).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySku struct {
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuInput is an input type that accepts VirtualNetworkGatewaySkuArgs and VirtualNetworkGatewaySkuOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInput` via:
//
//	VirtualNetworkGatewaySkuArgs{...}
type VirtualNetworkGatewaySkuInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput
	ToVirtualNetworkGatewaySkuOutputWithContext(context.Context) VirtualNetworkGatewaySkuOutput
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuArgs struct {
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return i.ToVirtualNetworkGatewaySkuOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput)
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput).ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuPtrInput is an input type that accepts VirtualNetworkGatewaySkuArgs, VirtualNetworkGatewaySkuPtr and VirtualNetworkGatewaySkuPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuPtrInput` via:
//
//	        VirtualNetworkGatewaySkuArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewaySkuPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput
	ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuPtrOutput
}

type virtualNetworkGatewaySkuPtrType VirtualNetworkGatewaySkuArgs

func VirtualNetworkGatewaySkuPtr(v *VirtualNetworkGatewaySkuArgs) VirtualNetworkGatewaySkuPtrInput {
	return (*virtualNetworkGatewaySkuPtrType)(v)
}

func (*virtualNetworkGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewaySku) *VirtualNetworkGatewaySku {
		return &v
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) Elem() VirtualNetworkGatewaySkuOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) VirtualNetworkGatewaySku {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewaySku
		return ret
	}).(VirtualNetworkGatewaySkuOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuResponse struct {
	// The capacity.
	Capacity int `pulumi:"capacity"`
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return o
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) Elem() VirtualNetworkGatewaySkuResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) VirtualNetworkGatewaySkuResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewaySkuResponse
		return ret
	}).(VirtualNetworkGatewaySkuResponseOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringType struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// If we need to verify the provisioning state of the remote gateway.
	DoNotVerifyRemoteGateways *bool `pulumi:"doNotVerifyRemoteGateways"`
	// Whether only Ipv6 address space is peered for subnet peering.
	EnableOnlyIPv6Peering *bool `pulumi:"enableOnlyIPv6Peering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The local address space of the local virtual network that is peered.
	LocalAddressSpace *AddressSpace `pulumi:"localAddressSpace"`
	// List of local subnet names that are subnet peered with remote virtual network.
	LocalSubnetNames []string `pulumi:"localSubnetNames"`
	// The current local address space of the local virtual network that is peered.
	LocalVirtualNetworkAddressSpace *AddressSpace `pulumi:"localVirtualNetworkAddressSpace"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether complete virtual network address space is peered.
	PeerCompleteVnets *bool `pulumi:"peerCompleteVnets"`
	// The status of the virtual network peering.
	PeeringState *string `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel *string `pulumi:"peeringSyncLevel"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace *AddressSpace `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities *VirtualNetworkBgpCommunities `pulumi:"remoteBgpCommunities"`
	// List of remote subnet names from remote virtual network that are subnet peered.
	RemoteSubnetNames []string `pulumi:"remoteSubnetNames"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResource `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace *AddressSpace `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Resource type.
	Type *string `pulumi:"type"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringTypeInput is an input type that accepts VirtualNetworkPeeringTypeArgs and VirtualNetworkPeeringTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeInput` via:
//
//	VirtualNetworkPeeringTypeArgs{...}
type VirtualNetworkPeeringTypeInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput
	ToVirtualNetworkPeeringTypeOutputWithContext(context.Context) VirtualNetworkPeeringTypeOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeArgs struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// If we need to verify the provisioning state of the remote gateway.
	DoNotVerifyRemoteGateways pulumi.BoolPtrInput `pulumi:"doNotVerifyRemoteGateways"`
	// Whether only Ipv6 address space is peered for subnet peering.
	EnableOnlyIPv6Peering pulumi.BoolPtrInput `pulumi:"enableOnlyIPv6Peering"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The local address space of the local virtual network that is peered.
	LocalAddressSpace AddressSpacePtrInput `pulumi:"localAddressSpace"`
	// List of local subnet names that are subnet peered with remote virtual network.
	LocalSubnetNames pulumi.StringArrayInput `pulumi:"localSubnetNames"`
	// The current local address space of the local virtual network that is peered.
	LocalVirtualNetworkAddressSpace AddressSpacePtrInput `pulumi:"localVirtualNetworkAddressSpace"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether complete virtual network address space is peered.
	PeerCompleteVnets pulumi.BoolPtrInput `pulumi:"peerCompleteVnets"`
	// The status of the virtual network peering.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel pulumi.StringPtrInput `pulumi:"peeringSyncLevel"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace AddressSpacePtrInput `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities VirtualNetworkBgpCommunitiesPtrInput `pulumi:"remoteBgpCommunities"`
	// List of remote subnet names from remote virtual network that are subnet peered.
	RemoteSubnetNames pulumi.StringArrayInput `pulumi:"remoteSubnetNames"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourcePtrInput `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace AddressSpacePtrInput `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return i.ToVirtualNetworkPeeringTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeOutput)
}

// VirtualNetworkPeeringTypeArrayInput is an input type that accepts VirtualNetworkPeeringTypeArray and VirtualNetworkPeeringTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeArrayInput` via:
//
//	VirtualNetworkPeeringTypeArray{ VirtualNetworkPeeringTypeArgs{...} }
type VirtualNetworkPeeringTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput
	ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Context) VirtualNetworkPeeringTypeArrayOutput
}

type VirtualNetworkPeeringTypeArray []VirtualNetworkPeeringTypeInput

func (VirtualNetworkPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return i.ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return o
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringTypeOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
func (o VirtualNetworkPeeringTypeOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// If we need to verify the provisioning state of the remote gateway.
func (o VirtualNetworkPeeringTypeOutput) DoNotVerifyRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.DoNotVerifyRemoteGateways }).(pulumi.BoolPtrOutput)
}

// Whether only Ipv6 address space is peered for subnet peering.
func (o VirtualNetworkPeeringTypeOutput) EnableOnlyIPv6Peering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.EnableOnlyIPv6Peering }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The local address space of the local virtual network that is peered.
func (o VirtualNetworkPeeringTypeOutput) LocalAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.LocalAddressSpace }).(AddressSpacePtrOutput)
}

// List of local subnet names that are subnet peered with remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) LocalSubnetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) []string { return v.LocalSubnetNames }).(pulumi.StringArrayOutput)
}

// The current local address space of the local virtual network that is peered.
func (o VirtualNetworkPeeringTypeOutput) LocalVirtualNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.LocalVirtualNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether complete virtual network address space is peered.
func (o VirtualNetworkPeeringTypeOutput) PeerCompleteVnets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.PeerCompleteVnets }).(pulumi.BoolPtrOutput)
}

// The status of the virtual network peering.
func (o VirtualNetworkPeeringTypeOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The peering sync status of the virtual network peering.
func (o VirtualNetworkPeeringTypeOutput) PeeringSyncLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.PeeringSyncLevel }).(pulumi.StringPtrOutput)
}

// The reference to the address space peered with the remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) RemoteAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.RemoteAddressSpace }).(AddressSpacePtrOutput)
}

// The reference to the remote virtual network's Bgp Communities.
func (o VirtualNetworkPeeringTypeOutput) RemoteBgpCommunities() VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *VirtualNetworkBgpCommunities { return v.RemoteBgpCommunities }).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// List of remote subnet names from remote virtual network that are subnet peered.
func (o VirtualNetworkPeeringTypeOutput) RemoteSubnetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) []string { return v.RemoteSubnetNames }).(pulumi.StringArrayOutput)
}

// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringTypeOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *SubResource { return v.RemoteVirtualNetwork }).(SubResourcePtrOutput)
}

// The reference to the current address space of the remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) RemoteVirtualNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.RemoteVirtualNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// Resource type.
func (o VirtualNetworkPeeringTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringTypeOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringType {
		return vs[0].([]VirtualNetworkPeeringType)[vs[1].(int)]
	}).(VirtualNetworkPeeringTypeOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponse struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// If we need to verify the provisioning state of the remote gateway.
	DoNotVerifyRemoteGateways *bool `pulumi:"doNotVerifyRemoteGateways"`
	// Whether only Ipv6 address space is peered for subnet peering.
	EnableOnlyIPv6Peering *bool `pulumi:"enableOnlyIPv6Peering"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The local address space of the local virtual network that is peered.
	LocalAddressSpace *AddressSpaceResponse `pulumi:"localAddressSpace"`
	// List of local subnet names that are subnet peered with remote virtual network.
	LocalSubnetNames []string `pulumi:"localSubnetNames"`
	// The current local address space of the local virtual network that is peered.
	LocalVirtualNetworkAddressSpace *AddressSpaceResponse `pulumi:"localVirtualNetworkAddressSpace"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether complete virtual network address space is peered.
	PeerCompleteVnets *bool `pulumi:"peerCompleteVnets"`
	// The status of the virtual network peering.
	PeeringState *string `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel *string `pulumi:"peeringSyncLevel"`
	// The provisioning state of the virtual network peering resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace *AddressSpaceResponse `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities *VirtualNetworkBgpCommunitiesResponse `pulumi:"remoteBgpCommunities"`
	// List of remote subnet names from remote virtual network that are subnet peered.
	RemoteSubnetNames []string `pulumi:"remoteSubnetNames"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResourceResponse `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace *AddressSpaceResponse `pulumi:"remoteVirtualNetworkAddressSpace"`
	// The reference to the remote virtual network's encryption
	RemoteVirtualNetworkEncryption VirtualNetworkEncryptionResponse `pulumi:"remoteVirtualNetworkEncryption"`
	// The resourceGuid property of the Virtual Network peering resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource type.
	Type *string `pulumi:"type"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return o
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringResponseOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
func (o VirtualNetworkPeeringResponseOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// If we need to verify the provisioning state of the remote gateway.
func (o VirtualNetworkPeeringResponseOutput) DoNotVerifyRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.DoNotVerifyRemoteGateways }).(pulumi.BoolPtrOutput)
}

// Whether only Ipv6 address space is peered for subnet peering.
func (o VirtualNetworkPeeringResponseOutput) EnableOnlyIPv6Peering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.EnableOnlyIPv6Peering }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkPeeringResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The local address space of the local virtual network that is peered.
func (o VirtualNetworkPeeringResponseOutput) LocalAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.LocalAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// List of local subnet names that are subnet peered with remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) LocalSubnetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) []string { return v.LocalSubnetNames }).(pulumi.StringArrayOutput)
}

// The current local address space of the local virtual network that is peered.
func (o VirtualNetworkPeeringResponseOutput) LocalVirtualNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.LocalVirtualNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether complete virtual network address space is peered.
func (o VirtualNetworkPeeringResponseOutput) PeerCompleteVnets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.PeerCompleteVnets }).(pulumi.BoolPtrOutput)
}

// The status of the virtual network peering.
func (o VirtualNetworkPeeringResponseOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The peering sync status of the virtual network peering.
func (o VirtualNetworkPeeringResponseOutput) PeeringSyncLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.PeeringSyncLevel }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual network peering resource.
func (o VirtualNetworkPeeringResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the address space peered with the remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) RemoteAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.RemoteAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The reference to the remote virtual network's Bgp Communities.
func (o VirtualNetworkPeeringResponseOutput) RemoteBgpCommunities() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *VirtualNetworkBgpCommunitiesResponse {
		return v.RemoteBgpCommunities
	}).(VirtualNetworkBgpCommunitiesResponsePtrOutput)
}

// List of remote subnet names from remote virtual network that are subnet peered.
func (o VirtualNetworkPeeringResponseOutput) RemoteSubnetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) []string { return v.RemoteSubnetNames }).(pulumi.StringArrayOutput)
}

// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *SubResourceResponse { return v.RemoteVirtualNetwork }).(SubResourceResponsePtrOutput)
}

// The reference to the current address space of the remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.RemoteVirtualNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The reference to the remote virtual network's encryption
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetworkEncryption() VirtualNetworkEncryptionResponseOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) VirtualNetworkEncryptionResponse {
		return v.RemoteVirtualNetworkEncryption
	}).(VirtualNetworkEncryptionResponseOutput)
}

// The resourceGuid property of the Virtual Network peering resource.
func (o VirtualNetworkPeeringResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource type.
func (o VirtualNetworkPeeringResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringResponseOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringResponse {
		return vs[0].([]VirtualNetworkPeeringResponse)[vs[1].(int)]
	}).(VirtualNetworkPeeringResponseOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapType struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfiguration `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfiguration `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for VirtualNetworkTapType
func (val *VirtualNetworkTapType) Defaults() *VirtualNetworkTapType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DestinationLoadBalancerFrontEndIPConfiguration = tmp.DestinationLoadBalancerFrontEndIPConfiguration.Defaults()

	tmp.DestinationNetworkInterfaceIPConfiguration = tmp.DestinationNetworkInterfaceIPConfiguration.Defaults()

	return &tmp
}

// VirtualNetworkTapTypeInput is an input type that accepts VirtualNetworkTapTypeArgs and VirtualNetworkTapTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypeInput` via:
//
//	VirtualNetworkTapTypeArgs{...}
type VirtualNetworkTapTypeInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput
	ToVirtualNetworkTapTypeOutputWithContext(context.Context) VirtualNetworkTapTypeOutput
}

// Virtual Network Tap resource.
type VirtualNetworkTapTypeArgs struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration FrontendIPConfigurationPtrInput `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration NetworkInterfaceIPConfigurationPtrInput `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort pulumi.IntPtrInput `pulumi:"destinationPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for VirtualNetworkTapTypeArgs
func (val *VirtualNetworkTapTypeArgs) Defaults() *VirtualNetworkTapTypeArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (VirtualNetworkTapTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return i.ToVirtualNetworkTapTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeOutput)
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return i.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeOutput).ToVirtualNetworkTapTypePtrOutputWithContext(ctx)
}

// VirtualNetworkTapTypePtrInput is an input type that accepts VirtualNetworkTapTypeArgs, VirtualNetworkTapTypePtr and VirtualNetworkTapTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypePtrInput` via:
//
//	        VirtualNetworkTapTypeArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkTapTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput
	ToVirtualNetworkTapTypePtrOutputWithContext(context.Context) VirtualNetworkTapTypePtrOutput
}

type virtualNetworkTapTypePtrType VirtualNetworkTapTypeArgs

func VirtualNetworkTapTypePtr(v *VirtualNetworkTapTypeArgs) VirtualNetworkTapTypePtrInput {
	return (*virtualNetworkTapTypePtrType)(v)
}

func (*virtualNetworkTapTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapType)(nil)).Elem()
}

func (i *virtualNetworkTapTypePtrType) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return i.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapTypePtrType) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypePtrOutput)
}

// VirtualNetworkTapTypeArrayInput is an input type that accepts VirtualNetworkTapTypeArray and VirtualNetworkTapTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypeArrayInput` via:
//
//	VirtualNetworkTapTypeArray{ VirtualNetworkTapTypeArgs{...} }
type VirtualNetworkTapTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput
	ToVirtualNetworkTapTypeArrayOutputWithContext(context.Context) VirtualNetworkTapTypeArrayOutput
}

type VirtualNetworkTapTypeArray []VirtualNetworkTapTypeInput

func (VirtualNetworkTapTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapType)(nil)).Elem()
}

func (i VirtualNetworkTapTypeArray) ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput {
	return i.ToVirtualNetworkTapTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArray) ToVirtualNetworkTapTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkTapTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeArrayOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return o
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return o
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return o.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkTapType) *VirtualNetworkTapType {
		return &v
	}).(VirtualNetworkTapTypePtrOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapTypeOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *FrontendIPConfiguration {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapTypeOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *NetworkInterfaceIPConfiguration {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapTypeOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type VirtualNetworkTapTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypePtrOutput) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return o
}

func (o VirtualNetworkTapTypePtrOutput) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return o
}

func (o VirtualNetworkTapTypePtrOutput) Elem() VirtualNetworkTapTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) VirtualNetworkTapType {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkTapType
		return ret
	}).(VirtualNetworkTapTypeOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapTypePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *FrontendIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapTypePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *NetworkInterfaceIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapTypePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type VirtualNetworkTapTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypeArrayOutput) ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput {
	return o
}

func (o VirtualNetworkTapTypeArrayOutput) ToVirtualNetworkTapTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkTapTypeArrayOutput {
	return o
}

func (o VirtualNetworkTapTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapType {
		return vs[0].([]VirtualNetworkTapType)[vs[1].(int)]
	}).(VirtualNetworkTapTypeOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponse struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfigurationResponse `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network tap resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for VirtualNetworkTapResponse
func (val *VirtualNetworkTapResponse) Defaults() *VirtualNetworkTapResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DestinationLoadBalancerFrontEndIPConfiguration = tmp.DestinationLoadBalancerFrontEndIPConfiguration.Defaults()

	tmp.DestinationNetworkInterfaceIPConfiguration = tmp.DestinationNetworkInterfaceIPConfiguration.Defaults()

	return &tmp
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return o
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponseOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponseOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkTapResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) Elem() VirtualNetworkTapResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) VirtualNetworkTapResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkTapResponse
		return ret
	}).(VirtualNetworkTapResponseOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponsePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponsePtrOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkTapResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapResponse {
		return vs[0].([]VirtualNetworkTapResponse)[vs[1].(int)]
	}).(VirtualNetworkTapResponseOutput)
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfiguration struct {
	// The minimum number of scale units for VirtualHub Router.
	MinCapacity *int `pulumi:"minCapacity"`
}

// VirtualRouterAutoScaleConfigurationInput is an input type that accepts VirtualRouterAutoScaleConfigurationArgs and VirtualRouterAutoScaleConfigurationOutput values.
// You can construct a concrete instance of `VirtualRouterAutoScaleConfigurationInput` via:
//
//	VirtualRouterAutoScaleConfigurationArgs{...}
type VirtualRouterAutoScaleConfigurationInput interface {
	pulumi.Input

	ToVirtualRouterAutoScaleConfigurationOutput() VirtualRouterAutoScaleConfigurationOutput
	ToVirtualRouterAutoScaleConfigurationOutputWithContext(context.Context) VirtualRouterAutoScaleConfigurationOutput
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationArgs struct {
	// The minimum number of scale units for VirtualHub Router.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
}

func (VirtualRouterAutoScaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationOutput() VirtualRouterAutoScaleConfigurationOutput {
	return i.ToVirtualRouterAutoScaleConfigurationOutputWithContext(context.Background())
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterAutoScaleConfigurationOutput)
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return i.ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterAutoScaleConfigurationOutput).ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx)
}

// VirtualRouterAutoScaleConfigurationPtrInput is an input type that accepts VirtualRouterAutoScaleConfigurationArgs, VirtualRouterAutoScaleConfigurationPtr and VirtualRouterAutoScaleConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualRouterAutoScaleConfigurationPtrInput` via:
//
//	        VirtualRouterAutoScaleConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualRouterAutoScaleConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput
	ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Context) VirtualRouterAutoScaleConfigurationPtrOutput
}

type virtualRouterAutoScaleConfigurationPtrType VirtualRouterAutoScaleConfigurationArgs

func VirtualRouterAutoScaleConfigurationPtr(v *VirtualRouterAutoScaleConfigurationArgs) VirtualRouterAutoScaleConfigurationPtrInput {
	return (*virtualRouterAutoScaleConfigurationPtrType)(v)
}

func (*virtualRouterAutoScaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (i *virtualRouterAutoScaleConfigurationPtrType) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return i.ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualRouterAutoScaleConfigurationPtrType) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterAutoScaleConfigurationPtrOutput)
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationOutput() VirtualRouterAutoScaleConfigurationOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return o.ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualRouterAutoScaleConfiguration) *VirtualRouterAutoScaleConfiguration {
		return &v
	}).(VirtualRouterAutoScaleConfigurationPtrOutput)
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualRouterAutoScaleConfiguration) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type VirtualRouterAutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationPtrOutput) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationPtrOutput) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationPtrOutput) Elem() VirtualRouterAutoScaleConfigurationOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfiguration) VirtualRouterAutoScaleConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualRouterAutoScaleConfiguration
		return ret
	}).(VirtualRouterAutoScaleConfigurationOutput)
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationResponse struct {
	// The minimum number of scale units for VirtualHub Router.
	MinCapacity *int `pulumi:"minCapacity"`
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterAutoScaleConfigurationResponse)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationResponseOutput) ToVirtualRouterAutoScaleConfigurationResponseOutput() VirtualRouterAutoScaleConfigurationResponseOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationResponseOutput) ToVirtualRouterAutoScaleConfigurationResponseOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationResponseOutput {
	return o
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationResponseOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualRouterAutoScaleConfigurationResponse) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type VirtualRouterAutoScaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterAutoScaleConfigurationResponse)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) ToVirtualRouterAutoScaleConfigurationResponsePtrOutput() VirtualRouterAutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) ToVirtualRouterAutoScaleConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) Elem() VirtualRouterAutoScaleConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfigurationResponse) VirtualRouterAutoScaleConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VirtualRouterAutoScaleConfigurationResponse
		return ret
	}).(VirtualRouterAutoScaleConfigurationResponseOutput)
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRoute struct {
	// List of all Static Routes.
	StaticRoutes []StaticRoute `pulumi:"staticRoutes"`
	// Configuration for static routes on this HubVnetConnection.
	StaticRoutesConfig *StaticRoutesConfig `pulumi:"staticRoutesConfig"`
}

// VnetRouteInput is an input type that accepts VnetRouteArgs and VnetRouteOutput values.
// You can construct a concrete instance of `VnetRouteInput` via:
//
//	VnetRouteArgs{...}
type VnetRouteInput interface {
	pulumi.Input

	ToVnetRouteOutput() VnetRouteOutput
	ToVnetRouteOutputWithContext(context.Context) VnetRouteOutput
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteArgs struct {
	// List of all Static Routes.
	StaticRoutes StaticRouteArrayInput `pulumi:"staticRoutes"`
	// Configuration for static routes on this HubVnetConnection.
	StaticRoutesConfig StaticRoutesConfigPtrInput `pulumi:"staticRoutesConfig"`
}

func (VnetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (i VnetRouteArgs) ToVnetRouteOutput() VnetRouteOutput {
	return i.ToVnetRouteOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput)
}

func (i VnetRouteArgs) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return i.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput).ToVnetRoutePtrOutputWithContext(ctx)
}

// VnetRoutePtrInput is an input type that accepts VnetRouteArgs, VnetRoutePtr and VnetRoutePtrOutput values.
// You can construct a concrete instance of `VnetRoutePtrInput` via:
//
//	        VnetRouteArgs{...}
//
//	or:
//
//	        nil
type VnetRoutePtrInput interface {
	pulumi.Input

	ToVnetRoutePtrOutput() VnetRoutePtrOutput
	ToVnetRoutePtrOutputWithContext(context.Context) VnetRoutePtrOutput
}

type vnetRoutePtrType VnetRouteArgs

func VnetRoutePtr(v *VnetRouteArgs) VnetRoutePtrInput {
	return (*vnetRoutePtrType)(v)
}

func (*vnetRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRoute)(nil)).Elem()
}

func (i *vnetRoutePtrType) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return i.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (i *vnetRoutePtrType) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRoutePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteOutput struct{ *pulumi.OutputState }

func (VnetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (o VnetRouteOutput) ToVnetRouteOutput() VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return o.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (o VnetRouteOutput) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VnetRoute) *VnetRoute {
		return &v
	}).(VnetRoutePtrOutput)
}

// List of all Static Routes.
func (o VnetRouteOutput) StaticRoutes() StaticRouteArrayOutput {
	return o.ApplyT(func(v VnetRoute) []StaticRoute { return v.StaticRoutes }).(StaticRouteArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRouteOutput) StaticRoutesConfig() StaticRoutesConfigPtrOutput {
	return o.ApplyT(func(v VnetRoute) *StaticRoutesConfig { return v.StaticRoutesConfig }).(StaticRoutesConfigPtrOutput)
}

type VnetRoutePtrOutput struct{ *pulumi.OutputState }

func (VnetRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRoute)(nil)).Elem()
}

func (o VnetRoutePtrOutput) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return o
}

func (o VnetRoutePtrOutput) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return o
}

func (o VnetRoutePtrOutput) Elem() VnetRouteOutput {
	return o.ApplyT(func(v *VnetRoute) VnetRoute {
		if v != nil {
			return *v
		}
		var ret VnetRoute
		return ret
	}).(VnetRouteOutput)
}

// List of all Static Routes.
func (o VnetRoutePtrOutput) StaticRoutes() StaticRouteArrayOutput {
	return o.ApplyT(func(v *VnetRoute) []StaticRoute {
		if v == nil {
			return nil
		}
		return v.StaticRoutes
	}).(StaticRouteArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRoutePtrOutput) StaticRoutesConfig() StaticRoutesConfigPtrOutput {
	return o.ApplyT(func(v *VnetRoute) *StaticRoutesConfig {
		if v == nil {
			return nil
		}
		return v.StaticRoutesConfig
	}).(StaticRoutesConfigPtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteResponse struct {
	// The list of references to HubBgpConnection objects.
	BgpConnections []SubResourceResponse `pulumi:"bgpConnections"`
	// List of all Static Routes.
	StaticRoutes []StaticRouteResponse `pulumi:"staticRoutes"`
	// Configuration for static routes on this HubVnetConnection.
	StaticRoutesConfig *StaticRoutesConfigResponse `pulumi:"staticRoutesConfig"`
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

// The list of references to HubBgpConnection objects.
func (o VnetRouteResponseOutput) BgpConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VnetRouteResponse) []SubResourceResponse { return v.BgpConnections }).(SubResourceResponseArrayOutput)
}

// List of all Static Routes.
func (o VnetRouteResponseOutput) StaticRoutes() StaticRouteResponseArrayOutput {
	return o.ApplyT(func(v VnetRouteResponse) []StaticRouteResponse { return v.StaticRoutes }).(StaticRouteResponseArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRouteResponseOutput) StaticRoutesConfig() StaticRoutesConfigResponsePtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *StaticRoutesConfigResponse { return v.StaticRoutesConfig }).(StaticRoutesConfigResponsePtrOutput)
}

type VnetRouteResponsePtrOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponsePtrOutput) ToVnetRouteResponsePtrOutput() VnetRouteResponsePtrOutput {
	return o
}

func (o VnetRouteResponsePtrOutput) ToVnetRouteResponsePtrOutputWithContext(ctx context.Context) VnetRouteResponsePtrOutput {
	return o
}

func (o VnetRouteResponsePtrOutput) Elem() VnetRouteResponseOutput {
	return o.ApplyT(func(v *VnetRouteResponse) VnetRouteResponse {
		if v != nil {
			return *v
		}
		var ret VnetRouteResponse
		return ret
	}).(VnetRouteResponseOutput)
}

// The list of references to HubBgpConnection objects.
func (o VnetRouteResponsePtrOutput) BgpConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VnetRouteResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BgpConnections
	}).(SubResourceResponseArrayOutput)
}

// List of all Static Routes.
func (o VnetRouteResponsePtrOutput) StaticRoutes() StaticRouteResponseArrayOutput {
	return o.ApplyT(func(v *VnetRouteResponse) []StaticRouteResponse {
		if v == nil {
			return nil
		}
		return v.StaticRoutes
	}).(StaticRouteResponseArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRouteResponsePtrOutput) StaticRoutesConfig() StaticRoutesConfigResponsePtrOutput {
	return o.ApplyT(func(v *VnetRouteResponse) *StaticRoutesConfigResponse {
		if v == nil {
			return nil
		}
		return v.StaticRoutesConfig
	}).(StaticRoutesConfigResponsePtrOutput)
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of references to virtualNetworkGatewayPolicyGroups
	VirtualNetworkGatewayPolicyGroups []SubResource `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpace `pulumi:"vpnClientAddressPool"`
}

// VngClientConnectionConfigurationInput is an input type that accepts VngClientConnectionConfigurationArgs and VngClientConnectionConfigurationOutput values.
// You can construct a concrete instance of `VngClientConnectionConfigurationInput` via:
//
//	VngClientConnectionConfigurationArgs{...}
type VngClientConnectionConfigurationInput interface {
	pulumi.Input

	ToVngClientConnectionConfigurationOutput() VngClientConnectionConfigurationOutput
	ToVngClientConnectionConfigurationOutputWithContext(context.Context) VngClientConnectionConfigurationOutput
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of references to virtualNetworkGatewayPolicyGroups
	VirtualNetworkGatewayPolicyGroups SubResourceArrayInput `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceInput `pulumi:"vpnClientAddressPool"`
}

func (VngClientConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VngClientConnectionConfiguration)(nil)).Elem()
}

func (i VngClientConnectionConfigurationArgs) ToVngClientConnectionConfigurationOutput() VngClientConnectionConfigurationOutput {
	return i.ToVngClientConnectionConfigurationOutputWithContext(context.Background())
}

func (i VngClientConnectionConfigurationArgs) ToVngClientConnectionConfigurationOutputWithContext(ctx context.Context) VngClientConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VngClientConnectionConfigurationOutput)
}

// VngClientConnectionConfigurationArrayInput is an input type that accepts VngClientConnectionConfigurationArray and VngClientConnectionConfigurationArrayOutput values.
// You can construct a concrete instance of `VngClientConnectionConfigurationArrayInput` via:
//
//	VngClientConnectionConfigurationArray{ VngClientConnectionConfigurationArgs{...} }
type VngClientConnectionConfigurationArrayInput interface {
	pulumi.Input

	ToVngClientConnectionConfigurationArrayOutput() VngClientConnectionConfigurationArrayOutput
	ToVngClientConnectionConfigurationArrayOutputWithContext(context.Context) VngClientConnectionConfigurationArrayOutput
}

type VngClientConnectionConfigurationArray []VngClientConnectionConfigurationInput

func (VngClientConnectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VngClientConnectionConfiguration)(nil)).Elem()
}

func (i VngClientConnectionConfigurationArray) ToVngClientConnectionConfigurationArrayOutput() VngClientConnectionConfigurationArrayOutput {
	return i.ToVngClientConnectionConfigurationArrayOutputWithContext(context.Background())
}

func (i VngClientConnectionConfigurationArray) ToVngClientConnectionConfigurationArrayOutputWithContext(ctx context.Context) VngClientConnectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VngClientConnectionConfigurationArrayOutput)
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VngClientConnectionConfiguration)(nil)).Elem()
}

func (o VngClientConnectionConfigurationOutput) ToVngClientConnectionConfigurationOutput() VngClientConnectionConfigurationOutput {
	return o
}

func (o VngClientConnectionConfigurationOutput) ToVngClientConnectionConfigurationOutputWithContext(ctx context.Context) VngClientConnectionConfigurationOutput {
	return o
}

// Resource ID.
func (o VngClientConnectionConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VngClientConnectionConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of references to virtualNetworkGatewayPolicyGroups
func (o VngClientConnectionConfigurationOutput) VirtualNetworkGatewayPolicyGroups() SubResourceArrayOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) []SubResource { return v.VirtualNetworkGatewayPolicyGroups }).(SubResourceArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VngClientConnectionConfigurationOutput) VpnClientAddressPool() AddressSpaceOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) AddressSpace { return v.VpnClientAddressPool }).(AddressSpaceOutput)
}

type VngClientConnectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VngClientConnectionConfiguration)(nil)).Elem()
}

func (o VngClientConnectionConfigurationArrayOutput) ToVngClientConnectionConfigurationArrayOutput() VngClientConnectionConfigurationArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationArrayOutput) ToVngClientConnectionConfigurationArrayOutputWithContext(ctx context.Context) VngClientConnectionConfigurationArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationArrayOutput) Index(i pulumi.IntInput) VngClientConnectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VngClientConnectionConfiguration {
		return vs[0].([]VngClientConnectionConfiguration)[vs[1].(int)]
	}).(VngClientConnectionConfigurationOutput)
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VngClientConnectionConfiguration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of references to virtualNetworkGatewayPolicyGroups
	VirtualNetworkGatewayPolicyGroups []SubResourceResponse `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VngClientConnectionConfigurationResponse)(nil)).Elem()
}

func (o VngClientConnectionConfigurationResponseOutput) ToVngClientConnectionConfigurationResponseOutput() VngClientConnectionConfigurationResponseOutput {
	return o
}

func (o VngClientConnectionConfigurationResponseOutput) ToVngClientConnectionConfigurationResponseOutputWithContext(ctx context.Context) VngClientConnectionConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VngClientConnectionConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VngClientConnectionConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VngClientConnectionConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VngClientConnectionConfiguration resource.
func (o VngClientConnectionConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of references to virtualNetworkGatewayPolicyGroups
func (o VngClientConnectionConfigurationResponseOutput) VirtualNetworkGatewayPolicyGroups() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) []SubResourceResponse {
		return v.VirtualNetworkGatewayPolicyGroups
	}).(SubResourceResponseArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VngClientConnectionConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponseOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponseOutput)
}

type VngClientConnectionConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VngClientConnectionConfigurationResponse)(nil)).Elem()
}

func (o VngClientConnectionConfigurationResponseArrayOutput) ToVngClientConnectionConfigurationResponseArrayOutput() VngClientConnectionConfigurationResponseArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationResponseArrayOutput) ToVngClientConnectionConfigurationResponseArrayOutputWithContext(ctx context.Context) VngClientConnectionConfigurationResponseArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VngClientConnectionConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VngClientConnectionConfigurationResponse {
		return vs[0].([]VngClientConnectionConfigurationResponse)[vs[1].(int)]
	}).(VngClientConnectionConfigurationResponseOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfiguration struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience *string `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer *string `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant *string `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers []RadiusServer `pulumi:"radiusServers"`
	// per ip address pool connection policy for virtual network gateway P2S client.
	VngClientConnectionConfigurations []VngClientConnectionConfiguration `pulumi:"vngClientConnectionConfigurations"`
	// VPN authentication types for the virtual network gateway..
	VpnAuthenticationTypes []string `pulumi:"vpnAuthenticationTypes"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificate `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificate `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationInput is an input type that accepts VpnClientConfigurationArgs and VpnClientConfigurationOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInput` via:
//
//	VpnClientConfigurationArgs{...}
type VpnClientConfigurationInput interface {
	pulumi.Input

	ToVpnClientConfigurationOutput() VpnClientConfigurationOutput
	ToVpnClientConfigurationOutputWithContext(context.Context) VpnClientConfigurationOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationArgs struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers RadiusServerArrayInput `pulumi:"radiusServers"`
	// per ip address pool connection policy for virtual network gateway P2S client.
	VngClientConnectionConfigurations VngClientConnectionConfigurationArrayInput `pulumi:"vngClientConnectionConfigurations"`
	// VPN authentication types for the virtual network gateway..
	VpnAuthenticationTypes pulumi.StringArrayInput `pulumi:"vpnAuthenticationTypes"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return i.ToVpnClientConfigurationOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput)
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput).ToVpnClientConfigurationPtrOutputWithContext(ctx)
}

// VpnClientConfigurationPtrInput is an input type that accepts VpnClientConfigurationArgs, VpnClientConfigurationPtr and VpnClientConfigurationPtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationPtrInput` via:
//
//	        VpnClientConfigurationArgs{...}
//
//	or:
//
//	        nil
type VpnClientConfigurationPtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput
	ToVpnClientConfigurationPtrOutputWithContext(context.Context) VpnClientConfigurationPtrOutput
}

type vpnClientConfigurationPtrType VpnClientConfigurationArgs

func VpnClientConfigurationPtr(v *VpnClientConfigurationArgs) VpnClientConfigurationPtrInput {
	return (*vpnClientConfigurationPtrType)(v)
}

func (*vpnClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationPtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnClientConfiguration) *VpnClientConfiguration {
		return &v
	}).(VpnClientConfigurationPtrOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []RadiusServer { return v.RadiusServers }).(RadiusServerArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VngClientConnectionConfiguration {
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []string { return v.VpnAuthenticationTypes }).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []IpsecPolicy { return v.VpnClientIpsecPolicies }).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRevokedCertificate { return v.VpnClientRevokedCertificates }).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRootCertificate { return v.VpnClientRootCertificates }).(VpnClientRootCertificateArrayOutput)
}

type VpnClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) Elem() VpnClientConfigurationOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) VpnClientConfiguration {
		if v != nil {
			return *v
		}
		var ret VpnClientConfiguration
		return ret
	}).(VpnClientConfigurationOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationPtrOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []RadiusServer {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(RadiusServerArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationPtrOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VngClientConnectionConfiguration {
		if v == nil {
			return nil
		}
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationPtrOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnAuthenticationTypes
	}).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationPtrOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationPtrOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateArrayOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponse struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience *string `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer *string `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant *string `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers []RadiusServerResponse `pulumi:"radiusServers"`
	// per ip address pool connection policy for virtual network gateway P2S client.
	VngClientConnectionConfigurations []VngClientConnectionConfigurationResponse `pulumi:"vngClientConnectionConfigurations"`
	// VPN authentication types for the virtual network gateway..
	VpnAuthenticationTypes []string `pulumi:"vpnAuthenticationTypes"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicyResponse `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificateResponse `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificateResponse `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return o
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationResponseOutput) RadiusServers() RadiusServerResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []RadiusServerResponse { return v.RadiusServers }).(RadiusServerResponseArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationResponseOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VngClientConnectionConfigurationResponse {
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationResponseArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationResponseOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []string { return v.VpnAuthenticationTypes }).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponseOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []IpsecPolicyResponse { return v.VpnClientIpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

type VpnClientConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) Elem() VpnClientConfigurationResponseOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) VpnClientConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VpnClientConfigurationResponse
		return ret
	}).(VpnClientConfigurationResponseOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServers() RadiusServerResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []RadiusServerResponse {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(RadiusServerResponseArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationResponsePtrOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VngClientConnectionConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationResponseArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationResponsePtrOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnAuthenticationTypes
	}).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client connection health detail.
type VpnClientConnectionHealthDetailResponse struct {
	// The egress bytes per second.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// The egress packets per second.
	EgressPacketsTransferred float64 `pulumi:"egressPacketsTransferred"`
	// The ingress bytes per second.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// The ingress packets per second.
	IngressPacketsTransferred float64 `pulumi:"ingressPacketsTransferred"`
	// The max band width.
	MaxBandwidth float64 `pulumi:"maxBandwidth"`
	// The max packets transferred per second.
	MaxPacketsPerSecond float64 `pulumi:"maxPacketsPerSecond"`
	// The assigned private Ip of a connected vpn client.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The public Ip of a connected vpn client.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The duration time of a connected vpn client.
	VpnConnectionDuration float64 `pulumi:"vpnConnectionDuration"`
	// The vpn client Id.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// The start time of a connected vpn client.
	VpnConnectionTime string `pulumi:"vpnConnectionTime"`
	// The user name of a connected vpn client.
	VpnUserName string `pulumi:"vpnUserName"`
}

// VPN client connection health detail.
type VpnClientConnectionHealthDetailResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthDetailResponseOutput) ToVpnClientConnectionHealthDetailResponseOutput() VpnClientConnectionHealthDetailResponseOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseOutput) ToVpnClientConnectionHealthDetailResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseOutput {
	return o
}

// The egress bytes per second.
func (o VpnClientConnectionHealthDetailResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// The egress packets per second.
func (o VpnClientConnectionHealthDetailResponseOutput) EgressPacketsTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.EgressPacketsTransferred }).(pulumi.Float64Output)
}

// The ingress bytes per second.
func (o VpnClientConnectionHealthDetailResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// The ingress packets per second.
func (o VpnClientConnectionHealthDetailResponseOutput) IngressPacketsTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.IngressPacketsTransferred }).(pulumi.Float64Output)
}

// The max band width.
func (o VpnClientConnectionHealthDetailResponseOutput) MaxBandwidth() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.MaxBandwidth }).(pulumi.Float64Output)
}

// The max packets transferred per second.
func (o VpnClientConnectionHealthDetailResponseOutput) MaxPacketsPerSecond() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.MaxPacketsPerSecond }).(pulumi.Float64Output)
}

// The assigned private Ip of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The public Ip of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The duration time of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionDuration() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.VpnConnectionDuration }).(pulumi.Float64Output)
}

// The vpn client Id.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// The start time of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnConnectionTime }).(pulumi.StringOutput)
}

// The user name of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnUserName() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnUserName }).(pulumi.StringOutput)
}

type VpnClientConnectionHealthDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) ToVpnClientConnectionHealthDetailResponseArrayOutput() VpnClientConnectionHealthDetailResponseArrayOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) ToVpnClientConnectionHealthDetailResponseArrayOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseArrayOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) Index(i pulumi.IntInput) VpnClientConnectionHealthDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientConnectionHealthDetailResponse {
		return vs[0].([]VpnClientConnectionHealthDetailResponse)[vs[1].(int)]
	}).(VpnClientConnectionHealthDetailResponseOutput)
}

// VpnClientConnectionHealth properties.
type VpnClientConnectionHealthResponse struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses []string `pulumi:"allocatedIpAddresses"`
	// Total of the Egress Bytes Transferred in this connection.
	TotalEgressBytesTransferred float64 `pulumi:"totalEgressBytesTransferred"`
	// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
	TotalIngressBytesTransferred float64 `pulumi:"totalIngressBytesTransferred"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount *int `pulumi:"vpnClientConnectionsCount"`
}

// VpnClientConnectionHealth properties.
type VpnClientConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput {
	return o
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponseOutput {
	return o
}

// List of allocated ip addresses to the connected p2s vpn clients.
func (o VpnClientConnectionHealthResponseOutput) AllocatedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) []string { return v.AllocatedIpAddresses }).(pulumi.StringArrayOutput)
}

// Total of the Egress Bytes Transferred in this connection.
func (o VpnClientConnectionHealthResponseOutput) TotalEgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) float64 { return v.TotalEgressBytesTransferred }).(pulumi.Float64Output)
}

// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
func (o VpnClientConnectionHealthResponseOutput) TotalIngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) float64 { return v.TotalIngressBytesTransferred }).(pulumi.Float64Output)
}

// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
func (o VpnClientConnectionHealthResponseOutput) VpnClientConnectionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) *int { return v.VpnClientConnectionsCount }).(pulumi.IntPtrOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificate struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateInput is an input type that accepts VpnClientRevokedCertificateArgs and VpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInput` via:
//
//	VpnClientRevokedCertificateArgs{...}
type VpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput
	ToVpnClientRevokedCertificateOutputWithContext(context.Context) VpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return i.ToVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateOutput)
}

// VpnClientRevokedCertificateArrayInput is an input type that accepts VpnClientRevokedCertificateArray and VpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateArrayInput` via:
//
//	VpnClientRevokedCertificateArray{ VpnClientRevokedCertificateArgs{...} }
type VpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput
	ToVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnClientRevokedCertificateArrayOutput
}

type VpnClientRevokedCertificateArray []VpnClientRevokedCertificateInput

func (VpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return i.ToVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return o
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return o
}

// Resource ID.
func (o VpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificate {
		return vs[0].([]VpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnClientRevokedCertificateOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource.
func (o VpnClientRevokedCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificateResponse {
		return vs[0].([]VpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificate struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateInput is an input type that accepts VpnClientRootCertificateArgs and VpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInput` via:
//
//	VpnClientRootCertificateArgs{...}
type VpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput
	ToVpnClientRootCertificateOutputWithContext(context.Context) VpnClientRootCertificateOutput
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return i.ToVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateOutput)
}

// VpnClientRootCertificateArrayInput is an input type that accepts VpnClientRootCertificateArray and VpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateArrayInput` via:
//
//	VpnClientRootCertificateArray{ VpnClientRootCertificateArgs{...} }
type VpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput
	ToVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnClientRootCertificateArrayOutput
}

type VpnClientRootCertificateArray []VpnClientRootCertificateInput

func (VpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return i.ToVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return o
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return o
}

// Resource ID.
func (o VpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificate {
		return vs[0].([]VpnClientRootCertificate)[vs[1].(int)]
	}).(VpnClientRootCertificateOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource.
func (o VpnClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificateResponse {
		return vs[0].([]VpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnClientRootCertificateResponseOutput)
}

// VpnConnection Resource.
type VpnConnectionType struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResource `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfiguration `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// The Traffic Selector Policies to be considered by this connection.
	TrafficSelectorPolicies []TrafficSelectorPolicy `pulumi:"trafficSelectorPolicies"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections []VpnSiteLinkConnection `pulumi:"vpnLinkConnections"`
}

// VpnConnectionTypeInput is an input type that accepts VpnConnectionTypeArgs and VpnConnectionTypeOutput values.
// You can construct a concrete instance of `VpnConnectionTypeInput` via:
//
//	VpnConnectionTypeArgs{...}
type VpnConnectionTypeInput interface {
	pulumi.Input

	ToVpnConnectionTypeOutput() VpnConnectionTypeOutput
	ToVpnConnectionTypeOutputWithContext(context.Context) VpnConnectionTypeOutput
}

// VpnConnection Resource.
type VpnConnectionTypeArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds pulumi.IntPtrInput `pulumi:"dpdTimeoutSeconds"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourcePtrInput `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationPtrInput `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The Traffic Selector Policies to be considered by this connection.
	TrafficSelectorPolicies TrafficSelectorPolicyArrayInput `pulumi:"trafficSelectorPolicies"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections VpnSiteLinkConnectionArrayInput `pulumi:"vpnLinkConnections"`
}

func (VpnConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return i.ToVpnConnectionTypeOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeOutput)
}

// VpnConnectionTypeArrayInput is an input type that accepts VpnConnectionTypeArray and VpnConnectionTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionTypeArrayInput` via:
//
//	VpnConnectionTypeArray{ VpnConnectionTypeArgs{...} }
type VpnConnectionTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput
	ToVpnConnectionTypeArrayOutputWithContext(context.Context) VpnConnectionTypeArrayOutput
}

type VpnConnectionTypeArray []VpnConnectionTypeInput

func (VpnConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return i.ToVpnConnectionTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return o
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnConnectionTypeOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// DPD timeout in seconds for vpn connection.
func (o VpnConnectionTypeOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security.
func (o VpnConnectionTypeOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionTypeOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VpnConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionTypeOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionTypeOutput) RemoteVpnSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *SubResource { return v.RemoteVpnSite }).(SubResourcePtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o VpnConnectionTypeOutput) RoutingConfiguration() RoutingConfigurationPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *RoutingConfiguration { return v.RoutingConfiguration }).(RoutingConfigurationPtrOutput)
}

// Routing weight for vpn connection.
func (o VpnConnectionTypeOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The Traffic Selector Policies to be considered by this connection.
func (o VpnConnectionTypeOutput) TrafficSelectorPolicies() TrafficSelectorPolicyArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []TrafficSelectorPolicy { return v.TrafficSelectorPolicies }).(TrafficSelectorPolicyArrayOutput)
}

// Use local azure ip to initiate connection.
func (o VpnConnectionTypeOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnConnectionTypeOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnConnectionTypeOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// List of all vpn site link connections to the gateway.
func (o VpnConnectionTypeOutput) VpnLinkConnections() VpnSiteLinkConnectionArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []VpnSiteLinkConnection { return v.VpnLinkConnections }).(VpnSiteLinkConnectionArrayOutput)
}

type VpnConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionType {
		return vs[0].([]VpnConnectionType)[vs[1].(int)]
	}).(VpnConnectionTypeOutput)
}

// VpnConnection Resource.
type VpnConnectionResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// Egress bytes transferred.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResourceResponse `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// The Traffic Selector Policies to be considered by this connection.
	TrafficSelectorPolicies []TrafficSelectorPolicyResponse `pulumi:"trafficSelectorPolicies"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections []VpnSiteLinkConnectionResponse `pulumi:"vpnLinkConnections"`
}

// VpnConnection Resource.
type VpnConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return o
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnConnectionResponseOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnConnectionResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// DPD timeout in seconds for vpn connection.
func (o VpnConnectionResponseOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// Egress bytes transferred.
func (o VpnConnectionResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnConnectionResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// EnableBgp flag.
func (o VpnConnectionResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security.
func (o VpnConnectionResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionResponseOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Ingress bytes transferred.
func (o VpnConnectionResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnConnectionResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN connection resource.
func (o VpnConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionResponseOutput) RemoteVpnSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *SubResourceResponse { return v.RemoteVpnSite }).(SubResourceResponsePtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o VpnConnectionResponseOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *RoutingConfigurationResponse { return v.RoutingConfiguration }).(RoutingConfigurationResponsePtrOutput)
}

// Routing weight for vpn connection.
func (o VpnConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The Traffic Selector Policies to be considered by this connection.
func (o VpnConnectionResponseOutput) TrafficSelectorPolicies() TrafficSelectorPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []TrafficSelectorPolicyResponse { return v.TrafficSelectorPolicies }).(TrafficSelectorPolicyResponseArrayOutput)
}

// Use local azure ip to initiate connection.
func (o VpnConnectionResponseOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnConnectionResponseOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnConnectionResponseOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// List of all vpn site link connections to the gateway.
func (o VpnConnectionResponseOutput) VpnLinkConnections() VpnSiteLinkConnectionResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []VpnSiteLinkConnectionResponse { return v.VpnLinkConnections }).(VpnSiteLinkConnectionResponseArrayOutput)
}

type VpnConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionResponse {
		return vs[0].([]VpnConnectionResponse)[vs[1].(int)]
	}).(VpnConnectionResponseOutput)
}

// IP Configuration of a VPN Gateway Resource.
type VpnGatewayIpConfigurationResponse struct {
	// The identifier of the IP configuration for a VPN Gateway.
	Id *string `pulumi:"id"`
	// The private IP address of this IP configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The public IP address of this IP configuration.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
}

// IP Configuration of a VPN Gateway Resource.
type VpnGatewayIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (o VpnGatewayIpConfigurationResponseOutput) ToVpnGatewayIpConfigurationResponseOutput() VpnGatewayIpConfigurationResponseOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseOutput) ToVpnGatewayIpConfigurationResponseOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseOutput {
	return o
}

// The identifier of the IP configuration for a VPN Gateway.
func (o VpnGatewayIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address of this IP configuration.
func (o VpnGatewayIpConfigurationResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The public IP address of this IP configuration.
func (o VpnGatewayIpConfigurationResponseOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

type VpnGatewayIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) ToVpnGatewayIpConfigurationResponseArrayOutput() VpnGatewayIpConfigurationResponseArrayOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) ToVpnGatewayIpConfigurationResponseArrayOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseArrayOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VpnGatewayIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayIpConfigurationResponse {
		return vs[0].([]VpnGatewayIpConfigurationResponse)[vs[1].(int)]
	}).(VpnGatewayIpConfigurationResponseOutput)
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRule struct {
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMapping `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMapping `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type *string `pulumi:"type"`
}

// VpnGatewayNatRuleInput is an input type that accepts VpnGatewayNatRuleArgs and VpnGatewayNatRuleOutput values.
// You can construct a concrete instance of `VpnGatewayNatRuleInput` via:
//
//	VpnGatewayNatRuleArgs{...}
type VpnGatewayNatRuleInput interface {
	pulumi.Input

	ToVpnGatewayNatRuleOutput() VpnGatewayNatRuleOutput
	ToVpnGatewayNatRuleOutputWithContext(context.Context) VpnGatewayNatRuleOutput
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleArgs struct {
	// The private IP address external mapping for NAT.
	ExternalMappings VpnNatRuleMappingArrayInput `pulumi:"externalMappings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings VpnNatRuleMappingArrayInput `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId pulumi.StringPtrInput `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpnGatewayNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayNatRule)(nil)).Elem()
}

func (i VpnGatewayNatRuleArgs) ToVpnGatewayNatRuleOutput() VpnGatewayNatRuleOutput {
	return i.ToVpnGatewayNatRuleOutputWithContext(context.Background())
}

func (i VpnGatewayNatRuleArgs) ToVpnGatewayNatRuleOutputWithContext(ctx context.Context) VpnGatewayNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayNatRuleOutput)
}

// VpnGatewayNatRuleArrayInput is an input type that accepts VpnGatewayNatRuleArray and VpnGatewayNatRuleArrayOutput values.
// You can construct a concrete instance of `VpnGatewayNatRuleArrayInput` via:
//
//	VpnGatewayNatRuleArray{ VpnGatewayNatRuleArgs{...} }
type VpnGatewayNatRuleArrayInput interface {
	pulumi.Input

	ToVpnGatewayNatRuleArrayOutput() VpnGatewayNatRuleArrayOutput
	ToVpnGatewayNatRuleArrayOutputWithContext(context.Context) VpnGatewayNatRuleArrayOutput
}

type VpnGatewayNatRuleArray []VpnGatewayNatRuleInput

func (VpnGatewayNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayNatRule)(nil)).Elem()
}

func (i VpnGatewayNatRuleArray) ToVpnGatewayNatRuleArrayOutput() VpnGatewayNatRuleArrayOutput {
	return i.ToVpnGatewayNatRuleArrayOutputWithContext(context.Background())
}

func (i VpnGatewayNatRuleArray) ToVpnGatewayNatRuleArrayOutputWithContext(ctx context.Context) VpnGatewayNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayNatRuleArrayOutput)
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayNatRule)(nil)).Elem()
}

func (o VpnGatewayNatRuleOutput) ToVpnGatewayNatRuleOutput() VpnGatewayNatRuleOutput {
	return o
}

func (o VpnGatewayNatRuleOutput) ToVpnGatewayNatRuleOutputWithContext(ctx context.Context) VpnGatewayNatRuleOutput {
	return o
}

// The private IP address external mapping for NAT.
func (o VpnGatewayNatRuleOutput) ExternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) []VpnNatRuleMapping { return v.ExternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// Resource ID.
func (o VpnGatewayNatRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address internal mapping for NAT.
func (o VpnGatewayNatRuleOutput) InternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) []VpnNatRuleMapping { return v.InternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VpnGatewayNatRuleOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VpnGatewayNatRuleOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnGatewayNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of NAT rule for VPN NAT.
func (o VpnGatewayNatRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpnGatewayNatRuleArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayNatRule)(nil)).Elem()
}

func (o VpnGatewayNatRuleArrayOutput) ToVpnGatewayNatRuleArrayOutput() VpnGatewayNatRuleArrayOutput {
	return o
}

func (o VpnGatewayNatRuleArrayOutput) ToVpnGatewayNatRuleArrayOutputWithContext(ctx context.Context) VpnGatewayNatRuleArrayOutput {
	return o
}

func (o VpnGatewayNatRuleArrayOutput) Index(i pulumi.IntInput) VpnGatewayNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayNatRule {
		return vs[0].([]VpnGatewayNatRule)[vs[1].(int)]
	}).(VpnGatewayNatRuleOutput)
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleResponse struct {
	// List of egress VpnSiteLinkConnections.
	EgressVpnSiteLinkConnections []SubResourceResponse `pulumi:"egressVpnSiteLinkConnections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMappingResponse `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// List of ingress VpnSiteLinkConnections.
	IngressVpnSiteLinkConnections []SubResourceResponse `pulumi:"ingressVpnSiteLinkConnections"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMappingResponse `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the NAT Rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayNatRuleResponse)(nil)).Elem()
}

func (o VpnGatewayNatRuleResponseOutput) ToVpnGatewayNatRuleResponseOutput() VpnGatewayNatRuleResponseOutput {
	return o
}

func (o VpnGatewayNatRuleResponseOutput) ToVpnGatewayNatRuleResponseOutputWithContext(ctx context.Context) VpnGatewayNatRuleResponseOutput {
	return o
}

// List of egress VpnSiteLinkConnections.
func (o VpnGatewayNatRuleResponseOutput) EgressVpnSiteLinkConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []SubResourceResponse { return v.EgressVpnSiteLinkConnections }).(SubResourceResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnGatewayNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The private IP address external mapping for NAT.
func (o VpnGatewayNatRuleResponseOutput) ExternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.ExternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// Resource ID.
func (o VpnGatewayNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// List of ingress VpnSiteLinkConnections.
func (o VpnGatewayNatRuleResponseOutput) IngressVpnSiteLinkConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []SubResourceResponse { return v.IngressVpnSiteLinkConnections }).(SubResourceResponseArrayOutput)
}

// The private IP address internal mapping for NAT.
func (o VpnGatewayNatRuleResponseOutput) InternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.InternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VpnGatewayNatRuleResponseOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VpnGatewayNatRuleResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnGatewayNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the NAT Rule resource.
func (o VpnGatewayNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VpnGatewayNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VpnGatewayNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayNatRuleResponse)(nil)).Elem()
}

func (o VpnGatewayNatRuleResponseArrayOutput) ToVpnGatewayNatRuleResponseArrayOutput() VpnGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VpnGatewayNatRuleResponseArrayOutput) ToVpnGatewayNatRuleResponseArrayOutputWithContext(ctx context.Context) VpnGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VpnGatewayNatRuleResponseArrayOutput) Index(i pulumi.IntInput) VpnGatewayNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayNatRuleResponse {
		return vs[0].([]VpnGatewayNatRuleResponse)[vs[1].(int)]
	}).(VpnGatewayNatRuleResponseOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettings struct {
	// The BGP speaker's ASN.
	Asn *float64 `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
}

// VpnLinkBgpSettingsInput is an input type that accepts VpnLinkBgpSettingsArgs and VpnLinkBgpSettingsOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsInput` via:
//
//	VpnLinkBgpSettingsArgs{...}
type VpnLinkBgpSettingsInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput
	ToVpnLinkBgpSettingsOutputWithContext(context.Context) VpnLinkBgpSettingsOutput
}

// BGP settings details for a link.
type VpnLinkBgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.Float64PtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
}

func (VpnLinkBgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettings)(nil)).Elem()
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput {
	return i.ToVpnLinkBgpSettingsOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsOutputWithContext(ctx context.Context) VpnLinkBgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsOutput)
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return i.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsOutput).ToVpnLinkBgpSettingsPtrOutputWithContext(ctx)
}

// VpnLinkBgpSettingsPtrInput is an input type that accepts VpnLinkBgpSettingsArgs, VpnLinkBgpSettingsPtr and VpnLinkBgpSettingsPtrOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsPtrInput` via:
//
//	        VpnLinkBgpSettingsArgs{...}
//
//	or:
//
//	        nil
type VpnLinkBgpSettingsPtrInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput
	ToVpnLinkBgpSettingsPtrOutputWithContext(context.Context) VpnLinkBgpSettingsPtrOutput
}

type vpnLinkBgpSettingsPtrType VpnLinkBgpSettingsArgs

func VpnLinkBgpSettingsPtr(v *VpnLinkBgpSettingsArgs) VpnLinkBgpSettingsPtrInput {
	return (*vpnLinkBgpSettingsPtrType)(v)
}

func (*vpnLinkBgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettings)(nil)).Elem()
}

func (i *vpnLinkBgpSettingsPtrType) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return i.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *vpnLinkBgpSettingsPtrType) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsPtrOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettingsOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettings)(nil)).Elem()
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput {
	return o
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsOutputWithContext(ctx context.Context) VpnLinkBgpSettingsOutput {
	return o
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return o.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnLinkBgpSettings) *VpnLinkBgpSettings {
		return &v
	}).(VpnLinkBgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettings) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

type VpnLinkBgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettings)(nil)).Elem()
}

func (o VpnLinkBgpSettingsPtrOutput) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return o
}

func (o VpnLinkBgpSettingsPtrOutput) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return o
}

func (o VpnLinkBgpSettingsPtrOutput) Elem() VpnLinkBgpSettingsOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) VpnLinkBgpSettings {
		if v != nil {
			return *v
		}
		var ret VpnLinkBgpSettings
		return ret
	}).(VpnLinkBgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsPtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettingsResponse struct {
	// The BGP speaker's ASN.
	Asn *float64 `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
}

// BGP settings details for a link.
type VpnLinkBgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponseOutput() VpnLinkBgpSettingsResponseOutput {
	return o
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponseOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponseOutput {
	return o
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsResponseOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettingsResponse) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

type VpnLinkBgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (o VpnLinkBgpSettingsResponsePtrOutput) ToVpnLinkBgpSettingsResponsePtrOutput() VpnLinkBgpSettingsResponsePtrOutput {
	return o
}

func (o VpnLinkBgpSettingsResponsePtrOutput) ToVpnLinkBgpSettingsResponsePtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponsePtrOutput {
	return o
}

func (o VpnLinkBgpSettingsResponsePtrOutput) Elem() VpnLinkBgpSettingsResponseOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) VpnLinkBgpSettingsResponse {
		if v != nil {
			return *v
		}
		var ret VpnLinkBgpSettingsResponse
		return ret
	}).(VpnLinkBgpSettingsResponseOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsResponsePtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderProperties struct {
	// Name of the link provider.
	LinkProviderName *string `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// VpnLinkProviderPropertiesInput is an input type that accepts VpnLinkProviderPropertiesArgs and VpnLinkProviderPropertiesOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesInput` via:
//
//	VpnLinkProviderPropertiesArgs{...}
type VpnLinkProviderPropertiesInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput
	ToVpnLinkProviderPropertiesOutputWithContext(context.Context) VpnLinkProviderPropertiesOutput
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesArgs struct {
	// Name of the link provider.
	LinkProviderName pulumi.StringPtrInput `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (VpnLinkProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderProperties)(nil)).Elem()
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput {
	return i.ToVpnLinkProviderPropertiesOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesOutput)
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return i.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesOutput).ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx)
}

// VpnLinkProviderPropertiesPtrInput is an input type that accepts VpnLinkProviderPropertiesArgs, VpnLinkProviderPropertiesPtr and VpnLinkProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesPtrInput` via:
//
//	        VpnLinkProviderPropertiesArgs{...}
//
//	or:
//
//	        nil
type VpnLinkProviderPropertiesPtrInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput
	ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Context) VpnLinkProviderPropertiesPtrOutput
}

type vpnLinkProviderPropertiesPtrType VpnLinkProviderPropertiesArgs

func VpnLinkProviderPropertiesPtr(v *VpnLinkProviderPropertiesArgs) VpnLinkProviderPropertiesPtrInput {
	return (*vpnLinkProviderPropertiesPtrType)(v)
}

func (*vpnLinkProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderProperties)(nil)).Elem()
}

func (i *vpnLinkProviderPropertiesPtrType) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return i.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *vpnLinkProviderPropertiesPtrType) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderProperties)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput {
	return o
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesOutput {
	return o
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return o.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnLinkProviderProperties) *VpnLinkProviderProperties {
		return &v
	}).(VpnLinkProviderPropertiesPtrOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderProperties) *string { return v.LinkProviderName }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderProperties) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type VpnLinkProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderProperties)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesPtrOutput) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesPtrOutput) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesPtrOutput) Elem() VpnLinkProviderPropertiesOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) VpnLinkProviderProperties {
		if v != nil {
			return *v
		}
		var ret VpnLinkProviderProperties
		return ret
	}).(VpnLinkProviderPropertiesOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesPtrOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.LinkProviderName
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesPtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesResponse struct {
	// Name of the link provider.
	LinkProviderName *string `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponseOutput() VpnLinkProviderPropertiesResponseOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponseOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponseOutput {
	return o
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesResponseOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderPropertiesResponse) *string { return v.LinkProviderName }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesResponseOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderPropertiesResponse) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type VpnLinkProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) ToVpnLinkProviderPropertiesResponsePtrOutput() VpnLinkProviderPropertiesResponsePtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponsePtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) Elem() VpnLinkProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) VpnLinkProviderPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VpnLinkProviderPropertiesResponse
		return ret
	}).(VpnLinkProviderPropertiesResponseOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesResponsePtrOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkProviderName
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesResponsePtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// Vpn NatRule mapping.
type VpnNatRuleMapping struct {
	// Address space for Vpn NatRule mapping.
	AddressSpace *string `pulumi:"addressSpace"`
	// Port range for Vpn NatRule mapping.
	PortRange *string `pulumi:"portRange"`
}

// VpnNatRuleMappingInput is an input type that accepts VpnNatRuleMappingArgs and VpnNatRuleMappingOutput values.
// You can construct a concrete instance of `VpnNatRuleMappingInput` via:
//
//	VpnNatRuleMappingArgs{...}
type VpnNatRuleMappingInput interface {
	pulumi.Input

	ToVpnNatRuleMappingOutput() VpnNatRuleMappingOutput
	ToVpnNatRuleMappingOutputWithContext(context.Context) VpnNatRuleMappingOutput
}

// Vpn NatRule mapping.
type VpnNatRuleMappingArgs struct {
	// Address space for Vpn NatRule mapping.
	AddressSpace pulumi.StringPtrInput `pulumi:"addressSpace"`
	// Port range for Vpn NatRule mapping.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
}

func (VpnNatRuleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnNatRuleMapping)(nil)).Elem()
}

func (i VpnNatRuleMappingArgs) ToVpnNatRuleMappingOutput() VpnNatRuleMappingOutput {
	return i.ToVpnNatRuleMappingOutputWithContext(context.Background())
}

func (i VpnNatRuleMappingArgs) ToVpnNatRuleMappingOutputWithContext(ctx context.Context) VpnNatRuleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnNatRuleMappingOutput)
}

// VpnNatRuleMappingArrayInput is an input type that accepts VpnNatRuleMappingArray and VpnNatRuleMappingArrayOutput values.
// You can construct a concrete instance of `VpnNatRuleMappingArrayInput` via:
//
//	VpnNatRuleMappingArray{ VpnNatRuleMappingArgs{...} }
type VpnNatRuleMappingArrayInput interface {
	pulumi.Input

	ToVpnNatRuleMappingArrayOutput() VpnNatRuleMappingArrayOutput
	ToVpnNatRuleMappingArrayOutputWithContext(context.Context) VpnNatRuleMappingArrayOutput
}

type VpnNatRuleMappingArray []VpnNatRuleMappingInput

func (VpnNatRuleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnNatRuleMapping)(nil)).Elem()
}

func (i VpnNatRuleMappingArray) ToVpnNatRuleMappingArrayOutput() VpnNatRuleMappingArrayOutput {
	return i.ToVpnNatRuleMappingArrayOutputWithContext(context.Background())
}

func (i VpnNatRuleMappingArray) ToVpnNatRuleMappingArrayOutputWithContext(ctx context.Context) VpnNatRuleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnNatRuleMappingArrayOutput)
}

// Vpn NatRule mapping.
type VpnNatRuleMappingOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnNatRuleMapping)(nil)).Elem()
}

func (o VpnNatRuleMappingOutput) ToVpnNatRuleMappingOutput() VpnNatRuleMappingOutput {
	return o
}

func (o VpnNatRuleMappingOutput) ToVpnNatRuleMappingOutputWithContext(ctx context.Context) VpnNatRuleMappingOutput {
	return o
}

// Address space for Vpn NatRule mapping.
func (o VpnNatRuleMappingOutput) AddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMapping) *string { return v.AddressSpace }).(pulumi.StringPtrOutput)
}

// Port range for Vpn NatRule mapping.
func (o VpnNatRuleMappingOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMapping) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VpnNatRuleMappingArrayOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnNatRuleMapping)(nil)).Elem()
}

func (o VpnNatRuleMappingArrayOutput) ToVpnNatRuleMappingArrayOutput() VpnNatRuleMappingArrayOutput {
	return o
}

func (o VpnNatRuleMappingArrayOutput) ToVpnNatRuleMappingArrayOutputWithContext(ctx context.Context) VpnNatRuleMappingArrayOutput {
	return o
}

func (o VpnNatRuleMappingArrayOutput) Index(i pulumi.IntInput) VpnNatRuleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnNatRuleMapping {
		return vs[0].([]VpnNatRuleMapping)[vs[1].(int)]
	}).(VpnNatRuleMappingOutput)
}

// Vpn NatRule mapping.
type VpnNatRuleMappingResponse struct {
	// Address space for Vpn NatRule mapping.
	AddressSpace *string `pulumi:"addressSpace"`
	// Port range for Vpn NatRule mapping.
	PortRange *string `pulumi:"portRange"`
}

// Vpn NatRule mapping.
type VpnNatRuleMappingResponseOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnNatRuleMappingResponse)(nil)).Elem()
}

func (o VpnNatRuleMappingResponseOutput) ToVpnNatRuleMappingResponseOutput() VpnNatRuleMappingResponseOutput {
	return o
}

func (o VpnNatRuleMappingResponseOutput) ToVpnNatRuleMappingResponseOutputWithContext(ctx context.Context) VpnNatRuleMappingResponseOutput {
	return o
}

// Address space for Vpn NatRule mapping.
func (o VpnNatRuleMappingResponseOutput) AddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMappingResponse) *string { return v.AddressSpace }).(pulumi.StringPtrOutput)
}

// Port range for Vpn NatRule mapping.
func (o VpnNatRuleMappingResponseOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMappingResponse) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VpnNatRuleMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnNatRuleMappingResponse)(nil)).Elem()
}

func (o VpnNatRuleMappingResponseArrayOutput) ToVpnNatRuleMappingResponseArrayOutput() VpnNatRuleMappingResponseArrayOutput {
	return o
}

func (o VpnNatRuleMappingResponseArrayOutput) ToVpnNatRuleMappingResponseArrayOutputWithContext(ctx context.Context) VpnNatRuleMappingResponseArrayOutput {
	return o
}

func (o VpnNatRuleMappingResponseArrayOutput) Index(i pulumi.IntInput) VpnNatRuleMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnNatRuleMappingResponse {
		return vs[0].([]VpnNatRuleMappingResponse)[vs[1].(int)]
	}).(VpnNatRuleMappingResponseOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigRadiusClientRootCertificateInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateArgs and VpnServerConfigRadiusClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateInput` via:
//
//	VpnServerConfigRadiusClientRootCertificateArgs{...}
type VpnServerConfigRadiusClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput
	ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateOutput
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigRadiusClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateArgs) ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateArgs) ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateOutput)
}

// VpnServerConfigRadiusClientRootCertificateArrayInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateArray and VpnServerConfigRadiusClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateArrayInput` via:
//
//	VpnServerConfigRadiusClientRootCertificateArray{ VpnServerConfigRadiusClientRootCertificateArgs{...} }
type VpnServerConfigRadiusClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput
	ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput
}

type VpnServerConfigRadiusClientRootCertificateArray []VpnServerConfigRadiusClientRootCertificateInput

func (VpnServerConfigRadiusClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateArray) ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateArray) ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateOutput) ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateOutput) ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o VpnServerConfigRadiusClientRootCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusClientRootCertificate {
		return vs[0].([]VpnServerConfigRadiusClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigRadiusClientRootCertificateOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) ToVpnServerConfigRadiusClientRootCertificateResponseOutput() VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) ToVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusClientRootCertificateResponse {
		return vs[0].([]VpnServerConfigRadiusClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigRadiusServerRootCertificateInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateArgs and VpnServerConfigRadiusServerRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateInput` via:
//
//	VpnServerConfigRadiusServerRootCertificateArgs{...}
type VpnServerConfigRadiusServerRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput
	ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateOutput
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigRadiusServerRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateArgs) ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateArgs) ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateOutput)
}

// VpnServerConfigRadiusServerRootCertificateArrayInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateArray and VpnServerConfigRadiusServerRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateArrayInput` via:
//
//	VpnServerConfigRadiusServerRootCertificateArray{ VpnServerConfigRadiusServerRootCertificateArgs{...} }
type VpnServerConfigRadiusServerRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput
	ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput
}

type VpnServerConfigRadiusServerRootCertificateArray []VpnServerConfigRadiusServerRootCertificateInput

func (VpnServerConfigRadiusServerRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateArray) ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateArray) ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateOutput) ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateOutput) ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusServerRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigRadiusServerRootCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusServerRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusServerRootCertificate {
		return vs[0].([]VpnServerConfigRadiusServerRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigRadiusServerRootCertificateOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) ToVpnServerConfigRadiusServerRootCertificateResponseOutput() VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) ToVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusServerRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusServerRootCertificateResponse {
		return vs[0].([]VpnServerConfigRadiusServerRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigVpnClientRevokedCertificateInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateArgs and VpnServerConfigVpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateInput` via:
//
//	VpnServerConfigVpnClientRevokedCertificateArgs{...}
type VpnServerConfigVpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput
	ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateOutput
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigVpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateArgs) ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateArgs) ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateOutput)
}

// VpnServerConfigVpnClientRevokedCertificateArrayInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateArray and VpnServerConfigVpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateArrayInput` via:
//
//	VpnServerConfigVpnClientRevokedCertificateArray{ VpnServerConfigVpnClientRevokedCertificateArgs{...} }
type VpnServerConfigVpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput
	ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput
}

type VpnServerConfigVpnClientRevokedCertificateArray []VpnServerConfigVpnClientRevokedCertificateInput

func (VpnServerConfigVpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateArray) ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateArray) ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateOutput) ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateOutput) ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnServerConfigVpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRevokedCertificate {
		return vs[0].([]VpnServerConfigVpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRevokedCertificateOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseOutput() VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRevokedCertificateResponse {
		return vs[0].([]VpnServerConfigVpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigVpnClientRootCertificateInput is an input type that accepts VpnServerConfigVpnClientRootCertificateArgs and VpnServerConfigVpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateInput` via:
//
//	VpnServerConfigVpnClientRootCertificateArgs{...}
type VpnServerConfigVpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput
	ToVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateOutput
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigVpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateArgs) ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateArgs) ToVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateOutput)
}

// VpnServerConfigVpnClientRootCertificateArrayInput is an input type that accepts VpnServerConfigVpnClientRootCertificateArray and VpnServerConfigVpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateArrayInput` via:
//
//	VpnServerConfigVpnClientRootCertificateArray{ VpnServerConfigVpnClientRootCertificateArgs{...} }
type VpnServerConfigVpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput
	ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput
}

type VpnServerConfigVpnClientRootCertificateArray []VpnServerConfigVpnClientRootCertificateInput

func (VpnServerConfigVpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateArray) ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateArray) ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateArrayOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateOutput) ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateOutput) ToVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigVpnClientRootCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRootCertificate {
		return vs[0].([]VpnServerConfigVpnClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRootCertificateOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateResponseOutput) ToVpnServerConfigVpnClientRootCertificateResponseOutput() VpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseOutput) ToVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigVpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutput() VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRootCertificateResponse {
		return vs[0].([]VpnServerConfigVpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRootCertificateResponseOutput)
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
	PolicyMembers []VpnServerConfigurationPolicyGroupMember `pulumi:"policyMembers"`
	// Priority for VpnServerConfigurationPolicyGroup.
	Priority *int `pulumi:"priority"`
}

// VpnServerConfigurationPolicyGroupInput is an input type that accepts VpnServerConfigurationPolicyGroupArgs and VpnServerConfigurationPolicyGroupOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupInput` via:
//
//	VpnServerConfigurationPolicyGroupArgs{...}
type VpnServerConfigurationPolicyGroupInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput
	ToVpnServerConfigurationPolicyGroupOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupOutput
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
	PolicyMembers VpnServerConfigurationPolicyGroupMemberArrayInput `pulumi:"policyMembers"`
	// Priority for VpnServerConfigurationPolicyGroup.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (VpnServerConfigurationPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupArgs) ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput {
	return i.ToVpnServerConfigurationPolicyGroupOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupArgs) ToVpnServerConfigurationPolicyGroupOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupOutput)
}

// VpnServerConfigurationPolicyGroupArrayInput is an input type that accepts VpnServerConfigurationPolicyGroupArray and VpnServerConfigurationPolicyGroupArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupArrayInput` via:
//
//	VpnServerConfigurationPolicyGroupArray{ VpnServerConfigurationPolicyGroupArgs{...} }
type VpnServerConfigurationPolicyGroupArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput
	ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupArrayOutput
}

type VpnServerConfigurationPolicyGroupArray []VpnServerConfigurationPolicyGroupInput

func (VpnServerConfigurationPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupArray) ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput {
	return i.ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupArray) ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupArrayOutput)
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupOutput) ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupOutput) ToVpnServerConfigurationPolicyGroupOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupOutput {
	return o
}

// Resource ID.
func (o VpnServerConfigurationPolicyGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
func (o VpnServerConfigurationPolicyGroupOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnServerConfigurationPolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupOutput) PolicyMembers() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) []VpnServerConfigurationPolicyGroupMember {
		return v.PolicyMembers
	}).(VpnServerConfigurationPolicyGroupMemberArrayOutput)
}

// Priority for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type VpnServerConfigurationPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroup {
		return vs[0].([]VpnServerConfigurationPolicyGroup)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMember struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VpnServerConfigurationPolicyGroupMemberInput is an input type that accepts VpnServerConfigurationPolicyGroupMemberArgs and VpnServerConfigurationPolicyGroupMemberOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupMemberInput` via:
//
//	VpnServerConfigurationPolicyGroupMemberArgs{...}
type VpnServerConfigurationPolicyGroupMemberInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput
	ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupMemberOutput
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberArgs struct {
	// The Vpn Policy member attribute type.
	AttributeType pulumi.StringPtrInput `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue pulumi.StringPtrInput `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnServerConfigurationPolicyGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupMemberArgs) ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput {
	return i.ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupMemberArgs) ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupMemberOutput)
}

// VpnServerConfigurationPolicyGroupMemberArrayInput is an input type that accepts VpnServerConfigurationPolicyGroupMemberArray and VpnServerConfigurationPolicyGroupMemberArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupMemberArrayInput` via:
//
//	VpnServerConfigurationPolicyGroupMemberArray{ VpnServerConfigurationPolicyGroupMemberArgs{...} }
type VpnServerConfigurationPolicyGroupMemberArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput
	ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput
}

type VpnServerConfigurationPolicyGroupMemberArray []VpnServerConfigurationPolicyGroupMemberInput

func (VpnServerConfigurationPolicyGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupMemberArray) ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return i.ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupMemberArray) ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupMemberArrayOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberOutput) ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberOutput) ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VpnServerConfigurationPolicyGroupMemberOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnServerConfigurationPolicyGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupMember {
		return vs[0].([]VpnServerConfigurationPolicyGroupMember)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupMemberOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberResponse struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) ToVpnServerConfigurationPolicyGroupMemberResponseOutput() VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) ToVpnServerConfigurationPolicyGroupMemberResponseOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnServerConfigurationPolicyGroupMemberResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ToVpnServerConfigurationPolicyGroupMemberResponseArrayOutput() VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ToVpnServerConfigurationPolicyGroupMemberResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupMemberResponse {
		return vs[0].([]VpnServerConfigurationPolicyGroupMemberResponse)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupMemberResponseOutput)
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of references to P2SConnectionConfigurations.
	P2SConnectionConfigurations []SubResourceResponse `pulumi:"p2SConnectionConfigurations"`
	// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
	PolicyMembers []VpnServerConfigurationPolicyGroupMemberResponse `pulumi:"policyMembers"`
	// Priority for VpnServerConfigurationPolicyGroup.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupResponseOutput) ToVpnServerConfigurationPolicyGroupResponseOutput() VpnServerConfigurationPolicyGroupResponseOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupResponseOutput) ToVpnServerConfigurationPolicyGroupResponseOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
func (o VpnServerConfigurationPolicyGroupResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of references to P2SConnectionConfigurations.
func (o VpnServerConfigurationPolicyGroupResponseOutput) P2SConnectionConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) []SubResourceResponse {
		return v.P2SConnectionConfigurations
	}).(SubResourceResponseArrayOutput)
}

// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupResponseOutput) PolicyMembers() VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) []VpnServerConfigurationPolicyGroupMemberResponse {
		return v.PolicyMembers
	}).(VpnServerConfigurationPolicyGroupMemberResponseArrayOutput)
}

// Priority for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
func (o VpnServerConfigurationPolicyGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VpnServerConfigurationPolicyGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupResponseArrayOutput) ToVpnServerConfigurationPolicyGroupResponseArrayOutput() VpnServerConfigurationPolicyGroupResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupResponseArrayOutput) ToVpnServerConfigurationPolicyGroupResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupResponse {
		return vs[0].([]VpnServerConfigurationPolicyGroupResponse)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupResponseOutput)
}

// Parameters for VpnServerConfiguration.
type VpnServerConfigurationProperties struct {
	// The set of aad vpn authentication parameters.
	AadAuthenticationParameters *AadAuthenticationParameters `pulumi:"aadAuthenticationParameters"`
	// List of all VpnServerConfigurationPolicyGroups.
	ConfigurationPolicyGroups []VpnServerConfigurationPolicyGroup `pulumi:"configurationPolicyGroups"`
	// The name of the VpnServerConfiguration that is unique within a resource group.
	Name *string `pulumi:"name"`
	// Radius client root certificate of VpnServerConfiguration.
	RadiusClientRootCertificates []VpnServerConfigRadiusClientRootCertificate `pulumi:"radiusClientRootCertificates"`
	// The radius server address property of the VpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// Radius Server root certificate of VpnServerConfiguration.
	RadiusServerRootCertificates []VpnServerConfigRadiusServerRootCertificate `pulumi:"radiusServerRootCertificates"`
	// The radius secret property of the VpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// Multiple Radius Server configuration for VpnServerConfiguration.
	RadiusServers []RadiusServer `pulumi:"radiusServers"`
	// VPN authentication types for the VpnServerConfiguration.
	VpnAuthenticationTypes []string `pulumi:"vpnAuthenticationTypes"`
	// VpnClientIpsecPolicies for VpnServerConfiguration.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// VPN client revoked certificate of VpnServerConfiguration.
	VpnClientRevokedCertificates []VpnServerConfigVpnClientRevokedCertificate `pulumi:"vpnClientRevokedCertificates"`
	// VPN client root certificate of VpnServerConfiguration.
	VpnClientRootCertificates []VpnServerConfigVpnClientRootCertificate `pulumi:"vpnClientRootCertificates"`
	// VPN protocols for the VpnServerConfiguration.
	VpnProtocols []string `pulumi:"vpnProtocols"`
}

// VpnServerConfigurationPropertiesInput is an input type that accepts VpnServerConfigurationPropertiesArgs and VpnServerConfigurationPropertiesOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPropertiesInput` via:
//
//	VpnServerConfigurationPropertiesArgs{...}
type VpnServerConfigurationPropertiesInput interface {
	pulumi.Input

	ToVpnServerConfigurationPropertiesOutput() VpnServerConfigurationPropertiesOutput
	ToVpnServerConfigurationPropertiesOutputWithContext(context.Context) VpnServerConfigurationPropertiesOutput
}

// Parameters for VpnServerConfiguration.
type VpnServerConfigurationPropertiesArgs struct {
	// The set of aad vpn authentication parameters.
	AadAuthenticationParameters AadAuthenticationParametersPtrInput `pulumi:"aadAuthenticationParameters"`
	// List of all VpnServerConfigurationPolicyGroups.
	ConfigurationPolicyGroups VpnServerConfigurationPolicyGroupArrayInput `pulumi:"configurationPolicyGroups"`
	// The name of the VpnServerConfiguration that is unique within a resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Radius client root certificate of VpnServerConfiguration.
	RadiusClientRootCertificates VpnServerConfigRadiusClientRootCertificateArrayInput `pulumi:"radiusClientRootCertificates"`
	// The radius server address property of the VpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// Radius Server root certificate of VpnServerConfiguration.
	RadiusServerRootCertificates VpnServerConfigRadiusServerRootCertificateArrayInput `pulumi:"radiusServerRootCertificates"`
	// The radius secret property of the VpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// Multiple Radius Server configuration for VpnServerConfiguration.
	RadiusServers RadiusServerArrayInput `pulumi:"radiusServers"`
	// VPN authentication types for the VpnServerConfiguration.
	VpnAuthenticationTypes pulumi.StringArrayInput `pulumi:"vpnAuthenticationTypes"`
	// VpnClientIpsecPolicies for VpnServerConfiguration.
	VpnClientIpsecPolicies IpsecPolicyArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VPN client revoked certificate of VpnServerConfiguration.
	VpnClientRevokedCertificates VpnServerConfigVpnClientRevokedCertificateArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VPN client root certificate of VpnServerConfiguration.
	VpnClientRootCertificates VpnServerConfigVpnClientRootCertificateArrayInput `pulumi:"vpnClientRootCertificates"`
	// VPN protocols for the VpnServerConfiguration.
	VpnProtocols pulumi.StringArrayInput `pulumi:"vpnProtocols"`
}

func (VpnServerConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationProperties)(nil)).Elem()
}

func (i VpnServerConfigurationPropertiesArgs) ToVpnServerConfigurationPropertiesOutput() VpnServerConfigurationPropertiesOutput {
	return i.ToVpnServerConfigurationPropertiesOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPropertiesArgs) ToVpnServerConfigurationPropertiesOutputWithContext(ctx context.Context) VpnServerConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPropertiesOutput)
}

func (i VpnServerConfigurationPropertiesArgs) ToVpnServerConfigurationPropertiesPtrOutput() VpnServerConfigurationPropertiesPtrOutput {
	return i.ToVpnServerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPropertiesArgs) ToVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VpnServerConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPropertiesOutput).ToVpnServerConfigurationPropertiesPtrOutputWithContext(ctx)
}

// VpnServerConfigurationPropertiesPtrInput is an input type that accepts VpnServerConfigurationPropertiesArgs, VpnServerConfigurationPropertiesPtr and VpnServerConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPropertiesPtrInput` via:
//
//	        VpnServerConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type VpnServerConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToVpnServerConfigurationPropertiesPtrOutput() VpnServerConfigurationPropertiesPtrOutput
	ToVpnServerConfigurationPropertiesPtrOutputWithContext(context.Context) VpnServerConfigurationPropertiesPtrOutput
}

type vpnServerConfigurationPropertiesPtrType VpnServerConfigurationPropertiesArgs

func VpnServerConfigurationPropertiesPtr(v *VpnServerConfigurationPropertiesArgs) VpnServerConfigurationPropertiesPtrInput {
	return (*vpnServerConfigurationPropertiesPtrType)(v)
}

func (*vpnServerConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationProperties)(nil)).Elem()
}

func (i *vpnServerConfigurationPropertiesPtrType) ToVpnServerConfigurationPropertiesPtrOutput() VpnServerConfigurationPropertiesPtrOutput {
	return i.ToVpnServerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *vpnServerConfigurationPropertiesPtrType) ToVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VpnServerConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPropertiesPtrOutput)
}

// Parameters for VpnServerConfiguration.
type VpnServerConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationProperties)(nil)).Elem()
}

func (o VpnServerConfigurationPropertiesOutput) ToVpnServerConfigurationPropertiesOutput() VpnServerConfigurationPropertiesOutput {
	return o
}

func (o VpnServerConfigurationPropertiesOutput) ToVpnServerConfigurationPropertiesOutputWithContext(ctx context.Context) VpnServerConfigurationPropertiesOutput {
	return o
}

func (o VpnServerConfigurationPropertiesOutput) ToVpnServerConfigurationPropertiesPtrOutput() VpnServerConfigurationPropertiesPtrOutput {
	return o.ToVpnServerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o VpnServerConfigurationPropertiesOutput) ToVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VpnServerConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnServerConfigurationProperties) *VpnServerConfigurationProperties {
		return &v
	}).(VpnServerConfigurationPropertiesPtrOutput)
}

// The set of aad vpn authentication parameters.
func (o VpnServerConfigurationPropertiesOutput) AadAuthenticationParameters() AadAuthenticationParametersPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) *AadAuthenticationParameters {
		return v.AadAuthenticationParameters
	}).(AadAuthenticationParametersPtrOutput)
}

// List of all VpnServerConfigurationPolicyGroups.
func (o VpnServerConfigurationPropertiesOutput) ConfigurationPolicyGroups() VpnServerConfigurationPolicyGroupArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []VpnServerConfigurationPolicyGroup {
		return v.ConfigurationPolicyGroups
	}).(VpnServerConfigurationPolicyGroupArrayOutput)
}

// The name of the VpnServerConfiguration that is unique within a resource group.
func (o VpnServerConfigurationPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Radius client root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) RadiusClientRootCertificates() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []VpnServerConfigRadiusClientRootCertificate {
		return v.RadiusClientRootCertificates
	}).(VpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// The radius server address property of the VpnServerConfiguration resource for point to site client connection.
func (o VpnServerConfigurationPropertiesOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// Radius Server root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) RadiusServerRootCertificates() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []VpnServerConfigRadiusServerRootCertificate {
		return v.RadiusServerRootCertificates
	}).(VpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// The radius secret property of the VpnServerConfiguration resource for point to site client connection.
func (o VpnServerConfigurationPropertiesOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// Multiple Radius Server configuration for VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []RadiusServer { return v.RadiusServers }).(RadiusServerArrayOutput)
}

// VPN authentication types for the VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []string { return v.VpnAuthenticationTypes }).(pulumi.StringArrayOutput)
}

// VpnClientIpsecPolicies for VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []IpsecPolicy { return v.VpnClientIpsecPolicies }).(IpsecPolicyArrayOutput)
}

// VPN client revoked certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) VpnClientRevokedCertificates() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []VpnServerConfigVpnClientRevokedCertificate {
		return v.VpnClientRevokedCertificates
	}).(VpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// VPN client root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) VpnClientRootCertificates() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []VpnServerConfigVpnClientRootCertificate {
		return v.VpnClientRootCertificates
	}).(VpnServerConfigVpnClientRootCertificateArrayOutput)
}

// VPN protocols for the VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesOutput) VpnProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationProperties) []string { return v.VpnProtocols }).(pulumi.StringArrayOutput)
}

type VpnServerConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationProperties)(nil)).Elem()
}

func (o VpnServerConfigurationPropertiesPtrOutput) ToVpnServerConfigurationPropertiesPtrOutput() VpnServerConfigurationPropertiesPtrOutput {
	return o
}

func (o VpnServerConfigurationPropertiesPtrOutput) ToVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) VpnServerConfigurationPropertiesPtrOutput {
	return o
}

func (o VpnServerConfigurationPropertiesPtrOutput) Elem() VpnServerConfigurationPropertiesOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) VpnServerConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret VpnServerConfigurationProperties
		return ret
	}).(VpnServerConfigurationPropertiesOutput)
}

// The set of aad vpn authentication parameters.
func (o VpnServerConfigurationPropertiesPtrOutput) AadAuthenticationParameters() AadAuthenticationParametersPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) *AadAuthenticationParameters {
		if v == nil {
			return nil
		}
		return v.AadAuthenticationParameters
	}).(AadAuthenticationParametersPtrOutput)
}

// List of all VpnServerConfigurationPolicyGroups.
func (o VpnServerConfigurationPropertiesPtrOutput) ConfigurationPolicyGroups() VpnServerConfigurationPolicyGroupArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []VpnServerConfigurationPolicyGroup {
		if v == nil {
			return nil
		}
		return v.ConfigurationPolicyGroups
	}).(VpnServerConfigurationPolicyGroupArrayOutput)
}

// The name of the VpnServerConfiguration that is unique within a resource group.
func (o VpnServerConfigurationPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Radius client root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) RadiusClientRootCertificates() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []VpnServerConfigRadiusClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.RadiusClientRootCertificates
	}).(VpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// The radius server address property of the VpnServerConfiguration resource for point to site client connection.
func (o VpnServerConfigurationPropertiesPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// Radius Server root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) RadiusServerRootCertificates() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []VpnServerConfigRadiusServerRootCertificate {
		if v == nil {
			return nil
		}
		return v.RadiusServerRootCertificates
	}).(VpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// The radius secret property of the VpnServerConfiguration resource for point to site client connection.
func (o VpnServerConfigurationPropertiesPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// Multiple Radius Server configuration for VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []RadiusServer {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(RadiusServerArrayOutput)
}

// VPN authentication types for the VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []string {
		if v == nil {
			return nil
		}
		return v.VpnAuthenticationTypes
	}).(pulumi.StringArrayOutput)
}

// VpnClientIpsecPolicies for VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// VPN client revoked certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) VpnClientRevokedCertificates() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []VpnServerConfigVpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// VPN client root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) VpnClientRootCertificates() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []VpnServerConfigVpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnServerConfigVpnClientRootCertificateArrayOutput)
}

// VPN protocols for the VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesPtrOutput) VpnProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationProperties) []string {
		if v == nil {
			return nil
		}
		return v.VpnProtocols
	}).(pulumi.StringArrayOutput)
}

// Parameters for VpnServerConfiguration.
type VpnServerConfigurationPropertiesResponse struct {
	// The set of aad vpn authentication parameters.
	AadAuthenticationParameters *AadAuthenticationParametersResponse `pulumi:"aadAuthenticationParameters"`
	// List of all VpnServerConfigurationPolicyGroups.
	ConfigurationPolicyGroups []VpnServerConfigurationPolicyGroupResponse `pulumi:"configurationPolicyGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The name of the VpnServerConfiguration that is unique within a resource group.
	Name *string `pulumi:"name"`
	// List of references to P2SVpnGateways.
	P2SVpnGateways []P2SVpnGatewayResponse `pulumi:"p2SVpnGateways"`
	// The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// Radius client root certificate of VpnServerConfiguration.
	RadiusClientRootCertificates []VpnServerConfigRadiusClientRootCertificateResponse `pulumi:"radiusClientRootCertificates"`
	// The radius server address property of the VpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// Radius Server root certificate of VpnServerConfiguration.
	RadiusServerRootCertificates []VpnServerConfigRadiusServerRootCertificateResponse `pulumi:"radiusServerRootCertificates"`
	// The radius secret property of the VpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// Multiple Radius Server configuration for VpnServerConfiguration.
	RadiusServers []RadiusServerResponse `pulumi:"radiusServers"`
	// VPN authentication types for the VpnServerConfiguration.
	VpnAuthenticationTypes []string `pulumi:"vpnAuthenticationTypes"`
	// VpnClientIpsecPolicies for VpnServerConfiguration.
	VpnClientIpsecPolicies []IpsecPolicyResponse `pulumi:"vpnClientIpsecPolicies"`
	// VPN client revoked certificate of VpnServerConfiguration.
	VpnClientRevokedCertificates []VpnServerConfigVpnClientRevokedCertificateResponse `pulumi:"vpnClientRevokedCertificates"`
	// VPN client root certificate of VpnServerConfiguration.
	VpnClientRootCertificates []VpnServerConfigVpnClientRootCertificateResponse `pulumi:"vpnClientRootCertificates"`
	// VPN protocols for the VpnServerConfiguration.
	VpnProtocols []string `pulumi:"vpnProtocols"`
}

// Parameters for VpnServerConfiguration.
type VpnServerConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPropertiesResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPropertiesResponseOutput) ToVpnServerConfigurationPropertiesResponseOutput() VpnServerConfigurationPropertiesResponseOutput {
	return o
}

func (o VpnServerConfigurationPropertiesResponseOutput) ToVpnServerConfigurationPropertiesResponseOutputWithContext(ctx context.Context) VpnServerConfigurationPropertiesResponseOutput {
	return o
}

// The set of aad vpn authentication parameters.
func (o VpnServerConfigurationPropertiesResponseOutput) AadAuthenticationParameters() AadAuthenticationParametersResponsePtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) *AadAuthenticationParametersResponse {
		return v.AadAuthenticationParameters
	}).(AadAuthenticationParametersResponsePtrOutput)
}

// List of all VpnServerConfigurationPolicyGroups.
func (o VpnServerConfigurationPropertiesResponseOutput) ConfigurationPolicyGroups() VpnServerConfigurationPolicyGroupResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []VpnServerConfigurationPolicyGroupResponse {
		return v.ConfigurationPolicyGroups
	}).(VpnServerConfigurationPolicyGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnServerConfigurationPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the VpnServerConfiguration that is unique within a resource group.
func (o VpnServerConfigurationPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of references to P2SVpnGateways.
func (o VpnServerConfigurationPropertiesResponseOutput) P2SVpnGateways() P2SVpnGatewayResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []P2SVpnGatewayResponse { return v.P2SVpnGateways }).(P2SVpnGatewayResponseArrayOutput)
}

// The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnServerConfigurationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Radius client root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) RadiusClientRootCertificates() VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []VpnServerConfigRadiusClientRootCertificateResponse {
		return v.RadiusClientRootCertificates
	}).(VpnServerConfigRadiusClientRootCertificateResponseArrayOutput)
}

// The radius server address property of the VpnServerConfiguration resource for point to site client connection.
func (o VpnServerConfigurationPropertiesResponseOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// Radius Server root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) RadiusServerRootCertificates() VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []VpnServerConfigRadiusServerRootCertificateResponse {
		return v.RadiusServerRootCertificates
	}).(VpnServerConfigRadiusServerRootCertificateResponseArrayOutput)
}

// The radius secret property of the VpnServerConfiguration resource for point to site client connection.
func (o VpnServerConfigurationPropertiesResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// Multiple Radius Server configuration for VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) RadiusServers() RadiusServerResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []RadiusServerResponse { return v.RadiusServers }).(RadiusServerResponseArrayOutput)
}

// VPN authentication types for the VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []string { return v.VpnAuthenticationTypes }).(pulumi.StringArrayOutput)
}

// VpnClientIpsecPolicies for VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []IpsecPolicyResponse {
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// VPN client revoked certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) VpnClientRevokedCertificates() VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []VpnServerConfigVpnClientRevokedCertificateResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client root certificate of VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) VpnClientRootCertificates() VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []VpnServerConfigVpnClientRootCertificateResponse {
		return v.VpnClientRootCertificates
	}).(VpnServerConfigVpnClientRootCertificateResponseArrayOutput)
}

// VPN protocols for the VpnServerConfiguration.
func (o VpnServerConfigurationPropertiesResponseOutput) VpnProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPropertiesResponse) []string { return v.VpnProtocols }).(pulumi.StringArrayOutput)
}

// VpnSiteLink Resource.
type VpnSiteLink struct {
	// The set of bgp properties.
	BgpProperties *VpnLinkBgpSettings `pulumi:"bgpProperties"`
	// FQDN of vpn-site-link.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress *string `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties *VpnLinkProviderProperties `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// VpnSiteLinkInput is an input type that accepts VpnSiteLinkArgs and VpnSiteLinkOutput values.
// You can construct a concrete instance of `VpnSiteLinkInput` via:
//
//	VpnSiteLinkArgs{...}
type VpnSiteLinkInput interface {
	pulumi.Input

	ToVpnSiteLinkOutput() VpnSiteLinkOutput
	ToVpnSiteLinkOutputWithContext(context.Context) VpnSiteLinkOutput
}

// VpnSiteLink Resource.
type VpnSiteLinkArgs struct {
	// The set of bgp properties.
	BgpProperties VpnLinkBgpSettingsPtrInput `pulumi:"bgpProperties"`
	// FQDN of vpn-site-link.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties VpnLinkProviderPropertiesPtrInput `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnSiteLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return i.ToVpnSiteLinkOutputWithContext(context.Background())
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkOutput)
}

// VpnSiteLinkArrayInput is an input type that accepts VpnSiteLinkArray and VpnSiteLinkArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkArrayInput` via:
//
//	VpnSiteLinkArray{ VpnSiteLinkArgs{...} }
type VpnSiteLinkArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput
	ToVpnSiteLinkArrayOutputWithContext(context.Context) VpnSiteLinkArrayOutput
}

type VpnSiteLinkArray []VpnSiteLinkInput

func (VpnSiteLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return i.ToVpnSiteLinkArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkArrayOutput)
}

// VpnSiteLink Resource.
type VpnSiteLinkOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return o
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return o
}

// The set of bgp properties.
func (o VpnSiteLinkOutput) BgpProperties() VpnLinkBgpSettingsPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *VpnLinkBgpSettings { return v.BgpProperties }).(VpnLinkBgpSettingsPtrOutput)
}

// FQDN of vpn-site-link.
func (o VpnSiteLinkOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ip-address for the vpn-site-link.
func (o VpnSiteLinkOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The link provider properties.
func (o VpnSiteLinkOutput) LinkProperties() VpnLinkProviderPropertiesPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *VpnLinkProviderProperties { return v.LinkProperties }).(VpnLinkProviderPropertiesPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnSiteLinkArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLink {
		return vs[0].([]VpnSiteLink)[vs[1].(int)]
	}).(VpnSiteLinkOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnection struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// Dead Peer Detection timeout in seconds for VpnLink connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// List of egress NatRules.
	EgressNatRules []SubResource `pulumi:"egressNatRules"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// List of ingress NatRules.
	IngressNatRules []SubResource `pulumi:"ingressNatRules"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// vpnGatewayCustomBgpAddresses used by this connection.
	VpnGatewayCustomBgpAddresses []GatewayCustomBgpIpAddressIpConfiguration `pulumi:"vpnGatewayCustomBgpAddresses"`
	// Vpn link connection mode.
	VpnLinkConnectionMode *string `pulumi:"vpnLinkConnectionMode"`
	// Id of the connected vpn site link.
	VpnSiteLink *SubResource `pulumi:"vpnSiteLink"`
}

// VpnSiteLinkConnectionInput is an input type that accepts VpnSiteLinkConnectionArgs and VpnSiteLinkConnectionOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionInput` via:
//
//	VpnSiteLinkConnectionArgs{...}
type VpnSiteLinkConnectionInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput
	ToVpnSiteLinkConnectionOutputWithContext(context.Context) VpnSiteLinkConnectionOutput
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// Dead Peer Detection timeout in seconds for VpnLink connection.
	DpdTimeoutSeconds pulumi.IntPtrInput `pulumi:"dpdTimeoutSeconds"`
	// List of egress NatRules.
	EgressNatRules SubResourceArrayInput `pulumi:"egressNatRules"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// List of ingress NatRules.
	IngressNatRules SubResourceArrayInput `pulumi:"ingressNatRules"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// vpnGatewayCustomBgpAddresses used by this connection.
	VpnGatewayCustomBgpAddresses GatewayCustomBgpIpAddressIpConfigurationArrayInput `pulumi:"vpnGatewayCustomBgpAddresses"`
	// Vpn link connection mode.
	VpnLinkConnectionMode pulumi.StringPtrInput `pulumi:"vpnLinkConnectionMode"`
	// Id of the connected vpn site link.
	VpnSiteLink SubResourcePtrInput `pulumi:"vpnSiteLink"`
}

func (VpnSiteLinkConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnection)(nil)).Elem()
}

func (i VpnSiteLinkConnectionArgs) ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput {
	return i.ToVpnSiteLinkConnectionOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionArgs) ToVpnSiteLinkConnectionOutputWithContext(ctx context.Context) VpnSiteLinkConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionOutput)
}

// VpnSiteLinkConnectionArrayInput is an input type that accepts VpnSiteLinkConnectionArray and VpnSiteLinkConnectionArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionArrayInput` via:
//
//	VpnSiteLinkConnectionArray{ VpnSiteLinkConnectionArgs{...} }
type VpnSiteLinkConnectionArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput
	ToVpnSiteLinkConnectionArrayOutputWithContext(context.Context) VpnSiteLinkConnectionArrayOutput
}

type VpnSiteLinkConnectionArray []VpnSiteLinkConnectionInput

func (VpnSiteLinkConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnection)(nil)).Elem()
}

func (i VpnSiteLinkConnectionArray) ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput {
	return i.ToVpnSiteLinkConnectionArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionArray) ToVpnSiteLinkConnectionArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionArrayOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnection)(nil)).Elem()
}

func (o VpnSiteLinkConnectionOutput) ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput {
	return o
}

func (o VpnSiteLinkConnectionOutput) ToVpnSiteLinkConnectionOutputWithContext(ctx context.Context) VpnSiteLinkConnectionOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnSiteLinkConnectionOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// Dead Peer Detection timeout in seconds for VpnLink connection.
func (o VpnSiteLinkConnectionOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// List of egress NatRules.
func (o VpnSiteLinkConnectionOutput) EgressNatRules() SubResourceArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []SubResource { return v.EgressNatRules }).(SubResourceArrayOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// List of ingress NatRules.
func (o VpnSiteLinkConnectionOutput) IngressNatRules() SubResourceArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []SubResource { return v.IngressNatRules }).(SubResourceArrayOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnSiteLinkConnectionOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Routing weight for vpn connection.
func (o VpnSiteLinkConnectionOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnSiteLinkConnectionOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Use local azure ip to initiate connection.
func (o VpnSiteLinkConnectionOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnSiteLinkConnectionOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnSiteLinkConnectionOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// vpnGatewayCustomBgpAddresses used by this connection.
func (o VpnSiteLinkConnectionOutput) VpnGatewayCustomBgpAddresses() GatewayCustomBgpIpAddressIpConfigurationArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []GatewayCustomBgpIpAddressIpConfiguration {
		return v.VpnGatewayCustomBgpAddresses
	}).(GatewayCustomBgpIpAddressIpConfigurationArrayOutput)
}

// Vpn link connection mode.
func (o VpnSiteLinkConnectionOutput) VpnLinkConnectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.VpnLinkConnectionMode }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site link.
func (o VpnSiteLinkConnectionOutput) VpnSiteLink() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *SubResource { return v.VpnSiteLink }).(SubResourcePtrOutput)
}

type VpnSiteLinkConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnection)(nil)).Elem()
}

func (o VpnSiteLinkConnectionArrayOutput) ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionArrayOutput) ToVpnSiteLinkConnectionArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkConnection {
		return vs[0].([]VpnSiteLinkConnection)[vs[1].(int)]
	}).(VpnSiteLinkConnectionOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// Dead Peer Detection timeout in seconds for VpnLink connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// Egress bytes transferred.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// List of egress NatRules.
	EgressNatRules []SubResourceResponse `pulumi:"egressNatRules"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// List of ingress NatRules.
	IngressNatRules []SubResourceResponse `pulumi:"ingressNatRules"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN site link connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Resource type.
	Type string `pulumi:"type"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// vpnGatewayCustomBgpAddresses used by this connection.
	VpnGatewayCustomBgpAddresses []GatewayCustomBgpIpAddressIpConfigurationResponse `pulumi:"vpnGatewayCustomBgpAddresses"`
	// Vpn link connection mode.
	VpnLinkConnectionMode *string `pulumi:"vpnLinkConnectionMode"`
	// Id of the connected vpn site link.
	VpnSiteLink *SubResourceResponse `pulumi:"vpnSiteLink"`
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (o VpnSiteLinkConnectionResponseOutput) ToVpnSiteLinkConnectionResponseOutput() VpnSiteLinkConnectionResponseOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseOutput) ToVpnSiteLinkConnectionResponseOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnSiteLinkConnectionResponseOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnSiteLinkConnectionResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// Dead Peer Detection timeout in seconds for VpnLink connection.
func (o VpnSiteLinkConnectionResponseOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// Egress bytes transferred.
func (o VpnSiteLinkConnectionResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// List of egress NatRules.
func (o VpnSiteLinkConnectionResponseOutput) EgressNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []SubResourceResponse { return v.EgressNatRules }).(SubResourceResponseArrayOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionResponseOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnSiteLinkConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnSiteLinkConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Ingress bytes transferred.
func (o VpnSiteLinkConnectionResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// List of ingress NatRules.
func (o VpnSiteLinkConnectionResponseOutput) IngressNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []SubResourceResponse { return v.IngressNatRules }).(SubResourceResponseArrayOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnSiteLinkConnectionResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN site link connection resource.
func (o VpnSiteLinkConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Routing weight for vpn connection.
func (o VpnSiteLinkConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnSiteLinkConnectionResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o VpnSiteLinkConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Use local azure ip to initiate connection.
func (o VpnSiteLinkConnectionResponseOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnSiteLinkConnectionResponseOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnSiteLinkConnectionResponseOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// vpnGatewayCustomBgpAddresses used by this connection.
func (o VpnSiteLinkConnectionResponseOutput) VpnGatewayCustomBgpAddresses() GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []GatewayCustomBgpIpAddressIpConfigurationResponse {
		return v.VpnGatewayCustomBgpAddresses
	}).(GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput)
}

// Vpn link connection mode.
func (o VpnSiteLinkConnectionResponseOutput) VpnLinkConnectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.VpnLinkConnectionMode }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site link.
func (o VpnSiteLinkConnectionResponseOutput) VpnSiteLink() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *SubResourceResponse { return v.VpnSiteLink }).(SubResourceResponsePtrOutput)
}

type VpnSiteLinkConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (o VpnSiteLinkConnectionResponseArrayOutput) ToVpnSiteLinkConnectionResponseArrayOutput() VpnSiteLinkConnectionResponseArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseArrayOutput) ToVpnSiteLinkConnectionResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkConnectionResponse {
		return vs[0].([]VpnSiteLinkConnectionResponse)[vs[1].(int)]
	}).(VpnSiteLinkConnectionResponseOutput)
}

// VpnSiteLink Resource.
type VpnSiteLinkResponse struct {
	// The set of bgp properties.
	BgpProperties *VpnLinkBgpSettingsResponse `pulumi:"bgpProperties"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// FQDN of vpn-site-link.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress *string `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties *VpnLinkProviderPropertiesResponse `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN site link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnSiteLink Resource.
type VpnSiteLinkResponseOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkResponse)(nil)).Elem()
}

func (o VpnSiteLinkResponseOutput) ToVpnSiteLinkResponseOutput() VpnSiteLinkResponseOutput {
	return o
}

func (o VpnSiteLinkResponseOutput) ToVpnSiteLinkResponseOutputWithContext(ctx context.Context) VpnSiteLinkResponseOutput {
	return o
}

// The set of bgp properties.
func (o VpnSiteLinkResponseOutput) BgpProperties() VpnLinkBgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *VpnLinkBgpSettingsResponse { return v.BgpProperties }).(VpnLinkBgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnSiteLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// FQDN of vpn-site-link.
func (o VpnSiteLinkResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ip-address for the vpn-site-link.
func (o VpnSiteLinkResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The link provider properties.
func (o VpnSiteLinkResponseOutput) LinkProperties() VpnLinkProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *VpnLinkProviderPropertiesResponse { return v.LinkProperties }).(VpnLinkProviderPropertiesResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN site link resource.
func (o VpnSiteLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VpnSiteLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VpnSiteLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkResponse)(nil)).Elem()
}

func (o VpnSiteLinkResponseArrayOutput) ToVpnSiteLinkResponseArrayOutput() VpnSiteLinkResponseArrayOutput {
	return o
}

func (o VpnSiteLinkResponseArrayOutput) ToVpnSiteLinkResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkResponseArrayOutput {
	return o
}

func (o VpnSiteLinkResponseArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkResponse {
		return vs[0].([]VpnSiteLinkResponse)[vs[1].(int)]
	}).(VpnSiteLinkResponseOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRule struct {
	// Type of Actions.
	Action string `pulumi:"action"`
	// List of user session identifier group by clauses.
	GroupByUserSession []GroupByUserSession `pulumi:"groupByUserSession"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
	RateLimitDuration *string `pulumi:"rateLimitDuration"`
	// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// The rule type.
	RuleType string `pulumi:"ruleType"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	State *string `pulumi:"state"`
}

// WebApplicationFirewallCustomRuleInput is an input type that accepts WebApplicationFirewallCustomRuleArgs and WebApplicationFirewallCustomRuleOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleInput` via:
//
//	WebApplicationFirewallCustomRuleArgs{...}
type WebApplicationFirewallCustomRuleInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput
	ToWebApplicationFirewallCustomRuleOutputWithContext(context.Context) WebApplicationFirewallCustomRuleOutput
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleArgs struct {
	// Type of Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// List of user session identifier group by clauses.
	GroupByUserSession GroupByUserSessionArrayInput `pulumi:"groupByUserSession"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
	RateLimitDuration pulumi.StringPtrInput `pulumi:"rateLimitDuration"`
	// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
	RateLimitThreshold pulumi.IntPtrInput `pulumi:"rateLimitThreshold"`
	// The rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (WebApplicationFirewallCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleArgs) ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput {
	return i.ToWebApplicationFirewallCustomRuleOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleArgs) ToWebApplicationFirewallCustomRuleOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleOutput)
}

// WebApplicationFirewallCustomRuleArrayInput is an input type that accepts WebApplicationFirewallCustomRuleArray and WebApplicationFirewallCustomRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleArrayInput` via:
//
//	WebApplicationFirewallCustomRuleArray{ WebApplicationFirewallCustomRuleArgs{...} }
type WebApplicationFirewallCustomRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput
	ToWebApplicationFirewallCustomRuleArrayOutputWithContext(context.Context) WebApplicationFirewallCustomRuleArrayOutput
}

type WebApplicationFirewallCustomRuleArray []WebApplicationFirewallCustomRuleInput

func (WebApplicationFirewallCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleArray) ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput {
	return i.ToWebApplicationFirewallCustomRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleArray) ToWebApplicationFirewallCustomRuleArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleArrayOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleOutput) ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleOutput) ToWebApplicationFirewallCustomRuleOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleOutput {
	return o
}

// Type of Actions.
func (o WebApplicationFirewallCustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// List of user session identifier group by clauses.
func (o WebApplicationFirewallCustomRuleOutput) GroupByUserSession() GroupByUserSessionArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) []GroupByUserSession { return v.GroupByUserSession }).(GroupByUserSessionArrayOutput)
}

// List of match conditions.
func (o WebApplicationFirewallCustomRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// The name of the resource that is unique within a policy. This name can be used to access the resource.
func (o WebApplicationFirewallCustomRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o WebApplicationFirewallCustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
func (o WebApplicationFirewallCustomRuleOutput) RateLimitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *string { return v.RateLimitDuration }).(pulumi.StringPtrOutput)
}

// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
func (o WebApplicationFirewallCustomRuleOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// The rule type.
func (o WebApplicationFirewallCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o WebApplicationFirewallCustomRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleArrayOutput) ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleArrayOutput) ToWebApplicationFirewallCustomRuleArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallCustomRule {
		return vs[0].([]WebApplicationFirewallCustomRule)[vs[1].(int)]
	}).(WebApplicationFirewallCustomRuleOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleResponse struct {
	// Type of Actions.
	Action string `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// List of user session identifier group by clauses.
	GroupByUserSession []GroupByUserSessionResponse `pulumi:"groupByUserSession"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
	RateLimitDuration *string `pulumi:"rateLimitDuration"`
	// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// The rule type.
	RuleType string `pulumi:"ruleType"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	State *string `pulumi:"state"`
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleResponseOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleResponseOutput) ToWebApplicationFirewallCustomRuleResponseOutput() WebApplicationFirewallCustomRuleResponseOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseOutput) ToWebApplicationFirewallCustomRuleResponseOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseOutput {
	return o
}

// Type of Actions.
func (o WebApplicationFirewallCustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o WebApplicationFirewallCustomRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// List of user session identifier group by clauses.
func (o WebApplicationFirewallCustomRuleResponseOutput) GroupByUserSession() GroupByUserSessionResponseArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) []GroupByUserSessionResponse {
		return v.GroupByUserSession
	}).(GroupByUserSessionResponseArrayOutput)
}

// List of match conditions.
func (o WebApplicationFirewallCustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// The name of the resource that is unique within a policy. This name can be used to access the resource.
func (o WebApplicationFirewallCustomRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o WebApplicationFirewallCustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
func (o WebApplicationFirewallCustomRuleResponseOutput) RateLimitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *string { return v.RateLimitDuration }).(pulumi.StringPtrOutput)
}

// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
func (o WebApplicationFirewallCustomRuleResponseOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// The rule type.
func (o WebApplicationFirewallCustomRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o WebApplicationFirewallCustomRuleResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallCustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) ToWebApplicationFirewallCustomRuleResponseArrayOutput() WebApplicationFirewallCustomRuleResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) ToWebApplicationFirewallCustomRuleResponseArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallCustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallCustomRuleResponse {
		return vs[0].([]WebApplicationFirewallCustomRuleResponse)[vs[1].(int)]
	}).(WebApplicationFirewallCustomRuleResponseOutput)
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRules struct {
	// The variable to be scrubbed from the logs.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
	Selector *string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
	// Defines the state of log scrubbing rule. Default value is Enabled.
	State *string `pulumi:"state"`
}

// WebApplicationFirewallScrubbingRulesInput is an input type that accepts WebApplicationFirewallScrubbingRulesArgs and WebApplicationFirewallScrubbingRulesOutput values.
// You can construct a concrete instance of `WebApplicationFirewallScrubbingRulesInput` via:
//
//	WebApplicationFirewallScrubbingRulesArgs{...}
type WebApplicationFirewallScrubbingRulesInput interface {
	pulumi.Input

	ToWebApplicationFirewallScrubbingRulesOutput() WebApplicationFirewallScrubbingRulesOutput
	ToWebApplicationFirewallScrubbingRulesOutputWithContext(context.Context) WebApplicationFirewallScrubbingRulesOutput
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesArgs struct {
	// The variable to be scrubbed from the logs.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
	// Defines the state of log scrubbing rule. Default value is Enabled.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (WebApplicationFirewallScrubbingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (i WebApplicationFirewallScrubbingRulesArgs) ToWebApplicationFirewallScrubbingRulesOutput() WebApplicationFirewallScrubbingRulesOutput {
	return i.ToWebApplicationFirewallScrubbingRulesOutputWithContext(context.Background())
}

func (i WebApplicationFirewallScrubbingRulesArgs) ToWebApplicationFirewallScrubbingRulesOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallScrubbingRulesOutput)
}

// WebApplicationFirewallScrubbingRulesArrayInput is an input type that accepts WebApplicationFirewallScrubbingRulesArray and WebApplicationFirewallScrubbingRulesArrayOutput values.
// You can construct a concrete instance of `WebApplicationFirewallScrubbingRulesArrayInput` via:
//
//	WebApplicationFirewallScrubbingRulesArray{ WebApplicationFirewallScrubbingRulesArgs{...} }
type WebApplicationFirewallScrubbingRulesArrayInput interface {
	pulumi.Input

	ToWebApplicationFirewallScrubbingRulesArrayOutput() WebApplicationFirewallScrubbingRulesArrayOutput
	ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(context.Context) WebApplicationFirewallScrubbingRulesArrayOutput
}

type WebApplicationFirewallScrubbingRulesArray []WebApplicationFirewallScrubbingRulesInput

func (WebApplicationFirewallScrubbingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (i WebApplicationFirewallScrubbingRulesArray) ToWebApplicationFirewallScrubbingRulesArrayOutput() WebApplicationFirewallScrubbingRulesArrayOutput {
	return i.ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(context.Background())
}

func (i WebApplicationFirewallScrubbingRulesArray) ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallScrubbingRulesArrayOutput)
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesOutput) ToWebApplicationFirewallScrubbingRulesOutput() WebApplicationFirewallScrubbingRulesOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesOutput) ToWebApplicationFirewallScrubbingRulesOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesOutput {
	return o
}

// The variable to be scrubbed from the logs.
func (o WebApplicationFirewallScrubbingRulesOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

// Defines the state of log scrubbing rule. Default value is Enabled.
func (o WebApplicationFirewallScrubbingRulesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallScrubbingRulesArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesArrayOutput) ToWebApplicationFirewallScrubbingRulesArrayOutput() WebApplicationFirewallScrubbingRulesArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesArrayOutput) ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallScrubbingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallScrubbingRules {
		return vs[0].([]WebApplicationFirewallScrubbingRules)[vs[1].(int)]
	}).(WebApplicationFirewallScrubbingRulesOutput)
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesResponse struct {
	// The variable to be scrubbed from the logs.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
	Selector *string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
	// Defines the state of log scrubbing rule. Default value is Enabled.
	State *string `pulumi:"state"`
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesResponseOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallScrubbingRulesResponse)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesResponseOutput) ToWebApplicationFirewallScrubbingRulesResponseOutput() WebApplicationFirewallScrubbingRulesResponseOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesResponseOutput) ToWebApplicationFirewallScrubbingRulesResponseOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesResponseOutput {
	return o
}

// The variable to be scrubbed from the logs.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

// Defines the state of log scrubbing rule. Default value is Enabled.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallScrubbingRulesResponseArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallScrubbingRulesResponse)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesResponseArrayOutput) ToWebApplicationFirewallScrubbingRulesResponseArrayOutput() WebApplicationFirewallScrubbingRulesResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesResponseArrayOutput) ToWebApplicationFirewallScrubbingRulesResponseArrayOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesResponseArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallScrubbingRulesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallScrubbingRulesResponse {
		return vs[0].([]WebApplicationFirewallScrubbingRulesResponse)[vs[1].(int)]
	}).(WebApplicationFirewallScrubbingRulesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ResiliencyRecommendationComponentsResponseOutput{})
	pulumi.RegisterOutputType(ResiliencyRecommendationComponentsResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceBasicsResponseOutput{})
	pulumi.RegisterOutputType(ResourceBasicsResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersPtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleOutput{})
	pulumi.RegisterOutputType(RouteMapRuleArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleResponseOutput{})
	pulumi.RegisterOutputType(RouteMapRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteSourceDetailsResponseOutput{})
	pulumi.RegisterOutputType(RouteSourceDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTypeOutput{})
	pulumi.RegisterOutputType(RouteTableTypePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingPolicyOutput{})
	pulumi.RegisterOutputType(RoutingPolicyArrayOutput{})
	pulumi.RegisterOutputType(RoutingPolicyResponseOutput{})
	pulumi.RegisterOutputType(RoutingPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleNextHopOutput{})
	pulumi.RegisterOutputType(RoutingRuleNextHopResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleRouteDestinationOutput{})
	pulumi.RegisterOutputType(RoutingRuleRouteDestinationResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityUserGroupItemOutput{})
	pulumi.RegisterOutputType(SecurityUserGroupItemArrayOutput{})
	pulumi.RegisterOutputType(SecurityUserGroupItemResponseOutput{})
	pulumi.RegisterOutputType(SecurityUserGroupItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(SharedKeyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SingleQueryResultResponseOutput{})
	pulumi.RegisterOutputType(SingleQueryResultResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StaticCidrPropertiesOutput{})
	pulumi.RegisterOutputType(StaticCidrPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StaticCidrPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StaticRouteOutput{})
	pulumi.RegisterOutputType(StaticRouteArrayOutput{})
	pulumi.RegisterOutputType(StaticRouteResponseOutput{})
	pulumi.RegisterOutputType(StaticRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigPtrOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigResponseOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetTypeOutput{})
	pulumi.RegisterOutputType(SubnetTypePtrOutput{})
	pulumi.RegisterOutputType(SubnetTypeArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionIdOutput{})
	pulumi.RegisterOutputType(SubscriptionIdArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionIdResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionIdResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyArrayOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyResponseOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseArrayOutput{})
	pulumi.RegisterOutputType(VMOutput{})
	pulumi.RegisterOutputType(VMResponseOutput{})
	pulumi.RegisterOutputType(VerifierWorkspacePropertiesOutput{})
	pulumi.RegisterOutputType(VerifierWorkspacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VerifierWorkspacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNetworkInterfaceConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNicPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubIdOutput{})
	pulumi.RegisterOutputType(VirtualHubIdResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTablePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2TypeOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2TypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2Output{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleBoundsOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleBoundsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleBoundsResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleBoundsResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayAutoScaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteOutput{})
	pulumi.RegisterOutputType(VnetRoutePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePtrOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthDetailResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingArrayOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingResponseOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkResponseOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleResponseOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesResponseOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesResponseArrayOutput{})
}
