// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetches the details of a ExpressRoute gateway in a resource group.
//
// Uses Azure REST API version 2024-05-01.
//
// Other available API versions: 2018-08-01, 2018-10-01, 2018-11-01, 2018-12-01, 2019-02-01, 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupExpressRouteGateway(ctx *pulumi.Context, args *LookupExpressRouteGatewayArgs, opts ...pulumi.InvokeOption) (*LookupExpressRouteGatewayResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupExpressRouteGatewayResult
	err := ctx.Invoke("azure-native:network:getExpressRouteGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExpressRouteGatewayArgs struct {
	// The name of the ExpressRoute gateway.
	ExpressRouteGatewayName string `pulumi:"expressRouteGatewayName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// ExpressRoute gateway resource.
type LookupExpressRouteGatewayResult struct {
	// Configures this gateway to accept traffic from non Virtual WAN networks.
	AllowNonVirtualWanTraffic *bool `pulumi:"allowNonVirtualWanTraffic"`
	// Configuration for auto scaling.
	AutoScaleConfiguration *ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration `pulumi:"autoScaleConfiguration"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// List of ExpressRoute connections to the ExpressRoute gateway.
	ExpressRouteConnections []ExpressRouteConnectionResponse `pulumi:"expressRouteConnections"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the express route gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
	VirtualHub VirtualHubIdResponse `pulumi:"virtualHub"`
}

func LookupExpressRouteGatewayOutput(ctx *pulumi.Context, args LookupExpressRouteGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupExpressRouteGatewayResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupExpressRouteGatewayResultOutput, error) {
			args := v.(LookupExpressRouteGatewayArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getExpressRouteGateway", args, LookupExpressRouteGatewayResultOutput{}, options).(LookupExpressRouteGatewayResultOutput), nil
		}).(LookupExpressRouteGatewayResultOutput)
}

type LookupExpressRouteGatewayOutputArgs struct {
	// The name of the ExpressRoute gateway.
	ExpressRouteGatewayName pulumi.StringInput `pulumi:"expressRouteGatewayName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupExpressRouteGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExpressRouteGatewayArgs)(nil)).Elem()
}

// ExpressRoute gateway resource.
type LookupExpressRouteGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupExpressRouteGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExpressRouteGatewayResult)(nil)).Elem()
}

func (o LookupExpressRouteGatewayResultOutput) ToLookupExpressRouteGatewayResultOutput() LookupExpressRouteGatewayResultOutput {
	return o
}

func (o LookupExpressRouteGatewayResultOutput) ToLookupExpressRouteGatewayResultOutputWithContext(ctx context.Context) LookupExpressRouteGatewayResultOutput {
	return o
}

// Configures this gateway to accept traffic from non Virtual WAN networks.
func (o LookupExpressRouteGatewayResultOutput) AllowNonVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) *bool { return v.AllowNonVirtualWanTraffic }).(pulumi.BoolPtrOutput)
}

// Configuration for auto scaling.
func (o LookupExpressRouteGatewayResultOutput) AutoScaleConfiguration() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) *ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration {
		return v.AutoScaleConfiguration
	}).(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput)
}

// The Azure API version of the resource.
func (o LookupExpressRouteGatewayResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupExpressRouteGatewayResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) string { return v.Etag }).(pulumi.StringOutput)
}

// List of ExpressRoute connections to the ExpressRoute gateway.
func (o LookupExpressRouteGatewayResultOutput) ExpressRouteConnections() ExpressRouteConnectionResponseArrayOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) []ExpressRouteConnectionResponse {
		return v.ExpressRouteConnections
	}).(ExpressRouteConnectionResponseArrayOutput)
}

// Resource ID.
func (o LookupExpressRouteGatewayResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o LookupExpressRouteGatewayResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LookupExpressRouteGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the express route gateway resource.
func (o LookupExpressRouteGatewayResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource tags.
func (o LookupExpressRouteGatewayResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LookupExpressRouteGatewayResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) string { return v.Type }).(pulumi.StringOutput)
}

// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
func (o LookupExpressRouteGatewayResultOutput) VirtualHub() VirtualHubIdResponseOutput {
	return o.ApplyT(func(v LookupExpressRouteGatewayResult) VirtualHubIdResponse { return v.VirtualHub }).(VirtualHubIdResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExpressRouteGatewayResultOutput{})
}
