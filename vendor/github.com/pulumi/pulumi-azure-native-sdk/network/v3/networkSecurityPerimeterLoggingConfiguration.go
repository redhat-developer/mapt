// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The NSP logging configuration
//
// Uses Azure REST API version 2024-06-01-preview. In version 2.x of the Azure Native provider, it used API version 2024-06-01-preview.
//
// Other available API versions: 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type NetworkSecurityPerimeterLoggingConfiguration struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the NSP logging configuration.
	Properties NspLoggingConfigurationPropertiesResponseOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkSecurityPerimeterLoggingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityPerimeterLoggingConfiguration(ctx *pulumi.Context,
	name string, args *NetworkSecurityPerimeterLoggingConfigurationArgs, opts ...pulumi.ResourceOption) (*NetworkSecurityPerimeterLoggingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkSecurityPerimeterName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkSecurityPerimeterName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20240601preview:NetworkSecurityPerimeterLoggingConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240701:NetworkSecurityPerimeterLoggingConfiguration"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NetworkSecurityPerimeterLoggingConfiguration
	err := ctx.RegisterResource("azure-native:network:NetworkSecurityPerimeterLoggingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSecurityPerimeterLoggingConfiguration gets an existing NetworkSecurityPerimeterLoggingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityPerimeterLoggingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSecurityPerimeterLoggingConfigurationState, opts ...pulumi.ResourceOption) (*NetworkSecurityPerimeterLoggingConfiguration, error) {
	var resource NetworkSecurityPerimeterLoggingConfiguration
	err := ctx.ReadResource("azure-native:network:NetworkSecurityPerimeterLoggingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSecurityPerimeterLoggingConfiguration resources.
type networkSecurityPerimeterLoggingConfigurationState struct {
}

type NetworkSecurityPerimeterLoggingConfigurationState struct {
}

func (NetworkSecurityPerimeterLoggingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityPerimeterLoggingConfigurationState)(nil)).Elem()
}

type networkSecurityPerimeterLoggingConfigurationArgs struct {
	// The name of the NSP logging configuration. Accepts 'instance' as name.
	LoggingConfigurationName *string `pulumi:"loggingConfigurationName"`
	// The name of the network security perimeter.
	NetworkSecurityPerimeterName string `pulumi:"networkSecurityPerimeterName"`
	// Properties of the NSP logging configuration.
	Properties *NspLoggingConfigurationProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a NetworkSecurityPerimeterLoggingConfiguration resource.
type NetworkSecurityPerimeterLoggingConfigurationArgs struct {
	// The name of the NSP logging configuration. Accepts 'instance' as name.
	LoggingConfigurationName pulumi.StringPtrInput
	// The name of the network security perimeter.
	NetworkSecurityPerimeterName pulumi.StringInput
	// Properties of the NSP logging configuration.
	Properties NspLoggingConfigurationPropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (NetworkSecurityPerimeterLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityPerimeterLoggingConfigurationArgs)(nil)).Elem()
}

type NetworkSecurityPerimeterLoggingConfigurationInput interface {
	pulumi.Input

	ToNetworkSecurityPerimeterLoggingConfigurationOutput() NetworkSecurityPerimeterLoggingConfigurationOutput
	ToNetworkSecurityPerimeterLoggingConfigurationOutputWithContext(ctx context.Context) NetworkSecurityPerimeterLoggingConfigurationOutput
}

func (*NetworkSecurityPerimeterLoggingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityPerimeterLoggingConfiguration)(nil)).Elem()
}

func (i *NetworkSecurityPerimeterLoggingConfiguration) ToNetworkSecurityPerimeterLoggingConfigurationOutput() NetworkSecurityPerimeterLoggingConfigurationOutput {
	return i.ToNetworkSecurityPerimeterLoggingConfigurationOutputWithContext(context.Background())
}

func (i *NetworkSecurityPerimeterLoggingConfiguration) ToNetworkSecurityPerimeterLoggingConfigurationOutputWithContext(ctx context.Context) NetworkSecurityPerimeterLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPerimeterLoggingConfigurationOutput)
}

type NetworkSecurityPerimeterLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPerimeterLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityPerimeterLoggingConfiguration)(nil)).Elem()
}

func (o NetworkSecurityPerimeterLoggingConfigurationOutput) ToNetworkSecurityPerimeterLoggingConfigurationOutput() NetworkSecurityPerimeterLoggingConfigurationOutput {
	return o
}

func (o NetworkSecurityPerimeterLoggingConfigurationOutput) ToNetworkSecurityPerimeterLoggingConfigurationOutputWithContext(ctx context.Context) NetworkSecurityPerimeterLoggingConfigurationOutput {
	return o
}

// The Azure API version of the resource.
func (o NetworkSecurityPerimeterLoggingConfigurationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLoggingConfiguration) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityPerimeterLoggingConfigurationOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLoggingConfiguration) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Resource name.
func (o NetworkSecurityPerimeterLoggingConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLoggingConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of the NSP logging configuration.
func (o NetworkSecurityPerimeterLoggingConfigurationOutput) Properties() NspLoggingConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLoggingConfiguration) NspLoggingConfigurationPropertiesResponseOutput {
		return v.Properties
	}).(NspLoggingConfigurationPropertiesResponseOutput)
}

// Resource type.
func (o NetworkSecurityPerimeterLoggingConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLoggingConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkSecurityPerimeterLoggingConfigurationOutput{})
}
