// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a flow log resource by name.
//
// Uses Azure REST API version 2024-05-01.
//
// Other available API versions: 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupFlowLog(ctx *pulumi.Context, args *LookupFlowLogArgs, opts ...pulumi.InvokeOption) (*LookupFlowLogResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupFlowLogResult
	err := ctx.Invoke("azure-native:network:getFlowLog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupFlowLogArgs struct {
	// The name of the flow log resource.
	FlowLogName string `pulumi:"flowLogName"`
	// The name of the network watcher.
	NetworkWatcherName string `pulumi:"networkWatcherName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A flow log resource.
type LookupFlowLogResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Flag to enable/disable flow logging.
	Enabled *bool `pulumi:"enabled"`
	// Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort, Protocol, Encryption, Direction and Action. If not specified, all network traffic will be logged.
	EnabledFilteringCriteria *string `pulumi:"enabledFilteringCriteria"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Parameters that define the configuration of traffic analytics.
	FlowAnalyticsConfiguration *TrafficAnalyticsPropertiesResponse `pulumi:"flowAnalyticsConfiguration"`
	// Parameters that define the flow log format.
	Format *FlowLogFormatParametersResponse `pulumi:"format"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// FlowLog resource Managed Identity
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the flow log.
	ProvisioningState string `pulumi:"provisioningState"`
	// Parameters that define the retention policy for flow log.
	RetentionPolicy *RetentionPolicyParametersResponse `pulumi:"retentionPolicy"`
	// ID of the storage account which is used to store the flow log.
	StorageId string `pulumi:"storageId"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Guid of network security group to which flow log will be applied.
	TargetResourceGuid string `pulumi:"targetResourceGuid"`
	// ID of network security group to which flow log will be applied.
	TargetResourceId string `pulumi:"targetResourceId"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupFlowLogResult
func (val *LookupFlowLogResult) Defaults() *LookupFlowLogResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Format = tmp.Format.Defaults()

	tmp.RetentionPolicy = tmp.RetentionPolicy.Defaults()

	return &tmp
}
func LookupFlowLogOutput(ctx *pulumi.Context, args LookupFlowLogOutputArgs, opts ...pulumi.InvokeOption) LookupFlowLogResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFlowLogResultOutput, error) {
			args := v.(LookupFlowLogArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getFlowLog", args, LookupFlowLogResultOutput{}, options).(LookupFlowLogResultOutput), nil
		}).(LookupFlowLogResultOutput)
}

type LookupFlowLogOutputArgs struct {
	// The name of the flow log resource.
	FlowLogName pulumi.StringInput `pulumi:"flowLogName"`
	// The name of the network watcher.
	NetworkWatcherName pulumi.StringInput `pulumi:"networkWatcherName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFlowLogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowLogArgs)(nil)).Elem()
}

// A flow log resource.
type LookupFlowLogResultOutput struct{ *pulumi.OutputState }

func (LookupFlowLogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowLogResult)(nil)).Elem()
}

func (o LookupFlowLogResultOutput) ToLookupFlowLogResultOutput() LookupFlowLogResultOutput {
	return o
}

func (o LookupFlowLogResultOutput) ToLookupFlowLogResultOutputWithContext(ctx context.Context) LookupFlowLogResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupFlowLogResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Flag to enable/disable flow logging.
func (o LookupFlowLogResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort, Protocol, Encryption, Direction and Action. If not specified, all network traffic will be logged.
func (o LookupFlowLogResultOutput) EnabledFilteringCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *string { return v.EnabledFilteringCriteria }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupFlowLogResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o LookupFlowLogResultOutput) FlowAnalyticsConfiguration() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *TrafficAnalyticsPropertiesResponse { return v.FlowAnalyticsConfiguration }).(TrafficAnalyticsPropertiesResponsePtrOutput)
}

// Parameters that define the flow log format.
func (o LookupFlowLogResultOutput) Format() FlowLogFormatParametersResponsePtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *FlowLogFormatParametersResponse { return v.Format }).(FlowLogFormatParametersResponsePtrOutput)
}

// Resource ID.
func (o LookupFlowLogResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// FlowLog resource Managed Identity
func (o LookupFlowLogResultOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Resource location.
func (o LookupFlowLogResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LookupFlowLogResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the flow log.
func (o LookupFlowLogResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Parameters that define the retention policy for flow log.
func (o LookupFlowLogResultOutput) RetentionPolicy() RetentionPolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v LookupFlowLogResult) *RetentionPolicyParametersResponse { return v.RetentionPolicy }).(RetentionPolicyParametersResponsePtrOutput)
}

// ID of the storage account which is used to store the flow log.
func (o LookupFlowLogResultOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.StorageId }).(pulumi.StringOutput)
}

// Resource tags.
func (o LookupFlowLogResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFlowLogResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Guid of network security group to which flow log will be applied.
func (o LookupFlowLogResultOutput) TargetResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.TargetResourceGuid }).(pulumi.StringOutput)
}

// ID of network security group to which flow log will be applied.
func (o LookupFlowLogResultOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupFlowLogResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowLogResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlowLogResultOutput{})
}
