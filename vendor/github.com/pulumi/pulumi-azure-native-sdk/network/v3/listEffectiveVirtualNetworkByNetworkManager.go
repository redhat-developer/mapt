// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List effective virtual networks in a network manager.
//
// Uses Azure REST API version 2022-04-01-preview.
//
// Other available API versions: 2021-02-01-preview, 2022-02-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListEffectiveVirtualNetworkByNetworkManager(ctx *pulumi.Context, args *ListEffectiveVirtualNetworkByNetworkManagerArgs, opts ...pulumi.InvokeOption) (*ListEffectiveVirtualNetworkByNetworkManagerResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListEffectiveVirtualNetworkByNetworkManagerResult
	err := ctx.Invoke("azure-native:network:listEffectiveVirtualNetworkByNetworkManager", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListEffectiveVirtualNetworkByNetworkManagerArgs struct {
	// Conditional Members.
	ConditionalMembers *string `pulumi:"conditionalMembers"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
	SkipToken *string `pulumi:"skipToken"`
	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int `pulumi:"top"`
}

// Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
type ListEffectiveVirtualNetworkByNetworkManagerResult struct {
	// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
	SkipToken *string `pulumi:"skipToken"`
	// Gets a page of EffectiveVirtualNetwork
	Value []EffectiveVirtualNetworkResponse `pulumi:"value"`
}

func ListEffectiveVirtualNetworkByNetworkManagerOutput(ctx *pulumi.Context, args ListEffectiveVirtualNetworkByNetworkManagerOutputArgs, opts ...pulumi.InvokeOption) ListEffectiveVirtualNetworkByNetworkManagerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListEffectiveVirtualNetworkByNetworkManagerResultOutput, error) {
			args := v.(ListEffectiveVirtualNetworkByNetworkManagerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:listEffectiveVirtualNetworkByNetworkManager", args, ListEffectiveVirtualNetworkByNetworkManagerResultOutput{}, options).(ListEffectiveVirtualNetworkByNetworkManagerResultOutput), nil
		}).(ListEffectiveVirtualNetworkByNetworkManagerResultOutput)
}

type ListEffectiveVirtualNetworkByNetworkManagerOutputArgs struct {
	// Conditional Members.
	ConditionalMembers pulumi.StringPtrInput `pulumi:"conditionalMembers"`
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
	SkipToken pulumi.StringPtrInput `pulumi:"skipToken"`
	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top pulumi.IntPtrInput `pulumi:"top"`
}

func (ListEffectiveVirtualNetworkByNetworkManagerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEffectiveVirtualNetworkByNetworkManagerArgs)(nil)).Elem()
}

// Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
type ListEffectiveVirtualNetworkByNetworkManagerResultOutput struct{ *pulumi.OutputState }

func (ListEffectiveVirtualNetworkByNetworkManagerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEffectiveVirtualNetworkByNetworkManagerResult)(nil)).Elem()
}

func (o ListEffectiveVirtualNetworkByNetworkManagerResultOutput) ToListEffectiveVirtualNetworkByNetworkManagerResultOutput() ListEffectiveVirtualNetworkByNetworkManagerResultOutput {
	return o
}

func (o ListEffectiveVirtualNetworkByNetworkManagerResultOutput) ToListEffectiveVirtualNetworkByNetworkManagerResultOutputWithContext(ctx context.Context) ListEffectiveVirtualNetworkByNetworkManagerResultOutput {
	return o
}

// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
func (o ListEffectiveVirtualNetworkByNetworkManagerResultOutput) SkipToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListEffectiveVirtualNetworkByNetworkManagerResult) *string { return v.SkipToken }).(pulumi.StringPtrOutput)
}

// Gets a page of EffectiveVirtualNetwork
func (o ListEffectiveVirtualNetworkByNetworkManagerResultOutput) Value() EffectiveVirtualNetworkResponseArrayOutput {
	return o.ApplyT(func(v ListEffectiveVirtualNetworkByNetworkManagerResult) []EffectiveVirtualNetworkResponse {
		return v.Value
	}).(EffectiveVirtualNetworkResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListEffectiveVirtualNetworkByNetworkManagerResultOutput{})
}
