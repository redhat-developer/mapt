// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the boot diagnostic logs for a VM instance belonging to the specified Network Virtual Appliance.
//
// Uses Azure REST API version 2024-07-01.
func GetNetworkVirtualApplianceBootDiagnosticLogs(ctx *pulumi.Context, args *GetNetworkVirtualApplianceBootDiagnosticLogsArgs, opts ...pulumi.InvokeOption) (*GetNetworkVirtualApplianceBootDiagnosticLogsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetNetworkVirtualApplianceBootDiagnosticLogsResult
	err := ctx.Invoke("azure-native:network:getNetworkVirtualApplianceBootDiagnosticLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetNetworkVirtualApplianceBootDiagnosticLogsArgs struct {
	// Specifies the sas-url to the storage blob into which console screen shot for the requested instance will be written
	ConsoleScreenshotStorageSasUrl *string `pulumi:"consoleScreenshotStorageSasUrl"`
	// The network virtual appliance instance id for which boot diagnostic logs is being requested
	InstanceId *int `pulumi:"instanceId"`
	// The name of Network Virtual Appliance.
	NetworkVirtualApplianceName string `pulumi:"networkVirtualApplianceName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the sas-url to the storage blob into which serial console logs for the requested instance will be written
	SerialConsoleStorageSasUrl *string `pulumi:"serialConsoleStorageSasUrl"`
}

type GetNetworkVirtualApplianceBootDiagnosticLogsResult struct {
	// The network virtual appliance instance id for which boot diagnostic logs is being requested
	InstanceId *int `pulumi:"instanceId"`
}

func GetNetworkVirtualApplianceBootDiagnosticLogsOutput(ctx *pulumi.Context, args GetNetworkVirtualApplianceBootDiagnosticLogsOutputArgs, opts ...pulumi.InvokeOption) GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput, error) {
			args := v.(GetNetworkVirtualApplianceBootDiagnosticLogsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getNetworkVirtualApplianceBootDiagnosticLogs", args, GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput{}, options).(GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput), nil
		}).(GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput)
}

type GetNetworkVirtualApplianceBootDiagnosticLogsOutputArgs struct {
	// Specifies the sas-url to the storage blob into which console screen shot for the requested instance will be written
	ConsoleScreenshotStorageSasUrl pulumi.StringPtrInput `pulumi:"consoleScreenshotStorageSasUrl"`
	// The network virtual appliance instance id for which boot diagnostic logs is being requested
	InstanceId pulumi.IntPtrInput `pulumi:"instanceId"`
	// The name of Network Virtual Appliance.
	NetworkVirtualApplianceName pulumi.StringInput `pulumi:"networkVirtualApplianceName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Specifies the sas-url to the storage blob into which serial console logs for the requested instance will be written
	SerialConsoleStorageSasUrl pulumi.StringPtrInput `pulumi:"serialConsoleStorageSasUrl"`
}

func (GetNetworkVirtualApplianceBootDiagnosticLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkVirtualApplianceBootDiagnosticLogsArgs)(nil)).Elem()
}

type GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkVirtualApplianceBootDiagnosticLogsResult)(nil)).Elem()
}

func (o GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput) ToGetNetworkVirtualApplianceBootDiagnosticLogsResultOutput() GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput {
	return o
}

func (o GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput) ToGetNetworkVirtualApplianceBootDiagnosticLogsResultOutputWithContext(ctx context.Context) GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput {
	return o
}

// The network virtual appliance instance id for which boot diagnostic logs is being requested
func (o GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput) InstanceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNetworkVirtualApplianceBootDiagnosticLogsResult) *int { return v.InstanceId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkVirtualApplianceBootDiagnosticLogsResultOutput{})
}
