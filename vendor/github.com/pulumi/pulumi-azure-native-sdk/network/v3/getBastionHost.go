// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified Bastion Host.
//
// Uses Azure REST API version 2024-05-01.
//
// Other available API versions: 2019-04-01, 2019-06-01, 2019-07-01, 2019-08-01, 2019-09-01, 2019-11-01, 2019-12-01, 2020-03-01, 2020-04-01, 2020-05-01, 2020-06-01, 2020-07-01, 2020-08-01, 2020-11-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-08-01, 2022-01-01, 2022-05-01, 2022-07-01, 2022-09-01, 2022-11-01, 2023-02-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupBastionHost(ctx *pulumi.Context, args *LookupBastionHostArgs, opts ...pulumi.InvokeOption) (*LookupBastionHostResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupBastionHostResult
	err := ctx.Invoke("azure-native:network:getBastionHost", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupBastionHostArgs struct {
	// The name of the Bastion Host.
	BastionHostName string `pulumi:"bastionHostName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Bastion Host resource.
type LookupBastionHostResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Enable/Disable Copy/Paste feature of the Bastion Host resource.
	DisableCopyPaste *bool `pulumi:"disableCopyPaste"`
	// FQDN for the endpoint on which bastion host is accessible.
	DnsName *string `pulumi:"dnsName"`
	// Enable/Disable File Copy feature of the Bastion Host resource.
	EnableFileCopy *bool `pulumi:"enableFileCopy"`
	// Enable/Disable IP Connect feature of the Bastion Host resource.
	EnableIpConnect *bool `pulumi:"enableIpConnect"`
	// Enable/Disable Kerberos feature of the Bastion Host resource.
	EnableKerberos *bool `pulumi:"enableKerberos"`
	// Enable/Disable Private Only feature of the Bastion Host resource.
	EnablePrivateOnlyBastion *bool `pulumi:"enablePrivateOnlyBastion"`
	// Enable/Disable Session Recording feature of the Bastion Host resource.
	EnableSessionRecording *bool `pulumi:"enableSessionRecording"`
	// Enable/Disable Shareable Link of the Bastion Host resource.
	EnableShareableLink *bool `pulumi:"enableShareableLink"`
	// Enable/Disable Tunneling feature of the Bastion Host resource.
	EnableTunneling *bool `pulumi:"enableTunneling"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IP configuration of the Bastion Host resource.
	IpConfigurations []BastionHostIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name        string                                          `pulumi:"name"`
	NetworkAcls *BastionHostPropertiesFormatResponseNetworkAcls `pulumi:"networkAcls"`
	// The provisioning state of the bastion host resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The scale units for the Bastion Host resource.
	ScaleUnits *int `pulumi:"scaleUnits"`
	// The sku of this Bastion Host.
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// Reference to an existing virtual network required for Developer Bastion Host only.
	VirtualNetwork *SubResourceResponse `pulumi:"virtualNetwork"`
	// A list of availability zones denoting where the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for LookupBastionHostResult
func (val *LookupBastionHostResult) Defaults() *LookupBastionHostResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DisableCopyPaste == nil {
		disableCopyPaste_ := false
		tmp.DisableCopyPaste = &disableCopyPaste_
	}
	if tmp.EnableFileCopy == nil {
		enableFileCopy_ := false
		tmp.EnableFileCopy = &enableFileCopy_
	}
	if tmp.EnableIpConnect == nil {
		enableIpConnect_ := false
		tmp.EnableIpConnect = &enableIpConnect_
	}
	if tmp.EnableKerberos == nil {
		enableKerberos_ := false
		tmp.EnableKerberos = &enableKerberos_
	}
	if tmp.EnablePrivateOnlyBastion == nil {
		enablePrivateOnlyBastion_ := false
		tmp.EnablePrivateOnlyBastion = &enablePrivateOnlyBastion_
	}
	if tmp.EnableSessionRecording == nil {
		enableSessionRecording_ := false
		tmp.EnableSessionRecording = &enableSessionRecording_
	}
	if tmp.EnableShareableLink == nil {
		enableShareableLink_ := false
		tmp.EnableShareableLink = &enableShareableLink_
	}
	if tmp.EnableTunneling == nil {
		enableTunneling_ := false
		tmp.EnableTunneling = &enableTunneling_
	}
	tmp.Sku = tmp.Sku.Defaults()

	return &tmp
}
func LookupBastionHostOutput(ctx *pulumi.Context, args LookupBastionHostOutputArgs, opts ...pulumi.InvokeOption) LookupBastionHostResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBastionHostResultOutput, error) {
			args := v.(LookupBastionHostArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getBastionHost", args, LookupBastionHostResultOutput{}, options).(LookupBastionHostResultOutput), nil
		}).(LookupBastionHostResultOutput)
}

type LookupBastionHostOutputArgs struct {
	// The name of the Bastion Host.
	BastionHostName pulumi.StringInput `pulumi:"bastionHostName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupBastionHostOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBastionHostArgs)(nil)).Elem()
}

// Bastion Host resource.
type LookupBastionHostResultOutput struct{ *pulumi.OutputState }

func (LookupBastionHostResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBastionHostResult)(nil)).Elem()
}

func (o LookupBastionHostResultOutput) ToLookupBastionHostResultOutput() LookupBastionHostResultOutput {
	return o
}

func (o LookupBastionHostResultOutput) ToLookupBastionHostResultOutputWithContext(ctx context.Context) LookupBastionHostResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupBastionHostResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Enable/Disable Copy/Paste feature of the Bastion Host resource.
func (o LookupBastionHostResultOutput) DisableCopyPaste() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.DisableCopyPaste }).(pulumi.BoolPtrOutput)
}

// FQDN for the endpoint on which bastion host is accessible.
func (o LookupBastionHostResultOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// Enable/Disable File Copy feature of the Bastion Host resource.
func (o LookupBastionHostResultOutput) EnableFileCopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.EnableFileCopy }).(pulumi.BoolPtrOutput)
}

// Enable/Disable IP Connect feature of the Bastion Host resource.
func (o LookupBastionHostResultOutput) EnableIpConnect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.EnableIpConnect }).(pulumi.BoolPtrOutput)
}

// Enable/Disable Kerberos feature of the Bastion Host resource.
func (o LookupBastionHostResultOutput) EnableKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.EnableKerberos }).(pulumi.BoolPtrOutput)
}

// Enable/Disable Private Only feature of the Bastion Host resource.
func (o LookupBastionHostResultOutput) EnablePrivateOnlyBastion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.EnablePrivateOnlyBastion }).(pulumi.BoolPtrOutput)
}

// Enable/Disable Session Recording feature of the Bastion Host resource.
func (o LookupBastionHostResultOutput) EnableSessionRecording() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.EnableSessionRecording }).(pulumi.BoolPtrOutput)
}

// Enable/Disable Shareable Link of the Bastion Host resource.
func (o LookupBastionHostResultOutput) EnableShareableLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.EnableShareableLink }).(pulumi.BoolPtrOutput)
}

// Enable/Disable Tunneling feature of the Bastion Host resource.
func (o LookupBastionHostResultOutput) EnableTunneling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *bool { return v.EnableTunneling }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupBastionHostResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupBastionHostResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configuration of the Bastion Host resource.
func (o LookupBastionHostResultOutput) IpConfigurations() BastionHostIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LookupBastionHostResult) []BastionHostIPConfigurationResponse { return v.IpConfigurations }).(BastionHostIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o LookupBastionHostResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LookupBastionHostResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBastionHostResultOutput) NetworkAcls() BastionHostPropertiesFormatResponseNetworkAclsPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *BastionHostPropertiesFormatResponseNetworkAcls { return v.NetworkAcls }).(BastionHostPropertiesFormatResponseNetworkAclsPtrOutput)
}

// The provisioning state of the bastion host resource.
func (o LookupBastionHostResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The scale units for the Bastion Host resource.
func (o LookupBastionHostResultOutput) ScaleUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *int { return v.ScaleUnits }).(pulumi.IntPtrOutput)
}

// The sku of this Bastion Host.
func (o LookupBastionHostResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Resource tags.
func (o LookupBastionHostResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBastionHostResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LookupBastionHostResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.Type }).(pulumi.StringOutput)
}

// Reference to an existing virtual network required for Developer Bastion Host only.
func (o LookupBastionHostResultOutput) VirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LookupBastionHostResult) *SubResourceResponse { return v.VirtualNetwork }).(SubResourceResponsePtrOutput)
}

// A list of availability zones denoting where the resource needs to come from.
func (o LookupBastionHostResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBastionHostResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBastionHostResultOutput{})
}
