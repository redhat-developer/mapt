// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The network security perimeter link resource
//
// Uses Azure REST API version 2024-06-01-preview. In version 2.x of the Azure Native provider, it used API version 2024-06-01-preview.
//
// Other available API versions: 2024-07-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native network [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type NetworkSecurityPerimeterLink struct {
	pulumi.CustomResourceState

	// Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
	AutoApprovedRemotePerimeterResourceId pulumi.StringPtrOutput `pulumi:"autoApprovedRemotePerimeterResourceId"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
	LocalInboundProfiles pulumi.StringArrayOutput `pulumi:"localInboundProfiles"`
	// Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
	LocalOutboundProfiles pulumi.StringArrayOutput `pulumi:"localOutboundProfiles"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the NSP Link resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
	RemoteInboundProfiles pulumi.StringArrayOutput `pulumi:"remoteInboundProfiles"`
	// Remote Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
	RemoteOutboundProfiles pulumi.StringArrayOutput `pulumi:"remoteOutboundProfiles"`
	// Remote NSP Guid with which the link gets created.
	RemotePerimeterGuid pulumi.StringOutput `pulumi:"remotePerimeterGuid"`
	// Remote NSP location with which the link gets created.
	RemotePerimeterLocation pulumi.StringOutput `pulumi:"remotePerimeterLocation"`
	// The NSP link state.
	Status pulumi.StringOutput `pulumi:"status"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkSecurityPerimeterLink registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityPerimeterLink(ctx *pulumi.Context,
	name string, args *NetworkSecurityPerimeterLinkArgs, opts ...pulumi.ResourceOption) (*NetworkSecurityPerimeterLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkSecurityPerimeterName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkSecurityPerimeterName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20210201preview:NetworkSecurityPerimeterLink"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210201preview:NspLink"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230701preview:NetworkSecurityPerimeterLink"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230701preview:NspLink"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230801preview:NetworkSecurityPerimeterLink"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230801preview:NspLink"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240601preview:NetworkSecurityPerimeterLink"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240701:NetworkSecurityPerimeterLink"),
		},
		{
			Type: pulumi.String("azure-native:network:NspLink"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NetworkSecurityPerimeterLink
	err := ctx.RegisterResource("azure-native:network:NetworkSecurityPerimeterLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSecurityPerimeterLink gets an existing NetworkSecurityPerimeterLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityPerimeterLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSecurityPerimeterLinkState, opts ...pulumi.ResourceOption) (*NetworkSecurityPerimeterLink, error) {
	var resource NetworkSecurityPerimeterLink
	err := ctx.ReadResource("azure-native:network:NetworkSecurityPerimeterLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSecurityPerimeterLink resources.
type networkSecurityPerimeterLinkState struct {
}

type NetworkSecurityPerimeterLinkState struct {
}

func (NetworkSecurityPerimeterLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityPerimeterLinkState)(nil)).Elem()
}

type networkSecurityPerimeterLinkArgs struct {
	// Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
	AutoApprovedRemotePerimeterResourceId *string `pulumi:"autoApprovedRemotePerimeterResourceId"`
	// A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The name of the NSP link.
	LinkName *string `pulumi:"linkName"`
	// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
	LocalInboundProfiles []string `pulumi:"localInboundProfiles"`
	// The name of the network security perimeter.
	NetworkSecurityPerimeterName string `pulumi:"networkSecurityPerimeterName"`
	// Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
	RemoteInboundProfiles []string `pulumi:"remoteInboundProfiles"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a NetworkSecurityPerimeterLink resource.
type NetworkSecurityPerimeterLinkArgs struct {
	// Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
	AutoApprovedRemotePerimeterResourceId pulumi.StringPtrInput
	// A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
	Description pulumi.StringPtrInput
	// The name of the NSP link.
	LinkName pulumi.StringPtrInput
	// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
	LocalInboundProfiles pulumi.StringArrayInput
	// The name of the network security perimeter.
	NetworkSecurityPerimeterName pulumi.StringInput
	// Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
	RemoteInboundProfiles pulumi.StringArrayInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (NetworkSecurityPerimeterLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityPerimeterLinkArgs)(nil)).Elem()
}

type NetworkSecurityPerimeterLinkInput interface {
	pulumi.Input

	ToNetworkSecurityPerimeterLinkOutput() NetworkSecurityPerimeterLinkOutput
	ToNetworkSecurityPerimeterLinkOutputWithContext(ctx context.Context) NetworkSecurityPerimeterLinkOutput
}

func (*NetworkSecurityPerimeterLink) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityPerimeterLink)(nil)).Elem()
}

func (i *NetworkSecurityPerimeterLink) ToNetworkSecurityPerimeterLinkOutput() NetworkSecurityPerimeterLinkOutput {
	return i.ToNetworkSecurityPerimeterLinkOutputWithContext(context.Background())
}

func (i *NetworkSecurityPerimeterLink) ToNetworkSecurityPerimeterLinkOutputWithContext(ctx context.Context) NetworkSecurityPerimeterLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPerimeterLinkOutput)
}

type NetworkSecurityPerimeterLinkOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPerimeterLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityPerimeterLink)(nil)).Elem()
}

func (o NetworkSecurityPerimeterLinkOutput) ToNetworkSecurityPerimeterLinkOutput() NetworkSecurityPerimeterLinkOutput {
	return o
}

func (o NetworkSecurityPerimeterLinkOutput) ToNetworkSecurityPerimeterLinkOutputWithContext(ctx context.Context) NetworkSecurityPerimeterLinkOutput {
	return o
}

// Perimeter ARM Id for the remote NSP with which the link gets created in Auto-approval mode. It should be used when the NSP admin have Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP resource.
func (o NetworkSecurityPerimeterLinkOutput) AutoApprovedRemotePerimeterResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringPtrOutput {
		return v.AutoApprovedRemotePerimeterResourceId
	}).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o NetworkSecurityPerimeterLinkOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A message passed to the owner of the remote NSP link resource with this connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted to 140 chars.
func (o NetworkSecurityPerimeterLinkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityPerimeterLinkOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
func (o NetworkSecurityPerimeterLinkOutput) LocalInboundProfiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringArrayOutput { return v.LocalInboundProfiles }).(pulumi.StringArrayOutput)
}

// Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
func (o NetworkSecurityPerimeterLinkOutput) LocalOutboundProfiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringArrayOutput { return v.LocalOutboundProfiles }).(pulumi.StringArrayOutput)
}

// Resource name.
func (o NetworkSecurityPerimeterLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the NSP Link resource.
func (o NetworkSecurityPerimeterLinkOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Remote Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. This property can only be updated in auto-approval mode.
func (o NetworkSecurityPerimeterLinkOutput) RemoteInboundProfiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringArrayOutput { return v.RemoteInboundProfiles }).(pulumi.StringArrayOutput)
}

// Remote Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
func (o NetworkSecurityPerimeterLinkOutput) RemoteOutboundProfiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringArrayOutput { return v.RemoteOutboundProfiles }).(pulumi.StringArrayOutput)
}

// Remote NSP Guid with which the link gets created.
func (o NetworkSecurityPerimeterLinkOutput) RemotePerimeterGuid() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.RemotePerimeterGuid }).(pulumi.StringOutput)
}

// Remote NSP location with which the link gets created.
func (o NetworkSecurityPerimeterLinkOutput) RemotePerimeterLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.RemotePerimeterLocation }).(pulumi.StringOutput)
}

// The NSP link state.
func (o NetworkSecurityPerimeterLinkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Resource type.
func (o NetworkSecurityPerimeterLinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterLink) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkSecurityPerimeterLinkOutput{})
}
