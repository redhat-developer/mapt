// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// An A record.
type ARecord struct {
	// The IPv4 address of this A record.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// ARecordInput is an input type that accepts ARecordArgs and ARecordOutput values.
// You can construct a concrete instance of `ARecordInput` via:
//
//	ARecordArgs{...}
type ARecordInput interface {
	pulumi.Input

	ToARecordOutput() ARecordOutput
	ToARecordOutputWithContext(context.Context) ARecordOutput
}

// An A record.
type ARecordArgs struct {
	// The IPv4 address of this A record.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (ARecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecord)(nil)).Elem()
}

func (i ARecordArgs) ToARecordOutput() ARecordOutput {
	return i.ToARecordOutputWithContext(context.Background())
}

func (i ARecordArgs) ToARecordOutputWithContext(ctx context.Context) ARecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordOutput)
}

// ARecordArrayInput is an input type that accepts ARecordArray and ARecordArrayOutput values.
// You can construct a concrete instance of `ARecordArrayInput` via:
//
//	ARecordArray{ ARecordArgs{...} }
type ARecordArrayInput interface {
	pulumi.Input

	ToARecordArrayOutput() ARecordArrayOutput
	ToARecordArrayOutputWithContext(context.Context) ARecordArrayOutput
}

type ARecordArray []ARecordInput

func (ARecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecord)(nil)).Elem()
}

func (i ARecordArray) ToARecordArrayOutput() ARecordArrayOutput {
	return i.ToARecordArrayOutputWithContext(context.Background())
}

func (i ARecordArray) ToARecordArrayOutputWithContext(ctx context.Context) ARecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordArrayOutput)
}

// An A record.
type ARecordOutput struct{ *pulumi.OutputState }

func (ARecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecord)(nil)).Elem()
}

func (o ARecordOutput) ToARecordOutput() ARecordOutput {
	return o
}

func (o ARecordOutput) ToARecordOutputWithContext(ctx context.Context) ARecordOutput {
	return o
}

// The IPv4 address of this A record.
func (o ARecordOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ARecord) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type ARecordArrayOutput struct{ *pulumi.OutputState }

func (ARecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecord)(nil)).Elem()
}

func (o ARecordArrayOutput) ToARecordArrayOutput() ARecordArrayOutput {
	return o
}

func (o ARecordArrayOutput) ToARecordArrayOutputWithContext(ctx context.Context) ARecordArrayOutput {
	return o
}

func (o ARecordArrayOutput) Index(i pulumi.IntInput) ARecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ARecord {
		return vs[0].([]ARecord)[vs[1].(int)]
	}).(ARecordOutput)
}

// An A record.
type ARecordResponse struct {
	// The IPv4 address of this A record.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// An A record.
type ARecordResponseOutput struct{ *pulumi.OutputState }

func (ARecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecordResponse)(nil)).Elem()
}

func (o ARecordResponseOutput) ToARecordResponseOutput() ARecordResponseOutput {
	return o
}

func (o ARecordResponseOutput) ToARecordResponseOutputWithContext(ctx context.Context) ARecordResponseOutput {
	return o
}

// The IPv4 address of this A record.
func (o ARecordResponseOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ARecordResponse) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type ARecordResponseArrayOutput struct{ *pulumi.OutputState }

func (ARecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecordResponse)(nil)).Elem()
}

func (o ARecordResponseArrayOutput) ToARecordResponseArrayOutput() ARecordResponseArrayOutput {
	return o
}

func (o ARecordResponseArrayOutput) ToARecordResponseArrayOutputWithContext(ctx context.Context) ARecordResponseArrayOutput {
	return o
}

func (o ARecordResponseArrayOutput) Index(i pulumi.IntInput) ARecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ARecordResponse {
		return vs[0].([]ARecordResponse)[vs[1].(int)]
	}).(ARecordResponseOutput)
}

// An AAAA record.
type AaaaRecord struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address *string `pulumi:"ipv6Address"`
}

// AaaaRecordInput is an input type that accepts AaaaRecordArgs and AaaaRecordOutput values.
// You can construct a concrete instance of `AaaaRecordInput` via:
//
//	AaaaRecordArgs{...}
type AaaaRecordInput interface {
	pulumi.Input

	ToAaaaRecordOutput() AaaaRecordOutput
	ToAaaaRecordOutputWithContext(context.Context) AaaaRecordOutput
}

// An AAAA record.
type AaaaRecordArgs struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
}

func (AaaaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecord)(nil)).Elem()
}

func (i AaaaRecordArgs) ToAaaaRecordOutput() AaaaRecordOutput {
	return i.ToAaaaRecordOutputWithContext(context.Background())
}

func (i AaaaRecordArgs) ToAaaaRecordOutputWithContext(ctx context.Context) AaaaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordOutput)
}

// AaaaRecordArrayInput is an input type that accepts AaaaRecordArray and AaaaRecordArrayOutput values.
// You can construct a concrete instance of `AaaaRecordArrayInput` via:
//
//	AaaaRecordArray{ AaaaRecordArgs{...} }
type AaaaRecordArrayInput interface {
	pulumi.Input

	ToAaaaRecordArrayOutput() AaaaRecordArrayOutput
	ToAaaaRecordArrayOutputWithContext(context.Context) AaaaRecordArrayOutput
}

type AaaaRecordArray []AaaaRecordInput

func (AaaaRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecord)(nil)).Elem()
}

func (i AaaaRecordArray) ToAaaaRecordArrayOutput() AaaaRecordArrayOutput {
	return i.ToAaaaRecordArrayOutputWithContext(context.Background())
}

func (i AaaaRecordArray) ToAaaaRecordArrayOutputWithContext(ctx context.Context) AaaaRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordArrayOutput)
}

// An AAAA record.
type AaaaRecordOutput struct{ *pulumi.OutputState }

func (AaaaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecord)(nil)).Elem()
}

func (o AaaaRecordOutput) ToAaaaRecordOutput() AaaaRecordOutput {
	return o
}

func (o AaaaRecordOutput) ToAaaaRecordOutputWithContext(ctx context.Context) AaaaRecordOutput {
	return o
}

// The IPv6 address of this AAAA record.
func (o AaaaRecordOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AaaaRecord) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

type AaaaRecordArrayOutput struct{ *pulumi.OutputState }

func (AaaaRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecord)(nil)).Elem()
}

func (o AaaaRecordArrayOutput) ToAaaaRecordArrayOutput() AaaaRecordArrayOutput {
	return o
}

func (o AaaaRecordArrayOutput) ToAaaaRecordArrayOutputWithContext(ctx context.Context) AaaaRecordArrayOutput {
	return o
}

func (o AaaaRecordArrayOutput) Index(i pulumi.IntInput) AaaaRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AaaaRecord {
		return vs[0].([]AaaaRecord)[vs[1].(int)]
	}).(AaaaRecordOutput)
}

// An AAAA record.
type AaaaRecordResponse struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address *string `pulumi:"ipv6Address"`
}

// An AAAA record.
type AaaaRecordResponseOutput struct{ *pulumi.OutputState }

func (AaaaRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecordResponse)(nil)).Elem()
}

func (o AaaaRecordResponseOutput) ToAaaaRecordResponseOutput() AaaaRecordResponseOutput {
	return o
}

func (o AaaaRecordResponseOutput) ToAaaaRecordResponseOutputWithContext(ctx context.Context) AaaaRecordResponseOutput {
	return o
}

// The IPv6 address of this AAAA record.
func (o AaaaRecordResponseOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AaaaRecordResponse) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

type AaaaRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (AaaaRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecordResponse)(nil)).Elem()
}

func (o AaaaRecordResponseArrayOutput) ToAaaaRecordResponseArrayOutput() AaaaRecordResponseArrayOutput {
	return o
}

func (o AaaaRecordResponseArrayOutput) ToAaaaRecordResponseArrayOutputWithContext(ctx context.Context) AaaaRecordResponseArrayOutput {
	return o
}

func (o AaaaRecordResponseArrayOutput) Index(i pulumi.IntInput) AaaaRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AaaaRecordResponse {
		return vs[0].([]AaaaRecordResponse)[vs[1].(int)]
	}).(AaaaRecordResponseOutput)
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParameters struct {
	// AAD Vpn authentication parameter AAD audience.
	AadAudience *string `pulumi:"aadAudience"`
	// AAD Vpn authentication parameter AAD issuer.
	AadIssuer *string `pulumi:"aadIssuer"`
	// AAD Vpn authentication parameter AAD tenant.
	AadTenant *string `pulumi:"aadTenant"`
}

// AadAuthenticationParametersInput is an input type that accepts AadAuthenticationParametersArgs and AadAuthenticationParametersOutput values.
// You can construct a concrete instance of `AadAuthenticationParametersInput` via:
//
//	AadAuthenticationParametersArgs{...}
type AadAuthenticationParametersInput interface {
	pulumi.Input

	ToAadAuthenticationParametersOutput() AadAuthenticationParametersOutput
	ToAadAuthenticationParametersOutputWithContext(context.Context) AadAuthenticationParametersOutput
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersArgs struct {
	// AAD Vpn authentication parameter AAD audience.
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// AAD Vpn authentication parameter AAD issuer.
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// AAD Vpn authentication parameter AAD tenant.
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
}

func (AadAuthenticationParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AadAuthenticationParameters)(nil)).Elem()
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersOutput() AadAuthenticationParametersOutput {
	return i.ToAadAuthenticationParametersOutputWithContext(context.Background())
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersOutputWithContext(ctx context.Context) AadAuthenticationParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersOutput)
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return i.ToAadAuthenticationParametersPtrOutputWithContext(context.Background())
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersOutput).ToAadAuthenticationParametersPtrOutputWithContext(ctx)
}

// AadAuthenticationParametersPtrInput is an input type that accepts AadAuthenticationParametersArgs, AadAuthenticationParametersPtr and AadAuthenticationParametersPtrOutput values.
// You can construct a concrete instance of `AadAuthenticationParametersPtrInput` via:
//
//	        AadAuthenticationParametersArgs{...}
//
//	or:
//
//	        nil
type AadAuthenticationParametersPtrInput interface {
	pulumi.Input

	ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput
	ToAadAuthenticationParametersPtrOutputWithContext(context.Context) AadAuthenticationParametersPtrOutput
}

type aadAuthenticationParametersPtrType AadAuthenticationParametersArgs

func AadAuthenticationParametersPtr(v *AadAuthenticationParametersArgs) AadAuthenticationParametersPtrInput {
	return (*aadAuthenticationParametersPtrType)(v)
}

func (*aadAuthenticationParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AadAuthenticationParameters)(nil)).Elem()
}

func (i *aadAuthenticationParametersPtrType) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return i.ToAadAuthenticationParametersPtrOutputWithContext(context.Background())
}

func (i *aadAuthenticationParametersPtrType) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersPtrOutput)
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AadAuthenticationParameters)(nil)).Elem()
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersOutput() AadAuthenticationParametersOutput {
	return o
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersOutputWithContext(ctx context.Context) AadAuthenticationParametersOutput {
	return o
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return o.ToAadAuthenticationParametersPtrOutputWithContext(context.Background())
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AadAuthenticationParameters) *AadAuthenticationParameters {
		return &v
	}).(AadAuthenticationParametersPtrOutput)
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParameters) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParameters) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParameters) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

type AadAuthenticationParametersPtrOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AadAuthenticationParameters)(nil)).Elem()
}

func (o AadAuthenticationParametersPtrOutput) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return o
}

func (o AadAuthenticationParametersPtrOutput) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return o
}

func (o AadAuthenticationParametersPtrOutput) Elem() AadAuthenticationParametersOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) AadAuthenticationParameters {
		if v != nil {
			return *v
		}
		var ret AadAuthenticationParameters
		return ret
	}).(AadAuthenticationParametersOutput)
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersPtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersPtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersPtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersResponse struct {
	// AAD Vpn authentication parameter AAD audience.
	AadAudience *string `pulumi:"aadAudience"`
	// AAD Vpn authentication parameter AAD issuer.
	AadIssuer *string `pulumi:"aadIssuer"`
	// AAD Vpn authentication parameter AAD tenant.
	AadTenant *string `pulumi:"aadTenant"`
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersResponseOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AadAuthenticationParametersResponse)(nil)).Elem()
}

func (o AadAuthenticationParametersResponseOutput) ToAadAuthenticationParametersResponseOutput() AadAuthenticationParametersResponseOutput {
	return o
}

func (o AadAuthenticationParametersResponseOutput) ToAadAuthenticationParametersResponseOutputWithContext(ctx context.Context) AadAuthenticationParametersResponseOutput {
	return o
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersResponseOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParametersResponse) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersResponseOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParametersResponse) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersResponseOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParametersResponse) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

type AadAuthenticationParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AadAuthenticationParametersResponse)(nil)).Elem()
}

func (o AadAuthenticationParametersResponsePtrOutput) ToAadAuthenticationParametersResponsePtrOutput() AadAuthenticationParametersResponsePtrOutput {
	return o
}

func (o AadAuthenticationParametersResponsePtrOutput) ToAadAuthenticationParametersResponsePtrOutputWithContext(ctx context.Context) AadAuthenticationParametersResponsePtrOutput {
	return o
}

func (o AadAuthenticationParametersResponsePtrOutput) Elem() AadAuthenticationParametersResponseOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) AadAuthenticationParametersResponse {
		if v != nil {
			return *v
		}
		var ret AadAuthenticationParametersResponse
		return ret
	}).(AadAuthenticationParametersResponseOutput)
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersResponsePtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersResponsePtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersResponsePtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// Action to be taken on a route matching a RouteMap criterion.
type Action struct {
	// List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added
	Parameters []Parameter `pulumi:"parameters"`
	// Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'
	Type *string `pulumi:"type"`
}

// ActionInput is an input type that accepts ActionArgs and ActionOutput values.
// You can construct a concrete instance of `ActionInput` via:
//
//	ActionArgs{...}
type ActionInput interface {
	pulumi.Input

	ToActionOutput() ActionOutput
	ToActionOutputWithContext(context.Context) ActionOutput
}

// Action to be taken on a route matching a RouteMap criterion.
type ActionArgs struct {
	// List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added
	Parameters ParameterArrayInput `pulumi:"parameters"`
	// Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (i ActionArgs) ToActionOutput() ActionOutput {
	return i.ToActionOutputWithContext(context.Background())
}

func (i ActionArgs) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionOutput)
}

// ActionArrayInput is an input type that accepts ActionArray and ActionArrayOutput values.
// You can construct a concrete instance of `ActionArrayInput` via:
//
//	ActionArray{ ActionArgs{...} }
type ActionArrayInput interface {
	pulumi.Input

	ToActionArrayOutput() ActionArrayOutput
	ToActionArrayOutputWithContext(context.Context) ActionArrayOutput
}

type ActionArray []ActionInput

func (ActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Action)(nil)).Elem()
}

func (i ActionArray) ToActionArrayOutput() ActionArrayOutput {
	return i.ToActionArrayOutputWithContext(context.Background())
}

func (i ActionArray) ToActionArrayOutputWithContext(ctx context.Context) ActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionArrayOutput)
}

// Action to be taken on a route matching a RouteMap criterion.
type ActionOutput struct{ *pulumi.OutputState }

func (ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (o ActionOutput) ToActionOutput() ActionOutput {
	return o
}

func (o ActionOutput) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return o
}

// List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added
func (o ActionOutput) Parameters() ParameterArrayOutput {
	return o.ApplyT(func(v Action) []Parameter { return v.Parameters }).(ParameterArrayOutput)
}

// Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'
func (o ActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Action) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ActionArrayOutput struct{ *pulumi.OutputState }

func (ActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Action)(nil)).Elem()
}

func (o ActionArrayOutput) ToActionArrayOutput() ActionArrayOutput {
	return o
}

func (o ActionArrayOutput) ToActionArrayOutputWithContext(ctx context.Context) ActionArrayOutput {
	return o
}

func (o ActionArrayOutput) Index(i pulumi.IntInput) ActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Action {
		return vs[0].([]Action)[vs[1].(int)]
	}).(ActionOutput)
}

// Action to be taken on a route matching a RouteMap criterion.
type ActionResponse struct {
	// List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added
	Parameters []ParameterResponse `pulumi:"parameters"`
	// Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'
	Type *string `pulumi:"type"`
}

// Action to be taken on a route matching a RouteMap criterion.
type ActionResponseOutput struct{ *pulumi.OutputState }

func (ActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionResponse)(nil)).Elem()
}

func (o ActionResponseOutput) ToActionResponseOutput() ActionResponseOutput {
	return o
}

func (o ActionResponseOutput) ToActionResponseOutputWithContext(ctx context.Context) ActionResponseOutput {
	return o
}

// List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added
func (o ActionResponseOutput) Parameters() ParameterResponseArrayOutput {
	return o.ApplyT(func(v ActionResponse) []ParameterResponse { return v.Parameters }).(ParameterResponseArrayOutput)
}

// Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'
func (o ActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ActionResponseArrayOutput struct{ *pulumi.OutputState }

func (ActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionResponse)(nil)).Elem()
}

func (o ActionResponseArrayOutput) ToActionResponseArrayOutput() ActionResponseArrayOutput {
	return o
}

func (o ActionResponseArrayOutput) ToActionResponseArrayOutputWithContext(ctx context.Context) ActionResponseArrayOutput {
	return o
}

func (o ActionResponseArrayOutput) Index(i pulumi.IntInput) ActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionResponse {
		return vs[0].([]ActionResponse)[vs[1].(int)]
	}).(ActionResponseOutput)
}

// Active connectivity configuration.
type ActiveConnectivityConfigurationResponse struct {
	// Groups for configuration
	AppliesToGroups []ConnectivityGroupItemResponse `pulumi:"appliesToGroups"`
	// Deployment time string.
	CommitTime *string `pulumi:"commitTime"`
	// Effective configuration groups.
	ConfigurationGroups []ConfigurationGroupResponse `pulumi:"configurationGroups"`
	// Connectivity topology type.
	ConnectivityTopology string `pulumi:"connectivityTopology"`
	// Flag if need to remove current existing peerings.
	DeleteExistingPeering *string `pulumi:"deleteExistingPeering"`
	// A description of the connectivity configuration.
	Description *string `pulumi:"description"`
	// A friendly name for the resource.
	DisplayName *string `pulumi:"displayName"`
	// List of hubItems
	Hubs []HubResponse `pulumi:"hubs"`
	// Connectivity configuration ID.
	Id *string `pulumi:"id"`
	// Flag if global mesh is supported.
	IsGlobal *string `pulumi:"isGlobal"`
	// The provisioning state of the connectivity configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deployment region.
	Region *string `pulumi:"region"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
}

// Active connectivity configuration.
type ActiveConnectivityConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ActiveConnectivityConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveConnectivityConfigurationResponse)(nil)).Elem()
}

func (o ActiveConnectivityConfigurationResponseOutput) ToActiveConnectivityConfigurationResponseOutput() ActiveConnectivityConfigurationResponseOutput {
	return o
}

func (o ActiveConnectivityConfigurationResponseOutput) ToActiveConnectivityConfigurationResponseOutputWithContext(ctx context.Context) ActiveConnectivityConfigurationResponseOutput {
	return o
}

// Groups for configuration
func (o ActiveConnectivityConfigurationResponseOutput) AppliesToGroups() ConnectivityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) []ConnectivityGroupItemResponse {
		return v.AppliesToGroups
	}).(ConnectivityGroupItemResponseArrayOutput)
}

// Deployment time string.
func (o ActiveConnectivityConfigurationResponseOutput) CommitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) *string { return v.CommitTime }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o ActiveConnectivityConfigurationResponseOutput) ConfigurationGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) []ConfigurationGroupResponse {
		return v.ConfigurationGroups
	}).(ConfigurationGroupResponseArrayOutput)
}

// Connectivity topology type.
func (o ActiveConnectivityConfigurationResponseOutput) ConnectivityTopology() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) string { return v.ConnectivityTopology }).(pulumi.StringOutput)
}

// Flag if need to remove current existing peerings.
func (o ActiveConnectivityConfigurationResponseOutput) DeleteExistingPeering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) *string { return v.DeleteExistingPeering }).(pulumi.StringPtrOutput)
}

// A description of the connectivity configuration.
func (o ActiveConnectivityConfigurationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A friendly name for the resource.
func (o ActiveConnectivityConfigurationResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// List of hubItems
func (o ActiveConnectivityConfigurationResponseOutput) Hubs() HubResponseArrayOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) []HubResponse { return v.Hubs }).(HubResponseArrayOutput)
}

// Connectivity configuration ID.
func (o ActiveConnectivityConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Flag if global mesh is supported.
func (o ActiveConnectivityConfigurationResponseOutput) IsGlobal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) *string { return v.IsGlobal }).(pulumi.StringPtrOutput)
}

// The provisioning state of the connectivity configuration resource.
func (o ActiveConnectivityConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment region.
func (o ActiveConnectivityConfigurationResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Unique identifier for this resource.
func (o ActiveConnectivityConfigurationResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveConnectivityConfigurationResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

type ActiveConnectivityConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ActiveConnectivityConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActiveConnectivityConfigurationResponse)(nil)).Elem()
}

func (o ActiveConnectivityConfigurationResponseArrayOutput) ToActiveConnectivityConfigurationResponseArrayOutput() ActiveConnectivityConfigurationResponseArrayOutput {
	return o
}

func (o ActiveConnectivityConfigurationResponseArrayOutput) ToActiveConnectivityConfigurationResponseArrayOutputWithContext(ctx context.Context) ActiveConnectivityConfigurationResponseArrayOutput {
	return o
}

func (o ActiveConnectivityConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ActiveConnectivityConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActiveConnectivityConfigurationResponse {
		return vs[0].([]ActiveConnectivityConfigurationResponse)[vs[1].(int)]
	}).(ActiveConnectivityConfigurationResponseOutput)
}

// Network default admin rule.
type ActiveDefaultSecurityAdminRuleResponse struct {
	// Indicates the access allowed for this particular rule
	Access string `pulumi:"access"`
	// Deployment time string.
	CommitTime *string `pulumi:"commitTime"`
	// A description of the security admin configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A display name of the security admin configuration.
	ConfigurationDisplayName *string `pulumi:"configurationDisplayName"`
	// A description for this rule. Restricted to 140 chars.
	Description string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// Default rule flag.
	Flag *string `pulumi:"flag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Default'.
	Kind string `pulumi:"kind"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deployment region.
	Region *string `pulumi:"region"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// A display name of the rule collection.
	RuleCollectionDisplayName *string `pulumi:"ruleCollectionDisplayName"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network default admin rule.
type ActiveDefaultSecurityAdminRuleResponseOutput struct{ *pulumi.OutputState }

func (ActiveDefaultSecurityAdminRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDefaultSecurityAdminRuleResponse)(nil)).Elem()
}

func (o ActiveDefaultSecurityAdminRuleResponseOutput) ToActiveDefaultSecurityAdminRuleResponseOutput() ActiveDefaultSecurityAdminRuleResponseOutput {
	return o
}

func (o ActiveDefaultSecurityAdminRuleResponseOutput) ToActiveDefaultSecurityAdminRuleResponseOutputWithContext(ctx context.Context) ActiveDefaultSecurityAdminRuleResponseOutput {
	return o
}

// Indicates the access allowed for this particular rule
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// Deployment time string.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) CommitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.CommitTime }).(pulumi.StringPtrOutput)
}

// A description of the security admin configuration.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A display name of the security admin configuration.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) ConfigurationDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.ConfigurationDisplayName }).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The destination port ranges.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A friendly name for the rule.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Default rule flag.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Flag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.Flag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Default'.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment region.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Unique identifier for this resource.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Groups for rule collection
func (o ActiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// A display name of the rule collection.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) *string { return v.RuleCollectionDisplayName }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o ActiveDefaultSecurityAdminRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Network security default user rule.
type ActiveDefaultSecurityUserRuleResponse struct {
	// Deployment time string.
	CommitTime *string `pulumi:"commitTime"`
	// A description of the security user configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A display name of the security user configuration.
	ConfigurationDisplayName *string `pulumi:"configurationDisplayName"`
	// A description for this rule. Restricted to 140 chars.
	Description string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// Default rule flag.
	Flag *string `pulumi:"flag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Default'.
	Kind string `pulumi:"kind"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security configuration user rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deployment region.
	Region *string `pulumi:"region"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// A display name of the rule collection.
	RuleCollectionDisplayName *string `pulumi:"ruleCollectionDisplayName"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network security default user rule.
type ActiveDefaultSecurityUserRuleResponseOutput struct{ *pulumi.OutputState }

func (ActiveDefaultSecurityUserRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDefaultSecurityUserRuleResponse)(nil)).Elem()
}

func (o ActiveDefaultSecurityUserRuleResponseOutput) ToActiveDefaultSecurityUserRuleResponseOutput() ActiveDefaultSecurityUserRuleResponseOutput {
	return o
}

func (o ActiveDefaultSecurityUserRuleResponseOutput) ToActiveDefaultSecurityUserRuleResponseOutputWithContext(ctx context.Context) ActiveDefaultSecurityUserRuleResponseOutput {
	return o
}

// Deployment time string.
func (o ActiveDefaultSecurityUserRuleResponseOutput) CommitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.CommitTime }).(pulumi.StringPtrOutput)
}

// A description of the security user configuration.
func (o ActiveDefaultSecurityUserRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A display name of the security user configuration.
func (o ActiveDefaultSecurityUserRuleResponseOutput) ConfigurationDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.ConfigurationDisplayName }).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The destination port ranges.
func (o ActiveDefaultSecurityUserRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A friendly name for the rule.
func (o ActiveDefaultSecurityUserRuleResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Default rule flag.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Flag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.Flag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Default'.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Network protocol this rule applies to.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security configuration user rule resource.
func (o ActiveDefaultSecurityUserRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment region.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Groups for rule collection
func (o ActiveDefaultSecurityUserRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o ActiveDefaultSecurityUserRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// A display name of the rule collection.
func (o ActiveDefaultSecurityUserRuleResponseOutput) RuleCollectionDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) *string { return v.RuleCollectionDisplayName }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o ActiveDefaultSecurityUserRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o ActiveDefaultSecurityUserRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o ActiveDefaultSecurityUserRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveDefaultSecurityUserRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Network admin rule.
type ActiveSecurityAdminRuleResponse struct {
	// Indicates the access allowed for this particular rule
	Access string `pulumi:"access"`
	// Deployment time string.
	CommitTime *string `pulumi:"commitTime"`
	// A description of the security admin configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A display name of the security admin configuration.
	ConfigurationDisplayName *string `pulumi:"configurationDisplayName"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Custom'.
	Kind string `pulumi:"kind"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deployment region.
	Region *string `pulumi:"region"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// A display name of the rule collection.
	RuleCollectionDisplayName *string `pulumi:"ruleCollectionDisplayName"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network admin rule.
type ActiveSecurityAdminRuleResponseOutput struct{ *pulumi.OutputState }

func (ActiveSecurityAdminRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveSecurityAdminRuleResponse)(nil)).Elem()
}

func (o ActiveSecurityAdminRuleResponseOutput) ToActiveSecurityAdminRuleResponseOutput() ActiveSecurityAdminRuleResponseOutput {
	return o
}

func (o ActiveSecurityAdminRuleResponseOutput) ToActiveSecurityAdminRuleResponseOutputWithContext(ctx context.Context) ActiveSecurityAdminRuleResponseOutput {
	return o
}

// Indicates the access allowed for this particular rule
func (o ActiveSecurityAdminRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// Deployment time string.
func (o ActiveSecurityAdminRuleResponseOutput) CommitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.CommitTime }).(pulumi.StringPtrOutput)
}

// A description of the security admin configuration.
func (o ActiveSecurityAdminRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A display name of the security admin configuration.
func (o ActiveSecurityAdminRuleResponseOutput) ConfigurationDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.ConfigurationDisplayName }).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o ActiveSecurityAdminRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o ActiveSecurityAdminRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o ActiveSecurityAdminRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o ActiveSecurityAdminRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A friendly name for the rule.
func (o ActiveSecurityAdminRuleResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ActiveSecurityAdminRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Custom'.
func (o ActiveSecurityAdminRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o ActiveSecurityAdminRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o ActiveSecurityAdminRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o ActiveSecurityAdminRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment region.
func (o ActiveSecurityAdminRuleResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Unique identifier for this resource.
func (o ActiveSecurityAdminRuleResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Groups for rule collection
func (o ActiveSecurityAdminRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o ActiveSecurityAdminRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// A display name of the rule collection.
func (o ActiveSecurityAdminRuleResponseOutput) RuleCollectionDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) *string { return v.RuleCollectionDisplayName }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o ActiveSecurityAdminRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o ActiveSecurityAdminRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o ActiveSecurityAdminRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Network security user rule.
type ActiveSecurityUserRuleResponse struct {
	// Deployment time string.
	CommitTime *string `pulumi:"commitTime"`
	// A description of the security user configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A display name of the security user configuration.
	ConfigurationDisplayName *string `pulumi:"configurationDisplayName"`
	// A description for this rule.
	Description *string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Custom'.
	Kind string `pulumi:"kind"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security configuration user rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deployment region.
	Region *string `pulumi:"region"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// A display name of the rule collection.
	RuleCollectionDisplayName *string `pulumi:"ruleCollectionDisplayName"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network security user rule.
type ActiveSecurityUserRuleResponseOutput struct{ *pulumi.OutputState }

func (ActiveSecurityUserRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveSecurityUserRuleResponse)(nil)).Elem()
}

func (o ActiveSecurityUserRuleResponseOutput) ToActiveSecurityUserRuleResponseOutput() ActiveSecurityUserRuleResponseOutput {
	return o
}

func (o ActiveSecurityUserRuleResponseOutput) ToActiveSecurityUserRuleResponseOutputWithContext(ctx context.Context) ActiveSecurityUserRuleResponseOutput {
	return o
}

// Deployment time string.
func (o ActiveSecurityUserRuleResponseOutput) CommitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.CommitTime }).(pulumi.StringPtrOutput)
}

// A description of the security user configuration.
func (o ActiveSecurityUserRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A display name of the security user configuration.
func (o ActiveSecurityUserRuleResponseOutput) ConfigurationDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.ConfigurationDisplayName }).(pulumi.StringPtrOutput)
}

// A description for this rule.
func (o ActiveSecurityUserRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o ActiveSecurityUserRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o ActiveSecurityUserRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o ActiveSecurityUserRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A friendly name for the rule.
func (o ActiveSecurityUserRuleResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ActiveSecurityUserRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Custom'.
func (o ActiveSecurityUserRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Network protocol this rule applies to.
func (o ActiveSecurityUserRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security configuration user rule resource.
func (o ActiveSecurityUserRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment region.
func (o ActiveSecurityUserRuleResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Groups for rule collection
func (o ActiveSecurityUserRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o ActiveSecurityUserRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// A display name of the rule collection.
func (o ActiveSecurityUserRuleResponseOutput) RuleCollectionDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) *string { return v.RuleCollectionDisplayName }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o ActiveSecurityUserRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o ActiveSecurityUserRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o ActiveSecurityUserRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v ActiveSecurityUserRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Address prefix item.
type AddressPrefixItem struct {
	// Address prefix.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Address prefix type.
	AddressPrefixType *string `pulumi:"addressPrefixType"`
}

// AddressPrefixItemInput is an input type that accepts AddressPrefixItemArgs and AddressPrefixItemOutput values.
// You can construct a concrete instance of `AddressPrefixItemInput` via:
//
//	AddressPrefixItemArgs{...}
type AddressPrefixItemInput interface {
	pulumi.Input

	ToAddressPrefixItemOutput() AddressPrefixItemOutput
	ToAddressPrefixItemOutputWithContext(context.Context) AddressPrefixItemOutput
}

// Address prefix item.
type AddressPrefixItemArgs struct {
	// Address prefix.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Address prefix type.
	AddressPrefixType pulumi.StringPtrInput `pulumi:"addressPrefixType"`
}

func (AddressPrefixItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPrefixItem)(nil)).Elem()
}

func (i AddressPrefixItemArgs) ToAddressPrefixItemOutput() AddressPrefixItemOutput {
	return i.ToAddressPrefixItemOutputWithContext(context.Background())
}

func (i AddressPrefixItemArgs) ToAddressPrefixItemOutputWithContext(ctx context.Context) AddressPrefixItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPrefixItemOutput)
}

// AddressPrefixItemArrayInput is an input type that accepts AddressPrefixItemArray and AddressPrefixItemArrayOutput values.
// You can construct a concrete instance of `AddressPrefixItemArrayInput` via:
//
//	AddressPrefixItemArray{ AddressPrefixItemArgs{...} }
type AddressPrefixItemArrayInput interface {
	pulumi.Input

	ToAddressPrefixItemArrayOutput() AddressPrefixItemArrayOutput
	ToAddressPrefixItemArrayOutputWithContext(context.Context) AddressPrefixItemArrayOutput
}

type AddressPrefixItemArray []AddressPrefixItemInput

func (AddressPrefixItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressPrefixItem)(nil)).Elem()
}

func (i AddressPrefixItemArray) ToAddressPrefixItemArrayOutput() AddressPrefixItemArrayOutput {
	return i.ToAddressPrefixItemArrayOutputWithContext(context.Background())
}

func (i AddressPrefixItemArray) ToAddressPrefixItemArrayOutputWithContext(ctx context.Context) AddressPrefixItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPrefixItemArrayOutput)
}

// Address prefix item.
type AddressPrefixItemOutput struct{ *pulumi.OutputState }

func (AddressPrefixItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPrefixItem)(nil)).Elem()
}

func (o AddressPrefixItemOutput) ToAddressPrefixItemOutput() AddressPrefixItemOutput {
	return o
}

func (o AddressPrefixItemOutput) ToAddressPrefixItemOutputWithContext(ctx context.Context) AddressPrefixItemOutput {
	return o
}

// Address prefix.
func (o AddressPrefixItemOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressPrefixItem) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Address prefix type.
func (o AddressPrefixItemOutput) AddressPrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressPrefixItem) *string { return v.AddressPrefixType }).(pulumi.StringPtrOutput)
}

type AddressPrefixItemArrayOutput struct{ *pulumi.OutputState }

func (AddressPrefixItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressPrefixItem)(nil)).Elem()
}

func (o AddressPrefixItemArrayOutput) ToAddressPrefixItemArrayOutput() AddressPrefixItemArrayOutput {
	return o
}

func (o AddressPrefixItemArrayOutput) ToAddressPrefixItemArrayOutputWithContext(ctx context.Context) AddressPrefixItemArrayOutput {
	return o
}

func (o AddressPrefixItemArrayOutput) Index(i pulumi.IntInput) AddressPrefixItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressPrefixItem {
		return vs[0].([]AddressPrefixItem)[vs[1].(int)]
	}).(AddressPrefixItemOutput)
}

// Address prefix item.
type AddressPrefixItemResponse struct {
	// Address prefix.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Address prefix type.
	AddressPrefixType *string `pulumi:"addressPrefixType"`
}

// Address prefix item.
type AddressPrefixItemResponseOutput struct{ *pulumi.OutputState }

func (AddressPrefixItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPrefixItemResponse)(nil)).Elem()
}

func (o AddressPrefixItemResponseOutput) ToAddressPrefixItemResponseOutput() AddressPrefixItemResponseOutput {
	return o
}

func (o AddressPrefixItemResponseOutput) ToAddressPrefixItemResponseOutputWithContext(ctx context.Context) AddressPrefixItemResponseOutput {
	return o
}

// Address prefix.
func (o AddressPrefixItemResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressPrefixItemResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Address prefix type.
func (o AddressPrefixItemResponseOutput) AddressPrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressPrefixItemResponse) *string { return v.AddressPrefixType }).(pulumi.StringPtrOutput)
}

type AddressPrefixItemResponseArrayOutput struct{ *pulumi.OutputState }

func (AddressPrefixItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressPrefixItemResponse)(nil)).Elem()
}

func (o AddressPrefixItemResponseArrayOutput) ToAddressPrefixItemResponseArrayOutput() AddressPrefixItemResponseArrayOutput {
	return o
}

func (o AddressPrefixItemResponseArrayOutput) ToAddressPrefixItemResponseArrayOutputWithContext(ctx context.Context) AddressPrefixItemResponseArrayOutput {
	return o
}

func (o AddressPrefixItemResponseArrayOutput) Index(i pulumi.IntInput) AddressPrefixItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressPrefixItemResponse {
		return vs[0].([]AddressPrefixItemResponse)[vs[1].(int)]
	}).(AddressPrefixItemResponseOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpace struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceInput is an input type that accepts AddressSpaceArgs and AddressSpaceOutput values.
// You can construct a concrete instance of `AddressSpaceInput` via:
//
//	AddressSpaceArgs{...}
type AddressSpaceInput interface {
	pulumi.Input

	ToAddressSpaceOutput() AddressSpaceOutput
	ToAddressSpaceOutputWithContext(context.Context) AddressSpaceOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (i AddressSpaceArgs) ToAddressSpaceOutput() AddressSpaceOutput {
	return i.ToAddressSpaceOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput)
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput).ToAddressSpacePtrOutputWithContext(ctx)
}

// AddressSpacePtrInput is an input type that accepts AddressSpaceArgs, AddressSpacePtr and AddressSpacePtrOutput values.
// You can construct a concrete instance of `AddressSpacePtrInput` via:
//
//	        AddressSpaceArgs{...}
//
//	or:
//
//	        nil
type AddressSpacePtrInput interface {
	pulumi.Input

	ToAddressSpacePtrOutput() AddressSpacePtrOutput
	ToAddressSpacePtrOutputWithContext(context.Context) AddressSpacePtrOutput
}

type addressSpacePtrType AddressSpaceArgs

func AddressSpacePtr(v *AddressSpaceArgs) AddressSpacePtrInput {
	return (*addressSpacePtrType)(v)
}

func (*addressSpacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpacePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceOutput struct{ *pulumi.OutputState }

func (AddressSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (o AddressSpaceOutput) ToAddressSpaceOutput() AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressSpace) *AddressSpace {
		return &v
	}).(AddressSpacePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpace) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpacePtrOutput struct{ *pulumi.OutputState }

func (AddressSpacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) Elem() AddressSpaceOutput {
	return o.ApplyT(func(v *AddressSpace) AddressSpace {
		if v != nil {
			return *v
		}
		var ret AddressSpace
		return ret
	}).(AddressSpaceOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpacePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpace) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponse struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return o
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpaceResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) Elem() AddressSpaceResponseOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) AddressSpaceResponse {
		if v != nil {
			return *v
		}
		var ret AddressSpaceResponse
		return ret
	}).(AddressSpaceResponseOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificate struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayAuthenticationCertificateInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArgs and ApplicationGatewayAuthenticationCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateInput` via:
//
//	ApplicationGatewayAuthenticationCertificateArgs{...}
type ApplicationGatewayAuthenticationCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput
	ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateOutput
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return i.ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateOutput)
}

// ApplicationGatewayAuthenticationCertificateArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArray and ApplicationGatewayAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateArrayInput` via:
//
//	ApplicationGatewayAuthenticationCertificateArray{ ApplicationGatewayAuthenticationCertificateArgs{...} }
type ApplicationGatewayAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput
	ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput
}

type ApplicationGatewayAuthenticationCertificateArray []ApplicationGatewayAuthenticationCertificateInput

func (ApplicationGatewayAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificate {
		return vs[0].([]ApplicationGatewayAuthenticationCertificate)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the authentication certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the authentication certificate resource.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayAuthenticationCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificateResponse {
		return vs[0].([]ApplicationGatewayAuthenticationCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateResponseOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfiguration struct {
	// Upper bound on number of Application Gateway capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity.
	MinCapacity int `pulumi:"minCapacity"`
}

// ApplicationGatewayAutoscaleConfigurationInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs and ApplicationGatewayAutoscaleConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationInput` via:
//
//	ApplicationGatewayAutoscaleConfigurationArgs{...}
type ApplicationGatewayAutoscaleConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput
	ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationOutput
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationArgs struct {
	// Upper bound on number of Application Gateway capacity.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity.
	MinCapacity pulumi.IntInput `pulumi:"minCapacity"`
}

func (ApplicationGatewayAutoscaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput).ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationPtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs, ApplicationGatewayAutoscaleConfigurationPtr and ApplicationGatewayAutoscaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationPtrInput` via:
//
//	        ApplicationGatewayAutoscaleConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayAutoscaleConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput
	ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput
}

type applicationGatewayAutoscaleConfigurationPtrType ApplicationGatewayAutoscaleConfigurationArgs

func ApplicationGatewayAutoscaleConfigurationPtr(v *ApplicationGatewayAutoscaleConfigurationArgs) ApplicationGatewayAutoscaleConfigurationPtrInput {
	return (*applicationGatewayAutoscaleConfigurationPtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayAutoscaleConfiguration) *ApplicationGatewayAutoscaleConfiguration {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) ApplicationGatewayAutoscaleConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayAutoscaleConfiguration
		return ret
	}).(ApplicationGatewayAutoscaleConfigurationOutput)
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponse struct {
	// Upper bound on number of Application Gateway capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity.
	MinCapacity int `pulumi:"minCapacity"`
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) ApplicationGatewayAutoscaleConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayAutoscaleConfigurationResponse
		return ret
	}).(ApplicationGatewayAutoscaleConfigurationResponseOutput)
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddress struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address.
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressInput is an input type that accepts ApplicationGatewayBackendAddressArgs and ApplicationGatewayBackendAddressOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressInput` via:
//
//	ApplicationGatewayBackendAddressArgs{...}
type ApplicationGatewayBackendAddressInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput
	ToApplicationGatewayBackendAddressOutputWithContext(context.Context) ApplicationGatewayBackendAddressOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return i.ToApplicationGatewayBackendAddressOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressOutput)
}

// ApplicationGatewayBackendAddressArrayInput is an input type that accepts ApplicationGatewayBackendAddressArray and ApplicationGatewayBackendAddressArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressArrayInput` via:
//
//	ApplicationGatewayBackendAddressArray{ ApplicationGatewayBackendAddressArgs{...} }
type ApplicationGatewayBackendAddressArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput
	ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressArrayOutput
}

type ApplicationGatewayBackendAddressArray []ApplicationGatewayBackendAddressInput

func (ApplicationGatewayBackendAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return i.ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return o
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address.
func (o ApplicationGatewayBackendAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddress {
		return vs[0].([]ApplicationGatewayBackendAddress)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPool struct {
	// Backend addresses.
	BackendAddresses []ApplicationGatewayBackendAddress `pulumi:"backendAddresses"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayBackendAddressPoolInput is an input type that accepts ApplicationGatewayBackendAddressPoolArgs and ApplicationGatewayBackendAddressPoolOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInput` via:
//
//	ApplicationGatewayBackendAddressPoolArgs{...}
type ApplicationGatewayBackendAddressPoolInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput
	ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolArgs struct {
	// Backend addresses.
	BackendAddresses ApplicationGatewayBackendAddressArrayInput `pulumi:"backendAddresses"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return i.ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolOutput)
}

// ApplicationGatewayBackendAddressPoolArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolArray and ApplicationGatewayBackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolArrayInput` via:
//
//	ApplicationGatewayBackendAddressPoolArray{ ApplicationGatewayBackendAddressPoolArgs{...} }
type ApplicationGatewayBackendAddressPoolArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput
	ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolArrayOutput
}

type ApplicationGatewayBackendAddressPoolArray []ApplicationGatewayBackendAddressPoolInput

func (ApplicationGatewayBackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return o
}

// Backend addresses.
func (o ApplicationGatewayBackendAddressPoolOutput) BackendAddresses() ApplicationGatewayBackendAddressArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []ApplicationGatewayBackendAddress {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPool {
		return vs[0].([]ApplicationGatewayBackendAddressPool)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponse struct {
	// Backend addresses.
	BackendAddresses []ApplicationGatewayBackendAddressResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

// Backend addresses.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []ApplicationGatewayBackendAddressResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend address pool resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendAddressPoolResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) ToApplicationGatewayBackendAddressPoolResponsePtrOutput() ApplicationGatewayBackendAddressPoolResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) ToApplicationGatewayBackendAddressPoolResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) Elem() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) ApplicationGatewayBackendAddressPoolResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayBackendAddressPoolResponse
		return ret
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend addresses.
func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) []ApplicationGatewayBackendAddressResponse {
		if v == nil {
			return nil
		}
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend address pool resource.
func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address.
	IpAddress *string `pulumi:"ipAddress"`
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address.
func (o ApplicationGatewayBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressResponse {
		return vs[0].([]ApplicationGatewayBackendAddressResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressResponseOutput)
}

// Application gateway BackendHealthHttp settings.
type ApplicationGatewayBackendHealthHttpSettingsResponse struct {
	// Reference to an ApplicationGatewayBackendHttpSettings resource.
	BackendHttpSettings *ApplicationGatewayBackendHttpSettingsResponse `pulumi:"backendHttpSettings"`
	// List of ApplicationGatewayBackendHealthServer resources.
	Servers []ApplicationGatewayBackendHealthServerResponse `pulumi:"servers"`
}

// Application gateway BackendHealthHttp settings.
type ApplicationGatewayBackendHealthHttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHealthHttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHealthHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) ToApplicationGatewayBackendHealthHttpSettingsResponseOutput() ApplicationGatewayBackendHealthHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) ToApplicationGatewayBackendHealthHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthHttpSettingsResponseOutput {
	return o
}

// Reference to an ApplicationGatewayBackendHttpSettings resource.
func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) BackendHttpSettings() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthHttpSettingsResponse) *ApplicationGatewayBackendHttpSettingsResponse {
		return v.BackendHttpSettings
	}).(ApplicationGatewayBackendHttpSettingsResponsePtrOutput)
}

// List of ApplicationGatewayBackendHealthServer resources.
func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) Servers() ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthHttpSettingsResponse) []ApplicationGatewayBackendHealthServerResponse {
		return v.Servers
	}).(ApplicationGatewayBackendHealthServerResponseArrayOutput)
}

type ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHealthHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput) ToApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput() ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput) ToApplicationGatewayBackendHealthHttpSettingsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput) Elem() ApplicationGatewayBackendHealthHttpSettingsResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHealthHttpSettingsResponse) ApplicationGatewayBackendHealthHttpSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayBackendHealthHttpSettingsResponse
		return ret
	}).(ApplicationGatewayBackendHealthHttpSettingsResponseOutput)
}

// Reference to an ApplicationGatewayBackendHttpSettings resource.
func (o ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput) BackendHttpSettings() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHealthHttpSettingsResponse) *ApplicationGatewayBackendHttpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BackendHttpSettings
	}).(ApplicationGatewayBackendHttpSettingsResponsePtrOutput)
}

// List of ApplicationGatewayBackendHealthServer resources.
func (o ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput) Servers() ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHealthHttpSettingsResponse) []ApplicationGatewayBackendHealthServerResponse {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(ApplicationGatewayBackendHealthServerResponseArrayOutput)
}

// Application gateway backendhealth http settings.
type ApplicationGatewayBackendHealthServerResponse struct {
	// IP address or FQDN of backend server.
	Address *string `pulumi:"address"`
	// Health of backend server.
	Health *string `pulumi:"health"`
	// Health Probe Log.
	HealthProbeLog *string `pulumi:"healthProbeLog"`
	// Reference to IP configuration of backend server.
	IpConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfiguration"`
}

// Defaults sets the appropriate defaults for ApplicationGatewayBackendHealthServerResponse
func (val *ApplicationGatewayBackendHealthServerResponse) Defaults() *ApplicationGatewayBackendHealthServerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.IpConfiguration = tmp.IpConfiguration.Defaults()

	return &tmp
}

// Application gateway backendhealth http settings.
type ApplicationGatewayBackendHealthServerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHealthServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHealthServerResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHealthServerResponseOutput) ToApplicationGatewayBackendHealthServerResponseOutput() ApplicationGatewayBackendHealthServerResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHealthServerResponseOutput) ToApplicationGatewayBackendHealthServerResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthServerResponseOutput {
	return o
}

// IP address or FQDN of backend server.
func (o ApplicationGatewayBackendHealthServerResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Health of backend server.
func (o ApplicationGatewayBackendHealthServerResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Health Probe Log.
func (o ApplicationGatewayBackendHealthServerResponseOutput) HealthProbeLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *string { return v.HealthProbeLog }).(pulumi.StringPtrOutput)
}

// Reference to IP configuration of backend server.
func (o ApplicationGatewayBackendHealthServerResponseOutput) IpConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.IpConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

type ApplicationGatewayBackendHealthServerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHealthServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHealthServerResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHealthServerResponseArrayOutput) ToApplicationGatewayBackendHealthServerResponseArrayOutput() ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHealthServerResponseArrayOutput) ToApplicationGatewayBackendHealthServerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHealthServerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHealthServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHealthServerResponse {
		return vs[0].([]ApplicationGatewayBackendHealthServerResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHealthServerResponseOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettings struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResource `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDraining `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResource `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend.
	Protocol *string `pulumi:"protocol"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResource `pulumi:"trustedRootCertificates"`
}

// ApplicationGatewayBackendHttpSettingsInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArgs and ApplicationGatewayBackendHttpSettingsOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsInput` via:
//
//	ApplicationGatewayBackendHttpSettingsArgs{...}
type ApplicationGatewayBackendHttpSettingsInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput
	ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsArgs struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates SubResourceArrayInput `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining ApplicationGatewayConnectionDrainingPtrInput `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled pulumi.BoolPtrInput `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates SubResourceArrayInput `pulumi:"trustedRootCertificates"`
}

func (ApplicationGatewayBackendHttpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return i.ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsOutput)
}

// ApplicationGatewayBackendHttpSettingsArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArray and ApplicationGatewayBackendHttpSettingsArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsArrayInput` via:
//
//	ApplicationGatewayBackendHttpSettingsArray{ ApplicationGatewayBackendHttpSettingsArgs{...} }
type ApplicationGatewayBackendHttpSettingsArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput
	ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput
}

type ApplicationGatewayBackendHttpSettingsArray []ApplicationGatewayBackendHttpSettingsInput

func (ApplicationGatewayBackendHttpSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsOutput) AuthenticationCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) []SubResource { return v.AuthenticationCertificates }).(SubResourceArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *ApplicationGatewayConnectionDraining {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendHttpSettingsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsOutput) TrustedRootCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) []SubResource { return v.TrustedRootCertificates }).(SubResourceArrayOutput)
}

type ApplicationGatewayBackendHttpSettingsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettings {
		return vs[0].([]ApplicationGatewayBackendHttpSettings)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponse struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResourceResponse `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDrainingResponse `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResourceResponse `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the backend HTTP settings resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResourceResponse `pulumi:"trustedRootCertificates"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) AuthenticationCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		return v.AuthenticationCertificates
	}).(SubResourceResponseArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *ApplicationGatewayConnectionDrainingResponse {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend HTTP settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) TrustedRootCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		return v.TrustedRootCertificates
	}).(SubResourceResponseArrayOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendHttpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ToApplicationGatewayBackendHttpSettingsResponsePtrOutput() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Elem() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) ApplicationGatewayBackendHttpSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayBackendHttpSettingsResponse
		return ret
	}).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AffinityCookieName
	}).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) AuthenticationCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.AuthenticationCertificates
	}).(SubResourceResponseArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *ApplicationGatewayConnectionDrainingResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CookieBasedAffinity
	}).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PickHostNameFromBackendAddress
	}).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(SubResourceResponsePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProbeEnabled
	}).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend HTTP settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) TrustedRootCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.TrustedRootCertificates
	}).(SubResourceResponseArrayOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettingsResponse {
		return vs[0].([]ApplicationGatewayBackendHttpSettingsResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendSettings struct {
	// Server name indication to be sent to the backend servers for Tls protocol.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResource `pulumi:"probe"`
	// The protocol used to communicate with the backend.
	Protocol *string `pulumi:"protocol"`
	// Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResource `pulumi:"trustedRootCertificates"`
}

// ApplicationGatewayBackendSettingsInput is an input type that accepts ApplicationGatewayBackendSettingsArgs and ApplicationGatewayBackendSettingsOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendSettingsInput` via:
//
//	ApplicationGatewayBackendSettingsArgs{...}
type ApplicationGatewayBackendSettingsInput interface {
	pulumi.Input

	ToApplicationGatewayBackendSettingsOutput() ApplicationGatewayBackendSettingsOutput
	ToApplicationGatewayBackendSettingsOutputWithContext(context.Context) ApplicationGatewayBackendSettingsOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendSettingsArgs struct {
	// Server name indication to be sent to the backend servers for Tls protocol.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// The protocol used to communicate with the backend.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates SubResourceArrayInput `pulumi:"trustedRootCertificates"`
}

func (ApplicationGatewayBackendSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendSettingsArgs) ToApplicationGatewayBackendSettingsOutput() ApplicationGatewayBackendSettingsOutput {
	return i.ToApplicationGatewayBackendSettingsOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendSettingsArgs) ToApplicationGatewayBackendSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendSettingsOutput)
}

// ApplicationGatewayBackendSettingsArrayInput is an input type that accepts ApplicationGatewayBackendSettingsArray and ApplicationGatewayBackendSettingsArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendSettingsArrayInput` via:
//
//	ApplicationGatewayBackendSettingsArray{ ApplicationGatewayBackendSettingsArgs{...} }
type ApplicationGatewayBackendSettingsArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendSettingsArrayOutput() ApplicationGatewayBackendSettingsArrayOutput
	ToApplicationGatewayBackendSettingsArrayOutputWithContext(context.Context) ApplicationGatewayBackendSettingsArrayOutput
}

type ApplicationGatewayBackendSettingsArray []ApplicationGatewayBackendSettingsInput

func (ApplicationGatewayBackendSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendSettingsArray) ToApplicationGatewayBackendSettingsArrayOutput() ApplicationGatewayBackendSettingsArrayOutput {
	return i.ToApplicationGatewayBackendSettingsArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendSettingsArray) ToApplicationGatewayBackendSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendSettingsArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendSettingsOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendSettingsOutput) ToApplicationGatewayBackendSettingsOutput() ApplicationGatewayBackendSettingsOutput {
	return o
}

func (o ApplicationGatewayBackendSettingsOutput) ToApplicationGatewayBackendSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendSettingsOutput {
	return o
}

// Server name indication to be sent to the backend servers for Tls protocol.
func (o ApplicationGatewayBackendSettingsOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendSettingsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
func (o ApplicationGatewayBackendSettingsOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendSettingsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendSettingsOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendSettingsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendSettingsOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendSettingsOutput) TrustedRootCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettings) []SubResource { return v.TrustedRootCertificates }).(SubResourceArrayOutput)
}

type ApplicationGatewayBackendSettingsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendSettingsArrayOutput) ToApplicationGatewayBackendSettingsArrayOutput() ApplicationGatewayBackendSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendSettingsArrayOutput) ToApplicationGatewayBackendSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendSettingsArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendSettings {
		return vs[0].([]ApplicationGatewayBackendSettings)[vs[1].(int)]
	}).(ApplicationGatewayBackendSettingsOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendSettingsResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Server name indication to be sent to the backend servers for Tls protocol.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResourceResponse `pulumi:"probe"`
	// The protocol used to communicate with the backend.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the backend HTTP settings resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResourceResponse `pulumi:"trustedRootCertificates"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendSettingsResponseOutput) ToApplicationGatewayBackendSettingsResponseOutput() ApplicationGatewayBackendSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendSettingsResponseOutput) ToApplicationGatewayBackendSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendSettingsResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendSettingsResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Server name indication to be sent to the backend servers for Tls protocol.
func (o ApplicationGatewayBackendSettingsResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendSettingsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
func (o ApplicationGatewayBackendSettingsResponseOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendSettingsResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendSettingsResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendSettingsResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend HTTP settings resource.
func (o ApplicationGatewayBackendSettingsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendSettingsResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendSettingsResponseOutput) TrustedRootCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) []SubResourceResponse {
		return v.TrustedRootCertificates
	}).(SubResourceResponseArrayOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendSettingsResponseArrayOutput) ToApplicationGatewayBackendSettingsResponseArrayOutput() ApplicationGatewayBackendSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendSettingsResponseArrayOutput) ToApplicationGatewayBackendSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendSettingsResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendSettingsResponse {
		return vs[0].([]ApplicationGatewayBackendSettingsResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendSettingsResponseOutput)
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfiguration struct {
	// Verify client certificate issuer name on the application gateway.
	VerifyClientCertIssuerDN *bool `pulumi:"verifyClientCertIssuerDN"`
	// Verify client certificate revocation status.
	VerifyClientRevocation *string `pulumi:"verifyClientRevocation"`
}

// ApplicationGatewayClientAuthConfigurationInput is an input type that accepts ApplicationGatewayClientAuthConfigurationArgs and ApplicationGatewayClientAuthConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayClientAuthConfigurationInput` via:
//
//	ApplicationGatewayClientAuthConfigurationArgs{...}
type ApplicationGatewayClientAuthConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayClientAuthConfigurationOutput() ApplicationGatewayClientAuthConfigurationOutput
	ToApplicationGatewayClientAuthConfigurationOutputWithContext(context.Context) ApplicationGatewayClientAuthConfigurationOutput
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationArgs struct {
	// Verify client certificate issuer name on the application gateway.
	VerifyClientCertIssuerDN pulumi.BoolPtrInput `pulumi:"verifyClientCertIssuerDN"`
	// Verify client certificate revocation status.
	VerifyClientRevocation pulumi.StringPtrInput `pulumi:"verifyClientRevocation"`
}

func (ApplicationGatewayClientAuthConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationOutput() ApplicationGatewayClientAuthConfigurationOutput {
	return i.ToApplicationGatewayClientAuthConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationOutput)
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return i.ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationOutput).ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayClientAuthConfigurationPtrInput is an input type that accepts ApplicationGatewayClientAuthConfigurationArgs, ApplicationGatewayClientAuthConfigurationPtr and ApplicationGatewayClientAuthConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayClientAuthConfigurationPtrInput` via:
//
//	        ApplicationGatewayClientAuthConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayClientAuthConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput
	ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput
}

type applicationGatewayClientAuthConfigurationPtrType ApplicationGatewayClientAuthConfigurationArgs

func ApplicationGatewayClientAuthConfigurationPtr(v *ApplicationGatewayClientAuthConfigurationArgs) ApplicationGatewayClientAuthConfigurationPtrInput {
	return (*applicationGatewayClientAuthConfigurationPtrType)(v)
}

func (*applicationGatewayClientAuthConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (i *applicationGatewayClientAuthConfigurationPtrType) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return i.ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayClientAuthConfigurationPtrType) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationPtrOutput)
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationOutput() ApplicationGatewayClientAuthConfigurationOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o.ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayClientAuthConfiguration) *ApplicationGatewayClientAuthConfiguration {
		return &v
	}).(ApplicationGatewayClientAuthConfigurationPtrOutput)
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfiguration) *bool { return v.VerifyClientCertIssuerDN }).(pulumi.BoolPtrOutput)
}

// Verify client certificate revocation status.
func (o ApplicationGatewayClientAuthConfigurationOutput) VerifyClientRevocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfiguration) *string { return v.VerifyClientRevocation }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayClientAuthConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationPtrOutput) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationPtrOutput) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationPtrOutput) Elem() ApplicationGatewayClientAuthConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfiguration) ApplicationGatewayClientAuthConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayClientAuthConfiguration
		return ret
	}).(ApplicationGatewayClientAuthConfigurationOutput)
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationPtrOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.VerifyClientCertIssuerDN
	}).(pulumi.BoolPtrOutput)
}

// Verify client certificate revocation status.
func (o ApplicationGatewayClientAuthConfigurationPtrOutput) VerifyClientRevocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VerifyClientRevocation
	}).(pulumi.StringPtrOutput)
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationResponse struct {
	// Verify client certificate issuer name on the application gateway.
	VerifyClientCertIssuerDN *bool `pulumi:"verifyClientCertIssuerDN"`
	// Verify client certificate revocation status.
	VerifyClientRevocation *string `pulumi:"verifyClientRevocation"`
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayClientAuthConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationResponseOutput) ToApplicationGatewayClientAuthConfigurationResponseOutput() ApplicationGatewayClientAuthConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationResponseOutput) ToApplicationGatewayClientAuthConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponseOutput {
	return o
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationResponseOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfigurationResponse) *bool { return v.VerifyClientCertIssuerDN }).(pulumi.BoolPtrOutput)
}

// Verify client certificate revocation status.
func (o ApplicationGatewayClientAuthConfigurationResponseOutput) VerifyClientRevocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfigurationResponse) *string { return v.VerifyClientRevocation }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayClientAuthConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayClientAuthConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) ToApplicationGatewayClientAuthConfigurationResponsePtrOutput() ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) Elem() ApplicationGatewayClientAuthConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfigurationResponse) ApplicationGatewayClientAuthConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayClientAuthConfigurationResponse
		return ret
	}).(ApplicationGatewayClientAuthConfigurationResponseOutput)
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.VerifyClientCertIssuerDN
	}).(pulumi.BoolPtrOutput)
}

// Verify client certificate revocation status.
func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) VerifyClientRevocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.VerifyClientRevocation
	}).(pulumi.StringPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDraining struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayConnectionDrainingInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs and ApplicationGatewayConnectionDrainingOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingInput` via:
//
//	ApplicationGatewayConnectionDrainingArgs{...}
type ApplicationGatewayConnectionDrainingInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput
	ToApplicationGatewayConnectionDrainingOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingOutput
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec pulumi.IntInput `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayConnectionDrainingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return i.ToApplicationGatewayConnectionDrainingOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput)
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput).ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx)
}

// ApplicationGatewayConnectionDrainingPtrInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs, ApplicationGatewayConnectionDrainingPtr and ApplicationGatewayConnectionDrainingPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingPtrInput` via:
//
//	        ApplicationGatewayConnectionDrainingArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayConnectionDrainingPtrInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput
	ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingPtrOutput
}

type applicationGatewayConnectionDrainingPtrType ApplicationGatewayConnectionDrainingArgs

func ApplicationGatewayConnectionDrainingPtr(v *ApplicationGatewayConnectionDrainingArgs) ApplicationGatewayConnectionDrainingPtrInput {
	return (*applicationGatewayConnectionDrainingPtrType)(v)
}

func (*applicationGatewayConnectionDrainingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayConnectionDraining) *ApplicationGatewayConnectionDraining {
		return &v
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) Elem() ApplicationGatewayConnectionDrainingOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) ApplicationGatewayConnectionDraining {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayConnectionDraining
		return ret
	}).(ApplicationGatewayConnectionDrainingOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingPtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponse struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponseOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Elem() ApplicationGatewayConnectionDrainingResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) ApplicationGatewayConnectionDrainingResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayConnectionDrainingResponse
		return ret
	}).(ApplicationGatewayConnectionDrainingResponseOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Custom error of an application gateway.
type ApplicationGatewayCustomError struct {
	// Error page URL of the application gateway custom error.
	CustomErrorPageUrl *string `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway custom error.
	StatusCode *string `pulumi:"statusCode"`
}

// ApplicationGatewayCustomErrorInput is an input type that accepts ApplicationGatewayCustomErrorArgs and ApplicationGatewayCustomErrorOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorInput` via:
//
//	ApplicationGatewayCustomErrorArgs{...}
type ApplicationGatewayCustomErrorInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput
	ToApplicationGatewayCustomErrorOutputWithContext(context.Context) ApplicationGatewayCustomErrorOutput
}

// Custom error of an application gateway.
type ApplicationGatewayCustomErrorArgs struct {
	// Error page URL of the application gateway custom error.
	CustomErrorPageUrl pulumi.StringPtrInput `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway custom error.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ApplicationGatewayCustomErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomError)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorArgs) ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput {
	return i.ToApplicationGatewayCustomErrorOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorArgs) ToApplicationGatewayCustomErrorOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorOutput)
}

// ApplicationGatewayCustomErrorArrayInput is an input type that accepts ApplicationGatewayCustomErrorArray and ApplicationGatewayCustomErrorArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorArrayInput` via:
//
//	ApplicationGatewayCustomErrorArray{ ApplicationGatewayCustomErrorArgs{...} }
type ApplicationGatewayCustomErrorArrayInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput
	ToApplicationGatewayCustomErrorArrayOutputWithContext(context.Context) ApplicationGatewayCustomErrorArrayOutput
}

type ApplicationGatewayCustomErrorArray []ApplicationGatewayCustomErrorInput

func (ApplicationGatewayCustomErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomError)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorArray) ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput {
	return i.ToApplicationGatewayCustomErrorArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorArray) ToApplicationGatewayCustomErrorArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorArrayOutput)
}

// Custom error of an application gateway.
type ApplicationGatewayCustomErrorOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomError)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorOutput) ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput {
	return o
}

func (o ApplicationGatewayCustomErrorOutput) ToApplicationGatewayCustomErrorOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorOutput {
	return o
}

// Error page URL of the application gateway custom error.
func (o ApplicationGatewayCustomErrorOutput) CustomErrorPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomError) *string { return v.CustomErrorPageUrl }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway custom error.
func (o ApplicationGatewayCustomErrorOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomError) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayCustomErrorArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomError)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorArrayOutput) ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorArrayOutput) ToApplicationGatewayCustomErrorArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayCustomErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayCustomError {
		return vs[0].([]ApplicationGatewayCustomError)[vs[1].(int)]
	}).(ApplicationGatewayCustomErrorOutput)
}

// Custom error of an application gateway.
type ApplicationGatewayCustomErrorResponse struct {
	// Error page URL of the application gateway custom error.
	CustomErrorPageUrl *string `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway custom error.
	StatusCode *string `pulumi:"statusCode"`
}

// Custom error of an application gateway.
type ApplicationGatewayCustomErrorResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorResponseOutput) ToApplicationGatewayCustomErrorResponseOutput() ApplicationGatewayCustomErrorResponseOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseOutput) ToApplicationGatewayCustomErrorResponseOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseOutput {
	return o
}

// Error page URL of the application gateway custom error.
func (o ApplicationGatewayCustomErrorResponseOutput) CustomErrorPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorResponse) *string { return v.CustomErrorPageUrl }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway custom error.
func (o ApplicationGatewayCustomErrorResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayCustomErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) ToApplicationGatewayCustomErrorResponseArrayOutput() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayCustomErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayCustomErrorResponse {
		return vs[0].([]ApplicationGatewayCustomErrorResponse)[vs[1].(int)]
	}).(ApplicationGatewayCustomErrorResponseOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroup struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayFirewallDisabledRuleGroupInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArgs and ApplicationGatewayFirewallDisabledRuleGroupOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupInput` via:
//
//	ApplicationGatewayFirewallDisabledRuleGroupArgs{...}
type ApplicationGatewayFirewallDisabledRuleGroupInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput
	ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupArgs struct {
	// The name of the rule group that will be disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayFirewallDisabledRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// ApplicationGatewayFirewallDisabledRuleGroupArrayInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArray and ApplicationGatewayFirewallDisabledRuleGroupArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupArrayInput` via:
//
//	ApplicationGatewayFirewallDisabledRuleGroupArray{ ApplicationGatewayFirewallDisabledRuleGroupArgs{...} }
type ApplicationGatewayFirewallDisabledRuleGroupArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
}

type ApplicationGatewayFirewallDisabledRuleGroupArray []ApplicationGatewayFirewallDisabledRuleGroupInput

func (ApplicationGatewayFirewallDisabledRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroup {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroup)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponse struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroupResponse)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusion struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ApplicationGatewayFirewallExclusionInput is an input type that accepts ApplicationGatewayFirewallExclusionArgs and ApplicationGatewayFirewallExclusionOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionInput` via:
//
//	ApplicationGatewayFirewallExclusionArgs{...}
type ApplicationGatewayFirewallExclusionInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput
	ToApplicationGatewayFirewallExclusionOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionArgs struct {
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ApplicationGatewayFirewallExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionArgs) ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput {
	return i.ToApplicationGatewayFirewallExclusionOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionArgs) ToApplicationGatewayFirewallExclusionOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionOutput)
}

// ApplicationGatewayFirewallExclusionArrayInput is an input type that accepts ApplicationGatewayFirewallExclusionArray and ApplicationGatewayFirewallExclusionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionArrayInput` via:
//
//	ApplicationGatewayFirewallExclusionArray{ ApplicationGatewayFirewallExclusionArgs{...} }
type ApplicationGatewayFirewallExclusionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput
	ToApplicationGatewayFirewallExclusionArrayOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionArrayOutput
}

type ApplicationGatewayFirewallExclusionArray []ApplicationGatewayFirewallExclusionInput

func (ApplicationGatewayFirewallExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionArray) ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput {
	return i.ToApplicationGatewayFirewallExclusionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionArray) ToApplicationGatewayFirewallExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionOutput) ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionOutput) ToApplicationGatewayFirewallExclusionOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionOutput {
	return o
}

// The variable to be excluded.
func (o ApplicationGatewayFirewallExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ApplicationGatewayFirewallExclusionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) ToApplicationGatewayFirewallExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallExclusion {
		return vs[0].([]ApplicationGatewayFirewallExclusion)[vs[1].(int)]
	}).(ApplicationGatewayFirewallExclusionOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionResponse struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionResponseOutput) ToApplicationGatewayFirewallExclusionResponseOutput() ApplicationGatewayFirewallExclusionResponseOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseOutput) ToApplicationGatewayFirewallExclusionResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseOutput {
	return o
}

// The variable to be excluded.
func (o ApplicationGatewayFirewallExclusionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ApplicationGatewayFirewallExclusionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) ToApplicationGatewayFirewallExclusionResponseArrayOutput() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallExclusionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallExclusionResponse {
		return vs[0].([]ApplicationGatewayFirewallExclusionResponse)[vs[1].(int)]
	}).(ApplicationGatewayFirewallExclusionResponseOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference to the application gateway private link configuration.
	PrivateLinkConfiguration *SubResource `pulumi:"privateLinkConfiguration"`
	// Reference to the PublicIP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference to the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayFrontendIPConfigurationInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArgs and ApplicationGatewayFrontendIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationInput` via:
//
//	ApplicationGatewayFrontendIPConfigurationArgs{...}
type ApplicationGatewayFrontendIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput
	ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Reference to the application gateway private link configuration.
	PrivateLinkConfiguration SubResourcePtrInput `pulumi:"privateLinkConfiguration"`
	// Reference to the PublicIP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference to the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayFrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// ApplicationGatewayFrontendIPConfigurationArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArray and ApplicationGatewayFrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationArrayInput` via:
//
//	ApplicationGatewayFrontendIPConfigurationArray{ ApplicationGatewayFrontendIPConfigurationArgs{...} }
type ApplicationGatewayFrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput
	ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationArray []ApplicationGatewayFrontendIPConfigurationInput

func (ApplicationGatewayFrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference to the application gateway private link configuration.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateLinkConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.PrivateLinkConfiguration }).(SubResourcePtrOutput)
}

// Reference to the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfiguration {
		return vs[0].([]ApplicationGatewayFrontendIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference to the application gateway private link configuration.
	PrivateLinkConfiguration *SubResourceResponse `pulumi:"privateLinkConfiguration"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the PublicIP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference to the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference to the application gateway private link configuration.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateLinkConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse {
		return v.PrivateLinkConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayFrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayFrontendIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPort struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Frontend port.
	Port *int `pulumi:"port"`
}

// ApplicationGatewayFrontendPortInput is an input type that accepts ApplicationGatewayFrontendPortArgs and ApplicationGatewayFrontendPortOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInput` via:
//
//	ApplicationGatewayFrontendPortArgs{...}
type ApplicationGatewayFrontendPortInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput
	ToApplicationGatewayFrontendPortOutputWithContext(context.Context) ApplicationGatewayFrontendPortOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ApplicationGatewayFrontendPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return i.ToApplicationGatewayFrontendPortOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortOutput)
}

// ApplicationGatewayFrontendPortArrayInput is an input type that accepts ApplicationGatewayFrontendPortArray and ApplicationGatewayFrontendPortArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortArrayInput` via:
//
//	ApplicationGatewayFrontendPortArray{ ApplicationGatewayFrontendPortArgs{...} }
type ApplicationGatewayFrontendPortArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput
	ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortArrayOutput
}

type ApplicationGatewayFrontendPortArray []ApplicationGatewayFrontendPortInput

func (ApplicationGatewayFrontendPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return i.ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return o
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayFrontendPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port.
func (o ApplicationGatewayFrontendPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayFrontendPortArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPort {
		return vs[0].([]ApplicationGatewayFrontendPort)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Frontend port.
	Port *int `pulumi:"port"`
	// The provisioning state of the frontend port resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendPortResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendPortResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port.
func (o ApplicationGatewayFrontendPortResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The provisioning state of the frontend port resource.
func (o ApplicationGatewayFrontendPortResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendPortResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayFrontendPortResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPortResponse {
		return vs[0].([]ApplicationGatewayFrontendPortResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortResponseOutput)
}

// Application Gateway global configuration.
type ApplicationGatewayGlobalConfiguration struct {
	// Enable request buffering.
	EnableRequestBuffering *bool `pulumi:"enableRequestBuffering"`
	// Enable response buffering.
	EnableResponseBuffering *bool `pulumi:"enableResponseBuffering"`
}

// ApplicationGatewayGlobalConfigurationInput is an input type that accepts ApplicationGatewayGlobalConfigurationArgs and ApplicationGatewayGlobalConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayGlobalConfigurationInput` via:
//
//	ApplicationGatewayGlobalConfigurationArgs{...}
type ApplicationGatewayGlobalConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayGlobalConfigurationOutput() ApplicationGatewayGlobalConfigurationOutput
	ToApplicationGatewayGlobalConfigurationOutputWithContext(context.Context) ApplicationGatewayGlobalConfigurationOutput
}

// Application Gateway global configuration.
type ApplicationGatewayGlobalConfigurationArgs struct {
	// Enable request buffering.
	EnableRequestBuffering pulumi.BoolPtrInput `pulumi:"enableRequestBuffering"`
	// Enable response buffering.
	EnableResponseBuffering pulumi.BoolPtrInput `pulumi:"enableResponseBuffering"`
}

func (ApplicationGatewayGlobalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayGlobalConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayGlobalConfigurationArgs) ToApplicationGatewayGlobalConfigurationOutput() ApplicationGatewayGlobalConfigurationOutput {
	return i.ToApplicationGatewayGlobalConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayGlobalConfigurationArgs) ToApplicationGatewayGlobalConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGlobalConfigurationOutput)
}

func (i ApplicationGatewayGlobalConfigurationArgs) ToApplicationGatewayGlobalConfigurationPtrOutput() ApplicationGatewayGlobalConfigurationPtrOutput {
	return i.ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayGlobalConfigurationArgs) ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGlobalConfigurationOutput).ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayGlobalConfigurationPtrInput is an input type that accepts ApplicationGatewayGlobalConfigurationArgs, ApplicationGatewayGlobalConfigurationPtr and ApplicationGatewayGlobalConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayGlobalConfigurationPtrInput` via:
//
//	        ApplicationGatewayGlobalConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayGlobalConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayGlobalConfigurationPtrOutput() ApplicationGatewayGlobalConfigurationPtrOutput
	ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayGlobalConfigurationPtrOutput
}

type applicationGatewayGlobalConfigurationPtrType ApplicationGatewayGlobalConfigurationArgs

func ApplicationGatewayGlobalConfigurationPtr(v *ApplicationGatewayGlobalConfigurationArgs) ApplicationGatewayGlobalConfigurationPtrInput {
	return (*applicationGatewayGlobalConfigurationPtrType)(v)
}

func (*applicationGatewayGlobalConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayGlobalConfiguration)(nil)).Elem()
}

func (i *applicationGatewayGlobalConfigurationPtrType) ToApplicationGatewayGlobalConfigurationPtrOutput() ApplicationGatewayGlobalConfigurationPtrOutput {
	return i.ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayGlobalConfigurationPtrType) ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGlobalConfigurationPtrOutput)
}

// Application Gateway global configuration.
type ApplicationGatewayGlobalConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGlobalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayGlobalConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayGlobalConfigurationOutput) ToApplicationGatewayGlobalConfigurationOutput() ApplicationGatewayGlobalConfigurationOutput {
	return o
}

func (o ApplicationGatewayGlobalConfigurationOutput) ToApplicationGatewayGlobalConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationOutput {
	return o
}

func (o ApplicationGatewayGlobalConfigurationOutput) ToApplicationGatewayGlobalConfigurationPtrOutput() ApplicationGatewayGlobalConfigurationPtrOutput {
	return o.ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayGlobalConfigurationOutput) ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayGlobalConfiguration) *ApplicationGatewayGlobalConfiguration {
		return &v
	}).(ApplicationGatewayGlobalConfigurationPtrOutput)
}

// Enable request buffering.
func (o ApplicationGatewayGlobalConfigurationOutput) EnableRequestBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayGlobalConfiguration) *bool { return v.EnableRequestBuffering }).(pulumi.BoolPtrOutput)
}

// Enable response buffering.
func (o ApplicationGatewayGlobalConfigurationOutput) EnableResponseBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayGlobalConfiguration) *bool { return v.EnableResponseBuffering }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayGlobalConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGlobalConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayGlobalConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayGlobalConfigurationPtrOutput) ToApplicationGatewayGlobalConfigurationPtrOutput() ApplicationGatewayGlobalConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayGlobalConfigurationPtrOutput) ToApplicationGatewayGlobalConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayGlobalConfigurationPtrOutput) Elem() ApplicationGatewayGlobalConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobalConfiguration) ApplicationGatewayGlobalConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayGlobalConfiguration
		return ret
	}).(ApplicationGatewayGlobalConfigurationOutput)
}

// Enable request buffering.
func (o ApplicationGatewayGlobalConfigurationPtrOutput) EnableRequestBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobalConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRequestBuffering
	}).(pulumi.BoolPtrOutput)
}

// Enable response buffering.
func (o ApplicationGatewayGlobalConfigurationPtrOutput) EnableResponseBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobalConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResponseBuffering
	}).(pulumi.BoolPtrOutput)
}

// Application Gateway global configuration.
type ApplicationGatewayGlobalConfigurationResponse struct {
	// Enable request buffering.
	EnableRequestBuffering *bool `pulumi:"enableRequestBuffering"`
	// Enable response buffering.
	EnableResponseBuffering *bool `pulumi:"enableResponseBuffering"`
}

// Application Gateway global configuration.
type ApplicationGatewayGlobalConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGlobalConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayGlobalConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayGlobalConfigurationResponseOutput) ToApplicationGatewayGlobalConfigurationResponseOutput() ApplicationGatewayGlobalConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayGlobalConfigurationResponseOutput) ToApplicationGatewayGlobalConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationResponseOutput {
	return o
}

// Enable request buffering.
func (o ApplicationGatewayGlobalConfigurationResponseOutput) EnableRequestBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayGlobalConfigurationResponse) *bool { return v.EnableRequestBuffering }).(pulumi.BoolPtrOutput)
}

// Enable response buffering.
func (o ApplicationGatewayGlobalConfigurationResponseOutput) EnableResponseBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayGlobalConfigurationResponse) *bool { return v.EnableResponseBuffering }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayGlobalConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGlobalConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayGlobalConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayGlobalConfigurationResponsePtrOutput) ToApplicationGatewayGlobalConfigurationResponsePtrOutput() ApplicationGatewayGlobalConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayGlobalConfigurationResponsePtrOutput) ToApplicationGatewayGlobalConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayGlobalConfigurationResponsePtrOutput) Elem() ApplicationGatewayGlobalConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobalConfigurationResponse) ApplicationGatewayGlobalConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayGlobalConfigurationResponse
		return ret
	}).(ApplicationGatewayGlobalConfigurationResponseOutput)
}

// Enable request buffering.
func (o ApplicationGatewayGlobalConfigurationResponsePtrOutput) EnableRequestBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobalConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRequestBuffering
	}).(pulumi.BoolPtrOutput)
}

// Enable response buffering.
func (o ApplicationGatewayGlobalConfigurationResponsePtrOutput) EnableResponseBuffering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobalConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResponseBuffering
	}).(pulumi.BoolPtrOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfiguration struct {
	// Header name of the header configuration.
	HeaderName *string `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue *string `pulumi:"headerValue"`
}

// ApplicationGatewayHeaderConfigurationInput is an input type that accepts ApplicationGatewayHeaderConfigurationArgs and ApplicationGatewayHeaderConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationInput` via:
//
//	ApplicationGatewayHeaderConfigurationArgs{...}
type ApplicationGatewayHeaderConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput
	ToApplicationGatewayHeaderConfigurationOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationOutput
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationArgs struct {
	// Header name of the header configuration.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (ApplicationGatewayHeaderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationArgs) ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput {
	return i.ToApplicationGatewayHeaderConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationArgs) ToApplicationGatewayHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationOutput)
}

// ApplicationGatewayHeaderConfigurationArrayInput is an input type that accepts ApplicationGatewayHeaderConfigurationArray and ApplicationGatewayHeaderConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationArrayInput` via:
//
//	ApplicationGatewayHeaderConfigurationArray{ ApplicationGatewayHeaderConfigurationArgs{...} }
type ApplicationGatewayHeaderConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput
	ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationArrayOutput
}

type ApplicationGatewayHeaderConfigurationArray []ApplicationGatewayHeaderConfigurationInput

func (ApplicationGatewayHeaderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationArray) ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput {
	return i.ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationArray) ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationOutput) ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationOutput) ToApplicationGatewayHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationOutput {
	return o
}

// Header name of the header configuration.
func (o ApplicationGatewayHeaderConfigurationOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfiguration) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Header value of the header configuration.
func (o ApplicationGatewayHeaderConfigurationOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfiguration) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHeaderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHeaderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHeaderConfiguration {
		return vs[0].([]ApplicationGatewayHeaderConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayHeaderConfigurationOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponse struct {
	// Header name of the header configuration.
	HeaderName *string `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue *string `pulumi:"headerValue"`
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationResponseOutput) ToApplicationGatewayHeaderConfigurationResponseOutput() ApplicationGatewayHeaderConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseOutput) ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseOutput {
	return o
}

// Header name of the header configuration.
func (o ApplicationGatewayHeaderConfigurationResponseOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfigurationResponse) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Header value of the header configuration.
func (o ApplicationGatewayHeaderConfigurationResponseOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfigurationResponse) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHeaderConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) ToApplicationGatewayHeaderConfigurationResponseArrayOutput() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHeaderConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHeaderConfigurationResponse {
		return vs[0].([]ApplicationGatewayHeaderConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayHeaderConfigurationResponseOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListener struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations []ApplicationGatewayCustomError `pulumi:"customErrorConfigurations"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResource `pulumi:"firewallPolicy"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResource `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// List of Host names for HTTP Listener that allows special wildcard characters as well.
	HostNames []string `pulumi:"hostNames"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the HTTP listener.
	Protocol *string `pulumi:"protocol"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResource `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile *SubResource `pulumi:"sslProfile"`
}

// ApplicationGatewayHttpListenerInput is an input type that accepts ApplicationGatewayHttpListenerArgs and ApplicationGatewayHttpListenerOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInput` via:
//
//	ApplicationGatewayHttpListenerArgs{...}
type ApplicationGatewayHttpListenerInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput
	ToApplicationGatewayHttpListenerOutputWithContext(context.Context) ApplicationGatewayHttpListenerOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerArgs struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations ApplicationGatewayCustomErrorArrayInput `pulumi:"customErrorConfigurations"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy SubResourcePtrInput `pulumi:"firewallPolicy"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourcePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// List of Host names for HTTP Listener that allows special wildcard characters as well.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol of the HTTP listener.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourcePtrInput `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile SubResourcePtrInput `pulumi:"sslProfile"`
}

func (ApplicationGatewayHttpListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return i.ToApplicationGatewayHttpListenerOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerOutput)
}

// ApplicationGatewayHttpListenerArrayInput is an input type that accepts ApplicationGatewayHttpListenerArray and ApplicationGatewayHttpListenerArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerArrayInput` via:
//
//	ApplicationGatewayHttpListenerArray{ ApplicationGatewayHttpListenerArgs{...} }
type ApplicationGatewayHttpListenerArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput
	ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerArrayOutput
}

type ApplicationGatewayHttpListenerArray []ApplicationGatewayHttpListenerInput

func (ApplicationGatewayHttpListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return i.ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return o
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return o
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) []ApplicationGatewayCustomError {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorArrayOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayHttpListenerOutput) FirewallPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FirewallPolicy }).(SubResourcePtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendPort() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendPort }).(SubResourcePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// List of Host names for HTTP Listener that allows special wildcard characters as well.
func (o ApplicationGatewayHttpListenerOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) SslCertificate() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.SslCertificate }).(SubResourcePtrOutput)
}

// SSL profile resource of the application gateway.
func (o ApplicationGatewayHttpListenerOutput) SslProfile() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.SslProfile }).(SubResourcePtrOutput)
}

type ApplicationGatewayHttpListenerArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListener {
		return vs[0].([]ApplicationGatewayHttpListener)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponse struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorResponse `pulumi:"customErrorConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResourceResponse `pulumi:"firewallPolicy"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResourceResponse `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// List of Host names for HTTP Listener that allows special wildcard characters as well.
	HostNames []string `pulumi:"hostNames"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the HTTP listener.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the HTTP listener resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResourceResponse `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile *SubResourceResponse `pulumi:"sslProfile"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return o
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) []ApplicationGatewayCustomErrorResponse {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayHttpListenerResponseOutput) FirewallPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FirewallPolicy }).(SubResourceResponsePtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendPort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendPort }).(SubResourceResponsePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// List of Host names for HTTP Listener that allows special wildcard characters as well.
func (o ApplicationGatewayHttpListenerResponseOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the HTTP listener resource.
func (o ApplicationGatewayHttpListenerResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerResponseOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) SslCertificate() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.SslCertificate }).(SubResourceResponsePtrOutput)
}

// SSL profile resource of the application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) SslProfile() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.SslProfile }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayHttpListenerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayHttpListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListenerResponse {
		return vs[0].([]ApplicationGatewayHttpListenerResponse)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerResponseOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationInput is an input type that accepts ApplicationGatewayIPConfigurationArgs and ApplicationGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInput` via:
//
//	ApplicationGatewayIPConfigurationArgs{...}
type ApplicationGatewayIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput
	ToApplicationGatewayIPConfigurationOutputWithContext(context.Context) ApplicationGatewayIPConfigurationOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return i.ToApplicationGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationOutput)
}

// ApplicationGatewayIPConfigurationArrayInput is an input type that accepts ApplicationGatewayIPConfigurationArray and ApplicationGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationArrayInput` via:
//
//	ApplicationGatewayIPConfigurationArray{ ApplicationGatewayIPConfigurationArgs{...} }
type ApplicationGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput
	ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationArrayOutput
}

type ApplicationGatewayIPConfigurationArray []ApplicationGatewayIPConfigurationInput

func (ApplicationGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return i.ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfiguration {
		return vs[0].([]ApplicationGatewayIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the application gateway IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the application gateway IP configuration resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationResponseOutput)
}

// Listener of an application gateway.
type ApplicationGatewayListener struct {
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResource `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the listener.
	Protocol *string `pulumi:"protocol"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResource `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile *SubResource `pulumi:"sslProfile"`
}

// ApplicationGatewayListenerInput is an input type that accepts ApplicationGatewayListenerArgs and ApplicationGatewayListenerOutput values.
// You can construct a concrete instance of `ApplicationGatewayListenerInput` via:
//
//	ApplicationGatewayListenerArgs{...}
type ApplicationGatewayListenerInput interface {
	pulumi.Input

	ToApplicationGatewayListenerOutput() ApplicationGatewayListenerOutput
	ToApplicationGatewayListenerOutputWithContext(context.Context) ApplicationGatewayListenerOutput
}

// Listener of an application gateway.
type ApplicationGatewayListenerArgs struct {
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourcePtrInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol of the listener.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourcePtrInput `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile SubResourcePtrInput `pulumi:"sslProfile"`
}

func (ApplicationGatewayListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayListener)(nil)).Elem()
}

func (i ApplicationGatewayListenerArgs) ToApplicationGatewayListenerOutput() ApplicationGatewayListenerOutput {
	return i.ToApplicationGatewayListenerOutputWithContext(context.Background())
}

func (i ApplicationGatewayListenerArgs) ToApplicationGatewayListenerOutputWithContext(ctx context.Context) ApplicationGatewayListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayListenerOutput)
}

// ApplicationGatewayListenerArrayInput is an input type that accepts ApplicationGatewayListenerArray and ApplicationGatewayListenerArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayListenerArrayInput` via:
//
//	ApplicationGatewayListenerArray{ ApplicationGatewayListenerArgs{...} }
type ApplicationGatewayListenerArrayInput interface {
	pulumi.Input

	ToApplicationGatewayListenerArrayOutput() ApplicationGatewayListenerArrayOutput
	ToApplicationGatewayListenerArrayOutputWithContext(context.Context) ApplicationGatewayListenerArrayOutput
}

type ApplicationGatewayListenerArray []ApplicationGatewayListenerInput

func (ApplicationGatewayListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayListener)(nil)).Elem()
}

func (i ApplicationGatewayListenerArray) ToApplicationGatewayListenerArrayOutput() ApplicationGatewayListenerArrayOutput {
	return i.ToApplicationGatewayListenerArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayListenerArray) ToApplicationGatewayListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayListenerArrayOutput)
}

// Listener of an application gateway.
type ApplicationGatewayListenerOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayListener)(nil)).Elem()
}

func (o ApplicationGatewayListenerOutput) ToApplicationGatewayListenerOutput() ApplicationGatewayListenerOutput {
	return o
}

func (o ApplicationGatewayListenerOutput) ToApplicationGatewayListenerOutputWithContext(ctx context.Context) ApplicationGatewayListenerOutput {
	return o
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayListenerOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListener) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayListenerOutput) FrontendPort() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListener) *SubResource { return v.FrontendPort }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the listener that is unique within an Application Gateway.
func (o ApplicationGatewayListenerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListener) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the listener.
func (o ApplicationGatewayListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayListenerOutput) SslCertificate() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListener) *SubResource { return v.SslCertificate }).(SubResourcePtrOutput)
}

// SSL profile resource of the application gateway.
func (o ApplicationGatewayListenerOutput) SslProfile() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListener) *SubResource { return v.SslProfile }).(SubResourcePtrOutput)
}

type ApplicationGatewayListenerArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayListener)(nil)).Elem()
}

func (o ApplicationGatewayListenerArrayOutput) ToApplicationGatewayListenerArrayOutput() ApplicationGatewayListenerArrayOutput {
	return o
}

func (o ApplicationGatewayListenerArrayOutput) ToApplicationGatewayListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayListenerArrayOutput {
	return o
}

func (o ApplicationGatewayListenerArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayListener {
		return vs[0].([]ApplicationGatewayListener)[vs[1].(int)]
	}).(ApplicationGatewayListenerOutput)
}

// Listener of an application gateway.
type ApplicationGatewayListenerResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResourceResponse `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the listener.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the listener resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResourceResponse `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile *SubResourceResponse `pulumi:"sslProfile"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Listener of an application gateway.
type ApplicationGatewayListenerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayListenerResponseOutput) ToApplicationGatewayListenerResponseOutput() ApplicationGatewayListenerResponseOutput {
	return o
}

func (o ApplicationGatewayListenerResponseOutput) ToApplicationGatewayListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayListenerResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayListenerResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayListenerResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayListenerResponseOutput) FrontendPort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) *SubResourceResponse { return v.FrontendPort }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayListenerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the listener that is unique within an Application Gateway.
func (o ApplicationGatewayListenerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the listener.
func (o ApplicationGatewayListenerResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the listener resource.
func (o ApplicationGatewayListenerResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayListenerResponseOutput) SslCertificate() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) *SubResourceResponse { return v.SslCertificate }).(SubResourceResponsePtrOutput)
}

// SSL profile resource of the application gateway.
func (o ApplicationGatewayListenerResponseOutput) SslProfile() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) *SubResourceResponse { return v.SslProfile }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayListenerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayListenerResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayListenerResponseArrayOutput) ToApplicationGatewayListenerResponseArrayOutput() ApplicationGatewayListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayListenerResponseArrayOutput) ToApplicationGatewayListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayListenerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayListenerResponse {
		return vs[0].([]ApplicationGatewayListenerResponse)[vs[1].(int)]
	}).(ApplicationGatewayListenerResponseOutput)
}

// Load Distribution Policy of an application gateway.
type ApplicationGatewayLoadDistributionPolicy struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load Distribution Targets resource of an application gateway.
	LoadDistributionAlgorithm *string `pulumi:"loadDistributionAlgorithm"`
	// Load Distribution Targets resource of an application gateway.
	LoadDistributionTargets []ApplicationGatewayLoadDistributionTarget `pulumi:"loadDistributionTargets"`
	// Name of the load distribution policy that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayLoadDistributionPolicyInput is an input type that accepts ApplicationGatewayLoadDistributionPolicyArgs and ApplicationGatewayLoadDistributionPolicyOutput values.
// You can construct a concrete instance of `ApplicationGatewayLoadDistributionPolicyInput` via:
//
//	ApplicationGatewayLoadDistributionPolicyArgs{...}
type ApplicationGatewayLoadDistributionPolicyInput interface {
	pulumi.Input

	ToApplicationGatewayLoadDistributionPolicyOutput() ApplicationGatewayLoadDistributionPolicyOutput
	ToApplicationGatewayLoadDistributionPolicyOutputWithContext(context.Context) ApplicationGatewayLoadDistributionPolicyOutput
}

// Load Distribution Policy of an application gateway.
type ApplicationGatewayLoadDistributionPolicyArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Load Distribution Targets resource of an application gateway.
	LoadDistributionAlgorithm pulumi.StringPtrInput `pulumi:"loadDistributionAlgorithm"`
	// Load Distribution Targets resource of an application gateway.
	LoadDistributionTargets ApplicationGatewayLoadDistributionTargetArrayInput `pulumi:"loadDistributionTargets"`
	// Name of the load distribution policy that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayLoadDistributionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayLoadDistributionPolicy)(nil)).Elem()
}

func (i ApplicationGatewayLoadDistributionPolicyArgs) ToApplicationGatewayLoadDistributionPolicyOutput() ApplicationGatewayLoadDistributionPolicyOutput {
	return i.ToApplicationGatewayLoadDistributionPolicyOutputWithContext(context.Background())
}

func (i ApplicationGatewayLoadDistributionPolicyArgs) ToApplicationGatewayLoadDistributionPolicyOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayLoadDistributionPolicyOutput)
}

// ApplicationGatewayLoadDistributionPolicyArrayInput is an input type that accepts ApplicationGatewayLoadDistributionPolicyArray and ApplicationGatewayLoadDistributionPolicyArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayLoadDistributionPolicyArrayInput` via:
//
//	ApplicationGatewayLoadDistributionPolicyArray{ ApplicationGatewayLoadDistributionPolicyArgs{...} }
type ApplicationGatewayLoadDistributionPolicyArrayInput interface {
	pulumi.Input

	ToApplicationGatewayLoadDistributionPolicyArrayOutput() ApplicationGatewayLoadDistributionPolicyArrayOutput
	ToApplicationGatewayLoadDistributionPolicyArrayOutputWithContext(context.Context) ApplicationGatewayLoadDistributionPolicyArrayOutput
}

type ApplicationGatewayLoadDistributionPolicyArray []ApplicationGatewayLoadDistributionPolicyInput

func (ApplicationGatewayLoadDistributionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayLoadDistributionPolicy)(nil)).Elem()
}

func (i ApplicationGatewayLoadDistributionPolicyArray) ToApplicationGatewayLoadDistributionPolicyArrayOutput() ApplicationGatewayLoadDistributionPolicyArrayOutput {
	return i.ToApplicationGatewayLoadDistributionPolicyArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayLoadDistributionPolicyArray) ToApplicationGatewayLoadDistributionPolicyArrayOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayLoadDistributionPolicyArrayOutput)
}

// Load Distribution Policy of an application gateway.
type ApplicationGatewayLoadDistributionPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayLoadDistributionPolicy)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionPolicyOutput) ToApplicationGatewayLoadDistributionPolicyOutput() ApplicationGatewayLoadDistributionPolicyOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionPolicyOutput) ToApplicationGatewayLoadDistributionPolicyOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionPolicyOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayLoadDistributionPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load Distribution Targets resource of an application gateway.
func (o ApplicationGatewayLoadDistributionPolicyOutput) LoadDistributionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicy) *string { return v.LoadDistributionAlgorithm }).(pulumi.StringPtrOutput)
}

// Load Distribution Targets resource of an application gateway.
func (o ApplicationGatewayLoadDistributionPolicyOutput) LoadDistributionTargets() ApplicationGatewayLoadDistributionTargetArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicy) []ApplicationGatewayLoadDistributionTarget {
		return v.LoadDistributionTargets
	}).(ApplicationGatewayLoadDistributionTargetArrayOutput)
}

// Name of the load distribution policy that is unique within an Application Gateway.
func (o ApplicationGatewayLoadDistributionPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayLoadDistributionPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayLoadDistributionPolicy)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionPolicyArrayOutput) ToApplicationGatewayLoadDistributionPolicyArrayOutput() ApplicationGatewayLoadDistributionPolicyArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionPolicyArrayOutput) ToApplicationGatewayLoadDistributionPolicyArrayOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionPolicyArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionPolicyArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayLoadDistributionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayLoadDistributionPolicy {
		return vs[0].([]ApplicationGatewayLoadDistributionPolicy)[vs[1].(int)]
	}).(ApplicationGatewayLoadDistributionPolicyOutput)
}

// Load Distribution Policy of an application gateway.
type ApplicationGatewayLoadDistributionPolicyResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load Distribution Targets resource of an application gateway.
	LoadDistributionAlgorithm *string `pulumi:"loadDistributionAlgorithm"`
	// Load Distribution Targets resource of an application gateway.
	LoadDistributionTargets []ApplicationGatewayLoadDistributionTargetResponse `pulumi:"loadDistributionTargets"`
	// Name of the load distribution policy that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the Load Distribution Policy resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Load Distribution Policy of an application gateway.
type ApplicationGatewayLoadDistributionPolicyResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayLoadDistributionPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) ToApplicationGatewayLoadDistributionPolicyResponseOutput() ApplicationGatewayLoadDistributionPolicyResponseOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) ToApplicationGatewayLoadDistributionPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionPolicyResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicyResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load Distribution Targets resource of an application gateway.
func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) LoadDistributionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicyResponse) *string { return v.LoadDistributionAlgorithm }).(pulumi.StringPtrOutput)
}

// Load Distribution Targets resource of an application gateway.
func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) LoadDistributionTargets() ApplicationGatewayLoadDistributionTargetResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicyResponse) []ApplicationGatewayLoadDistributionTargetResponse {
		return v.LoadDistributionTargets
	}).(ApplicationGatewayLoadDistributionTargetResponseArrayOutput)
}

// Name of the load distribution policy that is unique within an Application Gateway.
func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the Load Distribution Policy resource.
func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicyResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayLoadDistributionPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayLoadDistributionPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayLoadDistributionPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionPolicyResponseArrayOutput) ToApplicationGatewayLoadDistributionPolicyResponseArrayOutput() ApplicationGatewayLoadDistributionPolicyResponseArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionPolicyResponseArrayOutput) ToApplicationGatewayLoadDistributionPolicyResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionPolicyResponseArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionPolicyResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayLoadDistributionPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayLoadDistributionPolicyResponse {
		return vs[0].([]ApplicationGatewayLoadDistributionPolicyResponse)[vs[1].(int)]
	}).(ApplicationGatewayLoadDistributionPolicyResponseOutput)
}

// Load Distribution Target of an application gateway.
type ApplicationGatewayLoadDistributionTarget struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the load distribution policy that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Weight per server. Range between 1 and 100.
	WeightPerServer *int `pulumi:"weightPerServer"`
}

// ApplicationGatewayLoadDistributionTargetInput is an input type that accepts ApplicationGatewayLoadDistributionTargetArgs and ApplicationGatewayLoadDistributionTargetOutput values.
// You can construct a concrete instance of `ApplicationGatewayLoadDistributionTargetInput` via:
//
//	ApplicationGatewayLoadDistributionTargetArgs{...}
type ApplicationGatewayLoadDistributionTargetInput interface {
	pulumi.Input

	ToApplicationGatewayLoadDistributionTargetOutput() ApplicationGatewayLoadDistributionTargetOutput
	ToApplicationGatewayLoadDistributionTargetOutputWithContext(context.Context) ApplicationGatewayLoadDistributionTargetOutput
}

// Load Distribution Target of an application gateway.
type ApplicationGatewayLoadDistributionTargetArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the load distribution policy that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Weight per server. Range between 1 and 100.
	WeightPerServer pulumi.IntPtrInput `pulumi:"weightPerServer"`
}

func (ApplicationGatewayLoadDistributionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayLoadDistributionTarget)(nil)).Elem()
}

func (i ApplicationGatewayLoadDistributionTargetArgs) ToApplicationGatewayLoadDistributionTargetOutput() ApplicationGatewayLoadDistributionTargetOutput {
	return i.ToApplicationGatewayLoadDistributionTargetOutputWithContext(context.Background())
}

func (i ApplicationGatewayLoadDistributionTargetArgs) ToApplicationGatewayLoadDistributionTargetOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayLoadDistributionTargetOutput)
}

// ApplicationGatewayLoadDistributionTargetArrayInput is an input type that accepts ApplicationGatewayLoadDistributionTargetArray and ApplicationGatewayLoadDistributionTargetArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayLoadDistributionTargetArrayInput` via:
//
//	ApplicationGatewayLoadDistributionTargetArray{ ApplicationGatewayLoadDistributionTargetArgs{...} }
type ApplicationGatewayLoadDistributionTargetArrayInput interface {
	pulumi.Input

	ToApplicationGatewayLoadDistributionTargetArrayOutput() ApplicationGatewayLoadDistributionTargetArrayOutput
	ToApplicationGatewayLoadDistributionTargetArrayOutputWithContext(context.Context) ApplicationGatewayLoadDistributionTargetArrayOutput
}

type ApplicationGatewayLoadDistributionTargetArray []ApplicationGatewayLoadDistributionTargetInput

func (ApplicationGatewayLoadDistributionTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayLoadDistributionTarget)(nil)).Elem()
}

func (i ApplicationGatewayLoadDistributionTargetArray) ToApplicationGatewayLoadDistributionTargetArrayOutput() ApplicationGatewayLoadDistributionTargetArrayOutput {
	return i.ToApplicationGatewayLoadDistributionTargetArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayLoadDistributionTargetArray) ToApplicationGatewayLoadDistributionTargetArrayOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayLoadDistributionTargetArrayOutput)
}

// Load Distribution Target of an application gateway.
type ApplicationGatewayLoadDistributionTargetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayLoadDistributionTarget)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionTargetOutput) ToApplicationGatewayLoadDistributionTargetOutput() ApplicationGatewayLoadDistributionTargetOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionTargetOutput) ToApplicationGatewayLoadDistributionTargetOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionTargetOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayLoadDistributionTargetOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTarget) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayLoadDistributionTargetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTarget) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the load distribution policy that is unique within an Application Gateway.
func (o ApplicationGatewayLoadDistributionTargetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTarget) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Weight per server. Range between 1 and 100.
func (o ApplicationGatewayLoadDistributionTargetOutput) WeightPerServer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTarget) *int { return v.WeightPerServer }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayLoadDistributionTargetArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayLoadDistributionTarget)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionTargetArrayOutput) ToApplicationGatewayLoadDistributionTargetArrayOutput() ApplicationGatewayLoadDistributionTargetArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionTargetArrayOutput) ToApplicationGatewayLoadDistributionTargetArrayOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionTargetArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionTargetArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayLoadDistributionTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayLoadDistributionTarget {
		return vs[0].([]ApplicationGatewayLoadDistributionTarget)[vs[1].(int)]
	}).(ApplicationGatewayLoadDistributionTargetOutput)
}

// Load Distribution Target of an application gateway.
type ApplicationGatewayLoadDistributionTargetResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the load distribution policy that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// Weight per server. Range between 1 and 100.
	WeightPerServer *int `pulumi:"weightPerServer"`
}

// Load Distribution Target of an application gateway.
type ApplicationGatewayLoadDistributionTargetResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayLoadDistributionTargetResponse)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionTargetResponseOutput) ToApplicationGatewayLoadDistributionTargetResponseOutput() ApplicationGatewayLoadDistributionTargetResponseOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionTargetResponseOutput) ToApplicationGatewayLoadDistributionTargetResponseOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionTargetResponseOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayLoadDistributionTargetResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTargetResponse) *SubResourceResponse {
		return v.BackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayLoadDistributionTargetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTargetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayLoadDistributionTargetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTargetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the load distribution policy that is unique within an Application Gateway.
func (o ApplicationGatewayLoadDistributionTargetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTargetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayLoadDistributionTargetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTargetResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Weight per server. Range between 1 and 100.
func (o ApplicationGatewayLoadDistributionTargetResponseOutput) WeightPerServer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayLoadDistributionTargetResponse) *int { return v.WeightPerServer }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayLoadDistributionTargetResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayLoadDistributionTargetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayLoadDistributionTargetResponse)(nil)).Elem()
}

func (o ApplicationGatewayLoadDistributionTargetResponseArrayOutput) ToApplicationGatewayLoadDistributionTargetResponseArrayOutput() ApplicationGatewayLoadDistributionTargetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionTargetResponseArrayOutput) ToApplicationGatewayLoadDistributionTargetResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayLoadDistributionTargetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayLoadDistributionTargetResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayLoadDistributionTargetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayLoadDistributionTargetResponse {
		return vs[0].([]ApplicationGatewayLoadDistributionTargetResponse)[vs[1].(int)]
	}).(ApplicationGatewayLoadDistributionTargetResponseOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRule struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResource `pulumi:"firewallPolicy"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load Distribution Policy resource of URL path map path rule.
	LoadDistributionPolicy *SubResource `pulumi:"loadDistributionPolicy"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet *SubResource `pulumi:"rewriteRuleSet"`
}

// ApplicationGatewayPathRuleInput is an input type that accepts ApplicationGatewayPathRuleArgs and ApplicationGatewayPathRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleInput` via:
//
//	ApplicationGatewayPathRuleArgs{...}
type ApplicationGatewayPathRuleInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput
	ToApplicationGatewayPathRuleOutputWithContext(context.Context) ApplicationGatewayPathRuleOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleArgs struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy SubResourcePtrInput `pulumi:"firewallPolicy"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Load Distribution Policy resource of URL path map path rule.
	LoadDistributionPolicy SubResourcePtrInput `pulumi:"loadDistributionPolicy"`
	// Name of the path rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet SubResourcePtrInput `pulumi:"rewriteRuleSet"`
}

func (ApplicationGatewayPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return i.ToApplicationGatewayPathRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleOutput)
}

// ApplicationGatewayPathRuleArrayInput is an input type that accepts ApplicationGatewayPathRuleArray and ApplicationGatewayPathRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleArrayInput` via:
//
//	ApplicationGatewayPathRuleArray{ ApplicationGatewayPathRuleArgs{...} }
type ApplicationGatewayPathRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput
	ToApplicationGatewayPathRuleArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleArrayOutput
}

type ApplicationGatewayPathRuleArray []ApplicationGatewayPathRuleInput

func (ApplicationGatewayPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return i.ToApplicationGatewayPathRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return o
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return o
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayPathRuleOutput) FirewallPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.FirewallPolicy }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load Distribution Policy resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) LoadDistributionPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.LoadDistributionPolicy }).(SubResourcePtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.RedirectConfiguration }).(SubResourcePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.RewriteRuleSet }).(SubResourcePtrOutput)
}

type ApplicationGatewayPathRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRule {
		return vs[0].([]ApplicationGatewayPathRule)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponse struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResourceResponse `pulumi:"firewallPolicy"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load Distribution Policy resource of URL path map path rule.
	LoadDistributionPolicy *SubResourceResponse `pulumi:"loadDistributionPolicy"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// The provisioning state of the path rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet *SubResourceResponse `pulumi:"rewriteRuleSet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return o
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayPathRuleResponseOutput) FirewallPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.FirewallPolicy }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load Distribution Policy resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) LoadDistributionPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.LoadDistributionPolicy }).(SubResourceResponsePtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// The provisioning state of the path rule resource.
func (o ApplicationGatewayPathRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.RedirectConfiguration }).(SubResourceResponsePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.RewriteRuleSet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayPathRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPathRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRuleResponse {
		return vs[0].([]ApplicationGatewayPathRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleResponseOutput)
}

// Private Endpoint connection on an application gateway.
type ApplicationGatewayPrivateEndpointConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The consumer link id.
	LinkIdentifier string `pulumi:"linkIdentifier"`
	// Name of the private endpoint connection on an application gateway.
	Name *string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the application gateway private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ApplicationGatewayPrivateEndpointConnectionResponse
func (val *ApplicationGatewayPrivateEndpointConnectionResponse) Defaults() *ApplicationGatewayPrivateEndpointConnectionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PrivateEndpoint = *tmp.PrivateEndpoint.Defaults()

	return &tmp
}

// Private Endpoint connection on an application gateway.
type ApplicationGatewayPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) ToApplicationGatewayPrivateEndpointConnectionResponseOutput() ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) ToApplicationGatewayPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The consumer link id.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) LinkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.LinkIdentifier }).(pulumi.StringOutput)
}

// Name of the private endpoint connection on an application gateway.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource of private end point.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) PrivateEndpointResponse {
		return v.PrivateEndpoint
	}).(PrivateEndpointResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The provisioning state of the application gateway private endpoint connection resource.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutput() ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateEndpointConnectionResponse {
		return vs[0].([]ApplicationGatewayPrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(ApplicationGatewayPrivateEndpointConnectionResponseOutput)
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of application gateway private link ip configurations.
	IpConfigurations []ApplicationGatewayPrivateLinkIpConfiguration `pulumi:"ipConfigurations"`
	// Name of the private link configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayPrivateLinkConfigurationInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationArgs and ApplicationGatewayPrivateLinkConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationInput` via:
//
//	ApplicationGatewayPrivateLinkConfigurationArgs{...}
type ApplicationGatewayPrivateLinkConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput
	ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationOutput
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of application gateway private link ip configurations.
	IpConfigurations ApplicationGatewayPrivateLinkIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Name of the private link configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayPrivateLinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationOutput)
}

// ApplicationGatewayPrivateLinkConfigurationArrayInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationArray and ApplicationGatewayPrivateLinkConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationArrayInput` via:
//
//	ApplicationGatewayPrivateLinkConfigurationArray{ ApplicationGatewayPrivateLinkConfigurationArgs{...} }
type ApplicationGatewayPrivateLinkConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput
	ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput
}

type ApplicationGatewayPrivateLinkConfigurationArray []ApplicationGatewayPrivateLinkConfigurationInput

func (ApplicationGatewayPrivateLinkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationArrayOutput)
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of application gateway private link ip configurations.
func (o ApplicationGatewayPrivateLinkConfigurationOutput) IpConfigurations() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) []ApplicationGatewayPrivateLinkIpConfiguration {
		return v.IpConfigurations
	}).(ApplicationGatewayPrivateLinkIpConfigurationArrayOutput)
}

// Name of the private link configuration that is unique within an Application Gateway.
func (o ApplicationGatewayPrivateLinkConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPrivateLinkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkConfiguration {
		return vs[0].([]ApplicationGatewayPrivateLinkConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkConfigurationOutput)
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of application gateway private link ip configurations.
	IpConfigurations []ApplicationGatewayPrivateLinkIpConfigurationResponse `pulumi:"ipConfigurations"`
	// Name of the private link configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the application gateway private link configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) ToApplicationGatewayPrivateLinkConfigurationResponseOutput() ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) ToApplicationGatewayPrivateLinkConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of application gateway private link ip configurations.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) IpConfigurations() ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) []ApplicationGatewayPrivateLinkIpConfigurationResponse {
		return v.IpConfigurations
	}).(ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput)
}

// Name of the private link configuration that is unique within an Application Gateway.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the application gateway private link configuration.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkConfigurationResponse {
		return vs[0].([]ApplicationGatewayPrivateLinkConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkConfigurationResponseOutput)
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of application gateway private link ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference to the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayPrivateLinkIpConfigurationInput is an input type that accepts ApplicationGatewayPrivateLinkIpConfigurationArgs and ApplicationGatewayPrivateLinkIpConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkIpConfigurationInput` via:
//
//	ApplicationGatewayPrivateLinkIpConfigurationArgs{...}
type ApplicationGatewayPrivateLinkIpConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkIpConfigurationOutput() ApplicationGatewayPrivateLinkIpConfigurationOutput
	ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(context.Context) ApplicationGatewayPrivateLinkIpConfigurationOutput
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of application gateway private link ip configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Reference to the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayPrivateLinkIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArgs) ToApplicationGatewayPrivateLinkIpConfigurationOutput() ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return i.ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArgs) ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkIpConfigurationOutput)
}

// ApplicationGatewayPrivateLinkIpConfigurationArrayInput is an input type that accepts ApplicationGatewayPrivateLinkIpConfigurationArray and ApplicationGatewayPrivateLinkIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkIpConfigurationArrayInput` via:
//
//	ApplicationGatewayPrivateLinkIpConfigurationArray{ ApplicationGatewayPrivateLinkIpConfigurationArgs{...} }
type ApplicationGatewayPrivateLinkIpConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput
	ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkIpConfigurationArrayOutput
}

type ApplicationGatewayPrivateLinkIpConfigurationArray []ApplicationGatewayPrivateLinkIpConfigurationInput

func (ApplicationGatewayPrivateLinkIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArray) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return i.ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArray) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkIpConfigurationArrayOutput)
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) ToApplicationGatewayPrivateLinkIpConfigurationOutput() ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of application gateway private link ip configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayPrivateLinkIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkIpConfiguration {
		return vs[0].([]ApplicationGatewayPrivateLinkIpConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkIpConfigurationOutput)
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of application gateway private link ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the application gateway private link IP configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// The resource type.
	Type string `pulumi:"type"`
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkIpConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of application gateway private link ip configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the application gateway private link IP configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// The resource type.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkIpConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkIpConfigurationResponse {
		return vs[0].([]ApplicationGatewayPrivateLinkIpConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkIpConfigurationResponseOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbe struct {
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatch `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.
	PickHostNameFromBackendSettings *bool `pulumi:"pickHostNameFromBackendSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port *int `pulumi:"port"`
	// The protocol used for the probe.
	Protocol *string `pulumi:"protocol"`
	// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeInput is an input type that accepts ApplicationGatewayProbeArgs and ApplicationGatewayProbeOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInput` via:
//
//	ApplicationGatewayProbeArgs{...}
type ApplicationGatewayProbeInput interface {
	pulumi.Input

	ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput
	ToApplicationGatewayProbeOutputWithContext(context.Context) ApplicationGatewayProbeOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeArgs struct {
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match ApplicationGatewayProbeHealthResponseMatchPtrInput `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers pulumi.IntPtrInput `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.
	PickHostNameFromBackendSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol used for the probe.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return i.ToApplicationGatewayProbeOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeOutput)
}

// ApplicationGatewayProbeArrayInput is an input type that accepts ApplicationGatewayProbeArray and ApplicationGatewayProbeArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeArrayInput` via:
//
//	ApplicationGatewayProbeArray{ ApplicationGatewayProbeArgs{...} }
type ApplicationGatewayProbeArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput
	ToApplicationGatewayProbeArrayOutputWithContext(context.Context) ApplicationGatewayProbeArrayOutput
}

type ApplicationGatewayProbeArray []ApplicationGatewayProbeInput

func (ApplicationGatewayProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return i.ToApplicationGatewayProbeArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return o
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return o
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbeOutput) Match() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *ApplicationGatewayProbeHealthResponseMatch { return v.Match }).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbeOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
func (o ApplicationGatewayProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbeOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.
func (o ApplicationGatewayProbeOutput) PickHostNameFromBackendSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *bool { return v.PickHostNameFromBackendSettings }).(pulumi.BoolPtrOutput)
}

// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
func (o ApplicationGatewayProbeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol used for the probe.
func (o ApplicationGatewayProbeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbe {
		return vs[0].([]ApplicationGatewayProbe)[vs[1].(int)]
	}).(ApplicationGatewayProbeOutput)
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatch struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeHealthResponseMatchInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs and ApplicationGatewayProbeHealthResponseMatchOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchInput` via:
//
//	ApplicationGatewayProbeHealthResponseMatchArgs{...}
type ApplicationGatewayProbeHealthResponseMatchInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput
	ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchOutput
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchArgs struct {
	// Body that must be contained in the health response. Default value is empty.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeHealthResponseMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput).ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeHealthResponseMatchPtrInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs, ApplicationGatewayProbeHealthResponseMatchPtr and ApplicationGatewayProbeHealthResponseMatchPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchPtrInput` via:
//
//	        ApplicationGatewayProbeHealthResponseMatchArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayProbeHealthResponseMatchPtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput
	ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput
}

type applicationGatewayProbeHealthResponseMatchPtrType ApplicationGatewayProbeHealthResponseMatchArgs

func ApplicationGatewayProbeHealthResponseMatchPtr(v *ApplicationGatewayProbeHealthResponseMatchArgs) ApplicationGatewayProbeHealthResponseMatchPtrInput {
	return (*applicationGatewayProbeHealthResponseMatchPtrType)(v)
}

func (*applicationGatewayProbeHealthResponseMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayProbeHealthResponseMatch) *ApplicationGatewayProbeHealthResponseMatch {
		return &v
	}).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) ApplicationGatewayProbeHealthResponseMatch {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayProbeHealthResponseMatch
		return ret
	}).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchResponse struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) ApplicationGatewayProbeHealthResponseMatchResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayProbeHealthResponseMatchResponse
		return ret
	}).(ApplicationGatewayProbeHealthResponseMatchResponseOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatchResponse `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.
	PickHostNameFromBackendSettings *bool `pulumi:"pickHostNameFromBackendSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port *int `pulumi:"port"`
	// The protocol used for the probe.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the probe resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return o
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbeResponseOutput) Match() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		return v.Match
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbeResponseOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
func (o ApplicationGatewayProbeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbeResponseOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false.
func (o ApplicationGatewayProbeResponseOutput) PickHostNameFromBackendSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *bool { return v.PickHostNameFromBackendSettings }).(pulumi.BoolPtrOutput)
}

// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
func (o ApplicationGatewayProbeResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol used for the probe.
func (o ApplicationGatewayProbeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the probe resource.
func (o ApplicationGatewayProbeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayProbeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeResponseOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbeResponse {
		return vs[0].([]ApplicationGatewayProbeResponse)[vs[1].(int)]
	}).(ApplicationGatewayProbeResponseOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules []SubResource `pulumi:"pathRules"`
	// HTTP redirection type.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResource `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResource `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResource `pulumi:"urlPathMaps"`
}

// ApplicationGatewayRedirectConfigurationInput is an input type that accepts ApplicationGatewayRedirectConfigurationArgs and ApplicationGatewayRedirectConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationInput` via:
//
//	ApplicationGatewayRedirectConfigurationArgs{...}
type ApplicationGatewayRedirectConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput
	ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationOutput
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules SubResourceArrayInput `pulumi:"pathRules"`
	// HTTP redirection type.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules SubResourceArrayInput `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener SubResourcePtrInput `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps SubResourceArrayInput `pulumi:"urlPathMaps"`
}

func (ApplicationGatewayRedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return i.ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationOutput)
}

// ApplicationGatewayRedirectConfigurationArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationArray and ApplicationGatewayRedirectConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationArrayInput` via:
//
//	ApplicationGatewayRedirectConfigurationArray{ ApplicationGatewayRedirectConfigurationArgs{...} }
type ApplicationGatewayRedirectConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput
	ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationArrayOutput
}

type ApplicationGatewayRedirectConfigurationArray []ApplicationGatewayRedirectConfigurationInput

func (ApplicationGatewayRedirectConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) PathRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.PathRules }).(SubResourceArrayOutput)
}

// HTTP redirection type.
func (o ApplicationGatewayRedirectConfigurationOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) RequestRoutingRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.RequestRoutingRules }).(SubResourceArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *SubResource { return v.TargetListener }).(SubResourcePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) UrlPathMaps() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.UrlPathMaps }).(SubResourceArrayOutput)
}

type ApplicationGatewayRedirectConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfiguration {
		return vs[0].([]ApplicationGatewayRedirectConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules []SubResourceResponse `pulumi:"pathRules"`
	// HTTP redirection type.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResourceResponse `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResourceResponse `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResourceResponse `pulumi:"urlPathMaps"`
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) PathRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse { return v.PathRules }).(SubResourceResponseArrayOutput)
}

// HTTP redirection type.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) RequestRoutingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse {
		return v.RequestRoutingRules
	}).(SubResourceResponseArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) TargetListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *SubResourceResponse { return v.TargetListener }).(SubResourceResponsePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) UrlPathMaps() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse { return v.UrlPathMaps }).(SubResourceResponseArrayOutput)
}

type ApplicationGatewayRedirectConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfigurationResponse {
		return vs[0].([]ApplicationGatewayRedirectConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationResponseOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRule struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener *SubResource `pulumi:"httpListener"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load Distribution Policy resource of the application gateway.
	LoadDistributionPolicy *SubResource `pulumi:"loadDistributionPolicy"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Priority of the request routing rule.
	Priority *int `pulumi:"priority"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet *SubResource `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResource `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArgs and ApplicationGatewayRequestRoutingRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInput` via:
//
//	ApplicationGatewayRequestRoutingRuleArgs{...}
type ApplicationGatewayRequestRoutingRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput
	ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener SubResourcePtrInput `pulumi:"httpListener"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Load Distribution Policy resource of the application gateway.
	LoadDistributionPolicy SubResourcePtrInput `pulumi:"loadDistributionPolicy"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the request routing rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet SubResourcePtrInput `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourcePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return i.ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleOutput)
}

// ApplicationGatewayRequestRoutingRuleArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArray and ApplicationGatewayRequestRoutingRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleArrayInput` via:
//
//	ApplicationGatewayRequestRoutingRuleArray{ ApplicationGatewayRequestRoutingRuleArgs{...} }
type ApplicationGatewayRequestRoutingRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput
	ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput
}

type ApplicationGatewayRequestRoutingRuleArray []ApplicationGatewayRequestRoutingRuleInput

func (ApplicationGatewayRequestRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) HttpListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.HttpListener }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load Distribution Policy resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) LoadDistributionPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.LoadDistributionPolicy }).(SubResourcePtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the request routing rule.
func (o ApplicationGatewayRequestRoutingRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.RedirectConfiguration }).(SubResourcePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.RewriteRuleSet }).(SubResourcePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRuleOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) UrlPathMap() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.UrlPathMap }).(SubResourcePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRule {
		return vs[0].([]ApplicationGatewayRequestRoutingRule)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener *SubResourceResponse `pulumi:"httpListener"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load Distribution Policy resource of the application gateway.
	LoadDistributionPolicy *SubResourceResponse `pulumi:"loadDistributionPolicy"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Priority of the request routing rule.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the request routing rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet *SubResourceResponse `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResourceResponse `pulumi:"urlPathMap"`
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) HttpListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.HttpListener }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load Distribution Policy resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) LoadDistributionPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.LoadDistributionPolicy
	}).(SubResourceResponsePtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the request routing rule.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the request routing rule resource.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.RedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.RewriteRuleSet }).(SubResourceResponsePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) UrlPathMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.UrlPathMap }).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRuleResponse {
		return vs[0].([]ApplicationGatewayRequestRoutingRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// Application gateway resource.
type ApplicationGatewayResponse struct {
	// Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	AuthenticationCertificates []ApplicationGatewayAuthenticationCertificateResponse `pulumi:"authenticationCertificates"`
	// Autoscale Configuration.
	AutoscaleConfiguration *ApplicationGatewayAutoscaleConfigurationResponse `pulumi:"autoscaleConfiguration"`
	// Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	BackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"backendAddressPools"`
	// Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	BackendHttpSettingsCollection []ApplicationGatewayBackendHttpSettingsResponse `pulumi:"backendHttpSettingsCollection"`
	// Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	BackendSettingsCollection []ApplicationGatewayBackendSettingsResponse `pulumi:"backendSettingsCollection"`
	// Custom error configurations of the application gateway resource.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorResponse `pulumi:"customErrorConfigurations"`
	// The default predefined SSL Policy applied on the application gateway resource.
	DefaultPredefinedSslPolicy string `pulumi:"defaultPredefinedSslPolicy"`
	// Whether FIPS is enabled on the application gateway resource.
	EnableFips *bool `pulumi:"enableFips"`
	// Whether HTTP2 is enabled on the application gateway resource.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResourceResponse `pulumi:"firewallPolicy"`
	// If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
	ForceFirewallPolicyAssociation *bool `pulumi:"forceFirewallPolicyAssociation"`
	// Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	FrontendIPConfigurations []ApplicationGatewayFrontendIPConfigurationResponse `pulumi:"frontendIPConfigurations"`
	// Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	FrontendPorts []ApplicationGatewayFrontendPortResponse `pulumi:"frontendPorts"`
	// Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	GatewayIPConfigurations []ApplicationGatewayIPConfigurationResponse `pulumi:"gatewayIPConfigurations"`
	// Global Configuration.
	GlobalConfiguration *ApplicationGatewayGlobalConfigurationResponse `pulumi:"globalConfiguration"`
	// Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	HttpListeners []ApplicationGatewayHttpListenerResponse `pulumi:"httpListeners"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The identity of the application gateway, if configured.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	Listeners []ApplicationGatewayListenerResponse `pulumi:"listeners"`
	// Load distribution policies of the application gateway resource.
	LoadDistributionPolicies []ApplicationGatewayLoadDistributionPolicyResponse `pulumi:"loadDistributionPolicies"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Operational state of the application gateway resource.
	OperationalState string `pulumi:"operationalState"`
	// Private Endpoint connections on application gateway.
	PrivateEndpointConnections []ApplicationGatewayPrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// PrivateLink configurations on application gateway.
	PrivateLinkConfigurations []ApplicationGatewayPrivateLinkConfigurationResponse `pulumi:"privateLinkConfigurations"`
	// Probes of the application gateway resource.
	Probes []ApplicationGatewayProbeResponse `pulumi:"probes"`
	// The provisioning state of the application gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	RedirectConfigurations []ApplicationGatewayRedirectConfigurationResponse `pulumi:"redirectConfigurations"`
	// Request routing rules of the application gateway resource.
	RequestRoutingRules []ApplicationGatewayRequestRoutingRuleResponse `pulumi:"requestRoutingRules"`
	// The resource GUID property of the application gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Rewrite rules for the application gateway resource.
	RewriteRuleSets []ApplicationGatewayRewriteRuleSetResponse `pulumi:"rewriteRuleSets"`
	// Routing rules of the application gateway resource.
	RoutingRules []ApplicationGatewayRoutingRuleResponse `pulumi:"routingRules"`
	// SKU of the application gateway resource.
	Sku *ApplicationGatewaySkuResponse `pulumi:"sku"`
	// SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	SslCertificates []ApplicationGatewaySslCertificateResponse `pulumi:"sslCertificates"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicyResponse `pulumi:"sslPolicy"`
	// SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	SslProfiles []ApplicationGatewaySslProfileResponse `pulumi:"sslProfiles"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	TrustedClientCertificates []ApplicationGatewayTrustedClientCertificateResponse `pulumi:"trustedClientCertificates"`
	// Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	TrustedRootCertificates []ApplicationGatewayTrustedRootCertificateResponse `pulumi:"trustedRootCertificates"`
	// Resource type.
	Type string `pulumi:"type"`
	// URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	UrlPathMaps []ApplicationGatewayUrlPathMapResponse `pulumi:"urlPathMaps"`
	// Web application firewall configuration.
	WebApplicationFirewallConfiguration *ApplicationGatewayWebApplicationFirewallConfigurationResponse `pulumi:"webApplicationFirewallConfiguration"`
	// A list of availability zones denoting where the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Application gateway resource.
type ApplicationGatewayResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayResponse)(nil)).Elem()
}

func (o ApplicationGatewayResponseOutput) ToApplicationGatewayResponseOutput() ApplicationGatewayResponseOutput {
	return o
}

func (o ApplicationGatewayResponseOutput) ToApplicationGatewayResponseOutputWithContext(ctx context.Context) ApplicationGatewayResponseOutput {
	return o
}

// Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) AuthenticationCertificates() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayAuthenticationCertificateResponse {
		return v.AuthenticationCertificates
	}).(ApplicationGatewayAuthenticationCertificateResponseArrayOutput)
}

// Autoscale Configuration.
func (o ApplicationGatewayResponseOutput) AutoscaleConfiguration() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewayAutoscaleConfigurationResponse {
		return v.AutoscaleConfiguration
	}).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) BackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.BackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) BackendHttpSettingsCollection() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayBackendHttpSettingsResponse {
		return v.BackendHttpSettingsCollection
	}).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) BackendSettingsCollection() ApplicationGatewayBackendSettingsResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayBackendSettingsResponse {
		return v.BackendSettingsCollection
	}).(ApplicationGatewayBackendSettingsResponseArrayOutput)
}

// Custom error configurations of the application gateway resource.
func (o ApplicationGatewayResponseOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayCustomErrorResponse {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// The default predefined SSL Policy applied on the application gateway resource.
func (o ApplicationGatewayResponseOutput) DefaultPredefinedSslPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.DefaultPredefinedSslPolicy }).(pulumi.StringOutput)
}

// Whether FIPS is enabled on the application gateway resource.
func (o ApplicationGatewayResponseOutput) EnableFips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *bool { return v.EnableFips }).(pulumi.BoolPtrOutput)
}

// Whether HTTP2 is enabled on the application gateway resource.
func (o ApplicationGatewayResponseOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *bool { return v.EnableHttp2 }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayResponseOutput) FirewallPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *SubResourceResponse { return v.FirewallPolicy }).(SubResourceResponsePtrOutput)
}

// If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
func (o ApplicationGatewayResponseOutput) ForceFirewallPolicyAssociation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *bool { return v.ForceFirewallPolicyAssociation }).(pulumi.BoolPtrOutput)
}

// Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) FrontendIPConfigurations() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayFrontendIPConfigurationResponse {
		return v.FrontendIPConfigurations
	}).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) FrontendPorts() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayFrontendPortResponse { return v.FrontendPorts }).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) GatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayIPConfigurationResponse {
		return v.GatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// Global Configuration.
func (o ApplicationGatewayResponseOutput) GlobalConfiguration() ApplicationGatewayGlobalConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewayGlobalConfigurationResponse {
		return v.GlobalConfiguration
	}).(ApplicationGatewayGlobalConfigurationResponsePtrOutput)
}

// Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) HttpListeners() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayHttpListenerResponse { return v.HttpListeners }).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The identity of the application gateway, if configured.
func (o ApplicationGatewayResponseOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) Listeners() ApplicationGatewayListenerResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayListenerResponse { return v.Listeners }).(ApplicationGatewayListenerResponseArrayOutput)
}

// Load distribution policies of the application gateway resource.
func (o ApplicationGatewayResponseOutput) LoadDistributionPolicies() ApplicationGatewayLoadDistributionPolicyResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayLoadDistributionPolicyResponse {
		return v.LoadDistributionPolicies
	}).(ApplicationGatewayLoadDistributionPolicyResponseArrayOutput)
}

// Resource location.
func (o ApplicationGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Operational state of the application gateway resource.
func (o ApplicationGatewayResponseOutput) OperationalState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.OperationalState }).(pulumi.StringOutput)
}

// Private Endpoint connections on application gateway.
func (o ApplicationGatewayResponseOutput) PrivateEndpointConnections() ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayPrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput)
}

// PrivateLink configurations on application gateway.
func (o ApplicationGatewayResponseOutput) PrivateLinkConfigurations() ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayPrivateLinkConfigurationResponse {
		return v.PrivateLinkConfigurations
	}).(ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput)
}

// Probes of the application gateway resource.
func (o ApplicationGatewayResponseOutput) Probes() ApplicationGatewayProbeResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayProbeResponse { return v.Probes }).(ApplicationGatewayProbeResponseArrayOutput)
}

// The provisioning state of the application gateway resource.
func (o ApplicationGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) RedirectConfigurations() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayRedirectConfigurationResponse {
		return v.RedirectConfigurations
	}).(ApplicationGatewayRedirectConfigurationResponseArrayOutput)
}

// Request routing rules of the application gateway resource.
func (o ApplicationGatewayResponseOutput) RequestRoutingRules() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayRequestRoutingRuleResponse {
		return v.RequestRoutingRules
	}).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// The resource GUID property of the application gateway resource.
func (o ApplicationGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Rewrite rules for the application gateway resource.
func (o ApplicationGatewayResponseOutput) RewriteRuleSets() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayRewriteRuleSetResponse {
		return v.RewriteRuleSets
	}).(ApplicationGatewayRewriteRuleSetResponseArrayOutput)
}

// Routing rules of the application gateway resource.
func (o ApplicationGatewayResponseOutput) RoutingRules() ApplicationGatewayRoutingRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayRoutingRuleResponse { return v.RoutingRules }).(ApplicationGatewayRoutingRuleResponseArrayOutput)
}

// SKU of the application gateway resource.
func (o ApplicationGatewayResponseOutput) Sku() ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewaySkuResponse { return v.Sku }).(ApplicationGatewaySkuResponsePtrOutput)
}

// SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) SslCertificates() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewaySslCertificateResponse {
		return v.SslCertificates
	}).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewayResponseOutput) SslPolicy() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewaySslPolicyResponse { return v.SslPolicy }).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) SslProfiles() ApplicationGatewaySslProfileResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewaySslProfileResponse { return v.SslProfiles }).(ApplicationGatewaySslProfileResponseArrayOutput)
}

// Resource tags.
func (o ApplicationGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) TrustedClientCertificates() ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayTrustedClientCertificateResponse {
		return v.TrustedClientCertificates
	}).(ApplicationGatewayTrustedClientCertificateResponseArrayOutput)
}

// Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) TrustedRootCertificates() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayTrustedRootCertificateResponse {
		return v.TrustedRootCertificates
	}).(ApplicationGatewayTrustedRootCertificateResponseArrayOutput)
}

// Resource type.
func (o ApplicationGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) UrlPathMaps() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayUrlPathMapResponse { return v.UrlPathMaps }).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// Web application firewall configuration.
func (o ApplicationGatewayResponseOutput) WebApplicationFirewallConfiguration() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return v.WebApplicationFirewallConfiguration
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// A list of availability zones denoting where the resource needs to come from.
func (o ApplicationGatewayResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayResponse)(nil)).Elem()
}

func (o ApplicationGatewayResponseArrayOutput) ToApplicationGatewayResponseArrayOutput() ApplicationGatewayResponseArrayOutput {
	return o
}

func (o ApplicationGatewayResponseArrayOutput) ToApplicationGatewayResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayResponseArrayOutput {
	return o
}

func (o ApplicationGatewayResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayResponse {
		return vs[0].([]ApplicationGatewayResponse)[vs[1].(int)]
	}).(ApplicationGatewayResponseOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRule struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet *ApplicationGatewayRewriteRuleActionSet `pulumi:"actionSet"`
	// Conditions based on which the action set execution will be evaluated.
	Conditions []ApplicationGatewayRewriteRuleCondition `pulumi:"conditions"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
	RuleSequence *int `pulumi:"ruleSequence"`
}

// ApplicationGatewayRewriteRuleInput is an input type that accepts ApplicationGatewayRewriteRuleArgs and ApplicationGatewayRewriteRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleInput` via:
//
//	ApplicationGatewayRewriteRuleArgs{...}
type ApplicationGatewayRewriteRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput
	ToApplicationGatewayRewriteRuleOutputWithContext(context.Context) ApplicationGatewayRewriteRuleOutput
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleArgs struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet ApplicationGatewayRewriteRuleActionSetPtrInput `pulumi:"actionSet"`
	// Conditions based on which the action set execution will be evaluated.
	Conditions ApplicationGatewayRewriteRuleConditionArrayInput `pulumi:"conditions"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
	RuleSequence pulumi.IntPtrInput `pulumi:"ruleSequence"`
}

func (ApplicationGatewayRewriteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleArgs) ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput {
	return i.ToApplicationGatewayRewriteRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleArgs) ToApplicationGatewayRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleOutput)
}

// ApplicationGatewayRewriteRuleArrayInput is an input type that accepts ApplicationGatewayRewriteRuleArray and ApplicationGatewayRewriteRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleArrayInput` via:
//
//	ApplicationGatewayRewriteRuleArray{ ApplicationGatewayRewriteRuleArgs{...} }
type ApplicationGatewayRewriteRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput
	ToApplicationGatewayRewriteRuleArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleArrayOutput
}

type ApplicationGatewayRewriteRuleArray []ApplicationGatewayRewriteRuleInput

func (ApplicationGatewayRewriteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleArray) ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput {
	return i.ToApplicationGatewayRewriteRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleArray) ToApplicationGatewayRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleArrayOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleOutput) ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleOutput) ToApplicationGatewayRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleOutput {
	return o
}

// Set of actions to be done as part of the rewrite Rule.
func (o ApplicationGatewayRewriteRuleOutput) ActionSet() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *ApplicationGatewayRewriteRuleActionSet { return v.ActionSet }).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Conditions based on which the action set execution will be evaluated.
func (o ApplicationGatewayRewriteRuleOutput) Conditions() ApplicationGatewayRewriteRuleConditionArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) []ApplicationGatewayRewriteRuleCondition { return v.Conditions }).(ApplicationGatewayRewriteRuleConditionArrayOutput)
}

// Name of the rewrite rule that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
func (o ApplicationGatewayRewriteRuleOutput) RuleSequence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *int { return v.RuleSequence }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayRewriteRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRule {
		return vs[0].([]ApplicationGatewayRewriteRule)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSet struct {
	// Request Header Actions in the Action Set.
	RequestHeaderConfigurations []ApplicationGatewayHeaderConfiguration `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set.
	ResponseHeaderConfigurations []ApplicationGatewayHeaderConfiguration `pulumi:"responseHeaderConfigurations"`
	// Url Configuration Action in the Action Set.
	UrlConfiguration *ApplicationGatewayUrlConfiguration `pulumi:"urlConfiguration"`
}

// ApplicationGatewayRewriteRuleActionSetInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetArgs and ApplicationGatewayRewriteRuleActionSetOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetInput` via:
//
//	ApplicationGatewayRewriteRuleActionSetArgs{...}
type ApplicationGatewayRewriteRuleActionSetInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput
	ToApplicationGatewayRewriteRuleActionSetOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetOutput
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetArgs struct {
	// Request Header Actions in the Action Set.
	RequestHeaderConfigurations ApplicationGatewayHeaderConfigurationArrayInput `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set.
	ResponseHeaderConfigurations ApplicationGatewayHeaderConfigurationArrayInput `pulumi:"responseHeaderConfigurations"`
	// Url Configuration Action in the Action Set.
	UrlConfiguration ApplicationGatewayUrlConfigurationPtrInput `pulumi:"urlConfiguration"`
}

func (ApplicationGatewayRewriteRuleActionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetOutput)
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetOutput).ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleActionSetPtrInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetArgs, ApplicationGatewayRewriteRuleActionSetPtr and ApplicationGatewayRewriteRuleActionSetPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetPtrInput` via:
//
//	        ApplicationGatewayRewriteRuleActionSetArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayRewriteRuleActionSetPtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput
	ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput
}

type applicationGatewayRewriteRuleActionSetPtrType ApplicationGatewayRewriteRuleActionSetArgs

func ApplicationGatewayRewriteRuleActionSetPtr(v *ApplicationGatewayRewriteRuleActionSetArgs) ApplicationGatewayRewriteRuleActionSetPtrInput {
	return (*applicationGatewayRewriteRuleActionSetPtrType)(v)
}

func (*applicationGatewayRewriteRuleActionSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleActionSetPtrType) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleActionSetPtrType) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayRewriteRuleActionSet) *ApplicationGatewayRewriteRuleActionSet {
		return &v
	}).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) *ApplicationGatewayUrlConfiguration {
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationPtrOutput)
}

type ApplicationGatewayRewriteRuleActionSetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) Elem() ApplicationGatewayRewriteRuleActionSetOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) ApplicationGatewayRewriteRuleActionSet {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayRewriteRuleActionSet
		return ret
	}).(ApplicationGatewayRewriteRuleActionSetOutput)
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		if v == nil {
			return nil
		}
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		if v == nil {
			return nil
		}
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) *ApplicationGatewayUrlConfiguration {
		if v == nil {
			return nil
		}
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationPtrOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponse struct {
	// Request Header Actions in the Action Set.
	RequestHeaderConfigurations []ApplicationGatewayHeaderConfigurationResponse `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set.
	ResponseHeaderConfigurations []ApplicationGatewayHeaderConfigurationResponse `pulumi:"responseHeaderConfigurations"`
	// Url Configuration Action in the Action Set.
	UrlConfiguration *ApplicationGatewayUrlConfigurationResponse `pulumi:"urlConfiguration"`
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponseOutput() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) *ApplicationGatewayUrlConfigurationResponse {
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationResponsePtrOutput)
}

type ApplicationGatewayRewriteRuleActionSetResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) Elem() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) ApplicationGatewayRewriteRuleActionSetResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayRewriteRuleActionSetResponse
		return ret
	}).(ApplicationGatewayRewriteRuleActionSetResponseOutput)
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) *ApplicationGatewayUrlConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationResponsePtrOutput)
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleCondition struct {
	// Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Setting this value as truth will force to check the negation of the condition given by the user.
	Negate *bool `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern *string `pulumi:"pattern"`
	// The condition parameter of the RewriteRuleCondition.
	Variable *string `pulumi:"variable"`
}

// ApplicationGatewayRewriteRuleConditionInput is an input type that accepts ApplicationGatewayRewriteRuleConditionArgs and ApplicationGatewayRewriteRuleConditionOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleConditionInput` via:
//
//	ApplicationGatewayRewriteRuleConditionArgs{...}
type ApplicationGatewayRewriteRuleConditionInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleConditionOutput
	ToApplicationGatewayRewriteRuleConditionOutputWithContext(context.Context) ApplicationGatewayRewriteRuleConditionOutput
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionArgs struct {
	// Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Setting this value as truth will force to check the negation of the condition given by the user.
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// The condition parameter of the RewriteRuleCondition.
	Variable pulumi.StringPtrInput `pulumi:"variable"`
}

func (ApplicationGatewayRewriteRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleConditionArgs) ToApplicationGatewayRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleConditionOutput {
	return i.ToApplicationGatewayRewriteRuleConditionOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleConditionArgs) ToApplicationGatewayRewriteRuleConditionOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleConditionOutput)
}

// ApplicationGatewayRewriteRuleConditionArrayInput is an input type that accepts ApplicationGatewayRewriteRuleConditionArray and ApplicationGatewayRewriteRuleConditionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleConditionArrayInput` via:
//
//	ApplicationGatewayRewriteRuleConditionArray{ ApplicationGatewayRewriteRuleConditionArgs{...} }
type ApplicationGatewayRewriteRuleConditionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleConditionArrayOutput
	ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleConditionArrayOutput
}

type ApplicationGatewayRewriteRuleConditionArray []ApplicationGatewayRewriteRuleConditionInput

func (ApplicationGatewayRewriteRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleConditionArray) ToApplicationGatewayRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleConditionArrayOutput {
	return i.ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleConditionArray) ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleConditionArrayOutput)
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionOutput) ToApplicationGatewayRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleConditionOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionOutput) ToApplicationGatewayRewriteRuleConditionOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionOutput {
	return o
}

// Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
func (o ApplicationGatewayRewriteRuleConditionOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Setting this value as truth will force to check the negation of the condition given by the user.
func (o ApplicationGatewayRewriteRuleConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
func (o ApplicationGatewayRewriteRuleConditionOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// The condition parameter of the RewriteRuleCondition.
func (o ApplicationGatewayRewriteRuleConditionOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRewriteRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionArrayOutput) ToApplicationGatewayRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleConditionArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionArrayOutput) ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleCondition {
		return vs[0].([]ApplicationGatewayRewriteRuleCondition)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleConditionOutput)
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionResponse struct {
	// Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Setting this value as truth will force to check the negation of the condition given by the user.
	Negate *bool `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern *string `pulumi:"pattern"`
	// The condition parameter of the RewriteRuleCondition.
	Variable *string `pulumi:"variable"`
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleConditionResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionResponseOutput) ToApplicationGatewayRewriteRuleConditionResponseOutput() ApplicationGatewayRewriteRuleConditionResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionResponseOutput) ToApplicationGatewayRewriteRuleConditionResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionResponseOutput {
	return o
}

// Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Setting this value as truth will force to check the negation of the condition given by the user.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// The condition parameter of the RewriteRuleCondition.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRewriteRuleConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleConditionResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionResponseArrayOutput) ToApplicationGatewayRewriteRuleConditionResponseArrayOutput() ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionResponseArrayOutput) ToApplicationGatewayRewriteRuleConditionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleConditionResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleConditionResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleConditionResponseOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponse struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet *ApplicationGatewayRewriteRuleActionSetResponse `pulumi:"actionSet"`
	// Conditions based on which the action set execution will be evaluated.
	Conditions []ApplicationGatewayRewriteRuleConditionResponse `pulumi:"conditions"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
	RuleSequence *int `pulumi:"ruleSequence"`
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleResponseOutput) ToApplicationGatewayRewriteRuleResponseOutput() ApplicationGatewayRewriteRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseOutput) ToApplicationGatewayRewriteRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseOutput {
	return o
}

// Set of actions to be done as part of the rewrite Rule.
func (o ApplicationGatewayRewriteRuleResponseOutput) ActionSet() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *ApplicationGatewayRewriteRuleActionSetResponse {
		return v.ActionSet
	}).(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput)
}

// Conditions based on which the action set execution will be evaluated.
func (o ApplicationGatewayRewriteRuleResponseOutput) Conditions() ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) []ApplicationGatewayRewriteRuleConditionResponse {
		return v.Conditions
	}).(ApplicationGatewayRewriteRuleConditionResponseArrayOutput)
}

// Name of the rewrite rule that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
func (o ApplicationGatewayRewriteRuleResponseOutput) RuleSequence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *int { return v.RuleSequence }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayRewriteRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) ToApplicationGatewayRewriteRuleResponseArrayOutput() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleResponseOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSet struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules []ApplicationGatewayRewriteRule `pulumi:"rewriteRules"`
}

// ApplicationGatewayRewriteRuleSetInput is an input type that accepts ApplicationGatewayRewriteRuleSetArgs and ApplicationGatewayRewriteRuleSetOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetInput` via:
//
//	ApplicationGatewayRewriteRuleSetArgs{...}
type ApplicationGatewayRewriteRuleSetInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput
	ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetOutput
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules ApplicationGatewayRewriteRuleArrayInput `pulumi:"rewriteRules"`
}

func (ApplicationGatewayRewriteRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return i.ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetOutput)
}

// ApplicationGatewayRewriteRuleSetArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetArray and ApplicationGatewayRewriteRuleSetArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetArrayInput` via:
//
//	ApplicationGatewayRewriteRuleSetArray{ ApplicationGatewayRewriteRuleSetArgs{...} }
type ApplicationGatewayRewriteRuleSetArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput
	ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetArrayOutput
}

type ApplicationGatewayRewriteRuleSetArray []ApplicationGatewayRewriteRuleSetInput

func (ApplicationGatewayRewriteRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetArrayOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayRewriteRuleSetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the rewrite rule set that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleSetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetOutput) RewriteRules() ApplicationGatewayRewriteRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) []ApplicationGatewayRewriteRule { return v.RewriteRules }).(ApplicationGatewayRewriteRuleArrayOutput)
}

type ApplicationGatewayRewriteRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSet {
		return vs[0].([]ApplicationGatewayRewriteRuleSet)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the rewrite rule set resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules []ApplicationGatewayRewriteRuleResponse `pulumi:"rewriteRules"`
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetResponseOutput) ToApplicationGatewayRewriteRuleSetResponseOutput() ApplicationGatewayRewriteRuleSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseOutput) ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the rewrite rule set that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the rewrite rule set resource.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) RewriteRules() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) []ApplicationGatewayRewriteRuleResponse {
		return v.RewriteRules
	}).(ApplicationGatewayRewriteRuleResponseArrayOutput)
}

type ApplicationGatewayRewriteRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) ToApplicationGatewayRewriteRuleSetResponseArrayOutput() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSetResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleSetResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetResponseOutput)
}

// Routing rule of an application gateway.
type ApplicationGatewayRoutingRule struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend settings resource of the application gateway.
	BackendSettings *SubResource `pulumi:"backendSettings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Listener resource of the application gateway.
	Listener *SubResource `pulumi:"listener"`
	// Name of the routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Priority of the routing rule.
	Priority int `pulumi:"priority"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
}

// ApplicationGatewayRoutingRuleInput is an input type that accepts ApplicationGatewayRoutingRuleArgs and ApplicationGatewayRoutingRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRoutingRuleInput` via:
//
//	ApplicationGatewayRoutingRuleArgs{...}
type ApplicationGatewayRoutingRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRoutingRuleOutput() ApplicationGatewayRoutingRuleOutput
	ToApplicationGatewayRoutingRuleOutputWithContext(context.Context) ApplicationGatewayRoutingRuleOutput
}

// Routing rule of an application gateway.
type ApplicationGatewayRoutingRuleArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend settings resource of the application gateway.
	BackendSettings SubResourcePtrInput `pulumi:"backendSettings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Listener resource of the application gateway.
	Listener SubResourcePtrInput `pulumi:"listener"`
	// Name of the routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the routing rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
}

func (ApplicationGatewayRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRoutingRuleArgs) ToApplicationGatewayRoutingRuleOutput() ApplicationGatewayRoutingRuleOutput {
	return i.ToApplicationGatewayRoutingRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRoutingRuleArgs) ToApplicationGatewayRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRoutingRuleOutput)
}

// ApplicationGatewayRoutingRuleArrayInput is an input type that accepts ApplicationGatewayRoutingRuleArray and ApplicationGatewayRoutingRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRoutingRuleArrayInput` via:
//
//	ApplicationGatewayRoutingRuleArray{ ApplicationGatewayRoutingRuleArgs{...} }
type ApplicationGatewayRoutingRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRoutingRuleArrayOutput() ApplicationGatewayRoutingRuleArrayOutput
	ToApplicationGatewayRoutingRuleArrayOutputWithContext(context.Context) ApplicationGatewayRoutingRuleArrayOutput
}

type ApplicationGatewayRoutingRuleArray []ApplicationGatewayRoutingRuleInput

func (ApplicationGatewayRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRoutingRuleArray) ToApplicationGatewayRoutingRuleArrayOutput() ApplicationGatewayRoutingRuleArrayOutput {
	return i.ToApplicationGatewayRoutingRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRoutingRuleArray) ToApplicationGatewayRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRoutingRuleArrayOutput)
}

// Routing rule of an application gateway.
type ApplicationGatewayRoutingRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRoutingRuleOutput) ToApplicationGatewayRoutingRuleOutput() ApplicationGatewayRoutingRuleOutput {
	return o
}

func (o ApplicationGatewayRoutingRuleOutput) ToApplicationGatewayRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRoutingRuleOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRoutingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend settings resource of the application gateway.
func (o ApplicationGatewayRoutingRuleOutput) BackendSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRule) *SubResource { return v.BackendSettings }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Listener resource of the application gateway.
func (o ApplicationGatewayRoutingRuleOutput) Listener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRule) *SubResource { return v.Listener }).(SubResourcePtrOutput)
}

// Name of the routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the routing rule.
func (o ApplicationGatewayRoutingRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Rule type.
func (o ApplicationGatewayRoutingRuleOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRule) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRoutingRuleArrayOutput) ToApplicationGatewayRoutingRuleArrayOutput() ApplicationGatewayRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRoutingRuleArrayOutput) ToApplicationGatewayRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRoutingRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRoutingRule {
		return vs[0].([]ApplicationGatewayRoutingRule)[vs[1].(int)]
	}).(ApplicationGatewayRoutingRuleOutput)
}

// Routing rule of an application gateway.
type ApplicationGatewayRoutingRuleResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend settings resource of the application gateway.
	BackendSettings *SubResourceResponse `pulumi:"backendSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Listener resource of the application gateway.
	Listener *SubResourceResponse `pulumi:"listener"`
	// Name of the routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Priority of the routing rule.
	Priority int `pulumi:"priority"`
	// The provisioning state of the request routing rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Routing rule of an application gateway.
type ApplicationGatewayRoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRoutingRuleResponseOutput) ToApplicationGatewayRoutingRuleResponseOutput() ApplicationGatewayRoutingRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRoutingRuleResponseOutput) ToApplicationGatewayRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRoutingRuleResponseOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRoutingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend settings resource of the application gateway.
func (o ApplicationGatewayRoutingRuleResponseOutput) BackendSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) *SubResourceResponse { return v.BackendSettings }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRoutingRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayRoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Listener resource of the application gateway.
func (o ApplicationGatewayRoutingRuleResponseOutput) Listener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) *SubResourceResponse { return v.Listener }).(SubResourceResponsePtrOutput)
}

// Name of the routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the routing rule.
func (o ApplicationGatewayRoutingRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// The provisioning state of the request routing rule resource.
func (o ApplicationGatewayRoutingRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Rule type.
func (o ApplicationGatewayRoutingRuleResponseOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRoutingRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRoutingRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayRoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRoutingRuleResponseArrayOutput) ToApplicationGatewayRoutingRuleResponseArrayOutput() ApplicationGatewayRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRoutingRuleResponseArrayOutput) ToApplicationGatewayRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRoutingRuleResponse {
		return vs[0].([]ApplicationGatewayRoutingRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRoutingRuleResponseOutput)
}

// SKU of an application gateway.
type ApplicationGatewaySku struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuInput is an input type that accepts ApplicationGatewaySkuArgs and ApplicationGatewaySkuOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuInput` via:
//
//	ApplicationGatewaySkuArgs{...}
type ApplicationGatewaySkuInput interface {
	pulumi.Input

	ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput
	ToApplicationGatewaySkuOutputWithContext(context.Context) ApplicationGatewaySkuOutput
}

// SKU of an application gateway.
type ApplicationGatewaySkuArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return i.ToApplicationGatewaySkuOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput)
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput).ToApplicationGatewaySkuPtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuPtrInput is an input type that accepts ApplicationGatewaySkuArgs, ApplicationGatewaySkuPtr and ApplicationGatewaySkuPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuPtrInput` via:
//
//	        ApplicationGatewaySkuArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewaySkuPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput
	ToApplicationGatewaySkuPtrOutputWithContext(context.Context) ApplicationGatewaySkuPtrOutput
}

type applicationGatewaySkuPtrType ApplicationGatewaySkuArgs

func ApplicationGatewaySkuPtr(v *ApplicationGatewaySkuArgs) ApplicationGatewaySkuPtrInput {
	return (*applicationGatewaySkuPtrType)(v)
}

func (*applicationGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuPtrOutput)
}

// SKU of an application gateway.
type ApplicationGatewaySkuOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewaySku) *ApplicationGatewaySku {
		return &v
	}).(ApplicationGatewaySkuPtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) Elem() ApplicationGatewaySkuOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) ApplicationGatewaySku {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewaySku
		return ret
	}).(ApplicationGatewaySkuOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of an application gateway.
type ApplicationGatewaySkuResponse struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// SKU of an application gateway.
type ApplicationGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return o
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) Elem() ApplicationGatewaySkuResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) ApplicationGatewaySkuResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewaySkuResponse
		return ret
	}).(ApplicationGatewaySkuResponseOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificate struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
}

// ApplicationGatewaySslCertificateInput is an input type that accepts ApplicationGatewaySslCertificateArgs and ApplicationGatewaySslCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInput` via:
//
//	ApplicationGatewaySslCertificateArgs{...}
type ApplicationGatewaySslCertificateInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput
	ToApplicationGatewaySslCertificateOutputWithContext(context.Context) ApplicationGatewaySslCertificateOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (ApplicationGatewaySslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return i.ToApplicationGatewaySslCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateOutput)
}

// ApplicationGatewaySslCertificateArrayInput is an input type that accepts ApplicationGatewaySslCertificateArray and ApplicationGatewaySslCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateArrayInput` via:
//
//	ApplicationGatewaySslCertificateArray{ ApplicationGatewaySslCertificateArgs{...} }
type ApplicationGatewaySslCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput
	ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateArrayOutput
}

type ApplicationGatewaySslCertificateArray []ApplicationGatewaySslCertificateInput

func (ApplicationGatewaySslCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return i.ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return o
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificateOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificate {
		return vs[0].([]ApplicationGatewaySslCertificate)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponse struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// The provisioning state of the SSL certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData string `pulumi:"publicCertData"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificateResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The provisioning state of the SSL certificate resource.
func (o ApplicationGatewaySslCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewaySslCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificateResponse {
		return vs[0].([]ApplicationGatewaySslCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateResponseOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicy struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy.
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy.
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyInput is an input type that accepts ApplicationGatewaySslPolicyArgs and ApplicationGatewaySslPolicyOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyInput` via:
//
//	ApplicationGatewaySslPolicyArgs{...}
type ApplicationGatewaySslPolicyInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput
	ToApplicationGatewaySslPolicyOutputWithContext(context.Context) ApplicationGatewaySslPolicyOutput
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyArgs struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols pulumi.StringArrayInput `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Type of Ssl Policy.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return i.ToApplicationGatewaySslPolicyOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput)
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput).ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyPtrInput is an input type that accepts ApplicationGatewaySslPolicyArgs, ApplicationGatewaySslPolicyPtr and ApplicationGatewaySslPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyPtrInput` via:
//
//	        ApplicationGatewaySslPolicyArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewaySslPolicyPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput
	ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyPtrOutput
}

type applicationGatewaySslPolicyPtrType ApplicationGatewaySslPolicyArgs

func ApplicationGatewaySslPolicyPtr(v *ApplicationGatewaySslPolicyArgs) ApplicationGatewaySslPolicyPtrInput {
	return (*applicationGatewaySslPolicyPtrType)(v)
}

func (*applicationGatewaySslPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewaySslPolicy) *ApplicationGatewaySslPolicy {
		return &v
	}).(ApplicationGatewaySslPolicyPtrOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) Elem() ApplicationGatewaySslPolicyOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) ApplicationGatewaySslPolicy {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewaySslPolicy
		return ret
	}).(ApplicationGatewaySslPolicyOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponse struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy.
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy.
	PolicyType *string `pulumi:"policyType"`
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponseOutput {
	return o
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) Elem() ApplicationGatewaySslPolicyResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) ApplicationGatewaySslPolicyResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewaySslPolicyResponse
		return ret
	}).(ApplicationGatewaySslPolicyResponseOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfile struct {
	// Client authentication configuration of the application gateway resource.
	ClientAuthConfiguration *ApplicationGatewayClientAuthConfiguration `pulumi:"clientAuthConfiguration"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL profile that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicy `pulumi:"sslPolicy"`
	// Array of references to application gateway trusted client certificates.
	TrustedClientCertificates []SubResource `pulumi:"trustedClientCertificates"`
}

// ApplicationGatewaySslProfileInput is an input type that accepts ApplicationGatewaySslProfileArgs and ApplicationGatewaySslProfileOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileInput` via:
//
//	ApplicationGatewaySslProfileArgs{...}
type ApplicationGatewaySslProfileInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput
	ToApplicationGatewaySslProfileOutputWithContext(context.Context) ApplicationGatewaySslProfileOutput
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileArgs struct {
	// Client authentication configuration of the application gateway resource.
	ClientAuthConfiguration ApplicationGatewayClientAuthConfigurationPtrInput `pulumi:"clientAuthConfiguration"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the SSL profile that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL policy of the application gateway resource.
	SslPolicy ApplicationGatewaySslPolicyPtrInput `pulumi:"sslPolicy"`
	// Array of references to application gateway trusted client certificates.
	TrustedClientCertificates SubResourceArrayInput `pulumi:"trustedClientCertificates"`
}

func (ApplicationGatewaySslProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfile)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileArgs) ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput {
	return i.ToApplicationGatewaySslProfileOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileArgs) ToApplicationGatewaySslProfileOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileOutput)
}

// ApplicationGatewaySslProfileArrayInput is an input type that accepts ApplicationGatewaySslProfileArray and ApplicationGatewaySslProfileArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileArrayInput` via:
//
//	ApplicationGatewaySslProfileArray{ ApplicationGatewaySslProfileArgs{...} }
type ApplicationGatewaySslProfileArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput
	ToApplicationGatewaySslProfileArrayOutputWithContext(context.Context) ApplicationGatewaySslProfileArrayOutput
}

type ApplicationGatewaySslProfileArray []ApplicationGatewaySslProfileInput

func (ApplicationGatewaySslProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfile)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileArray) ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput {
	return i.ToApplicationGatewaySslProfileArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileArray) ToApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileArrayOutput)
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfile)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileOutput) ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput {
	return o
}

func (o ApplicationGatewaySslProfileOutput) ToApplicationGatewaySslProfileOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileOutput {
	return o
}

// Client authentication configuration of the application gateway resource.
func (o ApplicationGatewaySslProfileOutput) ClientAuthConfiguration() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *ApplicationGatewayClientAuthConfiguration {
		return v.ClientAuthConfiguration
	}).(ApplicationGatewayClientAuthConfigurationPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL profile that is unique within an Application Gateway.
func (o ApplicationGatewaySslProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewaySslProfileOutput) SslPolicy() ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *ApplicationGatewaySslPolicy { return v.SslPolicy }).(ApplicationGatewaySslPolicyPtrOutput)
}

// Array of references to application gateway trusted client certificates.
func (o ApplicationGatewaySslProfileOutput) TrustedClientCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) []SubResource { return v.TrustedClientCertificates }).(SubResourceArrayOutput)
}

type ApplicationGatewaySslProfileArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfile)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileArrayOutput) ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileArrayOutput) ToApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslProfile {
		return vs[0].([]ApplicationGatewaySslProfile)[vs[1].(int)]
	}).(ApplicationGatewaySslProfileOutput)
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileResponse struct {
	// Client authentication configuration of the application gateway resource.
	ClientAuthConfiguration *ApplicationGatewayClientAuthConfigurationResponse `pulumi:"clientAuthConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL profile that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the HTTP listener resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicyResponse `pulumi:"sslPolicy"`
	// Array of references to application gateway trusted client certificates.
	TrustedClientCertificates []SubResourceResponse `pulumi:"trustedClientCertificates"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfileResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileResponseOutput) ToApplicationGatewaySslProfileResponseOutput() ApplicationGatewaySslProfileResponseOutput {
	return o
}

func (o ApplicationGatewaySslProfileResponseOutput) ToApplicationGatewaySslProfileResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileResponseOutput {
	return o
}

// Client authentication configuration of the application gateway resource.
func (o ApplicationGatewaySslProfileResponseOutput) ClientAuthConfiguration() ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *ApplicationGatewayClientAuthConfigurationResponse {
		return v.ClientAuthConfiguration
	}).(ApplicationGatewayClientAuthConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslProfileResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewaySslProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL profile that is unique within an Application Gateway.
func (o ApplicationGatewaySslProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the HTTP listener resource.
func (o ApplicationGatewaySslProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewaySslProfileResponseOutput) SslPolicy() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *ApplicationGatewaySslPolicyResponse { return v.SslPolicy }).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Array of references to application gateway trusted client certificates.
func (o ApplicationGatewaySslProfileResponseOutput) TrustedClientCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) []SubResourceResponse { return v.TrustedClientCertificates }).(SubResourceResponseArrayOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewaySslProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfileResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileResponseArrayOutput) ToApplicationGatewaySslProfileResponseArrayOutput() ApplicationGatewaySslProfileResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileResponseArrayOutput) ToApplicationGatewaySslProfileResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslProfileResponse {
		return vs[0].([]ApplicationGatewaySslProfileResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslProfileResponseOutput)
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificate struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the trusted client certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayTrustedClientCertificateInput is an input type that accepts ApplicationGatewayTrustedClientCertificateArgs and ApplicationGatewayTrustedClientCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateInput` via:
//
//	ApplicationGatewayTrustedClientCertificateArgs{...}
type ApplicationGatewayTrustedClientCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput
	ToApplicationGatewayTrustedClientCertificateOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateOutput
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the trusted client certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayTrustedClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateArgs) ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput {
	return i.ToApplicationGatewayTrustedClientCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateArgs) ToApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateOutput)
}

// ApplicationGatewayTrustedClientCertificateArrayInput is an input type that accepts ApplicationGatewayTrustedClientCertificateArray and ApplicationGatewayTrustedClientCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateArrayInput` via:
//
//	ApplicationGatewayTrustedClientCertificateArray{ ApplicationGatewayTrustedClientCertificateArgs{...} }
type ApplicationGatewayTrustedClientCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput
	ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput
}

type ApplicationGatewayTrustedClientCertificateArray []ApplicationGatewayTrustedClientCertificateInput

func (ApplicationGatewayTrustedClientCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateArray) ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput {
	return i.ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateArray) ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateArrayOutput)
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateOutput) ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateOutput) ToApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayTrustedClientCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedClientCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the trusted client certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedClientCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedClientCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedClientCertificate {
		return vs[0].([]ApplicationGatewayTrustedClientCertificate)[vs[1].(int)]
	}).(ApplicationGatewayTrustedClientCertificateOutput)
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateResponse struct {
	// Distinguished name of client certificate issuer.
	ClientCertIssuerDN string `pulumi:"clientCertIssuerDN"`
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the trusted client certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the trusted client certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// Validated certificate data.
	ValidatedCertData string `pulumi:"validatedCertData"`
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ToApplicationGatewayTrustedClientCertificateResponseOutput() ApplicationGatewayTrustedClientCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ToApplicationGatewayTrustedClientCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateResponseOutput {
	return o
}

// Distinguished name of client certificate issuer.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ClientCertIssuerDN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.ClientCertIssuerDN }).(pulumi.StringOutput)
}

// Certificate public data.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the trusted client certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the trusted client certificate resource.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Validated certificate data.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ValidatedCertData() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.ValidatedCertData }).(pulumi.StringOutput)
}

type ApplicationGatewayTrustedClientCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateResponseArrayOutput) ToApplicationGatewayTrustedClientCertificateResponseArrayOutput() ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateResponseArrayOutput) ToApplicationGatewayTrustedClientCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedClientCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedClientCertificateResponse {
		return vs[0].([]ApplicationGatewayTrustedClientCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayTrustedClientCertificateResponseOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificate struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayTrustedRootCertificateInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArgs and ApplicationGatewayTrustedRootCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateInput` via:
//
//	ApplicationGatewayTrustedRootCertificateArgs{...}
type ApplicationGatewayTrustedRootCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput
	ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateOutput
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayTrustedRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return i.ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateOutput)
}

// ApplicationGatewayTrustedRootCertificateArrayInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArray and ApplicationGatewayTrustedRootCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateArrayInput` via:
//
//	ApplicationGatewayTrustedRootCertificateArray{ ApplicationGatewayTrustedRootCertificateArgs{...} }
type ApplicationGatewayTrustedRootCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput
	ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput
}

type ApplicationGatewayTrustedRootCertificateArray []ApplicationGatewayTrustedRootCertificateInput

func (ApplicationGatewayTrustedRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return i.ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateArrayOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificateOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the trusted root certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedRootCertificate {
		return vs[0].([]ApplicationGatewayTrustedRootCertificate)[vs[1].(int)]
	}).(ApplicationGatewayTrustedRootCertificateOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the trusted root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ToApplicationGatewayTrustedRootCertificateResponseOutput() ApplicationGatewayTrustedRootCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the trusted root certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the trusted root certificate resource.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayTrustedRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ToApplicationGatewayTrustedRootCertificateResponseArrayOutput() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedRootCertificateResponse {
		return vs[0].([]ApplicationGatewayTrustedRootCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayTrustedRootCertificateResponseOutput)
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfiguration struct {
	// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
	ModifiedPath *string `pulumi:"modifiedPath"`
	// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
	ModifiedQueryString *string `pulumi:"modifiedQueryString"`
	// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
	Reroute *bool `pulumi:"reroute"`
}

// ApplicationGatewayUrlConfigurationInput is an input type that accepts ApplicationGatewayUrlConfigurationArgs and ApplicationGatewayUrlConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlConfigurationInput` via:
//
//	ApplicationGatewayUrlConfigurationArgs{...}
type ApplicationGatewayUrlConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayUrlConfigurationOutput() ApplicationGatewayUrlConfigurationOutput
	ToApplicationGatewayUrlConfigurationOutputWithContext(context.Context) ApplicationGatewayUrlConfigurationOutput
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationArgs struct {
	// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
	ModifiedPath pulumi.StringPtrInput `pulumi:"modifiedPath"`
	// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
	ModifiedQueryString pulumi.StringPtrInput `pulumi:"modifiedQueryString"`
	// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
	Reroute pulumi.BoolPtrInput `pulumi:"reroute"`
}

func (ApplicationGatewayUrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationOutput() ApplicationGatewayUrlConfigurationOutput {
	return i.ToApplicationGatewayUrlConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationOutput)
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return i.ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationOutput).ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayUrlConfigurationPtrInput is an input type that accepts ApplicationGatewayUrlConfigurationArgs, ApplicationGatewayUrlConfigurationPtr and ApplicationGatewayUrlConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlConfigurationPtrInput` via:
//
//	        ApplicationGatewayUrlConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayUrlConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput
	ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayUrlConfigurationPtrOutput
}

type applicationGatewayUrlConfigurationPtrType ApplicationGatewayUrlConfigurationArgs

func ApplicationGatewayUrlConfigurationPtr(v *ApplicationGatewayUrlConfigurationArgs) ApplicationGatewayUrlConfigurationPtrInput {
	return (*applicationGatewayUrlConfigurationPtrType)(v)
}

func (*applicationGatewayUrlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (i *applicationGatewayUrlConfigurationPtrType) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return i.ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayUrlConfigurationPtrType) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationPtrOutput)
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationOutput() ApplicationGatewayUrlConfigurationOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayUrlConfiguration) *ApplicationGatewayUrlConfiguration {
		return &v
	}).(ApplicationGatewayUrlConfigurationPtrOutput)
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfiguration) *string { return v.ModifiedPath }).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfiguration) *string { return v.ModifiedQueryString }).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfiguration) *bool { return v.Reroute }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayUrlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationPtrOutput) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationPtrOutput) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationPtrOutput) Elem() ApplicationGatewayUrlConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) ApplicationGatewayUrlConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayUrlConfiguration
		return ret
	}).(ApplicationGatewayUrlConfigurationOutput)
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationPtrOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedPath
	}).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationPtrOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedQueryString
	}).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationPtrOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Reroute
	}).(pulumi.BoolPtrOutput)
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationResponse struct {
	// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
	ModifiedPath *string `pulumi:"modifiedPath"`
	// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
	ModifiedQueryString *string `pulumi:"modifiedQueryString"`
	// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
	Reroute *bool `pulumi:"reroute"`
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationResponseOutput) ToApplicationGatewayUrlConfigurationResponseOutput() ApplicationGatewayUrlConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationResponseOutput) ToApplicationGatewayUrlConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponseOutput {
	return o
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponseOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfigurationResponse) *string { return v.ModifiedPath }).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponseOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfigurationResponse) *string { return v.ModifiedQueryString }).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationResponseOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfigurationResponse) *bool { return v.Reroute }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayUrlConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ToApplicationGatewayUrlConfigurationResponsePtrOutput() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) Elem() ApplicationGatewayUrlConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) ApplicationGatewayUrlConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayUrlConfigurationResponse
		return ret
	}).(ApplicationGatewayUrlConfigurationResponseOutput)
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedPath
	}).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedQueryString
	}).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Reroute
	}).(pulumi.BoolPtrOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMap struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResource `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResource `pulumi:"defaultBackendHttpSettings"`
	// Default Load Distribution Policy resource of URL path map.
	DefaultLoadDistributionPolicy *SubResource `pulumi:"defaultLoadDistributionPolicy"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResource `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet *SubResource `pulumi:"defaultRewriteRuleSet"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRule `pulumi:"pathRules"`
}

// ApplicationGatewayUrlPathMapInput is an input type that accepts ApplicationGatewayUrlPathMap and ApplicationGatewayUrlPathMapOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInput` via:
//
//	ApplicationGatewayUrlPathMap{ "key": ApplicationGatewayUrlPathArgs{...} }
type ApplicationGatewayUrlPathMapInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput
	ToApplicationGatewayUrlPathMapOutputWithContext(context.Context) ApplicationGatewayUrlPathMapOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourcePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourcePtrInput `pulumi:"defaultBackendHttpSettings"`
	// Default Load Distribution Policy resource of URL path map.
	DefaultLoadDistributionPolicy SubResourcePtrInput `pulumi:"defaultLoadDistributionPolicy"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration SubResourcePtrInput `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet SubResourcePtrInput `pulumi:"defaultRewriteRuleSet"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleArrayInput `pulumi:"pathRules"`
}

func (ApplicationGatewayUrlPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return i.ToApplicationGatewayUrlPathMapOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapOutput)
}

// ApplicationGatewayUrlPathMapArrayInput is an input type that accepts ApplicationGatewayUrlPathMapArray and ApplicationGatewayUrlPathMapArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapArrayInput` via:
//
//	ApplicationGatewayUrlPathMapArray{ ApplicationGatewayUrlPathMapArgs{...} }
type ApplicationGatewayUrlPathMapArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput
	ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapArrayOutput
}

type ApplicationGatewayUrlPathMapArray []ApplicationGatewayUrlPathMapInput

func (ApplicationGatewayUrlPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return i.ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendAddressPool }).(SubResourcePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendHttpSettings }).(SubResourcePtrOutput)
}

// Default Load Distribution Policy resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultLoadDistributionPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultLoadDistributionPolicy }).(SubResourcePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultRedirectConfiguration }).(SubResourcePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultRewriteRuleSet }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapOutput) PathRules() ApplicationGatewayPathRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) []ApplicationGatewayPathRule { return v.PathRules }).(ApplicationGatewayPathRuleArrayOutput)
}

type ApplicationGatewayUrlPathMapArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMap {
		return vs[0].([]ApplicationGatewayUrlPathMap)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponse struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResourceResponse `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResourceResponse `pulumi:"defaultBackendHttpSettings"`
	// Default Load Distribution Policy resource of URL path map.
	DefaultLoadDistributionPolicy *SubResourceResponse `pulumi:"defaultLoadDistributionPolicy"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResourceResponse `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet *SubResourceResponse `pulumi:"defaultRewriteRuleSet"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRuleResponse `pulumi:"pathRules"`
	// The provisioning state of the URL path map resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// Default Load Distribution Policy resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultLoadDistributionPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse {
		return v.DefaultLoadDistributionPolicy
	}).(SubResourceResponsePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultRedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse {
		return v.DefaultRedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultRewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultRewriteRuleSet }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) PathRules() ApplicationGatewayPathRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) []ApplicationGatewayPathRuleResponse { return v.PathRules }).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// The provisioning state of the URL path map resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayUrlPathMapResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMapResponse {
		return vs[0].([]ApplicationGatewayUrlPathMapResponse)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapResponseOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfiguration struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroup `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// The exclusion list.
	Exclusions []ApplicationGatewayFirewallExclusion `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWebApplicationFirewallConfigurationInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs and ApplicationGatewayWebApplicationFirewallConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationInput` via:
//
//	ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
type ApplicationGatewayWebApplicationFirewallConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationArgs struct {
	// The disabled rule groups.
	DisabledRuleGroups ApplicationGatewayFirewallDisabledRuleGroupArrayInput `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The exclusion list.
	Exclusions ApplicationGatewayFirewallExclusionArrayInput `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize pulumi.IntPtrInput `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWebApplicationFirewallConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput).ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayWebApplicationFirewallConfigurationPtrInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs, ApplicationGatewayWebApplicationFirewallConfigurationPtr and ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationPtrInput` via:
//
//	        ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayWebApplicationFirewallConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
}

type applicationGatewayWebApplicationFirewallConfigurationPtrType ApplicationGatewayWebApplicationFirewallConfigurationArgs

func ApplicationGatewayWebApplicationFirewallConfigurationPtr(v *ApplicationGatewayWebApplicationFirewallConfigurationArgs) ApplicationGatewayWebApplicationFirewallConfigurationPtrInput {
	return (*applicationGatewayWebApplicationFirewallConfigurationPtrType)(v)
}

func (*applicationGatewayWebApplicationFirewallConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayWebApplicationFirewallConfiguration) *ApplicationGatewayWebApplicationFirewallConfiguration {
		return &v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) Exclusions() ApplicationGatewayFirewallExclusionArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallExclusion {
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.MaxRequestBodySize }).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) ApplicationGatewayWebApplicationFirewallConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayWebApplicationFirewallConfiguration
		return ret
	}).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Exclusions() ApplicationGatewayFirewallExclusionArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallExclusion {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponse struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroupResponse `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// The exclusion list.
	Exclusions []ApplicationGatewayFirewallExclusionResponse `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) Exclusions() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallExclusionResponse {
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayWebApplicationFirewallConfigurationResponse
		return ret
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Exclusions() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallExclusionResponse {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// Rule of type application.
type ApplicationRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// List of HTTP/S headers to insert.
	HttpHeadersToInsert []FirewallPolicyHttpHeaderToInsert `pulumi:"httpHeadersToInsert"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleApplicationProtocol `pulumi:"protocols"`
	// Rule Type.
	// Expected value is 'ApplicationRule'.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
	// List of Urls for this rule condition.
	TargetUrls []string `pulumi:"targetUrls"`
	// Terminate TLS connections for this rule.
	TerminateTLS *bool `pulumi:"terminateTLS"`
	// List of destination azure web categories.
	WebCategories []string `pulumi:"webCategories"`
}

// ApplicationRuleInput is an input type that accepts ApplicationRuleArgs and ApplicationRuleOutput values.
// You can construct a concrete instance of `ApplicationRuleInput` via:
//
//	ApplicationRuleArgs{...}
type ApplicationRuleInput interface {
	pulumi.Input

	ToApplicationRuleOutput() ApplicationRuleOutput
	ToApplicationRuleOutputWithContext(context.Context) ApplicationRuleOutput
}

// Rule of type application.
type ApplicationRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// List of HTTP/S headers to insert.
	HttpHeadersToInsert FirewallPolicyHttpHeaderToInsertArrayInput `pulumi:"httpHeadersToInsert"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of Application Protocols.
	Protocols FirewallPolicyRuleApplicationProtocolArrayInput `pulumi:"protocols"`
	// Rule Type.
	// Expected value is 'ApplicationRule'.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
	// List of Urls for this rule condition.
	TargetUrls pulumi.StringArrayInput `pulumi:"targetUrls"`
	// Terminate TLS connections for this rule.
	TerminateTLS pulumi.BoolPtrInput `pulumi:"terminateTLS"`
	// List of destination azure web categories.
	WebCategories pulumi.StringArrayInput `pulumi:"webCategories"`
}

func (ApplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRule)(nil)).Elem()
}

func (i ApplicationRuleArgs) ToApplicationRuleOutput() ApplicationRuleOutput {
	return i.ToApplicationRuleOutputWithContext(context.Background())
}

func (i ApplicationRuleArgs) ToApplicationRuleOutputWithContext(ctx context.Context) ApplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleOutput)
}

// Rule of type application.
type ApplicationRuleOutput struct{ *pulumi.OutputState }

func (ApplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRule)(nil)).Elem()
}

func (o ApplicationRuleOutput) ToApplicationRuleOutput() ApplicationRuleOutput {
	return o
}

func (o ApplicationRuleOutput) ToApplicationRuleOutputWithContext(ctx context.Context) ApplicationRuleOutput {
	return o
}

// Description of the rule.
func (o ApplicationRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule.
func (o ApplicationRuleOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// List of HTTP/S headers to insert.
func (o ApplicationRuleOutput) HttpHeadersToInsert() FirewallPolicyHttpHeaderToInsertArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []FirewallPolicyHttpHeaderToInsert { return v.HttpHeadersToInsert }).(FirewallPolicyHttpHeaderToInsertArrayOutput)
}

// Name of the rule.
func (o ApplicationRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleOutput) Protocols() FirewallPolicyRuleApplicationProtocolArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []FirewallPolicyRuleApplicationProtocol { return v.Protocols }).(FirewallPolicyRuleApplicationProtocolArrayOutput)
}

// Rule Type.
// Expected value is 'ApplicationRule'.
func (o ApplicationRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o ApplicationRuleOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

// List of Urls for this rule condition.
func (o ApplicationRuleOutput) TargetUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.TargetUrls }).(pulumi.StringArrayOutput)
}

// Terminate TLS connections for this rule.
func (o ApplicationRuleOutput) TerminateTLS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationRule) *bool { return v.TerminateTLS }).(pulumi.BoolPtrOutput)
}

// List of destination azure web categories.
func (o ApplicationRuleOutput) WebCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.WebCategories }).(pulumi.StringArrayOutput)
}

// Rule condition of type application.
type ApplicationRuleCondition struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule condition.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleConditionApplicationProtocol `pulumi:"protocols"`
	// Rule Condition Type.
	// Expected value is 'ApplicationRuleCondition'.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule condition.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// ApplicationRuleConditionInput is an input type that accepts ApplicationRuleConditionArgs and ApplicationRuleConditionOutput values.
// You can construct a concrete instance of `ApplicationRuleConditionInput` via:
//
//	ApplicationRuleConditionArgs{...}
type ApplicationRuleConditionInput interface {
	pulumi.Input

	ToApplicationRuleConditionOutput() ApplicationRuleConditionOutput
	ToApplicationRuleConditionOutputWithContext(context.Context) ApplicationRuleConditionOutput
}

// Rule condition of type application.
type ApplicationRuleConditionArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule condition.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of Application Protocols.
	Protocols FirewallPolicyRuleConditionApplicationProtocolArrayInput `pulumi:"protocols"`
	// Rule Condition Type.
	// Expected value is 'ApplicationRuleCondition'.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule condition.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (ApplicationRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleCondition)(nil)).Elem()
}

func (i ApplicationRuleConditionArgs) ToApplicationRuleConditionOutput() ApplicationRuleConditionOutput {
	return i.ToApplicationRuleConditionOutputWithContext(context.Background())
}

func (i ApplicationRuleConditionArgs) ToApplicationRuleConditionOutputWithContext(ctx context.Context) ApplicationRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleConditionOutput)
}

func (i ApplicationRuleConditionArgs) ToApplicationRuleConditionPtrOutput() ApplicationRuleConditionPtrOutput {
	return i.ToApplicationRuleConditionPtrOutputWithContext(context.Background())
}

func (i ApplicationRuleConditionArgs) ToApplicationRuleConditionPtrOutputWithContext(ctx context.Context) ApplicationRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleConditionOutput).ToApplicationRuleConditionPtrOutputWithContext(ctx)
}

// ApplicationRuleConditionPtrInput is an input type that accepts ApplicationRuleConditionArgs, ApplicationRuleConditionPtr and ApplicationRuleConditionPtrOutput values.
// You can construct a concrete instance of `ApplicationRuleConditionPtrInput` via:
//
//	        ApplicationRuleConditionArgs{...}
//
//	or:
//
//	        nil
type ApplicationRuleConditionPtrInput interface {
	pulumi.Input

	ToApplicationRuleConditionPtrOutput() ApplicationRuleConditionPtrOutput
	ToApplicationRuleConditionPtrOutputWithContext(context.Context) ApplicationRuleConditionPtrOutput
}

type applicationRuleConditionPtrType ApplicationRuleConditionArgs

func ApplicationRuleConditionPtr(v *ApplicationRuleConditionArgs) ApplicationRuleConditionPtrInput {
	return (*applicationRuleConditionPtrType)(v)
}

func (*applicationRuleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationRuleCondition)(nil)).Elem()
}

func (i *applicationRuleConditionPtrType) ToApplicationRuleConditionPtrOutput() ApplicationRuleConditionPtrOutput {
	return i.ToApplicationRuleConditionPtrOutputWithContext(context.Background())
}

func (i *applicationRuleConditionPtrType) ToApplicationRuleConditionPtrOutputWithContext(ctx context.Context) ApplicationRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleConditionPtrOutput)
}

// Rule condition of type application.
type ApplicationRuleConditionOutput struct{ *pulumi.OutputState }

func (ApplicationRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleCondition)(nil)).Elem()
}

func (o ApplicationRuleConditionOutput) ToApplicationRuleConditionOutput() ApplicationRuleConditionOutput {
	return o
}

func (o ApplicationRuleConditionOutput) ToApplicationRuleConditionOutputWithContext(ctx context.Context) ApplicationRuleConditionOutput {
	return o
}

func (o ApplicationRuleConditionOutput) ToApplicationRuleConditionPtrOutput() ApplicationRuleConditionPtrOutput {
	return o.ToApplicationRuleConditionPtrOutputWithContext(context.Background())
}

func (o ApplicationRuleConditionOutput) ToApplicationRuleConditionPtrOutputWithContext(ctx context.Context) ApplicationRuleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationRuleCondition) *ApplicationRuleCondition {
		return &v
	}).(ApplicationRuleConditionPtrOutput)
}

// Description of the rule condition.
func (o ApplicationRuleConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleConditionOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule condition.
func (o ApplicationRuleConditionOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o ApplicationRuleConditionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleConditionOutput) Protocols() FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []FirewallPolicyRuleConditionApplicationProtocol { return v.Protocols }).(FirewallPolicyRuleConditionApplicationProtocolArrayOutput)
}

// Rule Condition Type.
// Expected value is 'ApplicationRuleCondition'.
func (o ApplicationRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleConditionOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleConditionOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule condition.
func (o ApplicationRuleConditionOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type ApplicationRuleConditionPtrOutput struct{ *pulumi.OutputState }

func (ApplicationRuleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationRuleCondition)(nil)).Elem()
}

func (o ApplicationRuleConditionPtrOutput) ToApplicationRuleConditionPtrOutput() ApplicationRuleConditionPtrOutput {
	return o
}

func (o ApplicationRuleConditionPtrOutput) ToApplicationRuleConditionPtrOutputWithContext(ctx context.Context) ApplicationRuleConditionPtrOutput {
	return o
}

func (o ApplicationRuleConditionPtrOutput) Elem() ApplicationRuleConditionOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) ApplicationRuleCondition {
		if v != nil {
			return *v
		}
		var ret ApplicationRuleCondition
		return ret
	}).(ApplicationRuleConditionOutput)
}

// Description of the rule condition.
func (o ApplicationRuleConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleConditionPtrOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule condition.
func (o ApplicationRuleConditionPtrOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.FqdnTags
	}).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o ApplicationRuleConditionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleConditionPtrOutput) Protocols() FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) []FirewallPolicyRuleConditionApplicationProtocol {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(FirewallPolicyRuleConditionApplicationProtocolArrayOutput)
}

// Rule Condition Type.
// Expected value is 'ApplicationRuleCondition'.
func (o ApplicationRuleConditionPtrOutput) RuleConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.RuleConditionType
	}).(pulumi.StringPtrOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleConditionPtrOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleConditionPtrOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule condition.
func (o ApplicationRuleConditionPtrOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.TargetFqdns
	}).(pulumi.StringArrayOutput)
}

// Rule condition of type application.
type ApplicationRuleConditionResponse struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule condition.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleConditionApplicationProtocolResponse `pulumi:"protocols"`
	// Rule Condition Type.
	// Expected value is 'ApplicationRuleCondition'.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule condition.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// Rule condition of type application.
type ApplicationRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleConditionResponse)(nil)).Elem()
}

func (o ApplicationRuleConditionResponseOutput) ToApplicationRuleConditionResponseOutput() ApplicationRuleConditionResponseOutput {
	return o
}

func (o ApplicationRuleConditionResponseOutput) ToApplicationRuleConditionResponseOutputWithContext(ctx context.Context) ApplicationRuleConditionResponseOutput {
	return o
}

// Description of the rule condition.
func (o ApplicationRuleConditionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleConditionResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule condition.
func (o ApplicationRuleConditionResponseOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o ApplicationRuleConditionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleConditionResponseOutput) Protocols() FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []FirewallPolicyRuleConditionApplicationProtocolResponse {
		return v.Protocols
	}).(FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput)
}

// Rule Condition Type.
// Expected value is 'ApplicationRuleCondition'.
func (o ApplicationRuleConditionResponseOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleConditionResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleConditionResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule condition.
func (o ApplicationRuleConditionResponseOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type ApplicationRuleConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationRuleConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationRuleConditionResponse)(nil)).Elem()
}

func (o ApplicationRuleConditionResponsePtrOutput) ToApplicationRuleConditionResponsePtrOutput() ApplicationRuleConditionResponsePtrOutput {
	return o
}

func (o ApplicationRuleConditionResponsePtrOutput) ToApplicationRuleConditionResponsePtrOutputWithContext(ctx context.Context) ApplicationRuleConditionResponsePtrOutput {
	return o
}

func (o ApplicationRuleConditionResponsePtrOutput) Elem() ApplicationRuleConditionResponseOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) ApplicationRuleConditionResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationRuleConditionResponse
		return ret
	}).(ApplicationRuleConditionResponseOutput)
}

// Description of the rule condition.
func (o ApplicationRuleConditionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleConditionResponsePtrOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule condition.
func (o ApplicationRuleConditionResponsePtrOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.FqdnTags
	}).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o ApplicationRuleConditionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleConditionResponsePtrOutput) Protocols() FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) []FirewallPolicyRuleConditionApplicationProtocolResponse {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput)
}

// Rule Condition Type.
// Expected value is 'ApplicationRuleCondition'.
func (o ApplicationRuleConditionResponsePtrOutput) RuleConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleConditionType
	}).(pulumi.StringPtrOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleConditionResponsePtrOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleConditionResponsePtrOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule condition.
func (o ApplicationRuleConditionResponsePtrOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.TargetFqdns
	}).(pulumi.StringArrayOutput)
}

// Rule of type application.
type ApplicationRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// List of HTTP/S headers to insert.
	HttpHeadersToInsert []FirewallPolicyHttpHeaderToInsertResponse `pulumi:"httpHeadersToInsert"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleApplicationProtocolResponse `pulumi:"protocols"`
	// Rule Type.
	// Expected value is 'ApplicationRule'.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
	// List of Urls for this rule condition.
	TargetUrls []string `pulumi:"targetUrls"`
	// Terminate TLS connections for this rule.
	TerminateTLS *bool `pulumi:"terminateTLS"`
	// List of destination azure web categories.
	WebCategories []string `pulumi:"webCategories"`
}

// Rule of type application.
type ApplicationRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleResponse)(nil)).Elem()
}

func (o ApplicationRuleResponseOutput) ToApplicationRuleResponseOutput() ApplicationRuleResponseOutput {
	return o
}

func (o ApplicationRuleResponseOutput) ToApplicationRuleResponseOutputWithContext(ctx context.Context) ApplicationRuleResponseOutput {
	return o
}

// Description of the rule.
func (o ApplicationRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule.
func (o ApplicationRuleResponseOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// List of HTTP/S headers to insert.
func (o ApplicationRuleResponseOutput) HttpHeadersToInsert() FirewallPolicyHttpHeaderToInsertResponseArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []FirewallPolicyHttpHeaderToInsertResponse {
		return v.HttpHeadersToInsert
	}).(FirewallPolicyHttpHeaderToInsertResponseArrayOutput)
}

// Name of the rule.
func (o ApplicationRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleResponseOutput) Protocols() FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []FirewallPolicyRuleApplicationProtocolResponse { return v.Protocols }).(FirewallPolicyRuleApplicationProtocolResponseArrayOutput)
}

// Rule Type.
// Expected value is 'ApplicationRule'.
func (o ApplicationRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o ApplicationRuleResponseOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

// List of Urls for this rule condition.
func (o ApplicationRuleResponseOutput) TargetUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.TargetUrls }).(pulumi.StringArrayOutput)
}

// Terminate TLS connections for this rule.
func (o ApplicationRuleResponseOutput) TerminateTLS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) *bool { return v.TerminateTLS }).(pulumi.BoolPtrOutput)
}

// List of destination azure web categories.
func (o ApplicationRuleResponseOutput) WebCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.WebCategories }).(pulumi.StringArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ApplicationSecurityGroupTypeInput is an input type that accepts ApplicationSecurityGroupTypeArgs and ApplicationSecurityGroupTypeOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeInput` via:
//
//	ApplicationSecurityGroupTypeArgs{...}
type ApplicationSecurityGroupTypeInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput
	ToApplicationSecurityGroupTypeOutputWithContext(context.Context) ApplicationSecurityGroupTypeOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ApplicationSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return i.ToApplicationSecurityGroupTypeOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeOutput)
}

// ApplicationSecurityGroupTypeArrayInput is an input type that accepts ApplicationSecurityGroupTypeArray and ApplicationSecurityGroupTypeArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeArrayInput` via:
//
//	ApplicationSecurityGroupTypeArray{ ApplicationSecurityGroupTypeArgs{...} }
type ApplicationSecurityGroupTypeArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput
	ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Context) ApplicationSecurityGroupTypeArrayOutput
}

type ApplicationSecurityGroupTypeArray []ApplicationSecurityGroupTypeInput

func (ApplicationSecurityGroupTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return i.ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return o
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return o
}

// Resource ID.
func (o ApplicationSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ApplicationSecurityGroupTypeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupType {
		return vs[0].([]ApplicationSecurityGroupType)[vs[1].(int)]
	}).(ApplicationSecurityGroupTypeOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the application security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return o
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the application security group resource.
func (o ApplicationSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o ApplicationSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ApplicationSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationSecurityGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupResponse {
		return vs[0].([]ApplicationSecurityGroupResponse)[vs[1].(int)]
	}).(ApplicationSecurityGroupResponseOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocol `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// AzureFirewallApplicationRuleInput is an input type that accepts AzureFirewallApplicationRuleArgs and AzureFirewallApplicationRuleOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleInput` via:
//
//	AzureFirewallApplicationRuleArgs{...}
type AzureFirewallApplicationRuleInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput
	ToAzureFirewallApplicationRuleOutputWithContext(context.Context) AzureFirewallApplicationRuleOutput
}

// Properties of an application rule.
type AzureFirewallApplicationRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols AzureFirewallApplicationRuleProtocolArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (AzureFirewallApplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return i.ToAzureFirewallApplicationRuleOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleOutput)
}

// AzureFirewallApplicationRuleArrayInput is an input type that accepts AzureFirewallApplicationRuleArray and AzureFirewallApplicationRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleArrayInput` via:
//
//	AzureFirewallApplicationRuleArray{ AzureFirewallApplicationRuleArgs{...} }
type AzureFirewallApplicationRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput
	ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleArrayOutput
}

type AzureFirewallApplicationRuleArray []AzureFirewallApplicationRuleInput

func (AzureFirewallApplicationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return i.ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleArrayOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return o
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of FQDN Tags for this rule.
func (o AzureFirewallApplicationRuleOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleOutput) Protocols() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []AzureFirewallApplicationRuleProtocol { return v.Protocols }).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallApplicationRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o AzureFirewallApplicationRuleOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRule {
		return vs[0].([]AzureFirewallApplicationRule)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleOutput)
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollection struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRule `pulumi:"rules"`
}

// AzureFirewallApplicationRuleCollectionInput is an input type that accepts AzureFirewallApplicationRuleCollectionArgs and AzureFirewallApplicationRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionInput` via:
//
//	AzureFirewallApplicationRuleCollectionArgs{...}
type AzureFirewallApplicationRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput
	ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionOutput
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionArgs struct {
	// The action type of a rule collection.
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a application rule collection.
	Rules AzureFirewallApplicationRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallApplicationRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return i.ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionOutput)
}

// AzureFirewallApplicationRuleCollectionArrayInput is an input type that accepts AzureFirewallApplicationRuleCollectionArray and AzureFirewallApplicationRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionArrayInput` via:
//
//	AzureFirewallApplicationRuleCollectionArray{ AzureFirewallApplicationRuleCollectionArgs{...} }
type AzureFirewallApplicationRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput
	ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionArrayOutput
}

type AzureFirewallApplicationRuleCollectionArray []AzureFirewallApplicationRuleCollectionInput

func (AzureFirewallApplicationRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return i.ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionArrayOutput)
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallApplicationRuleCollectionOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionOutput) Rules() AzureFirewallApplicationRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) []AzureFirewallApplicationRule { return v.Rules }).(AzureFirewallApplicationRuleArrayOutput)
}

type AzureFirewallApplicationRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollection {
		return vs[0].([]AzureFirewallApplicationRuleCollection)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionOutput)
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionResponse struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the application rule collection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRuleResponse `pulumi:"rules"`
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *AzureFirewallRCActionResponse { return v.Action }).(AzureFirewallRCActionResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Rules() AzureFirewallApplicationRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) []AzureFirewallApplicationRuleResponse {
		return v.Rules
	}).(AzureFirewallApplicationRuleResponseArrayOutput)
}

type AzureFirewallApplicationRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollectionResponse {
		return vs[0].([]AzureFirewallApplicationRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionResponseOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocol struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// AzureFirewallApplicationRuleProtocolInput is an input type that accepts AzureFirewallApplicationRuleProtocolArgs and AzureFirewallApplicationRuleProtocolOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolInput` via:
//
//	AzureFirewallApplicationRuleProtocolArgs{...}
type AzureFirewallApplicationRuleProtocolInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput
	ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolOutput
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (AzureFirewallApplicationRuleProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return i.ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolOutput)
}

// AzureFirewallApplicationRuleProtocolArrayInput is an input type that accepts AzureFirewallApplicationRuleProtocolArray and AzureFirewallApplicationRuleProtocolArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolArrayInput` via:
//
//	AzureFirewallApplicationRuleProtocolArray{ AzureFirewallApplicationRuleProtocolArgs{...} }
type AzureFirewallApplicationRuleProtocolArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput
	ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolArrayOutput
}

type AzureFirewallApplicationRuleProtocolArray []AzureFirewallApplicationRuleProtocolInput

func (AzureFirewallApplicationRuleProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return i.ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o AzureFirewallApplicationRuleProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocol {
		return vs[0].([]AzureFirewallApplicationRuleProtocol)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o AzureFirewallApplicationRuleProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocolResponse {
		return vs[0].([]AzureFirewallApplicationRuleProtocolResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolResponseOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocolResponse `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of FQDN Tags for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleResponseOutput) Protocols() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []AzureFirewallApplicationRuleProtocolResponse {
		return v.Protocols
	}).(AzureFirewallApplicationRuleProtocolResponseArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleResponse {
		return vs[0].([]AzureFirewallApplicationRuleResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleResponseOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
	Subnet *SubResource `pulumi:"subnet"`
}

// AzureFirewallIPConfigurationInput is an input type that accepts AzureFirewallIPConfigurationArgs and AzureFirewallIPConfigurationOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationInput` via:
//
//	AzureFirewallIPConfigurationArgs{...}
type AzureFirewallIPConfigurationInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput
	ToAzureFirewallIPConfigurationOutputWithContext(context.Context) AzureFirewallIPConfigurationOutput
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (AzureFirewallIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return i.ToAzureFirewallIPConfigurationOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationOutput)
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return i.ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationOutput).ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx)
}

// AzureFirewallIPConfigurationPtrInput is an input type that accepts AzureFirewallIPConfigurationArgs, AzureFirewallIPConfigurationPtr and AzureFirewallIPConfigurationPtrOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationPtrInput` via:
//
//	        AzureFirewallIPConfigurationArgs{...}
//
//	or:
//
//	        nil
type AzureFirewallIPConfigurationPtrInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput
	ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Context) AzureFirewallIPConfigurationPtrOutput
}

type azureFirewallIPConfigurationPtrType AzureFirewallIPConfigurationArgs

func AzureFirewallIPConfigurationPtr(v *AzureFirewallIPConfigurationArgs) AzureFirewallIPConfigurationPtrInput {
	return (*azureFirewallIPConfigurationPtrType)(v)
}

func (*azureFirewallIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i *azureFirewallIPConfigurationPtrType) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return i.ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *azureFirewallIPConfigurationPtrType) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPtrOutput)
}

// AzureFirewallIPConfigurationArrayInput is an input type that accepts AzureFirewallIPConfigurationArray and AzureFirewallIPConfigurationArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationArrayInput` via:
//
//	AzureFirewallIPConfigurationArray{ AzureFirewallIPConfigurationArgs{...} }
type AzureFirewallIPConfigurationArrayInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput
	ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Context) AzureFirewallIPConfigurationArrayOutput
}

type AzureFirewallIPConfigurationArray []AzureFirewallIPConfigurationInput

func (AzureFirewallIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return i.ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationArrayOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return o
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return o
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return o.ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Background())
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFirewallIPConfiguration) *AzureFirewallIPConfiguration {
		return &v
	}).(AzureFirewallIPConfigurationPtrOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type AzureFirewallIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationPtrOutput) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPtrOutput) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPtrOutput) Elem() AzureFirewallIPConfigurationOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) AzureFirewallIPConfiguration {
		if v != nil {
			return *v
		}
		var ret AzureFirewallIPConfiguration
		return ret
	}).(AzureFirewallIPConfigurationOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationPtrOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourcePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationPtrOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourcePtrOutput)
}

type AzureFirewallIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfiguration {
		return vs[0].([]AzureFirewallIPConfiguration)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress string `pulumi:"privateIPAddress"`
	// The provisioning state of the Azure firewall IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.PrivateIPAddress }).(pulumi.StringOutput)
}

// The provisioning state of the Azure firewall IP configuration resource.
func (o AzureFirewallIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o AzureFirewallIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AzureFirewallIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponsePtrOutput) ToAzureFirewallIPConfigurationResponsePtrOutput() AzureFirewallIPConfigurationResponsePtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponsePtrOutput) ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponsePtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponsePtrOutput) Elem() AzureFirewallIPConfigurationResponseOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) AzureFirewallIPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AzureFirewallIPConfigurationResponse
		return ret
	}).(AzureFirewallIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the Azure firewall IP configuration resource.
func (o AzureFirewallIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationResponsePtrOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AzureFirewallIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfigurationResponse {
		return vs[0].([]AzureFirewallIPConfigurationResponse)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationResponseOutput)
}

// IpGroups associated with azure firewall.
type AzureFirewallIpGroupsResponse struct {
	// The iteration number.
	ChangeNumber string `pulumi:"changeNumber"`
	// Resource ID.
	Id string `pulumi:"id"`
}

// IpGroups associated with azure firewall.
type AzureFirewallIpGroupsResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallIpGroupsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIpGroupsResponse)(nil)).Elem()
}

func (o AzureFirewallIpGroupsResponseOutput) ToAzureFirewallIpGroupsResponseOutput() AzureFirewallIpGroupsResponseOutput {
	return o
}

func (o AzureFirewallIpGroupsResponseOutput) ToAzureFirewallIpGroupsResponseOutputWithContext(ctx context.Context) AzureFirewallIpGroupsResponseOutput {
	return o
}

// The iteration number.
func (o AzureFirewallIpGroupsResponseOutput) ChangeNumber() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIpGroupsResponse) string { return v.ChangeNumber }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallIpGroupsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIpGroupsResponse) string { return v.Id }).(pulumi.StringOutput)
}

type AzureFirewallIpGroupsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIpGroupsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIpGroupsResponse)(nil)).Elem()
}

func (o AzureFirewallIpGroupsResponseArrayOutput) ToAzureFirewallIpGroupsResponseArrayOutput() AzureFirewallIpGroupsResponseArrayOutput {
	return o
}

func (o AzureFirewallIpGroupsResponseArrayOutput) ToAzureFirewallIpGroupsResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIpGroupsResponseArrayOutput {
	return o
}

func (o AzureFirewallIpGroupsResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallIpGroupsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIpGroupsResponse {
		return vs[0].([]AzureFirewallIpGroupsResponse)[vs[1].(int)]
	}).(AzureFirewallIpGroupsResponseOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallNatRCActionInput is an input type that accepts AzureFirewallNatRCActionArgs and AzureFirewallNatRCActionOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionInput` via:
//
//	AzureFirewallNatRCActionArgs{...}
type AzureFirewallNatRCActionInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput
	ToAzureFirewallNatRCActionOutputWithContext(context.Context) AzureFirewallNatRCActionOutput
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallNatRCActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCAction)(nil)).Elem()
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput {
	return i.ToAzureFirewallNatRCActionOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionOutputWithContext(ctx context.Context) AzureFirewallNatRCActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionOutput)
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return i.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionOutput).ToAzureFirewallNatRCActionPtrOutputWithContext(ctx)
}

// AzureFirewallNatRCActionPtrInput is an input type that accepts AzureFirewallNatRCActionArgs, AzureFirewallNatRCActionPtr and AzureFirewallNatRCActionPtrOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionPtrInput` via:
//
//	        AzureFirewallNatRCActionArgs{...}
//
//	or:
//
//	        nil
type AzureFirewallNatRCActionPtrInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput
	ToAzureFirewallNatRCActionPtrOutputWithContext(context.Context) AzureFirewallNatRCActionPtrOutput
}

type azureFirewallNatRCActionPtrType AzureFirewallNatRCActionArgs

func AzureFirewallNatRCActionPtr(v *AzureFirewallNatRCActionArgs) AzureFirewallNatRCActionPtrInput {
	return (*azureFirewallNatRCActionPtrType)(v)
}

func (*azureFirewallNatRCActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCAction)(nil)).Elem()
}

func (i *azureFirewallNatRCActionPtrType) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return i.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (i *azureFirewallNatRCActionPtrType) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionPtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCAction)(nil)).Elem()
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput {
	return o
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionOutputWithContext(ctx context.Context) AzureFirewallNatRCActionOutput {
	return o
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return o.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFirewallNatRCAction) *AzureFirewallNatRCAction {
		return &v
	}).(AzureFirewallNatRCActionPtrOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRCActionPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCAction)(nil)).Elem()
}

func (o AzureFirewallNatRCActionPtrOutput) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return o
}

func (o AzureFirewallNatRCActionPtrOutput) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return o
}

func (o AzureFirewallNatRCActionPtrOutput) Elem() AzureFirewallNatRCActionOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCAction) AzureFirewallNatRCAction {
		if v != nil {
			return *v
		}
		var ret AzureFirewallNatRCAction
		return ret
	}).(AzureFirewallNatRCActionOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponseOutput() AzureFirewallNatRCActionResponseOutput {
	return o
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponseOutput {
	return o
}

// The type of action.
func (o AzureFirewallNatRCActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRCActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRCActionResponsePtrOutput) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRCActionResponsePtrOutput) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRCActionResponsePtrOutput) Elem() AzureFirewallNatRCActionResponseOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCActionResponse) AzureFirewallNatRCActionResponse {
		if v != nil {
			return *v
		}
		var ret AzureFirewallNatRCActionResponse
		return ret
	}).(AzureFirewallNatRCActionResponseOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// AzureFirewallNatRuleInput is an input type that accepts AzureFirewallNatRuleArgs and AzureFirewallNatRuleOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleInput` via:
//
//	AzureFirewallNatRuleArgs{...}
type AzureFirewallNatRuleInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput
	ToAzureFirewallNatRuleOutputWithContext(context.Context) AzureFirewallNatRuleOutput
}

// Properties of a NAT rule.
type AzureFirewallNatRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn pulumi.StringPtrInput `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (AzureFirewallNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRule)(nil)).Elem()
}

func (i AzureFirewallNatRuleArgs) ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput {
	return i.ToAzureFirewallNatRuleOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleArgs) ToAzureFirewallNatRuleOutputWithContext(ctx context.Context) AzureFirewallNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleOutput)
}

// AzureFirewallNatRuleArrayInput is an input type that accepts AzureFirewallNatRuleArray and AzureFirewallNatRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleArrayInput` via:
//
//	AzureFirewallNatRuleArray{ AzureFirewallNatRuleArgs{...} }
type AzureFirewallNatRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput
	ToAzureFirewallNatRuleArrayOutputWithContext(context.Context) AzureFirewallNatRuleArrayOutput
}

type AzureFirewallNatRuleArray []AzureFirewallNatRuleInput

func (AzureFirewallNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRule)(nil)).Elem()
}

func (i AzureFirewallNatRuleArray) ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput {
	return i.ToAzureFirewallNatRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleArray) ToAzureFirewallNatRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleArrayOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRule)(nil)).Elem()
}

func (o AzureFirewallNatRuleOutput) ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput {
	return o
}

func (o AzureFirewallNatRuleOutput) ToAzureFirewallNatRuleOutputWithContext(ctx context.Context) AzureFirewallNatRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNatRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
func (o AzureFirewallNatRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNatRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the NAT rule.
func (o AzureFirewallNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
func (o AzureFirewallNatRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNatRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNatRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRule)(nil)).Elem()
}

func (o AzureFirewallNatRuleArrayOutput) ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput {
	return o
}

func (o AzureFirewallNatRuleArrayOutput) ToAzureFirewallNatRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleArrayOutput {
	return o
}

func (o AzureFirewallNatRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRule {
		return vs[0].([]AzureFirewallNatRule)[vs[1].(int)]
	}).(AzureFirewallNatRuleOutput)
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollection struct {
	// The action type of a NAT rule collection.
	Action *AzureFirewallNatRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the NAT rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a NAT rule collection.
	Rules []AzureFirewallNatRule `pulumi:"rules"`
}

// AzureFirewallNatRuleCollectionInput is an input type that accepts AzureFirewallNatRuleCollectionArgs and AzureFirewallNatRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionInput` via:
//
//	AzureFirewallNatRuleCollectionArgs{...}
type AzureFirewallNatRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput
	ToAzureFirewallNatRuleCollectionOutputWithContext(context.Context) AzureFirewallNatRuleCollectionOutput
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionArgs struct {
	// The action type of a NAT rule collection.
	Action AzureFirewallNatRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the NAT rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a NAT rule collection.
	Rules AzureFirewallNatRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallNatRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionArgs) ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput {
	return i.ToAzureFirewallNatRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionArgs) ToAzureFirewallNatRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionOutput)
}

// AzureFirewallNatRuleCollectionArrayInput is an input type that accepts AzureFirewallNatRuleCollectionArray and AzureFirewallNatRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionArrayInput` via:
//
//	AzureFirewallNatRuleCollectionArray{ AzureFirewallNatRuleCollectionArgs{...} }
type AzureFirewallNatRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput
	ToAzureFirewallNatRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallNatRuleCollectionArrayOutput
}

type AzureFirewallNatRuleCollectionArray []AzureFirewallNatRuleCollectionInput

func (AzureFirewallNatRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionArray) ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput {
	return i.ToAzureFirewallNatRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionArray) ToAzureFirewallNatRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionArrayOutput)
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionOutput) ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionOutput) ToAzureFirewallNatRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionOutput {
	return o
}

// The action type of a NAT rule collection.
func (o AzureFirewallNatRuleCollectionOutput) Action() AzureFirewallNatRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *AzureFirewallNatRCAction { return v.Action }).(AzureFirewallNatRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallNatRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNatRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionOutput) Rules() AzureFirewallNatRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) []AzureFirewallNatRule { return v.Rules }).(AzureFirewallNatRuleArrayOutput)
}

type AzureFirewallNatRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionArrayOutput) ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionArrayOutput) ToAzureFirewallNatRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleCollection {
		return vs[0].([]AzureFirewallNatRuleCollection)[vs[1].(int)]
	}).(AzureFirewallNatRuleCollectionOutput)
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionResponse struct {
	// The action type of a NAT rule collection.
	Action *AzureFirewallNatRCActionResponse `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the NAT rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the NAT rule collection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a NAT rule collection.
	Rules []AzureFirewallNatRuleResponse `pulumi:"rules"`
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionResponseOutput) ToAzureFirewallNatRuleCollectionResponseOutput() AzureFirewallNatRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseOutput) ToAzureFirewallNatRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseOutput {
	return o
}

// The action type of a NAT rule collection.
func (o AzureFirewallNatRuleCollectionResponseOutput) Action() AzureFirewallNatRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *AzureFirewallNatRCActionResponse { return v.Action }).(AzureFirewallNatRCActionResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallNatRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallNatRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNatRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionResponseOutput) Rules() AzureFirewallNatRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) []AzureFirewallNatRuleResponse { return v.Rules }).(AzureFirewallNatRuleResponseArrayOutput)
}

type AzureFirewallNatRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) ToAzureFirewallNatRuleCollectionResponseArrayOutput() AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleCollectionResponse {
		return vs[0].([]AzureFirewallNatRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallNatRuleCollectionResponseOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleResponseOutput) ToAzureFirewallNatRuleResponseOutput() AzureFirewallNatRuleResponseOutput {
	return o
}

func (o AzureFirewallNatRuleResponseOutput) ToAzureFirewallNatRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNatRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
func (o AzureFirewallNatRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNatRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the NAT rule.
func (o AzureFirewallNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNatRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNatRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleResponseArrayOutput) ToAzureFirewallNatRuleResponseArrayOutput() AzureFirewallNatRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleResponseArrayOutput) ToAzureFirewallNatRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleResponse {
		return vs[0].([]AzureFirewallNatRuleResponse)[vs[1].(int)]
	}).(AzureFirewallNatRuleResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// AzureFirewallNetworkRuleInput is an input type that accepts AzureFirewallNetworkRuleArgs and AzureFirewallNetworkRuleOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleInput` via:
//
//	AzureFirewallNetworkRuleArgs{...}
type AzureFirewallNetworkRuleInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput
	ToAzureFirewallNetworkRuleOutputWithContext(context.Context) AzureFirewallNetworkRuleOutput
}

// Properties of the network rule.
type AzureFirewallNetworkRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (AzureFirewallNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return i.ToAzureFirewallNetworkRuleOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleOutput)
}

// AzureFirewallNetworkRuleArrayInput is an input type that accepts AzureFirewallNetworkRuleArray and AzureFirewallNetworkRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleArrayInput` via:
//
//	AzureFirewallNetworkRuleArray{ AzureFirewallNetworkRuleArgs{...} }
type AzureFirewallNetworkRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput
	ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleArrayOutput
}

type AzureFirewallNetworkRuleArray []AzureFirewallNetworkRuleInput

func (AzureFirewallNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return i.ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleArrayOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return o
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o AzureFirewallNetworkRuleOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o AzureFirewallNetworkRuleOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNetworkRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRule {
		return vs[0].([]AzureFirewallNetworkRule)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleOutput)
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollection struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRule `pulumi:"rules"`
}

// AzureFirewallNetworkRuleCollectionInput is an input type that accepts AzureFirewallNetworkRuleCollectionArgs and AzureFirewallNetworkRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionInput` via:
//
//	AzureFirewallNetworkRuleCollectionArgs{...}
type AzureFirewallNetworkRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput
	ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionOutput
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionArgs struct {
	// The action type of a rule collection.
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a network rule collection.
	Rules AzureFirewallNetworkRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallNetworkRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return i.ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionOutput)
}

// AzureFirewallNetworkRuleCollectionArrayInput is an input type that accepts AzureFirewallNetworkRuleCollectionArray and AzureFirewallNetworkRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionArrayInput` via:
//
//	AzureFirewallNetworkRuleCollectionArray{ AzureFirewallNetworkRuleCollectionArgs{...} }
type AzureFirewallNetworkRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput
	ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionArrayOutput
}

type AzureFirewallNetworkRuleCollectionArray []AzureFirewallNetworkRuleCollectionInput

func (AzureFirewallNetworkRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return i.ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionArrayOutput)
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallNetworkRuleCollectionOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionOutput) Rules() AzureFirewallNetworkRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) []AzureFirewallNetworkRule { return v.Rules }).(AzureFirewallNetworkRuleArrayOutput)
}

type AzureFirewallNetworkRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollection {
		return vs[0].([]AzureFirewallNetworkRuleCollection)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionOutput)
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionResponse struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the network rule collection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRuleResponse `pulumi:"rules"`
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *AzureFirewallRCActionResponse { return v.Action }).(AzureFirewallRCActionResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Rules() AzureFirewallNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) []AzureFirewallNetworkRuleResponse { return v.Rules }).(AzureFirewallNetworkRuleResponseArrayOutput)
}

type AzureFirewallNetworkRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollectionResponse {
		return vs[0].([]AzureFirewallNetworkRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleResponse {
		return vs[0].([]AzureFirewallNetworkRuleResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleResponseOutput)
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddress struct {
	// Public IP Address value.
	Address *string `pulumi:"address"`
}

// AzureFirewallPublicIPAddressInput is an input type that accepts AzureFirewallPublicIPAddressArgs and AzureFirewallPublicIPAddressOutput values.
// You can construct a concrete instance of `AzureFirewallPublicIPAddressInput` via:
//
//	AzureFirewallPublicIPAddressArgs{...}
type AzureFirewallPublicIPAddressInput interface {
	pulumi.Input

	ToAzureFirewallPublicIPAddressOutput() AzureFirewallPublicIPAddressOutput
	ToAzureFirewallPublicIPAddressOutputWithContext(context.Context) AzureFirewallPublicIPAddressOutput
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressArgs struct {
	// Public IP Address value.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (AzureFirewallPublicIPAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (i AzureFirewallPublicIPAddressArgs) ToAzureFirewallPublicIPAddressOutput() AzureFirewallPublicIPAddressOutput {
	return i.ToAzureFirewallPublicIPAddressOutputWithContext(context.Background())
}

func (i AzureFirewallPublicIPAddressArgs) ToAzureFirewallPublicIPAddressOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPublicIPAddressOutput)
}

// AzureFirewallPublicIPAddressArrayInput is an input type that accepts AzureFirewallPublicIPAddressArray and AzureFirewallPublicIPAddressArrayOutput values.
// You can construct a concrete instance of `AzureFirewallPublicIPAddressArrayInput` via:
//
//	AzureFirewallPublicIPAddressArray{ AzureFirewallPublicIPAddressArgs{...} }
type AzureFirewallPublicIPAddressArrayInput interface {
	pulumi.Input

	ToAzureFirewallPublicIPAddressArrayOutput() AzureFirewallPublicIPAddressArrayOutput
	ToAzureFirewallPublicIPAddressArrayOutputWithContext(context.Context) AzureFirewallPublicIPAddressArrayOutput
}

type AzureFirewallPublicIPAddressArray []AzureFirewallPublicIPAddressInput

func (AzureFirewallPublicIPAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (i AzureFirewallPublicIPAddressArray) ToAzureFirewallPublicIPAddressArrayOutput() AzureFirewallPublicIPAddressArrayOutput {
	return i.ToAzureFirewallPublicIPAddressArrayOutputWithContext(context.Background())
}

func (i AzureFirewallPublicIPAddressArray) ToAzureFirewallPublicIPAddressArrayOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPublicIPAddressArrayOutput)
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressOutput) ToAzureFirewallPublicIPAddressOutput() AzureFirewallPublicIPAddressOutput {
	return o
}

func (o AzureFirewallPublicIPAddressOutput) ToAzureFirewallPublicIPAddressOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressOutput {
	return o
}

// Public IP Address value.
func (o AzureFirewallPublicIPAddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallPublicIPAddress) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type AzureFirewallPublicIPAddressArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressArrayOutput) ToAzureFirewallPublicIPAddressArrayOutput() AzureFirewallPublicIPAddressArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressArrayOutput) ToAzureFirewallPublicIPAddressArrayOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressArrayOutput) Index(i pulumi.IntInput) AzureFirewallPublicIPAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallPublicIPAddress {
		return vs[0].([]AzureFirewallPublicIPAddress)[vs[1].(int)]
	}).(AzureFirewallPublicIPAddressOutput)
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressResponse struct {
	// Public IP Address value.
	Address *string `pulumi:"address"`
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPublicIPAddressResponse)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressResponseOutput) ToAzureFirewallPublicIPAddressResponseOutput() AzureFirewallPublicIPAddressResponseOutput {
	return o
}

func (o AzureFirewallPublicIPAddressResponseOutput) ToAzureFirewallPublicIPAddressResponseOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressResponseOutput {
	return o
}

// Public IP Address value.
func (o AzureFirewallPublicIPAddressResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallPublicIPAddressResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type AzureFirewallPublicIPAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallPublicIPAddressResponse)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressResponseArrayOutput) ToAzureFirewallPublicIPAddressResponseArrayOutput() AzureFirewallPublicIPAddressResponseArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressResponseArrayOutput) ToAzureFirewallPublicIPAddressResponseArrayOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressResponseArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallPublicIPAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallPublicIPAddressResponse {
		return vs[0].([]AzureFirewallPublicIPAddressResponse)[vs[1].(int)]
	}).(AzureFirewallPublicIPAddressResponseOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallRCActionInput is an input type that accepts AzureFirewallRCActionArgs and AzureFirewallRCActionOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionInput` via:
//
//	AzureFirewallRCActionArgs{...}
type AzureFirewallRCActionInput interface {
	pulumi.Input

	ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput
	ToAzureFirewallRCActionOutputWithContext(context.Context) AzureFirewallRCActionOutput
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallRCActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return i.ToAzureFirewallRCActionOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput)
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput).ToAzureFirewallRCActionPtrOutputWithContext(ctx)
}

// AzureFirewallRCActionPtrInput is an input type that accepts AzureFirewallRCActionArgs, AzureFirewallRCActionPtr and AzureFirewallRCActionPtrOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionPtrInput` via:
//
//	        AzureFirewallRCActionArgs{...}
//
//	or:
//
//	        nil
type AzureFirewallRCActionPtrInput interface {
	pulumi.Input

	ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput
	ToAzureFirewallRCActionPtrOutputWithContext(context.Context) AzureFirewallRCActionPtrOutput
}

type azureFirewallRCActionPtrType AzureFirewallRCActionArgs

func AzureFirewallRCActionPtr(v *AzureFirewallRCActionArgs) AzureFirewallRCActionPtrInput {
	return (*azureFirewallRCActionPtrType)(v)
}

func (*azureFirewallRCActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFirewallRCAction) *AzureFirewallRCAction {
		return &v
	}).(AzureFirewallRCActionPtrOutput)
}

// The type of action.
func (o AzureFirewallRCActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) Elem() AzureFirewallRCActionOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) AzureFirewallRCAction {
		if v != nil {
			return *v
		}
		var ret AzureFirewallRCAction
		return ret
	}).(AzureFirewallRCActionOutput)
}

// The type of action.
func (o AzureFirewallRCActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput {
	return o
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallRCActionResponseOutput {
	return o
}

// The type of action.
func (o AzureFirewallRCActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) Elem() AzureFirewallRCActionResponseOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) AzureFirewallRCActionResponse {
		if v != nil {
			return *v
		}
		var ret AzureFirewallRCActionResponse
		return ret
	}).(AzureFirewallRCActionResponseOutput)
}

// The type of action.
func (o AzureFirewallRCActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// SKU of an Azure Firewall.
type AzureFirewallSku struct {
	// Name of an Azure Firewall SKU.
	Name *string `pulumi:"name"`
	// Tier of an Azure Firewall.
	Tier *string `pulumi:"tier"`
}

// AzureFirewallSkuInput is an input type that accepts AzureFirewallSkuArgs and AzureFirewallSkuOutput values.
// You can construct a concrete instance of `AzureFirewallSkuInput` via:
//
//	AzureFirewallSkuArgs{...}
type AzureFirewallSkuInput interface {
	pulumi.Input

	ToAzureFirewallSkuOutput() AzureFirewallSkuOutput
	ToAzureFirewallSkuOutputWithContext(context.Context) AzureFirewallSkuOutput
}

// SKU of an Azure Firewall.
type AzureFirewallSkuArgs struct {
	// Name of an Azure Firewall SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an Azure Firewall.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (AzureFirewallSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallSku)(nil)).Elem()
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuOutput() AzureFirewallSkuOutput {
	return i.ToAzureFirewallSkuOutputWithContext(context.Background())
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuOutputWithContext(ctx context.Context) AzureFirewallSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuOutput)
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return i.ToAzureFirewallSkuPtrOutputWithContext(context.Background())
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuOutput).ToAzureFirewallSkuPtrOutputWithContext(ctx)
}

// AzureFirewallSkuPtrInput is an input type that accepts AzureFirewallSkuArgs, AzureFirewallSkuPtr and AzureFirewallSkuPtrOutput values.
// You can construct a concrete instance of `AzureFirewallSkuPtrInput` via:
//
//	        AzureFirewallSkuArgs{...}
//
//	or:
//
//	        nil
type AzureFirewallSkuPtrInput interface {
	pulumi.Input

	ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput
	ToAzureFirewallSkuPtrOutputWithContext(context.Context) AzureFirewallSkuPtrOutput
}

type azureFirewallSkuPtrType AzureFirewallSkuArgs

func AzureFirewallSkuPtr(v *AzureFirewallSkuArgs) AzureFirewallSkuPtrInput {
	return (*azureFirewallSkuPtrType)(v)
}

func (*azureFirewallSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallSku)(nil)).Elem()
}

func (i *azureFirewallSkuPtrType) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return i.ToAzureFirewallSkuPtrOutputWithContext(context.Background())
}

func (i *azureFirewallSkuPtrType) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuPtrOutput)
}

// SKU of an Azure Firewall.
type AzureFirewallSkuOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallSku)(nil)).Elem()
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuOutput() AzureFirewallSkuOutput {
	return o
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuOutputWithContext(ctx context.Context) AzureFirewallSkuOutput {
	return o
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return o.ToAzureFirewallSkuPtrOutputWithContext(context.Background())
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFirewallSku) *AzureFirewallSku {
		return &v
	}).(AzureFirewallSkuPtrOutput)
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type AzureFirewallSkuPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallSku)(nil)).Elem()
}

func (o AzureFirewallSkuPtrOutput) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return o
}

func (o AzureFirewallSkuPtrOutput) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return o
}

func (o AzureFirewallSkuPtrOutput) Elem() AzureFirewallSkuOutput {
	return o.ApplyT(func(v *AzureFirewallSku) AzureFirewallSku {
		if v != nil {
			return *v
		}
		var ret AzureFirewallSku
		return ret
	}).(AzureFirewallSkuOutput)
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of an Azure Firewall.
type AzureFirewallSkuResponse struct {
	// Name of an Azure Firewall SKU.
	Name *string `pulumi:"name"`
	// Tier of an Azure Firewall.
	Tier *string `pulumi:"tier"`
}

// SKU of an Azure Firewall.
type AzureFirewallSkuResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallSkuResponse)(nil)).Elem()
}

func (o AzureFirewallSkuResponseOutput) ToAzureFirewallSkuResponseOutput() AzureFirewallSkuResponseOutput {
	return o
}

func (o AzureFirewallSkuResponseOutput) ToAzureFirewallSkuResponseOutputWithContext(ctx context.Context) AzureFirewallSkuResponseOutput {
	return o
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type AzureFirewallSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallSkuResponse)(nil)).Elem()
}

func (o AzureFirewallSkuResponsePtrOutput) ToAzureFirewallSkuResponsePtrOutput() AzureFirewallSkuResponsePtrOutput {
	return o
}

func (o AzureFirewallSkuResponsePtrOutput) ToAzureFirewallSkuResponsePtrOutputWithContext(ctx context.Context) AzureFirewallSkuResponsePtrOutput {
	return o
}

func (o AzureFirewallSkuResponsePtrOutput) Elem() AzureFirewallSkuResponseOutput {
	return o.ApplyT(func(v *AzureFirewallSkuResponse) AzureFirewallSkuResponse {
		if v != nil {
			return *v
		}
		var ret AzureFirewallSkuResponse
		return ret
	}).(AzureFirewallSkuResponseOutput)
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Backend address of a frontDoor load balancer.
type Backend struct {
	// Location of the backend (IP address or FQDN)
	Address *string `pulumi:"address"`
	// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
	BackendHostHeader *string `pulumi:"backendHostHeader"`
	// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// The HTTP TCP port number. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The HTTPS TCP port number. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
	Priority *int `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of this endpoint for load balancing purposes.
	Weight *int `pulumi:"weight"`
}

// BackendInput is an input type that accepts BackendArgs and BackendOutput values.
// You can construct a concrete instance of `BackendInput` via:
//
//	BackendArgs{...}
type BackendInput interface {
	pulumi.Input

	ToBackendOutput() BackendOutput
	ToBackendOutputWithContext(context.Context) BackendOutput
}

// Backend address of a frontDoor load balancer.
type BackendArgs struct {
	// Location of the backend (IP address or FQDN)
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
	BackendHostHeader pulumi.StringPtrInput `pulumi:"backendHostHeader"`
	// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// The HTTP TCP port number. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The HTTPS TCP port number. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkAlias pulumi.StringPtrInput `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link
	PrivateLinkApprovalMessage pulumi.StringPtrInput `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation pulumi.StringPtrInput `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Weight of this endpoint for load balancing purposes.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (BackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Backend)(nil)).Elem()
}

func (i BackendArgs) ToBackendOutput() BackendOutput {
	return i.ToBackendOutputWithContext(context.Background())
}

func (i BackendArgs) ToBackendOutputWithContext(ctx context.Context) BackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendOutput)
}

// BackendArrayInput is an input type that accepts BackendArray and BackendArrayOutput values.
// You can construct a concrete instance of `BackendArrayInput` via:
//
//	BackendArray{ BackendArgs{...} }
type BackendArrayInput interface {
	pulumi.Input

	ToBackendArrayOutput() BackendArrayOutput
	ToBackendArrayOutputWithContext(context.Context) BackendArrayOutput
}

type BackendArray []BackendInput

func (BackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Backend)(nil)).Elem()
}

func (i BackendArray) ToBackendArrayOutput() BackendArrayOutput {
	return i.ToBackendArrayOutputWithContext(context.Background())
}

func (i BackendArray) ToBackendArrayOutputWithContext(ctx context.Context) BackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendArrayOutput)
}

// Backend address of a frontDoor load balancer.
type BackendOutput struct{ *pulumi.OutputState }

func (BackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Backend)(nil)).Elem()
}

func (o BackendOutput) ToBackendOutput() BackendOutput {
	return o
}

func (o BackendOutput) ToBackendOutputWithContext(ctx context.Context) BackendOutput {
	return o
}

// Location of the backend (IP address or FQDN)
func (o BackendOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
func (o BackendOutput) BackendHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.BackendHostHeader }).(pulumi.StringPtrOutput)
}

// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
func (o BackendOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// The HTTP TCP port number. Must be between 1 and 65535.
func (o BackendOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The HTTPS TCP port number. Must be between 1 and 65535.
func (o BackendOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
func (o BackendOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendOutput) PrivateLinkAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkAlias }).(pulumi.StringPtrOutput)
}

// A custom message to be included in the approval request to connect to the Private Link
func (o BackendOutput) PrivateLinkApprovalMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkApprovalMessage }).(pulumi.StringPtrOutput)
}

// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
func (o BackendOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Weight of this endpoint for load balancing purposes.
func (o BackendOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type BackendArrayOutput struct{ *pulumi.OutputState }

func (BackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Backend)(nil)).Elem()
}

func (o BackendArrayOutput) ToBackendArrayOutput() BackendArrayOutput {
	return o
}

func (o BackendArrayOutput) ToBackendArrayOutputWithContext(ctx context.Context) BackendArrayOutput {
	return o
}

func (o BackendArrayOutput) Index(i pulumi.IntInput) BackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Backend {
		return vs[0].([]Backend)[vs[1].(int)]
	}).(BackendOutput)
}

// Pool of backend IP addresses.
type BackendAddressPool struct {
	// Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
	DrainPeriodInSeconds *int `pulumi:"drainPeriodInSeconds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddress `pulumi:"loadBalancerBackendAddresses"`
	// The location of the backend address pool.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// An array of gateway load balancer tunnel interfaces.
	TunnelInterfaces []GatewayLoadBalancerTunnelInterface `pulumi:"tunnelInterfaces"`
	// A reference to a virtual network.
	VirtualNetwork *SubResource `pulumi:"virtualNetwork"`
}

// BackendAddressPoolInput is an input type that accepts BackendAddressPoolArgs and BackendAddressPoolOutput values.
// You can construct a concrete instance of `BackendAddressPoolInput` via:
//
//	BackendAddressPoolArgs{...}
type BackendAddressPoolInput interface {
	pulumi.Input

	ToBackendAddressPoolOutput() BackendAddressPoolOutput
	ToBackendAddressPoolOutputWithContext(context.Context) BackendAddressPoolOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolArgs struct {
	// Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
	DrainPeriodInSeconds pulumi.IntPtrInput `pulumi:"drainPeriodInSeconds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses LoadBalancerBackendAddressArrayInput `pulumi:"loadBalancerBackendAddresses"`
	// The location of the backend address pool.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An array of gateway load balancer tunnel interfaces.
	TunnelInterfaces GatewayLoadBalancerTunnelInterfaceArrayInput `pulumi:"tunnelInterfaces"`
	// A reference to a virtual network.
	VirtualNetwork SubResourcePtrInput `pulumi:"virtualNetwork"`
}

func (BackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return i.ToBackendAddressPoolOutputWithContext(context.Background())
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolOutput)
}

// BackendAddressPoolArrayInput is an input type that accepts BackendAddressPoolArray and BackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolArrayInput` via:
//
//	BackendAddressPoolArray{ BackendAddressPoolArgs{...} }
type BackendAddressPoolArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput
	ToBackendAddressPoolArrayOutputWithContext(context.Context) BackendAddressPoolArrayOutput
}

type BackendAddressPoolArray []BackendAddressPoolInput

func (BackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return i.ToBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return o
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return o
}

// Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
func (o BackendAddressPoolOutput) DrainPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *int { return v.DrainPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o BackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of backend addresses.
func (o BackendAddressPoolOutput) LoadBalancerBackendAddresses() LoadBalancerBackendAddressArrayOutput {
	return o.ApplyT(func(v BackendAddressPool) []LoadBalancerBackendAddress { return v.LoadBalancerBackendAddresses }).(LoadBalancerBackendAddressArrayOutput)
}

// The location of the backend address pool.
func (o BackendAddressPoolOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
func (o BackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of gateway load balancer tunnel interfaces.
func (o BackendAddressPoolOutput) TunnelInterfaces() GatewayLoadBalancerTunnelInterfaceArrayOutput {
	return o.ApplyT(func(v BackendAddressPool) []GatewayLoadBalancerTunnelInterface { return v.TunnelInterfaces }).(GatewayLoadBalancerTunnelInterfaceArrayOutput)
}

// A reference to a virtual network.
func (o BackendAddressPoolOutput) VirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *SubResource { return v.VirtualNetwork }).(SubResourcePtrOutput)
}

type BackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPool {
		return vs[0].([]BackendAddressPool)[vs[1].(int)]
	}).(BackendAddressPoolOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponse struct {
	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
	DrainPeriodInSeconds *int `pulumi:"drainPeriodInSeconds"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of references to inbound NAT rules that use this backend address pool.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddressResponse `pulumi:"loadBalancerBackendAddresses"`
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The location of the backend address pool.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule SubResourceResponse `pulumi:"outboundRule"`
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// An array of gateway load balancer tunnel interfaces.
	TunnelInterfaces []GatewayLoadBalancerTunnelInterfaceResponse `pulumi:"tunnelInterfaces"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// A reference to a virtual network.
	VirtualNetwork *SubResourceResponse `pulumi:"virtualNetwork"`
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return o
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return o
}

// An array of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Amount of seconds Load Balancer waits for before sending RESET to client and backend address.
func (o BackendAddressPoolResponseOutput) DrainPeriodInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *int { return v.DrainPeriodInSeconds }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o BackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of references to inbound NAT rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.InboundNatRules }).(SubResourceResponseArrayOutput)
}

// An array of backend addresses.
func (o BackendAddressPoolResponseOutput) LoadBalancerBackendAddresses() LoadBalancerBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []LoadBalancerBackendAddressResponse {
		return v.LoadBalancerBackendAddresses
	}).(LoadBalancerBackendAddressResponseArrayOutput)
}

// An array of references to load balancing rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The location of the backend address pool.
func (o BackendAddressPoolResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
func (o BackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A reference to an outbound rule that uses this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRule() SubResourceResponseOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) SubResourceResponse { return v.OutboundRule }).(SubResourceResponseOutput)
}

// An array of references to outbound rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The provisioning state of the backend address pool resource.
func (o BackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// An array of gateway load balancer tunnel interfaces.
func (o BackendAddressPoolResponseOutput) TunnelInterfaces() GatewayLoadBalancerTunnelInterfaceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []GatewayLoadBalancerTunnelInterfaceResponse {
		return v.TunnelInterfaces
	}).(GatewayLoadBalancerTunnelInterfaceResponseArrayOutput)
}

// Type of the resource.
func (o BackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A reference to a virtual network.
func (o BackendAddressPoolResponseOutput) VirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *SubResourceResponse { return v.VirtualNetwork }).(SubResourceResponsePtrOutput)
}

type BackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolResponse {
		return vs[0].([]BackendAddressPoolResponse)[vs[1].(int)]
	}).(BackendAddressPoolResponseOutput)
}

// A backend pool is a collection of backends that can be routed to.
type BackendPool struct {
	// The set of backends for this pool
	Backends []Backend `pulumi:"backends"`
	// L7 health probe settings for a backend pool
	HealthProbeSettings *SubResource `pulumi:"healthProbeSettings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load balancing settings for a backend pool
	LoadBalancingSettings *SubResource `pulumi:"loadBalancingSettings"`
	// Resource name.
	Name *string `pulumi:"name"`
}

// BackendPoolInput is an input type that accepts BackendPoolArgs and BackendPoolOutput values.
// You can construct a concrete instance of `BackendPoolInput` via:
//
//	BackendPoolArgs{...}
type BackendPoolInput interface {
	pulumi.Input

	ToBackendPoolOutput() BackendPoolOutput
	ToBackendPoolOutputWithContext(context.Context) BackendPoolOutput
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolArgs struct {
	// The set of backends for this pool
	Backends BackendArrayInput `pulumi:"backends"`
	// L7 health probe settings for a backend pool
	HealthProbeSettings SubResourcePtrInput `pulumi:"healthProbeSettings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Load balancing settings for a backend pool
	LoadBalancingSettings SubResourcePtrInput `pulumi:"loadBalancingSettings"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPool)(nil)).Elem()
}

func (i BackendPoolArgs) ToBackendPoolOutput() BackendPoolOutput {
	return i.ToBackendPoolOutputWithContext(context.Background())
}

func (i BackendPoolArgs) ToBackendPoolOutputWithContext(ctx context.Context) BackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolOutput)
}

// BackendPoolArrayInput is an input type that accepts BackendPoolArray and BackendPoolArrayOutput values.
// You can construct a concrete instance of `BackendPoolArrayInput` via:
//
//	BackendPoolArray{ BackendPoolArgs{...} }
type BackendPoolArrayInput interface {
	pulumi.Input

	ToBackendPoolArrayOutput() BackendPoolArrayOutput
	ToBackendPoolArrayOutputWithContext(context.Context) BackendPoolArrayOutput
}

type BackendPoolArray []BackendPoolInput

func (BackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendPool)(nil)).Elem()
}

func (i BackendPoolArray) ToBackendPoolArrayOutput() BackendPoolArrayOutput {
	return i.ToBackendPoolArrayOutputWithContext(context.Background())
}

func (i BackendPoolArray) ToBackendPoolArrayOutputWithContext(ctx context.Context) BackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolArrayOutput)
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolOutput struct{ *pulumi.OutputState }

func (BackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPool)(nil)).Elem()
}

func (o BackendPoolOutput) ToBackendPoolOutput() BackendPoolOutput {
	return o
}

func (o BackendPoolOutput) ToBackendPoolOutputWithContext(ctx context.Context) BackendPoolOutput {
	return o
}

// The set of backends for this pool
func (o BackendPoolOutput) Backends() BackendArrayOutput {
	return o.ApplyT(func(v BackendPool) []Backend { return v.Backends }).(BackendArrayOutput)
}

// L7 health probe settings for a backend pool
func (o BackendPoolOutput) HealthProbeSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v BackendPool) *SubResource { return v.HealthProbeSettings }).(SubResourcePtrOutput)
}

// Resource ID.
func (o BackendPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load balancing settings for a backend pool
func (o BackendPoolOutput) LoadBalancingSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v BackendPool) *SubResource { return v.LoadBalancingSettings }).(SubResourcePtrOutput)
}

// Resource name.
func (o BackendPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BackendPoolArrayOutput struct{ *pulumi.OutputState }

func (BackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendPool)(nil)).Elem()
}

func (o BackendPoolArrayOutput) ToBackendPoolArrayOutput() BackendPoolArrayOutput {
	return o
}

func (o BackendPoolArrayOutput) ToBackendPoolArrayOutputWithContext(ctx context.Context) BackendPoolArrayOutput {
	return o
}

func (o BackendPoolArrayOutput) Index(i pulumi.IntInput) BackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendPool {
		return vs[0].([]BackendPool)[vs[1].(int)]
	}).(BackendPoolOutput)
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolResponse struct {
	// The set of backends for this pool
	Backends []BackendResponse `pulumi:"backends"`
	// L7 health probe settings for a backend pool
	HealthProbeSettings *SubResourceResponse `pulumi:"healthProbeSettings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load balancing settings for a backend pool
	LoadBalancingSettings *SubResourceResponse `pulumi:"loadBalancingSettings"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolResponse)(nil)).Elem()
}

func (o BackendPoolResponseOutput) ToBackendPoolResponseOutput() BackendPoolResponseOutput {
	return o
}

func (o BackendPoolResponseOutput) ToBackendPoolResponseOutputWithContext(ctx context.Context) BackendPoolResponseOutput {
	return o
}

// The set of backends for this pool
func (o BackendPoolResponseOutput) Backends() BackendResponseArrayOutput {
	return o.ApplyT(func(v BackendPoolResponse) []BackendResponse { return v.Backends }).(BackendResponseArrayOutput)
}

// L7 health probe settings for a backend pool
func (o BackendPoolResponseOutput) HealthProbeSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *SubResourceResponse { return v.HealthProbeSettings }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o BackendPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load balancing settings for a backend pool
func (o BackendPoolResponseOutput) LoadBalancingSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *SubResourceResponse { return v.LoadBalancingSettings }).(SubResourceResponsePtrOutput)
}

// Resource name.
func (o BackendPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o BackendPoolResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v BackendPoolResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Resource type.
func (o BackendPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type BackendPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendPoolResponse)(nil)).Elem()
}

func (o BackendPoolResponseArrayOutput) ToBackendPoolResponseArrayOutput() BackendPoolResponseArrayOutput {
	return o
}

func (o BackendPoolResponseArrayOutput) ToBackendPoolResponseArrayOutputWithContext(ctx context.Context) BackendPoolResponseArrayOutput {
	return o
}

func (o BackendPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendPoolResponse {
		return vs[0].([]BackendPoolResponse)[vs[1].(int)]
	}).(BackendPoolResponseOutput)
}

// Settings that apply to all backend pools.
type BackendPoolsSettings struct {
	// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
	EnforceCertificateNameCheck *string `pulumi:"enforceCertificateNameCheck"`
	// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
	SendRecvTimeoutSeconds *int `pulumi:"sendRecvTimeoutSeconds"`
}

// Defaults sets the appropriate defaults for BackendPoolsSettings
func (val *BackendPoolsSettings) Defaults() *BackendPoolsSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnforceCertificateNameCheck == nil {
		enforceCertificateNameCheck_ := "Enabled"
		tmp.EnforceCertificateNameCheck = &enforceCertificateNameCheck_
	}
	return &tmp
}

// BackendPoolsSettingsInput is an input type that accepts BackendPoolsSettingsArgs and BackendPoolsSettingsOutput values.
// You can construct a concrete instance of `BackendPoolsSettingsInput` via:
//
//	BackendPoolsSettingsArgs{...}
type BackendPoolsSettingsInput interface {
	pulumi.Input

	ToBackendPoolsSettingsOutput() BackendPoolsSettingsOutput
	ToBackendPoolsSettingsOutputWithContext(context.Context) BackendPoolsSettingsOutput
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsArgs struct {
	// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
	EnforceCertificateNameCheck pulumi.StringPtrInput `pulumi:"enforceCertificateNameCheck"`
	// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
	SendRecvTimeoutSeconds pulumi.IntPtrInput `pulumi:"sendRecvTimeoutSeconds"`
}

// Defaults sets the appropriate defaults for BackendPoolsSettingsArgs
func (val *BackendPoolsSettingsArgs) Defaults() *BackendPoolsSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnforceCertificateNameCheck == nil {
		tmp.EnforceCertificateNameCheck = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (BackendPoolsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolsSettings)(nil)).Elem()
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsOutput() BackendPoolsSettingsOutput {
	return i.ToBackendPoolsSettingsOutputWithContext(context.Background())
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsOutputWithContext(ctx context.Context) BackendPoolsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsOutput)
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return i.ToBackendPoolsSettingsPtrOutputWithContext(context.Background())
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsOutput).ToBackendPoolsSettingsPtrOutputWithContext(ctx)
}

// BackendPoolsSettingsPtrInput is an input type that accepts BackendPoolsSettingsArgs, BackendPoolsSettingsPtr and BackendPoolsSettingsPtrOutput values.
// You can construct a concrete instance of `BackendPoolsSettingsPtrInput` via:
//
//	        BackendPoolsSettingsArgs{...}
//
//	or:
//
//	        nil
type BackendPoolsSettingsPtrInput interface {
	pulumi.Input

	ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput
	ToBackendPoolsSettingsPtrOutputWithContext(context.Context) BackendPoolsSettingsPtrOutput
}

type backendPoolsSettingsPtrType BackendPoolsSettingsArgs

func BackendPoolsSettingsPtr(v *BackendPoolsSettingsArgs) BackendPoolsSettingsPtrInput {
	return (*backendPoolsSettingsPtrType)(v)
}

func (*backendPoolsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPoolsSettings)(nil)).Elem()
}

func (i *backendPoolsSettingsPtrType) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return i.ToBackendPoolsSettingsPtrOutputWithContext(context.Background())
}

func (i *backendPoolsSettingsPtrType) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsPtrOutput)
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolsSettings)(nil)).Elem()
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsOutput() BackendPoolsSettingsOutput {
	return o
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsOutputWithContext(ctx context.Context) BackendPoolsSettingsOutput {
	return o
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return o.ToBackendPoolsSettingsPtrOutputWithContext(context.Background())
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendPoolsSettings) *BackendPoolsSettings {
		return &v
	}).(BackendPoolsSettingsPtrOutput)
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettings) *string { return v.EnforceCertificateNameCheck }).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettings) *int { return v.SendRecvTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type BackendPoolsSettingsPtrOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPoolsSettings)(nil)).Elem()
}

func (o BackendPoolsSettingsPtrOutput) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return o
}

func (o BackendPoolsSettingsPtrOutput) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return o
}

func (o BackendPoolsSettingsPtrOutput) Elem() BackendPoolsSettingsOutput {
	return o.ApplyT(func(v *BackendPoolsSettings) BackendPoolsSettings {
		if v != nil {
			return *v
		}
		var ret BackendPoolsSettings
		return ret
	}).(BackendPoolsSettingsOutput)
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsPtrOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EnforceCertificateNameCheck
	}).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsPtrOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettings) *int {
		if v == nil {
			return nil
		}
		return v.SendRecvTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsResponse struct {
	// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
	EnforceCertificateNameCheck *string `pulumi:"enforceCertificateNameCheck"`
	// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
	SendRecvTimeoutSeconds *int `pulumi:"sendRecvTimeoutSeconds"`
}

// Defaults sets the appropriate defaults for BackendPoolsSettingsResponse
func (val *BackendPoolsSettingsResponse) Defaults() *BackendPoolsSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnforceCertificateNameCheck == nil {
		enforceCertificateNameCheck_ := "Enabled"
		tmp.EnforceCertificateNameCheck = &enforceCertificateNameCheck_
	}
	return &tmp
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsResponseOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolsSettingsResponse)(nil)).Elem()
}

func (o BackendPoolsSettingsResponseOutput) ToBackendPoolsSettingsResponseOutput() BackendPoolsSettingsResponseOutput {
	return o
}

func (o BackendPoolsSettingsResponseOutput) ToBackendPoolsSettingsResponseOutputWithContext(ctx context.Context) BackendPoolsSettingsResponseOutput {
	return o
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsResponseOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettingsResponse) *string { return v.EnforceCertificateNameCheck }).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsResponseOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettingsResponse) *int { return v.SendRecvTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type BackendPoolsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPoolsSettingsResponse)(nil)).Elem()
}

func (o BackendPoolsSettingsResponsePtrOutput) ToBackendPoolsSettingsResponsePtrOutput() BackendPoolsSettingsResponsePtrOutput {
	return o
}

func (o BackendPoolsSettingsResponsePtrOutput) ToBackendPoolsSettingsResponsePtrOutputWithContext(ctx context.Context) BackendPoolsSettingsResponsePtrOutput {
	return o
}

func (o BackendPoolsSettingsResponsePtrOutput) Elem() BackendPoolsSettingsResponseOutput {
	return o.ApplyT(func(v *BackendPoolsSettingsResponse) BackendPoolsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret BackendPoolsSettingsResponse
		return ret
	}).(BackendPoolsSettingsResponseOutput)
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsResponsePtrOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnforceCertificateNameCheck
	}).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsResponsePtrOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SendRecvTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Backend address of a frontDoor load balancer.
type BackendResponse struct {
	// Location of the backend (IP address or FQDN)
	Address *string `pulumi:"address"`
	// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
	BackendHostHeader *string `pulumi:"backendHostHeader"`
	// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// The HTTP TCP port number. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The HTTPS TCP port number. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
	Priority *int `pulumi:"priority"`
	// The Approval status for the connection to the Private Link
	PrivateEndpointStatus string `pulumi:"privateEndpointStatus"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of this endpoint for load balancing purposes.
	Weight *int `pulumi:"weight"`
}

// Backend address of a frontDoor load balancer.
type BackendResponseOutput struct{ *pulumi.OutputState }

func (BackendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendResponse)(nil)).Elem()
}

func (o BackendResponseOutput) ToBackendResponseOutput() BackendResponseOutput {
	return o
}

func (o BackendResponseOutput) ToBackendResponseOutputWithContext(ctx context.Context) BackendResponseOutput {
	return o
}

// Location of the backend (IP address or FQDN)
func (o BackendResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
func (o BackendResponseOutput) BackendHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.BackendHostHeader }).(pulumi.StringPtrOutput)
}

// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
func (o BackendResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// The HTTP TCP port number. Must be between 1 and 65535.
func (o BackendResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The HTTPS TCP port number. Must be between 1 and 65535.
func (o BackendResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
func (o BackendResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Approval status for the connection to the Private Link
func (o BackendResponseOutput) PrivateEndpointStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackendResponse) string { return v.PrivateEndpointStatus }).(pulumi.StringOutput)
}

// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendResponseOutput) PrivateLinkAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkAlias }).(pulumi.StringPtrOutput)
}

// A custom message to be included in the approval request to connect to the Private Link
func (o BackendResponseOutput) PrivateLinkApprovalMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkApprovalMessage }).(pulumi.StringPtrOutput)
}

// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
func (o BackendResponseOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Weight of this endpoint for load balancing purposes.
func (o BackendResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type BackendResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendResponse)(nil)).Elem()
}

func (o BackendResponseArrayOutput) ToBackendResponseArrayOutput() BackendResponseArrayOutput {
	return o
}

func (o BackendResponseArrayOutput) ToBackendResponseArrayOutputWithContext(ctx context.Context) BackendResponseArrayOutput {
	return o
}

func (o BackendResponseArrayOutput) Index(i pulumi.IntInput) BackendResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendResponse {
		return vs[0].([]BackendResponse)[vs[1].(int)]
	}).(BackendResponseOutput)
}

// The session detail for a target.
type BastionActiveSessionResponse struct {
	// The protocol used to connect to the target.
	Protocol string `pulumi:"protocol"`
	// The type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// Duration in mins the session has been active.
	SessionDurationInMins float64 `pulumi:"sessionDurationInMins"`
	// A unique id for the session.
	SessionId string `pulumi:"sessionId"`
	// The time when the session started.
	StartTime interface{} `pulumi:"startTime"`
	// The host name of the target.
	TargetHostName string `pulumi:"targetHostName"`
	// The IP Address of the target.
	TargetIpAddress string `pulumi:"targetIpAddress"`
	// The resource group of the target.
	TargetResourceGroup string `pulumi:"targetResourceGroup"`
	// The resource id of the target.
	TargetResourceId string `pulumi:"targetResourceId"`
	// The subscription id for the target virtual machine.
	TargetSubscriptionId string `pulumi:"targetSubscriptionId"`
	// The user name who is active on this session.
	UserName string `pulumi:"userName"`
}

// The session detail for a target.
type BastionActiveSessionResponseOutput struct{ *pulumi.OutputState }

func (BastionActiveSessionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionActiveSessionResponse)(nil)).Elem()
}

func (o BastionActiveSessionResponseOutput) ToBastionActiveSessionResponseOutput() BastionActiveSessionResponseOutput {
	return o
}

func (o BastionActiveSessionResponseOutput) ToBastionActiveSessionResponseOutputWithContext(ctx context.Context) BastionActiveSessionResponseOutput {
	return o
}

// The protocol used to connect to the target.
func (o BastionActiveSessionResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The type of the resource.
func (o BastionActiveSessionResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Duration in mins the session has been active.
func (o BastionActiveSessionResponseOutput) SessionDurationInMins() pulumi.Float64Output {
	return o.ApplyT(func(v BastionActiveSessionResponse) float64 { return v.SessionDurationInMins }).(pulumi.Float64Output)
}

// A unique id for the session.
func (o BastionActiveSessionResponseOutput) SessionId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.SessionId }).(pulumi.StringOutput)
}

// The time when the session started.
func (o BastionActiveSessionResponseOutput) StartTime() pulumi.AnyOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) interface{} { return v.StartTime }).(pulumi.AnyOutput)
}

// The host name of the target.
func (o BastionActiveSessionResponseOutput) TargetHostName() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetHostName }).(pulumi.StringOutput)
}

// The IP Address of the target.
func (o BastionActiveSessionResponseOutput) TargetIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetIpAddress }).(pulumi.StringOutput)
}

// The resource group of the target.
func (o BastionActiveSessionResponseOutput) TargetResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetResourceGroup }).(pulumi.StringOutput)
}

// The resource id of the target.
func (o BastionActiveSessionResponseOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// The subscription id for the target virtual machine.
func (o BastionActiveSessionResponseOutput) TargetSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetSubscriptionId }).(pulumi.StringOutput)
}

// The user name who is active on this session.
func (o BastionActiveSessionResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type BastionActiveSessionResponseArrayOutput struct{ *pulumi.OutputState }

func (BastionActiveSessionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionActiveSessionResponse)(nil)).Elem()
}

func (o BastionActiveSessionResponseArrayOutput) ToBastionActiveSessionResponseArrayOutput() BastionActiveSessionResponseArrayOutput {
	return o
}

func (o BastionActiveSessionResponseArrayOutput) ToBastionActiveSessionResponseArrayOutputWithContext(ctx context.Context) BastionActiveSessionResponseArrayOutput {
	return o
}

func (o BastionActiveSessionResponseArrayOutput) Index(i pulumi.IntInput) BastionActiveSessionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionActiveSessionResponse {
		return vs[0].([]BastionActiveSessionResponse)[vs[1].(int)]
	}).(BastionActiveSessionResponseOutput)
}

// IP configuration of an Bastion Host.
type BastionHostIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResource `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResource `pulumi:"subnet"`
}

// BastionHostIPConfigurationInput is an input type that accepts BastionHostIPConfigurationArgs and BastionHostIPConfigurationOutput values.
// You can construct a concrete instance of `BastionHostIPConfigurationInput` via:
//
//	BastionHostIPConfigurationArgs{...}
type BastionHostIPConfigurationInput interface {
	pulumi.Input

	ToBastionHostIPConfigurationOutput() BastionHostIPConfigurationOutput
	ToBastionHostIPConfigurationOutputWithContext(context.Context) BastionHostIPConfigurationOutput
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Private IP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceInput `pulumi:"subnet"`
}

func (BastionHostIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIPConfiguration)(nil)).Elem()
}

func (i BastionHostIPConfigurationArgs) ToBastionHostIPConfigurationOutput() BastionHostIPConfigurationOutput {
	return i.ToBastionHostIPConfigurationOutputWithContext(context.Background())
}

func (i BastionHostIPConfigurationArgs) ToBastionHostIPConfigurationOutputWithContext(ctx context.Context) BastionHostIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIPConfigurationOutput)
}

// BastionHostIPConfigurationArrayInput is an input type that accepts BastionHostIPConfigurationArray and BastionHostIPConfigurationArrayOutput values.
// You can construct a concrete instance of `BastionHostIPConfigurationArrayInput` via:
//
//	BastionHostIPConfigurationArray{ BastionHostIPConfigurationArgs{...} }
type BastionHostIPConfigurationArrayInput interface {
	pulumi.Input

	ToBastionHostIPConfigurationArrayOutput() BastionHostIPConfigurationArrayOutput
	ToBastionHostIPConfigurationArrayOutputWithContext(context.Context) BastionHostIPConfigurationArrayOutput
}

type BastionHostIPConfigurationArray []BastionHostIPConfigurationInput

func (BastionHostIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostIPConfiguration)(nil)).Elem()
}

func (i BastionHostIPConfigurationArray) ToBastionHostIPConfigurationArrayOutput() BastionHostIPConfigurationArrayOutput {
	return i.ToBastionHostIPConfigurationArrayOutputWithContext(context.Background())
}

func (i BastionHostIPConfigurationArray) ToBastionHostIPConfigurationArrayOutputWithContext(ctx context.Context) BastionHostIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIPConfigurationArrayOutput)
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIPConfiguration)(nil)).Elem()
}

func (o BastionHostIPConfigurationOutput) ToBastionHostIPConfigurationOutput() BastionHostIPConfigurationOutput {
	return o
}

func (o BastionHostIPConfigurationOutput) ToBastionHostIPConfigurationOutputWithContext(ctx context.Context) BastionHostIPConfigurationOutput {
	return o
}

// Resource ID.
func (o BastionHostIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BastionHostIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Private IP allocation method.
func (o BastionHostIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o BastionHostIPConfigurationOutput) PublicIPAddress() SubResourceOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) SubResource { return v.PublicIPAddress }).(SubResourceOutput)
}

// Reference of the subnet resource.
func (o BastionHostIPConfigurationOutput) Subnet() SubResourceOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) SubResource { return v.Subnet }).(SubResourceOutput)
}

type BastionHostIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostIPConfiguration)(nil)).Elem()
}

func (o BastionHostIPConfigurationArrayOutput) ToBastionHostIPConfigurationArrayOutput() BastionHostIPConfigurationArrayOutput {
	return o
}

func (o BastionHostIPConfigurationArrayOutput) ToBastionHostIPConfigurationArrayOutputWithContext(ctx context.Context) BastionHostIPConfigurationArrayOutput {
	return o
}

func (o BastionHostIPConfigurationArrayOutput) Index(i pulumi.IntInput) BastionHostIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionHostIPConfiguration {
		return vs[0].([]BastionHostIPConfiguration)[vs[1].(int)]
	}).(BastionHostIPConfigurationOutput)
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the bastion host IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceResponse `pulumi:"subnet"`
	// Ip configuration type.
	Type string `pulumi:"type"`
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIPConfigurationResponse)(nil)).Elem()
}

func (o BastionHostIPConfigurationResponseOutput) ToBastionHostIPConfigurationResponseOutput() BastionHostIPConfigurationResponseOutput {
	return o
}

func (o BastionHostIPConfigurationResponseOutput) ToBastionHostIPConfigurationResponseOutputWithContext(ctx context.Context) BastionHostIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o BastionHostIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o BastionHostIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BastionHostIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Private IP allocation method.
func (o BastionHostIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the bastion host IP configuration resource.
func (o BastionHostIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference of the PublicIP resource.
func (o BastionHostIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponseOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponseOutput)
}

// Reference of the subnet resource.
func (o BastionHostIPConfigurationResponseOutput) Subnet() SubResourceResponseOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) SubResourceResponse { return v.Subnet }).(SubResourceResponseOutput)
}

// Ip configuration type.
func (o BastionHostIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type BastionHostIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostIPConfigurationResponse)(nil)).Elem()
}

func (o BastionHostIPConfigurationResponseArrayOutput) ToBastionHostIPConfigurationResponseArrayOutput() BastionHostIPConfigurationResponseArrayOutput {
	return o
}

func (o BastionHostIPConfigurationResponseArrayOutput) ToBastionHostIPConfigurationResponseArrayOutputWithContext(ctx context.Context) BastionHostIPConfigurationResponseArrayOutput {
	return o
}

func (o BastionHostIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) BastionHostIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionHostIPConfigurationResponse {
		return vs[0].([]BastionHostIPConfigurationResponse)[vs[1].(int)]
	}).(BastionHostIPConfigurationResponseOutput)
}

// Bastion Shareable Link.
type BastionShareableLink struct {
	// Reference of the virtual machine resource.
	Vm VM `pulumi:"vm"`
}

// BastionShareableLinkInput is an input type that accepts BastionShareableLinkArgs and BastionShareableLinkOutput values.
// You can construct a concrete instance of `BastionShareableLinkInput` via:
//
//	BastionShareableLinkArgs{...}
type BastionShareableLinkInput interface {
	pulumi.Input

	ToBastionShareableLinkOutput() BastionShareableLinkOutput
	ToBastionShareableLinkOutputWithContext(context.Context) BastionShareableLinkOutput
}

// Bastion Shareable Link.
type BastionShareableLinkArgs struct {
	// Reference of the virtual machine resource.
	Vm VMInput `pulumi:"vm"`
}

func (BastionShareableLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionShareableLink)(nil)).Elem()
}

func (i BastionShareableLinkArgs) ToBastionShareableLinkOutput() BastionShareableLinkOutput {
	return i.ToBastionShareableLinkOutputWithContext(context.Background())
}

func (i BastionShareableLinkArgs) ToBastionShareableLinkOutputWithContext(ctx context.Context) BastionShareableLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionShareableLinkOutput)
}

// BastionShareableLinkArrayInput is an input type that accepts BastionShareableLinkArray and BastionShareableLinkArrayOutput values.
// You can construct a concrete instance of `BastionShareableLinkArrayInput` via:
//
//	BastionShareableLinkArray{ BastionShareableLinkArgs{...} }
type BastionShareableLinkArrayInput interface {
	pulumi.Input

	ToBastionShareableLinkArrayOutput() BastionShareableLinkArrayOutput
	ToBastionShareableLinkArrayOutputWithContext(context.Context) BastionShareableLinkArrayOutput
}

type BastionShareableLinkArray []BastionShareableLinkInput

func (BastionShareableLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionShareableLink)(nil)).Elem()
}

func (i BastionShareableLinkArray) ToBastionShareableLinkArrayOutput() BastionShareableLinkArrayOutput {
	return i.ToBastionShareableLinkArrayOutputWithContext(context.Background())
}

func (i BastionShareableLinkArray) ToBastionShareableLinkArrayOutputWithContext(ctx context.Context) BastionShareableLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionShareableLinkArrayOutput)
}

// Bastion Shareable Link.
type BastionShareableLinkOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionShareableLink)(nil)).Elem()
}

func (o BastionShareableLinkOutput) ToBastionShareableLinkOutput() BastionShareableLinkOutput {
	return o
}

func (o BastionShareableLinkOutput) ToBastionShareableLinkOutputWithContext(ctx context.Context) BastionShareableLinkOutput {
	return o
}

// Reference of the virtual machine resource.
func (o BastionShareableLinkOutput) Vm() VMOutput {
	return o.ApplyT(func(v BastionShareableLink) VM { return v.Vm }).(VMOutput)
}

type BastionShareableLinkArrayOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionShareableLink)(nil)).Elem()
}

func (o BastionShareableLinkArrayOutput) ToBastionShareableLinkArrayOutput() BastionShareableLinkArrayOutput {
	return o
}

func (o BastionShareableLinkArrayOutput) ToBastionShareableLinkArrayOutputWithContext(ctx context.Context) BastionShareableLinkArrayOutput {
	return o
}

func (o BastionShareableLinkArrayOutput) Index(i pulumi.IntInput) BastionShareableLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionShareableLink {
		return vs[0].([]BastionShareableLink)[vs[1].(int)]
	}).(BastionShareableLinkOutput)
}

// Bastion Shareable Link.
type BastionShareableLinkResponse struct {
	// The unique Bastion Shareable Link to the virtual machine.
	Bsl string `pulumi:"bsl"`
	// The time when the link was created.
	CreatedAt string `pulumi:"createdAt"`
	// Optional field indicating the warning or error message related to the vm in case of partial failure.
	Message string `pulumi:"message"`
	// Reference of the virtual machine resource.
	Vm VMResponse `pulumi:"vm"`
}

// Bastion Shareable Link.
type BastionShareableLinkResponseOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionShareableLinkResponse)(nil)).Elem()
}

func (o BastionShareableLinkResponseOutput) ToBastionShareableLinkResponseOutput() BastionShareableLinkResponseOutput {
	return o
}

func (o BastionShareableLinkResponseOutput) ToBastionShareableLinkResponseOutputWithContext(ctx context.Context) BastionShareableLinkResponseOutput {
	return o
}

// The unique Bastion Shareable Link to the virtual machine.
func (o BastionShareableLinkResponseOutput) Bsl() pulumi.StringOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) string { return v.Bsl }).(pulumi.StringOutput)
}

// The time when the link was created.
func (o BastionShareableLinkResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Optional field indicating the warning or error message related to the vm in case of partial failure.
func (o BastionShareableLinkResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Reference of the virtual machine resource.
func (o BastionShareableLinkResponseOutput) Vm() VMResponseOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) VMResponse { return v.Vm }).(VMResponseOutput)
}

type BastionShareableLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionShareableLinkResponse)(nil)).Elem()
}

func (o BastionShareableLinkResponseArrayOutput) ToBastionShareableLinkResponseArrayOutput() BastionShareableLinkResponseArrayOutput {
	return o
}

func (o BastionShareableLinkResponseArrayOutput) ToBastionShareableLinkResponseArrayOutputWithContext(ctx context.Context) BastionShareableLinkResponseArrayOutput {
	return o
}

func (o BastionShareableLinkResponseArrayOutput) Index(i pulumi.IntInput) BastionShareableLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionShareableLinkResponse {
		return vs[0].([]BastionShareableLinkResponse)[vs[1].(int)]
	}).(BastionShareableLinkResponseOutput)
}

// BGP peer status details.
type BgpPeerStatusResponse struct {
	// The autonomous system number of the remote BGP peer.
	Asn float64 `pulumi:"asn"`
	// For how long the peering has been up.
	ConnectedDuration string `pulumi:"connectedDuration"`
	// The virtual network gateway's local address.
	LocalAddress string `pulumi:"localAddress"`
	// The number of BGP messages received.
	MessagesReceived float64 `pulumi:"messagesReceived"`
	// The number of BGP messages sent.
	MessagesSent float64 `pulumi:"messagesSent"`
	// The remote BGP peer.
	Neighbor string `pulumi:"neighbor"`
	// The number of routes learned from this peer.
	RoutesReceived float64 `pulumi:"routesReceived"`
	// The BGP peer state.
	State string `pulumi:"state"`
}

// BGP peer status details.
type BgpPeerStatusResponseOutput struct{ *pulumi.OutputState }

func (BgpPeerStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeerStatusResponse)(nil)).Elem()
}

func (o BgpPeerStatusResponseOutput) ToBgpPeerStatusResponseOutput() BgpPeerStatusResponseOutput {
	return o
}

func (o BgpPeerStatusResponseOutput) ToBgpPeerStatusResponseOutputWithContext(ctx context.Context) BgpPeerStatusResponseOutput {
	return o
}

// The autonomous system number of the remote BGP peer.
func (o BgpPeerStatusResponseOutput) Asn() pulumi.Float64Output {
	return o.ApplyT(func(v BgpPeerStatusResponse) float64 { return v.Asn }).(pulumi.Float64Output)
}

// For how long the peering has been up.
func (o BgpPeerStatusResponseOutput) ConnectedDuration() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.ConnectedDuration }).(pulumi.StringOutput)
}

// The virtual network gateway's local address.
func (o BgpPeerStatusResponseOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.LocalAddress }).(pulumi.StringOutput)
}

// The number of BGP messages received.
func (o BgpPeerStatusResponseOutput) MessagesReceived() pulumi.Float64Output {
	return o.ApplyT(func(v BgpPeerStatusResponse) float64 { return v.MessagesReceived }).(pulumi.Float64Output)
}

// The number of BGP messages sent.
func (o BgpPeerStatusResponseOutput) MessagesSent() pulumi.Float64Output {
	return o.ApplyT(func(v BgpPeerStatusResponse) float64 { return v.MessagesSent }).(pulumi.Float64Output)
}

// The remote BGP peer.
func (o BgpPeerStatusResponseOutput) Neighbor() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.Neighbor }).(pulumi.StringOutput)
}

// The number of routes learned from this peer.
func (o BgpPeerStatusResponseOutput) RoutesReceived() pulumi.Float64Output {
	return o.ApplyT(func(v BgpPeerStatusResponse) float64 { return v.RoutesReceived }).(pulumi.Float64Output)
}

// The BGP peer state.
func (o BgpPeerStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

type BgpPeerStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeerStatusResponse)(nil)).Elem()
}

func (o BgpPeerStatusResponseArrayOutput) ToBgpPeerStatusResponseArrayOutput() BgpPeerStatusResponseArrayOutput {
	return o
}

func (o BgpPeerStatusResponseArrayOutput) ToBgpPeerStatusResponseArrayOutputWithContext(ctx context.Context) BgpPeerStatusResponseArrayOutput {
	return o
}

func (o BgpPeerStatusResponseArrayOutput) Index(i pulumi.IntInput) BgpPeerStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpPeerStatusResponse {
		return vs[0].([]BgpPeerStatusResponse)[vs[1].(int)]
	}).(BgpPeerStatusResponseOutput)
}

// BGP settings details.
type BgpSettings struct {
	// The BGP speaker's ASN.
	Asn *float64 `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// BGP peering address with IP configuration ID for virtual network gateway.
	BgpPeeringAddresses []IPConfigurationBgpPeeringAddress `pulumi:"bgpPeeringAddresses"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsInput is an input type that accepts BgpSettingsArgs and BgpSettingsOutput values.
// You can construct a concrete instance of `BgpSettingsInput` via:
//
//	BgpSettingsArgs{...}
type BgpSettingsInput interface {
	pulumi.Input

	ToBgpSettingsOutput() BgpSettingsOutput
	ToBgpSettingsOutputWithContext(context.Context) BgpSettingsOutput
}

// BGP settings details.
type BgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.Float64PtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// BGP peering address with IP configuration ID for virtual network gateway.
	BgpPeeringAddresses IPConfigurationBgpPeeringAddressArrayInput `pulumi:"bgpPeeringAddresses"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (i BgpSettingsArgs) ToBgpSettingsOutput() BgpSettingsOutput {
	return i.ToBgpSettingsOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput)
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput).ToBgpSettingsPtrOutputWithContext(ctx)
}

// BgpSettingsPtrInput is an input type that accepts BgpSettingsArgs, BgpSettingsPtr and BgpSettingsPtrOutput values.
// You can construct a concrete instance of `BgpSettingsPtrInput` via:
//
//	        BgpSettingsArgs{...}
//
//	or:
//
//	        nil
type BgpSettingsPtrInput interface {
	pulumi.Input

	ToBgpSettingsPtrOutput() BgpSettingsPtrOutput
	ToBgpSettingsPtrOutputWithContext(context.Context) BgpSettingsPtrOutput
}

type bgpSettingsPtrType BgpSettingsArgs

func BgpSettingsPtr(v *BgpSettingsArgs) BgpSettingsPtrInput {
	return (*bgpSettingsPtrType)(v)
}

func (*bgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsPtrOutput)
}

// BGP settings details.
type BgpSettingsOutput struct{ *pulumi.OutputState }

func (BgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (o BgpSettingsOutput) ToBgpSettingsOutput() BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BgpSettings) *BgpSettings {
		return &v
	}).(BgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BgpSettings) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressArrayOutput {
	return o.ApplyT(func(v BgpSettings) []IPConfigurationBgpPeeringAddress { return v.BgpPeeringAddresses }).(IPConfigurationBgpPeeringAddressArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) Elem() BgpSettingsOutput {
	return o.ApplyT(func(v *BgpSettings) BgpSettings {
		if v != nil {
			return *v
		}
		var ret BgpSettings
		return ret
	}).(BgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsPtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BgpSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsPtrOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressArrayOutput {
	return o.ApplyT(func(v *BgpSettings) []IPConfigurationBgpPeeringAddress {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddresses
	}).(IPConfigurationBgpPeeringAddressArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// BGP settings details.
type BgpSettingsResponse struct {
	// The BGP speaker's ASN.
	Asn *float64 `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// BGP peering address with IP configuration ID for virtual network gateway.
	BgpPeeringAddresses []IPConfigurationBgpPeeringAddressResponse `pulumi:"bgpPeeringAddresses"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BGP settings details.
type BgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return o
}

// The BGP speaker's ASN.
func (o BgpSettingsResponseOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsResponseOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o.ApplyT(func(v BgpSettingsResponse) []IPConfigurationBgpPeeringAddressResponse { return v.BgpPeeringAddresses }).(IPConfigurationBgpPeeringAddressResponseArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponseOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) Elem() BgpSettingsResponseOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) BgpSettingsResponse {
		if v != nil {
			return *v
		}
		var ret BgpSettingsResponse
		return ret
	}).(BgpSettingsResponseOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsResponsePtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsResponsePtrOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) []IPConfigurationBgpPeeringAddressResponse {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddresses
	}).(IPConfigurationBgpPeeringAddressResponseArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponsePtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPolicies struct {
	// Flag to control breakout of o365 allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control breakout of o365 default category.
	Default *bool `pulumi:"default"`
	// Flag to control breakout of o365 optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// BreakOutCategoryPoliciesInput is an input type that accepts BreakOutCategoryPoliciesArgs and BreakOutCategoryPoliciesOutput values.
// You can construct a concrete instance of `BreakOutCategoryPoliciesInput` via:
//
//	BreakOutCategoryPoliciesArgs{...}
type BreakOutCategoryPoliciesInput interface {
	pulumi.Input

	ToBreakOutCategoryPoliciesOutput() BreakOutCategoryPoliciesOutput
	ToBreakOutCategoryPoliciesOutputWithContext(context.Context) BreakOutCategoryPoliciesOutput
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesArgs struct {
	// Flag to control breakout of o365 allow category.
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	// Flag to control breakout of o365 default category.
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// Flag to control breakout of o365 optimize category.
	Optimize pulumi.BoolPtrInput `pulumi:"optimize"`
}

func (BreakOutCategoryPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BreakOutCategoryPolicies)(nil)).Elem()
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesOutput() BreakOutCategoryPoliciesOutput {
	return i.ToBreakOutCategoryPoliciesOutputWithContext(context.Background())
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesOutput)
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return i.ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesOutput).ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx)
}

// BreakOutCategoryPoliciesPtrInput is an input type that accepts BreakOutCategoryPoliciesArgs, BreakOutCategoryPoliciesPtr and BreakOutCategoryPoliciesPtrOutput values.
// You can construct a concrete instance of `BreakOutCategoryPoliciesPtrInput` via:
//
//	        BreakOutCategoryPoliciesArgs{...}
//
//	or:
//
//	        nil
type BreakOutCategoryPoliciesPtrInput interface {
	pulumi.Input

	ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput
	ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Context) BreakOutCategoryPoliciesPtrOutput
}

type breakOutCategoryPoliciesPtrType BreakOutCategoryPoliciesArgs

func BreakOutCategoryPoliciesPtr(v *BreakOutCategoryPoliciesArgs) BreakOutCategoryPoliciesPtrInput {
	return (*breakOutCategoryPoliciesPtrType)(v)
}

func (*breakOutCategoryPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BreakOutCategoryPolicies)(nil)).Elem()
}

func (i *breakOutCategoryPoliciesPtrType) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return i.ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i *breakOutCategoryPoliciesPtrType) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BreakOutCategoryPolicies)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesOutput() BreakOutCategoryPoliciesOutput {
	return o
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesOutput {
	return o
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return o.ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BreakOutCategoryPolicies) *BreakOutCategoryPolicies {
		return &v
	}).(BreakOutCategoryPoliciesPtrOutput)
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPolicies) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPolicies) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPolicies) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type BreakOutCategoryPoliciesPtrOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BreakOutCategoryPolicies)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesPtrOutput) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesPtrOutput) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesPtrOutput) Elem() BreakOutCategoryPoliciesOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) BreakOutCategoryPolicies {
		if v != nil {
			return *v
		}
		var ret BreakOutCategoryPolicies
		return ret
	}).(BreakOutCategoryPoliciesOutput)
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesPtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesPtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesResponse struct {
	// Flag to control breakout of o365 allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control breakout of o365 default category.
	Default *bool `pulumi:"default"`
	// Flag to control breakout of o365 optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesResponseOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesResponseOutput) ToBreakOutCategoryPoliciesResponseOutput() BreakOutCategoryPoliciesResponseOutput {
	return o
}

func (o BreakOutCategoryPoliciesResponseOutput) ToBreakOutCategoryPoliciesResponseOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponseOutput {
	return o
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesResponseOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPoliciesResponse) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesResponseOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPoliciesResponse) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesResponseOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPoliciesResponse) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type BreakOutCategoryPoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesResponsePtrOutput) ToBreakOutCategoryPoliciesResponsePtrOutput() BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesResponsePtrOutput) ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesResponsePtrOutput) Elem() BreakOutCategoryPoliciesResponseOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) BreakOutCategoryPoliciesResponse {
		if v != nil {
			return *v
		}
		var ret BreakOutCategoryPoliciesResponse
		return ret
	}).(BreakOutCategoryPoliciesResponseOutput)
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesResponsePtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesResponsePtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesResponsePtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// A CAA record.
type CaaRecord struct {
	// The flags for this CAA record as an integer between 0 and 255.
	Flags *int `pulumi:"flags"`
	// The tag for this CAA record.
	Tag *string `pulumi:"tag"`
	// The value for this CAA record.
	Value *string `pulumi:"value"`
}

// CaaRecordInput is an input type that accepts CaaRecordArgs and CaaRecordOutput values.
// You can construct a concrete instance of `CaaRecordInput` via:
//
//	CaaRecordArgs{...}
type CaaRecordInput interface {
	pulumi.Input

	ToCaaRecordOutput() CaaRecordOutput
	ToCaaRecordOutputWithContext(context.Context) CaaRecordOutput
}

// A CAA record.
type CaaRecordArgs struct {
	// The flags for this CAA record as an integer between 0 and 255.
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// The tag for this CAA record.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The value for this CAA record.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CaaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaaRecord)(nil)).Elem()
}

func (i CaaRecordArgs) ToCaaRecordOutput() CaaRecordOutput {
	return i.ToCaaRecordOutputWithContext(context.Background())
}

func (i CaaRecordArgs) ToCaaRecordOutputWithContext(ctx context.Context) CaaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaaRecordOutput)
}

// CaaRecordArrayInput is an input type that accepts CaaRecordArray and CaaRecordArrayOutput values.
// You can construct a concrete instance of `CaaRecordArrayInput` via:
//
//	CaaRecordArray{ CaaRecordArgs{...} }
type CaaRecordArrayInput interface {
	pulumi.Input

	ToCaaRecordArrayOutput() CaaRecordArrayOutput
	ToCaaRecordArrayOutputWithContext(context.Context) CaaRecordArrayOutput
}

type CaaRecordArray []CaaRecordInput

func (CaaRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaaRecord)(nil)).Elem()
}

func (i CaaRecordArray) ToCaaRecordArrayOutput() CaaRecordArrayOutput {
	return i.ToCaaRecordArrayOutputWithContext(context.Background())
}

func (i CaaRecordArray) ToCaaRecordArrayOutputWithContext(ctx context.Context) CaaRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaaRecordArrayOutput)
}

// A CAA record.
type CaaRecordOutput struct{ *pulumi.OutputState }

func (CaaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaaRecord)(nil)).Elem()
}

func (o CaaRecordOutput) ToCaaRecordOutput() CaaRecordOutput {
	return o
}

func (o CaaRecordOutput) ToCaaRecordOutputWithContext(ctx context.Context) CaaRecordOutput {
	return o
}

// The flags for this CAA record as an integer between 0 and 255.
func (o CaaRecordOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaaRecord) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// The tag for this CAA record.
func (o CaaRecordOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaaRecord) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The value for this CAA record.
func (o CaaRecordOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaaRecord) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CaaRecordArrayOutput struct{ *pulumi.OutputState }

func (CaaRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaaRecord)(nil)).Elem()
}

func (o CaaRecordArrayOutput) ToCaaRecordArrayOutput() CaaRecordArrayOutput {
	return o
}

func (o CaaRecordArrayOutput) ToCaaRecordArrayOutputWithContext(ctx context.Context) CaaRecordArrayOutput {
	return o
}

func (o CaaRecordArrayOutput) Index(i pulumi.IntInput) CaaRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaaRecord {
		return vs[0].([]CaaRecord)[vs[1].(int)]
	}).(CaaRecordOutput)
}

// A CAA record.
type CaaRecordResponse struct {
	// The flags for this CAA record as an integer between 0 and 255.
	Flags *int `pulumi:"flags"`
	// The tag for this CAA record.
	Tag *string `pulumi:"tag"`
	// The value for this CAA record.
	Value *string `pulumi:"value"`
}

// A CAA record.
type CaaRecordResponseOutput struct{ *pulumi.OutputState }

func (CaaRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaaRecordResponse)(nil)).Elem()
}

func (o CaaRecordResponseOutput) ToCaaRecordResponseOutput() CaaRecordResponseOutput {
	return o
}

func (o CaaRecordResponseOutput) ToCaaRecordResponseOutputWithContext(ctx context.Context) CaaRecordResponseOutput {
	return o
}

// The flags for this CAA record as an integer between 0 and 255.
func (o CaaRecordResponseOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaaRecordResponse) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// The tag for this CAA record.
func (o CaaRecordResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaaRecordResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The value for this CAA record.
func (o CaaRecordResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaaRecordResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CaaRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (CaaRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaaRecordResponse)(nil)).Elem()
}

func (o CaaRecordResponseArrayOutput) ToCaaRecordResponseArrayOutput() CaaRecordResponseArrayOutput {
	return o
}

func (o CaaRecordResponseArrayOutput) ToCaaRecordResponseArrayOutputWithContext(ctx context.Context) CaaRecordResponseArrayOutput {
	return o
}

func (o CaaRecordResponseArrayOutput) Index(i pulumi.IntInput) CaaRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaaRecordResponse {
		return vs[0].([]CaaRecordResponse)[vs[1].(int)]
	}).(CaaRecordResponseOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfiguration struct {
	// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
	CacheDuration *string `pulumi:"cacheDuration"`
	// Whether to use dynamic compression for cached content
	DynamicCompression *string `pulumi:"dynamicCompression"`
	// Treatment of URL query terms when forming the cache key.
	QueryParameterStripDirective *string `pulumi:"queryParameterStripDirective"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
}

// CacheConfigurationInput is an input type that accepts CacheConfigurationArgs and CacheConfigurationOutput values.
// You can construct a concrete instance of `CacheConfigurationInput` via:
//
//	CacheConfigurationArgs{...}
type CacheConfigurationInput interface {
	pulumi.Input

	ToCacheConfigurationOutput() CacheConfigurationOutput
	ToCacheConfigurationOutputWithContext(context.Context) CacheConfigurationOutput
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationArgs struct {
	// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// Whether to use dynamic compression for cached content
	DynamicCompression pulumi.StringPtrInput `pulumi:"dynamicCompression"`
	// Treatment of URL query terms when forming the cache key.
	QueryParameterStripDirective pulumi.StringPtrInput `pulumi:"queryParameterStripDirective"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
}

func (CacheConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfiguration)(nil)).Elem()
}

func (i CacheConfigurationArgs) ToCacheConfigurationOutput() CacheConfigurationOutput {
	return i.ToCacheConfigurationOutputWithContext(context.Background())
}

func (i CacheConfigurationArgs) ToCacheConfigurationOutputWithContext(ctx context.Context) CacheConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationOutput)
}

func (i CacheConfigurationArgs) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return i.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i CacheConfigurationArgs) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationOutput).ToCacheConfigurationPtrOutputWithContext(ctx)
}

// CacheConfigurationPtrInput is an input type that accepts CacheConfigurationArgs, CacheConfigurationPtr and CacheConfigurationPtrOutput values.
// You can construct a concrete instance of `CacheConfigurationPtrInput` via:
//
//	        CacheConfigurationArgs{...}
//
//	or:
//
//	        nil
type CacheConfigurationPtrInput interface {
	pulumi.Input

	ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput
	ToCacheConfigurationPtrOutputWithContext(context.Context) CacheConfigurationPtrOutput
}

type cacheConfigurationPtrType CacheConfigurationArgs

func CacheConfigurationPtr(v *CacheConfigurationArgs) CacheConfigurationPtrInput {
	return (*cacheConfigurationPtrType)(v)
}

func (*cacheConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfiguration)(nil)).Elem()
}

func (i *cacheConfigurationPtrType) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return i.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i *cacheConfigurationPtrType) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationOutput struct{ *pulumi.OutputState }

func (CacheConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfiguration)(nil)).Elem()
}

func (o CacheConfigurationOutput) ToCacheConfigurationOutput() CacheConfigurationOutput {
	return o
}

func (o CacheConfigurationOutput) ToCacheConfigurationOutputWithContext(ctx context.Context) CacheConfigurationOutput {
	return o
}

func (o CacheConfigurationOutput) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return o.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (o CacheConfigurationOutput) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CacheConfiguration) *CacheConfiguration {
		return &v
	}).(CacheConfigurationPtrOutput)
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.DynamicCompression }).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.QueryParameterStripDirective }).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

type CacheConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CacheConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfiguration)(nil)).Elem()
}

func (o CacheConfigurationPtrOutput) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return o
}

func (o CacheConfigurationPtrOutput) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return o
}

func (o CacheConfigurationPtrOutput) Elem() CacheConfigurationOutput {
	return o.ApplyT(func(v *CacheConfiguration) CacheConfiguration {
		if v != nil {
			return *v
		}
		var ret CacheConfiguration
		return ret
	}).(CacheConfigurationOutput)
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationPtrOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CacheDuration
	}).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationPtrOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DynamicCompression
	}).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationPtrOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameterStripDirective
	}).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationPtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationResponse struct {
	// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
	CacheDuration *string `pulumi:"cacheDuration"`
	// Whether to use dynamic compression for cached content
	DynamicCompression *string `pulumi:"dynamicCompression"`
	// Treatment of URL query terms when forming the cache key.
	QueryParameterStripDirective *string `pulumi:"queryParameterStripDirective"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CacheConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfigurationResponse)(nil)).Elem()
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponseOutput() CacheConfigurationResponseOutput {
	return o
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponseOutputWithContext(ctx context.Context) CacheConfigurationResponseOutput {
	return o
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationResponseOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationResponseOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.DynamicCompression }).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationResponseOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.QueryParameterStripDirective }).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

type CacheConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (CacheConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfigurationResponse)(nil)).Elem()
}

func (o CacheConfigurationResponsePtrOutput) ToCacheConfigurationResponsePtrOutput() CacheConfigurationResponsePtrOutput {
	return o
}

func (o CacheConfigurationResponsePtrOutput) ToCacheConfigurationResponsePtrOutputWithContext(ctx context.Context) CacheConfigurationResponsePtrOutput {
	return o
}

func (o CacheConfigurationResponsePtrOutput) Elem() CacheConfigurationResponseOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) CacheConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret CacheConfigurationResponse
		return ret
	}).(CacheConfigurationResponseOutput)
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationResponsePtrOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CacheDuration
	}).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationResponsePtrOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DynamicCompression
	}).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationResponsePtrOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameterStripDirective
	}).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationResponsePtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// A CNAME record.
type CnameRecord struct {
	// The canonical name for this CNAME record.
	Cname *string `pulumi:"cname"`
}

// CnameRecordInput is an input type that accepts CnameRecordArgs and CnameRecordOutput values.
// You can construct a concrete instance of `CnameRecordInput` via:
//
//	CnameRecordArgs{...}
type CnameRecordInput interface {
	pulumi.Input

	ToCnameRecordOutput() CnameRecordOutput
	ToCnameRecordOutputWithContext(context.Context) CnameRecordOutput
}

// A CNAME record.
type CnameRecordArgs struct {
	// The canonical name for this CNAME record.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
}

func (CnameRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecord)(nil)).Elem()
}

func (i CnameRecordArgs) ToCnameRecordOutput() CnameRecordOutput {
	return i.ToCnameRecordOutputWithContext(context.Background())
}

func (i CnameRecordArgs) ToCnameRecordOutputWithContext(ctx context.Context) CnameRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordOutput)
}

func (i CnameRecordArgs) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return i.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (i CnameRecordArgs) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordOutput).ToCnameRecordPtrOutputWithContext(ctx)
}

// CnameRecordPtrInput is an input type that accepts CnameRecordArgs, CnameRecordPtr and CnameRecordPtrOutput values.
// You can construct a concrete instance of `CnameRecordPtrInput` via:
//
//	        CnameRecordArgs{...}
//
//	or:
//
//	        nil
type CnameRecordPtrInput interface {
	pulumi.Input

	ToCnameRecordPtrOutput() CnameRecordPtrOutput
	ToCnameRecordPtrOutputWithContext(context.Context) CnameRecordPtrOutput
}

type cnameRecordPtrType CnameRecordArgs

func CnameRecordPtr(v *CnameRecordArgs) CnameRecordPtrInput {
	return (*cnameRecordPtrType)(v)
}

func (*cnameRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecord)(nil)).Elem()
}

func (i *cnameRecordPtrType) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return i.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (i *cnameRecordPtrType) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordPtrOutput)
}

// A CNAME record.
type CnameRecordOutput struct{ *pulumi.OutputState }

func (CnameRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecord)(nil)).Elem()
}

func (o CnameRecordOutput) ToCnameRecordOutput() CnameRecordOutput {
	return o
}

func (o CnameRecordOutput) ToCnameRecordOutputWithContext(ctx context.Context) CnameRecordOutput {
	return o
}

func (o CnameRecordOutput) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return o.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (o CnameRecordOutput) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CnameRecord) *CnameRecord {
		return &v
	}).(CnameRecordPtrOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CnameRecord) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

type CnameRecordPtrOutput struct{ *pulumi.OutputState }

func (CnameRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecord)(nil)).Elem()
}

func (o CnameRecordPtrOutput) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return o
}

func (o CnameRecordPtrOutput) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return o
}

func (o CnameRecordPtrOutput) Elem() CnameRecordOutput {
	return o.ApplyT(func(v *CnameRecord) CnameRecord {
		if v != nil {
			return *v
		}
		var ret CnameRecord
		return ret
	}).(CnameRecordOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CnameRecord) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// A CNAME record.
type CnameRecordResponse struct {
	// The canonical name for this CNAME record.
	Cname *string `pulumi:"cname"`
}

// A CNAME record.
type CnameRecordResponseOutput struct{ *pulumi.OutputState }

func (CnameRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecordResponse)(nil)).Elem()
}

func (o CnameRecordResponseOutput) ToCnameRecordResponseOutput() CnameRecordResponseOutput {
	return o
}

func (o CnameRecordResponseOutput) ToCnameRecordResponseOutputWithContext(ctx context.Context) CnameRecordResponseOutput {
	return o
}

// The canonical name for this CNAME record.
func (o CnameRecordResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CnameRecordResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

type CnameRecordResponsePtrOutput struct{ *pulumi.OutputState }

func (CnameRecordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecordResponse)(nil)).Elem()
}

func (o CnameRecordResponsePtrOutput) ToCnameRecordResponsePtrOutput() CnameRecordResponsePtrOutput {
	return o
}

func (o CnameRecordResponsePtrOutput) ToCnameRecordResponsePtrOutputWithContext(ctx context.Context) CnameRecordResponsePtrOutput {
	return o
}

func (o CnameRecordResponsePtrOutput) Elem() CnameRecordResponseOutput {
	return o.ApplyT(func(v *CnameRecordResponse) CnameRecordResponse {
		if v != nil {
			return *v
		}
		var ret CnameRecordResponse
		return ret
	}).(CnameRecordResponseOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordResponsePtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CnameRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// The network configuration group resource
type ConfigurationGroupResponse struct {
	// Network group conditional filter.
	ConditionalMembership *string `pulumi:"conditionalMembership"`
	// A description of the network group.
	Description *string `pulumi:"description"`
	// A friendly name for the network group.
	DisplayName *string `pulumi:"displayName"`
	// Group members of network group.
	GroupMembers []GroupMembersItemResponse `pulumi:"groupMembers"`
	// Network group ID.
	Id *string `pulumi:"id"`
	// Group member type.
	MemberType *string `pulumi:"memberType"`
	// The provisioning state of the scope assignment resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
}

// The network configuration group resource
type ConfigurationGroupResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationGroupResponse)(nil)).Elem()
}

func (o ConfigurationGroupResponseOutput) ToConfigurationGroupResponseOutput() ConfigurationGroupResponseOutput {
	return o
}

func (o ConfigurationGroupResponseOutput) ToConfigurationGroupResponseOutputWithContext(ctx context.Context) ConfigurationGroupResponseOutput {
	return o
}

// Network group conditional filter.
func (o ConfigurationGroupResponseOutput) ConditionalMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) *string { return v.ConditionalMembership }).(pulumi.StringPtrOutput)
}

// A description of the network group.
func (o ConfigurationGroupResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A friendly name for the network group.
func (o ConfigurationGroupResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Group members of network group.
func (o ConfigurationGroupResponseOutput) GroupMembers() GroupMembersItemResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) []GroupMembersItemResponse { return v.GroupMembers }).(GroupMembersItemResponseArrayOutput)
}

// Network group ID.
func (o ConfigurationGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Group member type.
func (o ConfigurationGroupResponseOutput) MemberType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) *string { return v.MemberType }).(pulumi.StringPtrOutput)
}

// The provisioning state of the scope assignment resource.
func (o ConfigurationGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier for this resource.
func (o ConfigurationGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

type ConfigurationGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationGroupResponse)(nil)).Elem()
}

func (o ConfigurationGroupResponseArrayOutput) ToConfigurationGroupResponseArrayOutput() ConfigurationGroupResponseArrayOutput {
	return o
}

func (o ConfigurationGroupResponseArrayOutput) ToConfigurationGroupResponseArrayOutputWithContext(ctx context.Context) ConfigurationGroupResponseArrayOutput {
	return o
}

func (o ConfigurationGroupResponseArrayOutput) Index(i pulumi.IntInput) ConfigurationGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationGroupResponse {
		return vs[0].([]ConfigurationGroupResponse)[vs[1].(int)]
	}).(ConfigurationGroupResponseOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestination struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionMonitorDestinationInput is an input type that accepts ConnectionMonitorDestinationArgs and ConnectionMonitorDestinationOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationInput` via:
//
//	ConnectionMonitorDestinationArgs{...}
type ConnectionMonitorDestinationInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput
	ToConnectionMonitorDestinationOutputWithContext(context.Context) ConnectionMonitorDestinationOutput
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationArgs struct {
	// Address of the connection monitor destination (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The destination port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionMonitorDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return i.ToConnectionMonitorDestinationOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput)
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput).ToConnectionMonitorDestinationPtrOutputWithContext(ctx)
}

// ConnectionMonitorDestinationPtrInput is an input type that accepts ConnectionMonitorDestinationArgs, ConnectionMonitorDestinationPtr and ConnectionMonitorDestinationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationPtrInput` via:
//
//	        ConnectionMonitorDestinationArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorDestinationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput
	ToConnectionMonitorDestinationPtrOutputWithContext(context.Context) ConnectionMonitorDestinationPtrOutput
}

type connectionMonitorDestinationPtrType ConnectionMonitorDestinationArgs

func ConnectionMonitorDestinationPtr(v *ConnectionMonitorDestinationArgs) ConnectionMonitorDestinationPtrInput {
	return (*connectionMonitorDestinationPtrType)(v)
}

func (*connectionMonitorDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorDestination) *ConnectionMonitorDestination {
		return &v
	}).(ConnectionMonitorDestinationPtrOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) Elem() ConnectionMonitorDestinationOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) ConnectionMonitorDestination {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorDestination
		return ret
	}).(ConnectionMonitorDestinationOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponse struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput {
	return o
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponseOutput {
	return o
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) Elem() ConnectionMonitorDestinationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) ConnectionMonitorDestinationResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorDestinationResponse
		return ret
	}).(ConnectionMonitorDestinationResponseOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpoint struct {
	// Address of the connection monitor endpoint (IP or domain name).
	Address *string `pulumi:"address"`
	// Test coverage for the endpoint.
	CoverageLevel *string `pulumi:"coverageLevel"`
	// Filter for sub-items within the endpoint.
	Filter *ConnectionMonitorEndpointFilter `pulumi:"filter"`
	// The name of the connection monitor endpoint.
	Name string `pulumi:"name"`
	// Resource ID of the connection monitor endpoint.
	ResourceId *string `pulumi:"resourceId"`
	// Endpoint scope.
	Scope *ConnectionMonitorEndpointScope `pulumi:"scope"`
	// The endpoint type.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointInput is an input type that accepts ConnectionMonitorEndpointArgs and ConnectionMonitorEndpointOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointInput` via:
//
//	ConnectionMonitorEndpointArgs{...}
type ConnectionMonitorEndpointInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointOutput() ConnectionMonitorEndpointOutput
	ToConnectionMonitorEndpointOutputWithContext(context.Context) ConnectionMonitorEndpointOutput
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointArgs struct {
	// Address of the connection monitor endpoint (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Test coverage for the endpoint.
	CoverageLevel pulumi.StringPtrInput `pulumi:"coverageLevel"`
	// Filter for sub-items within the endpoint.
	Filter ConnectionMonitorEndpointFilterPtrInput `pulumi:"filter"`
	// The name of the connection monitor endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource ID of the connection monitor endpoint.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Endpoint scope.
	Scope ConnectionMonitorEndpointScopePtrInput `pulumi:"scope"`
	// The endpoint type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpoint)(nil)).Elem()
}

func (i ConnectionMonitorEndpointArgs) ToConnectionMonitorEndpointOutput() ConnectionMonitorEndpointOutput {
	return i.ToConnectionMonitorEndpointOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointArgs) ToConnectionMonitorEndpointOutputWithContext(ctx context.Context) ConnectionMonitorEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointOutput)
}

// ConnectionMonitorEndpointArrayInput is an input type that accepts ConnectionMonitorEndpointArray and ConnectionMonitorEndpointArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointArrayInput` via:
//
//	ConnectionMonitorEndpointArray{ ConnectionMonitorEndpointArgs{...} }
type ConnectionMonitorEndpointArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointArrayOutput() ConnectionMonitorEndpointArrayOutput
	ToConnectionMonitorEndpointArrayOutputWithContext(context.Context) ConnectionMonitorEndpointArrayOutput
}

type ConnectionMonitorEndpointArray []ConnectionMonitorEndpointInput

func (ConnectionMonitorEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpoint)(nil)).Elem()
}

func (i ConnectionMonitorEndpointArray) ToConnectionMonitorEndpointArrayOutput() ConnectionMonitorEndpointArrayOutput {
	return i.ToConnectionMonitorEndpointArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointArray) ToConnectionMonitorEndpointArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointArrayOutput)
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpoint)(nil)).Elem()
}

func (o ConnectionMonitorEndpointOutput) ToConnectionMonitorEndpointOutput() ConnectionMonitorEndpointOutput {
	return o
}

func (o ConnectionMonitorEndpointOutput) ToConnectionMonitorEndpointOutputWithContext(ctx context.Context) ConnectionMonitorEndpointOutput {
	return o
}

// Address of the connection monitor endpoint (IP or domain name).
func (o ConnectionMonitorEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Test coverage for the endpoint.
func (o ConnectionMonitorEndpointOutput) CoverageLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.CoverageLevel }).(pulumi.StringPtrOutput)
}

// Filter for sub-items within the endpoint.
func (o ConnectionMonitorEndpointOutput) Filter() ConnectionMonitorEndpointFilterPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *ConnectionMonitorEndpointFilter { return v.Filter }).(ConnectionMonitorEndpointFilterPtrOutput)
}

// The name of the connection monitor endpoint.
func (o ConnectionMonitorEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

// Resource ID of the connection monitor endpoint.
func (o ConnectionMonitorEndpointOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Endpoint scope.
func (o ConnectionMonitorEndpointOutput) Scope() ConnectionMonitorEndpointScopePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *ConnectionMonitorEndpointScope { return v.Scope }).(ConnectionMonitorEndpointScopePtrOutput)
}

// The endpoint type.
func (o ConnectionMonitorEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpoint)(nil)).Elem()
}

func (o ConnectionMonitorEndpointArrayOutput) ToConnectionMonitorEndpointArrayOutput() ConnectionMonitorEndpointArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointArrayOutput) ToConnectionMonitorEndpointArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpoint {
		return vs[0].([]ConnectionMonitorEndpoint)[vs[1].(int)]
	}).(ConnectionMonitorEndpointOutput)
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilter struct {
	// List of items in the filter.
	Items []ConnectionMonitorEndpointFilterItem `pulumi:"items"`
	// The behavior of the endpoint filter. Currently only 'Include' is supported.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointFilterInput is an input type that accepts ConnectionMonitorEndpointFilterArgs and ConnectionMonitorEndpointFilterOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterInput` via:
//
//	ConnectionMonitorEndpointFilterArgs{...}
type ConnectionMonitorEndpointFilterInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterOutput() ConnectionMonitorEndpointFilterOutput
	ToConnectionMonitorEndpointFilterOutputWithContext(context.Context) ConnectionMonitorEndpointFilterOutput
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterArgs struct {
	// List of items in the filter.
	Items ConnectionMonitorEndpointFilterItemArrayInput `pulumi:"items"`
	// The behavior of the endpoint filter. Currently only 'Include' is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterOutput() ConnectionMonitorEndpointFilterOutput {
	return i.ToConnectionMonitorEndpointFilterOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterOutput)
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return i.ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterOutput).ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx)
}

// ConnectionMonitorEndpointFilterPtrInput is an input type that accepts ConnectionMonitorEndpointFilterArgs, ConnectionMonitorEndpointFilterPtr and ConnectionMonitorEndpointFilterPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterPtrInput` via:
//
//	        ConnectionMonitorEndpointFilterArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorEndpointFilterPtrInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput
	ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Context) ConnectionMonitorEndpointFilterPtrOutput
}

type connectionMonitorEndpointFilterPtrType ConnectionMonitorEndpointFilterArgs

func ConnectionMonitorEndpointFilterPtr(v *ConnectionMonitorEndpointFilterArgs) ConnectionMonitorEndpointFilterPtrInput {
	return (*connectionMonitorEndpointFilterPtrType)(v)
}

func (*connectionMonitorEndpointFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (i *connectionMonitorEndpointFilterPtrType) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return i.ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorEndpointFilterPtrType) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterPtrOutput)
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterOutput() ConnectionMonitorEndpointFilterOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return o.ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorEndpointFilter) *ConnectionMonitorEndpointFilter {
		return &v
	}).(ConnectionMonitorEndpointFilterPtrOutput)
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterOutput) Items() ConnectionMonitorEndpointFilterItemArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilter) []ConnectionMonitorEndpointFilterItem { return v.Items }).(ConnectionMonitorEndpointFilterItemArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterPtrOutput) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterPtrOutput) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterPtrOutput) Elem() ConnectionMonitorEndpointFilterOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilter) ConnectionMonitorEndpointFilter {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorEndpointFilter
		return ret
	}).(ConnectionMonitorEndpointFilterOutput)
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterPtrOutput) Items() ConnectionMonitorEndpointFilterItemArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilter) []ConnectionMonitorEndpointFilterItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ConnectionMonitorEndpointFilterItemArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItem struct {
	// The address of the filter item.
	Address *string `pulumi:"address"`
	// The type of item included in the filter. Currently only 'AgentAddress' is supported.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointFilterItemInput is an input type that accepts ConnectionMonitorEndpointFilterItemArgs and ConnectionMonitorEndpointFilterItemOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterItemInput` via:
//
//	ConnectionMonitorEndpointFilterItemArgs{...}
type ConnectionMonitorEndpointFilterItemInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterItemOutput() ConnectionMonitorEndpointFilterItemOutput
	ToConnectionMonitorEndpointFilterItemOutputWithContext(context.Context) ConnectionMonitorEndpointFilterItemOutput
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemArgs struct {
	// The address of the filter item.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The type of item included in the filter. Currently only 'AgentAddress' is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointFilterItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterItemArgs) ToConnectionMonitorEndpointFilterItemOutput() ConnectionMonitorEndpointFilterItemOutput {
	return i.ToConnectionMonitorEndpointFilterItemOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterItemArgs) ToConnectionMonitorEndpointFilterItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterItemOutput)
}

// ConnectionMonitorEndpointFilterItemArrayInput is an input type that accepts ConnectionMonitorEndpointFilterItemArray and ConnectionMonitorEndpointFilterItemArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterItemArrayInput` via:
//
//	ConnectionMonitorEndpointFilterItemArray{ ConnectionMonitorEndpointFilterItemArgs{...} }
type ConnectionMonitorEndpointFilterItemArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterItemArrayOutput() ConnectionMonitorEndpointFilterItemArrayOutput
	ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(context.Context) ConnectionMonitorEndpointFilterItemArrayOutput
}

type ConnectionMonitorEndpointFilterItemArray []ConnectionMonitorEndpointFilterItemInput

func (ConnectionMonitorEndpointFilterItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterItemArray) ToConnectionMonitorEndpointFilterItemArrayOutput() ConnectionMonitorEndpointFilterItemArrayOutput {
	return i.ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterItemArray) ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterItemArrayOutput)
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemOutput) ToConnectionMonitorEndpointFilterItemOutput() ConnectionMonitorEndpointFilterItemOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemOutput) ToConnectionMonitorEndpointFilterItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemOutput {
	return o
}

// The address of the filter item.
func (o ConnectionMonitorEndpointFilterItemOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItem) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The type of item included in the filter. Currently only 'AgentAddress' is supported.
func (o ConnectionMonitorEndpointFilterItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterItemArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemArrayOutput) ToConnectionMonitorEndpointFilterItemArrayOutput() ConnectionMonitorEndpointFilterItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemArrayOutput) ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointFilterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointFilterItem {
		return vs[0].([]ConnectionMonitorEndpointFilterItem)[vs[1].(int)]
	}).(ConnectionMonitorEndpointFilterItemOutput)
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemResponse struct {
	// The address of the filter item.
	Address *string `pulumi:"address"`
	// The type of item included in the filter. Currently only 'AgentAddress' is supported.
	Type *string `pulumi:"type"`
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemResponseOutput) ToConnectionMonitorEndpointFilterItemResponseOutput() ConnectionMonitorEndpointFilterItemResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemResponseOutput) ToConnectionMonitorEndpointFilterItemResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemResponseOutput {
	return o
}

// The address of the filter item.
func (o ConnectionMonitorEndpointFilterItemResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItemResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The type of item included in the filter. Currently only 'AgentAddress' is supported.
func (o ConnectionMonitorEndpointFilterItemResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItemResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointFilterItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemResponseArrayOutput) ToConnectionMonitorEndpointFilterItemResponseArrayOutput() ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemResponseArrayOutput) ToConnectionMonitorEndpointFilterItemResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointFilterItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointFilterItemResponse {
		return vs[0].([]ConnectionMonitorEndpointFilterItemResponse)[vs[1].(int)]
	}).(ConnectionMonitorEndpointFilterItemResponseOutput)
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterResponse struct {
	// List of items in the filter.
	Items []ConnectionMonitorEndpointFilterItemResponse `pulumi:"items"`
	// The behavior of the endpoint filter. Currently only 'Include' is supported.
	Type *string `pulumi:"type"`
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterResponseOutput) ToConnectionMonitorEndpointFilterResponseOutput() ConnectionMonitorEndpointFilterResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterResponseOutput) ToConnectionMonitorEndpointFilterResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponseOutput {
	return o
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterResponseOutput) Items() ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterResponse) []ConnectionMonitorEndpointFilterItemResponse {
		return v.Items
	}).(ConnectionMonitorEndpointFilterItemResponseArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointFilterResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterResponsePtrOutput) ToConnectionMonitorEndpointFilterResponsePtrOutput() ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterResponsePtrOutput) ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterResponsePtrOutput) Elem() ConnectionMonitorEndpointFilterResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilterResponse) ConnectionMonitorEndpointFilterResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorEndpointFilterResponse
		return ret
	}).(ConnectionMonitorEndpointFilterResponseOutput)
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterResponsePtrOutput) Items() ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilterResponse) []ConnectionMonitorEndpointFilterItemResponse {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ConnectionMonitorEndpointFilterItemResponseArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointResponse struct {
	// Address of the connection monitor endpoint (IP or domain name).
	Address *string `pulumi:"address"`
	// Test coverage for the endpoint.
	CoverageLevel *string `pulumi:"coverageLevel"`
	// Filter for sub-items within the endpoint.
	Filter *ConnectionMonitorEndpointFilterResponse `pulumi:"filter"`
	// The name of the connection monitor endpoint.
	Name string `pulumi:"name"`
	// Resource ID of the connection monitor endpoint.
	ResourceId *string `pulumi:"resourceId"`
	// Endpoint scope.
	Scope *ConnectionMonitorEndpointScopeResponse `pulumi:"scope"`
	// The endpoint type.
	Type *string `pulumi:"type"`
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointResponseOutput) ToConnectionMonitorEndpointResponseOutput() ConnectionMonitorEndpointResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointResponseOutput) ToConnectionMonitorEndpointResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointResponseOutput {
	return o
}

// Address of the connection monitor endpoint (IP or domain name).
func (o ConnectionMonitorEndpointResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Test coverage for the endpoint.
func (o ConnectionMonitorEndpointResponseOutput) CoverageLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.CoverageLevel }).(pulumi.StringPtrOutput)
}

// Filter for sub-items within the endpoint.
func (o ConnectionMonitorEndpointResponseOutput) Filter() ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *ConnectionMonitorEndpointFilterResponse { return v.Filter }).(ConnectionMonitorEndpointFilterResponsePtrOutput)
}

// The name of the connection monitor endpoint.
func (o ConnectionMonitorEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource ID of the connection monitor endpoint.
func (o ConnectionMonitorEndpointResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Endpoint scope.
func (o ConnectionMonitorEndpointResponseOutput) Scope() ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *ConnectionMonitorEndpointScopeResponse { return v.Scope }).(ConnectionMonitorEndpointScopeResponsePtrOutput)
}

// The endpoint type.
func (o ConnectionMonitorEndpointResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointResponseArrayOutput) ToConnectionMonitorEndpointResponseArrayOutput() ConnectionMonitorEndpointResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointResponseArrayOutput) ToConnectionMonitorEndpointResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointResponse {
		return vs[0].([]ConnectionMonitorEndpointResponse)[vs[1].(int)]
	}).(ConnectionMonitorEndpointResponseOutput)
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScope struct {
	// List of items which needs to be excluded from the endpoint scope.
	Exclude []ConnectionMonitorEndpointScopeItem `pulumi:"exclude"`
	// List of items which needs to be included to the endpoint scope.
	Include []ConnectionMonitorEndpointScopeItem `pulumi:"include"`
}

// ConnectionMonitorEndpointScopeInput is an input type that accepts ConnectionMonitorEndpointScopeArgs and ConnectionMonitorEndpointScopeOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeInput` via:
//
//	ConnectionMonitorEndpointScopeArgs{...}
type ConnectionMonitorEndpointScopeInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeOutput() ConnectionMonitorEndpointScopeOutput
	ToConnectionMonitorEndpointScopeOutputWithContext(context.Context) ConnectionMonitorEndpointScopeOutput
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeArgs struct {
	// List of items which needs to be excluded from the endpoint scope.
	Exclude ConnectionMonitorEndpointScopeItemArrayInput `pulumi:"exclude"`
	// List of items which needs to be included to the endpoint scope.
	Include ConnectionMonitorEndpointScopeItemArrayInput `pulumi:"include"`
}

func (ConnectionMonitorEndpointScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopeOutput() ConnectionMonitorEndpointScopeOutput {
	return i.ToConnectionMonitorEndpointScopeOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopeOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeOutput)
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return i.ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeOutput).ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx)
}

// ConnectionMonitorEndpointScopePtrInput is an input type that accepts ConnectionMonitorEndpointScopeArgs, ConnectionMonitorEndpointScopePtr and ConnectionMonitorEndpointScopePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopePtrInput` via:
//
//	        ConnectionMonitorEndpointScopeArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorEndpointScopePtrInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput
	ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Context) ConnectionMonitorEndpointScopePtrOutput
}

type connectionMonitorEndpointScopePtrType ConnectionMonitorEndpointScopeArgs

func ConnectionMonitorEndpointScopePtr(v *ConnectionMonitorEndpointScopeArgs) ConnectionMonitorEndpointScopePtrInput {
	return (*connectionMonitorEndpointScopePtrType)(v)
}

func (*connectionMonitorEndpointScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (i *connectionMonitorEndpointScopePtrType) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return i.ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorEndpointScopePtrType) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopePtrOutput)
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopeOutput() ConnectionMonitorEndpointScopeOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopeOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return o.ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorEndpointScope) *ConnectionMonitorEndpointScope {
		return &v
	}).(ConnectionMonitorEndpointScopePtrOutput)
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopeOutput) Exclude() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem { return v.Exclude }).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopeOutput) Include() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem { return v.Include }).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

type ConnectionMonitorEndpointScopePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopePtrOutput) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopePtrOutput) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopePtrOutput) Elem() ConnectionMonitorEndpointScopeOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScope) ConnectionMonitorEndpointScope {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorEndpointScope
		return ret
	}).(ConnectionMonitorEndpointScopeOutput)
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopePtrOutput) Exclude() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopePtrOutput) Include() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem {
		if v == nil {
			return nil
		}
		return v.Include
	}).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItem struct {
	// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
	Address *string `pulumi:"address"`
}

// ConnectionMonitorEndpointScopeItemInput is an input type that accepts ConnectionMonitorEndpointScopeItemArgs and ConnectionMonitorEndpointScopeItemOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeItemInput` via:
//
//	ConnectionMonitorEndpointScopeItemArgs{...}
type ConnectionMonitorEndpointScopeItemInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeItemOutput() ConnectionMonitorEndpointScopeItemOutput
	ToConnectionMonitorEndpointScopeItemOutputWithContext(context.Context) ConnectionMonitorEndpointScopeItemOutput
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemArgs struct {
	// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (ConnectionMonitorEndpointScopeItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeItemArgs) ToConnectionMonitorEndpointScopeItemOutput() ConnectionMonitorEndpointScopeItemOutput {
	return i.ToConnectionMonitorEndpointScopeItemOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeItemArgs) ToConnectionMonitorEndpointScopeItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeItemOutput)
}

// ConnectionMonitorEndpointScopeItemArrayInput is an input type that accepts ConnectionMonitorEndpointScopeItemArray and ConnectionMonitorEndpointScopeItemArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeItemArrayInput` via:
//
//	ConnectionMonitorEndpointScopeItemArray{ ConnectionMonitorEndpointScopeItemArgs{...} }
type ConnectionMonitorEndpointScopeItemArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeItemArrayOutput() ConnectionMonitorEndpointScopeItemArrayOutput
	ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(context.Context) ConnectionMonitorEndpointScopeItemArrayOutput
}

type ConnectionMonitorEndpointScopeItemArray []ConnectionMonitorEndpointScopeItemInput

func (ConnectionMonitorEndpointScopeItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeItemArray) ToConnectionMonitorEndpointScopeItemArrayOutput() ConnectionMonitorEndpointScopeItemArrayOutput {
	return i.ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeItemArray) ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemOutput) ToConnectionMonitorEndpointScopeItemOutput() ConnectionMonitorEndpointScopeItemOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemOutput) ToConnectionMonitorEndpointScopeItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemOutput {
	return o
}

// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
func (o ConnectionMonitorEndpointScopeItemOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeItem) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointScopeItemArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemArrayOutput) ToConnectionMonitorEndpointScopeItemArrayOutput() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemArrayOutput) ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointScopeItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointScopeItem {
		return vs[0].([]ConnectionMonitorEndpointScopeItem)[vs[1].(int)]
	}).(ConnectionMonitorEndpointScopeItemOutput)
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemResponse struct {
	// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
	Address *string `pulumi:"address"`
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemResponseOutput) ToConnectionMonitorEndpointScopeItemResponseOutput() ConnectionMonitorEndpointScopeItemResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemResponseOutput) ToConnectionMonitorEndpointScopeItemResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemResponseOutput {
	return o
}

// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
func (o ConnectionMonitorEndpointScopeItemResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeItemResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointScopeItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointScopeItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemResponseArrayOutput) ToConnectionMonitorEndpointScopeItemResponseArrayOutput() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemResponseArrayOutput) ToConnectionMonitorEndpointScopeItemResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointScopeItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointScopeItemResponse {
		return vs[0].([]ConnectionMonitorEndpointScopeItemResponse)[vs[1].(int)]
	}).(ConnectionMonitorEndpointScopeItemResponseOutput)
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeResponse struct {
	// List of items which needs to be excluded from the endpoint scope.
	Exclude []ConnectionMonitorEndpointScopeItemResponse `pulumi:"exclude"`
	// List of items which needs to be included to the endpoint scope.
	Include []ConnectionMonitorEndpointScopeItemResponse `pulumi:"include"`
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeResponseOutput) ToConnectionMonitorEndpointScopeResponseOutput() ConnectionMonitorEndpointScopeResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeResponseOutput) ToConnectionMonitorEndpointScopeResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponseOutput {
	return o
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponseOutput) Exclude() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		return v.Exclude
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponseOutput) Include() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		return v.Include
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

type ConnectionMonitorEndpointScopeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointScopeResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeResponsePtrOutput) ToConnectionMonitorEndpointScopeResponsePtrOutput() ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeResponsePtrOutput) ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeResponsePtrOutput) Elem() ConnectionMonitorEndpointScopeResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScopeResponse) ConnectionMonitorEndpointScopeResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorEndpointScopeResponse
		return ret
	}).(ConnectionMonitorEndpointScopeResponseOutput)
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponsePtrOutput) Exclude() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponsePtrOutput) Include() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfiguration struct {
	// The HTTP method to use.
	Method *string `pulumi:"method"`
	// The path component of the URI. For instance, "/dir1/dir2".
	Path *string `pulumi:"path"`
	// The port to connect to.
	Port *int `pulumi:"port"`
	// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
	PreferHTTPS *bool `pulumi:"preferHTTPS"`
	// The HTTP headers to transmit with the request.
	RequestHeaders []HTTPHeader `pulumi:"requestHeaders"`
	// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
	ValidStatusCodeRanges []string `pulumi:"validStatusCodeRanges"`
}

// ConnectionMonitorHttpConfigurationInput is an input type that accepts ConnectionMonitorHttpConfigurationArgs and ConnectionMonitorHttpConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorHttpConfigurationInput` via:
//
//	ConnectionMonitorHttpConfigurationArgs{...}
type ConnectionMonitorHttpConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorHttpConfigurationOutput() ConnectionMonitorHttpConfigurationOutput
	ToConnectionMonitorHttpConfigurationOutputWithContext(context.Context) ConnectionMonitorHttpConfigurationOutput
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationArgs struct {
	// The HTTP method to use.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The path component of the URI. For instance, "/dir1/dir2".
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port to connect to.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
	PreferHTTPS pulumi.BoolPtrInput `pulumi:"preferHTTPS"`
	// The HTTP headers to transmit with the request.
	RequestHeaders HTTPHeaderArrayInput `pulumi:"requestHeaders"`
	// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
	ValidStatusCodeRanges pulumi.StringArrayInput `pulumi:"validStatusCodeRanges"`
}

func (ConnectionMonitorHttpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationOutput() ConnectionMonitorHttpConfigurationOutput {
	return i.ToConnectionMonitorHttpConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationOutput)
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return i.ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationOutput).ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx)
}

// ConnectionMonitorHttpConfigurationPtrInput is an input type that accepts ConnectionMonitorHttpConfigurationArgs, ConnectionMonitorHttpConfigurationPtr and ConnectionMonitorHttpConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorHttpConfigurationPtrInput` via:
//
//	        ConnectionMonitorHttpConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorHttpConfigurationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput
	ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Context) ConnectionMonitorHttpConfigurationPtrOutput
}

type connectionMonitorHttpConfigurationPtrType ConnectionMonitorHttpConfigurationArgs

func ConnectionMonitorHttpConfigurationPtr(v *ConnectionMonitorHttpConfigurationArgs) ConnectionMonitorHttpConfigurationPtrInput {
	return (*connectionMonitorHttpConfigurationPtrType)(v)
}

func (*connectionMonitorHttpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (i *connectionMonitorHttpConfigurationPtrType) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return i.ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorHttpConfigurationPtrType) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationPtrOutput)
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationOutput() ConnectionMonitorHttpConfigurationOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return o.ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorHttpConfiguration) *ConnectionMonitorHttpConfiguration {
		return &v
	}).(ConnectionMonitorHttpConfigurationPtrOutput)
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *bool { return v.PreferHTTPS }).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationOutput) RequestHeaders() HTTPHeaderArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) []HTTPHeader { return v.RequestHeaders }).(HTTPHeaderArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) []string { return v.ValidStatusCodeRanges }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorHttpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationPtrOutput) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationPtrOutput) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationPtrOutput) Elem() ConnectionMonitorHttpConfigurationOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) ConnectionMonitorHttpConfiguration {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorHttpConfiguration
		return ret
	}).(ConnectionMonitorHttpConfigurationOutput)
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationPtrOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.PreferHTTPS
	}).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationPtrOutput) RequestHeaders() HTTPHeaderArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) []HTTPHeader {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(HTTPHeaderArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationPtrOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ValidStatusCodeRanges
	}).(pulumi.StringArrayOutput)
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationResponse struct {
	// The HTTP method to use.
	Method *string `pulumi:"method"`
	// The path component of the URI. For instance, "/dir1/dir2".
	Path *string `pulumi:"path"`
	// The port to connect to.
	Port *int `pulumi:"port"`
	// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
	PreferHTTPS *bool `pulumi:"preferHTTPS"`
	// The HTTP headers to transmit with the request.
	RequestHeaders []HTTPHeaderResponse `pulumi:"requestHeaders"`
	// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
	ValidStatusCodeRanges []string `pulumi:"validStatusCodeRanges"`
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorHttpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationResponseOutput) ToConnectionMonitorHttpConfigurationResponseOutput() ConnectionMonitorHttpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationResponseOutput) ToConnectionMonitorHttpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponseOutput {
	return o
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationResponseOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *bool { return v.PreferHTTPS }).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationResponseOutput) RequestHeaders() HTTPHeaderResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) []HTTPHeaderResponse { return v.RequestHeaders }).(HTTPHeaderResponseArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationResponseOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) []string { return v.ValidStatusCodeRanges }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorHttpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorHttpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) ToConnectionMonitorHttpConfigurationResponsePtrOutput() ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Elem() ConnectionMonitorHttpConfigurationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) ConnectionMonitorHttpConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorHttpConfigurationResponse
		return ret
	}).(ConnectionMonitorHttpConfigurationResponseOutput)
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PreferHTTPS
	}).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) RequestHeaders() HTTPHeaderResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) []HTTPHeaderResponse {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(HTTPHeaderResponseArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.ValidStatusCodeRanges
	}).(pulumi.StringArrayOutput)
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfiguration struct {
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
}

// ConnectionMonitorIcmpConfigurationInput is an input type that accepts ConnectionMonitorIcmpConfigurationArgs and ConnectionMonitorIcmpConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorIcmpConfigurationInput` via:
//
//	ConnectionMonitorIcmpConfigurationArgs{...}
type ConnectionMonitorIcmpConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorIcmpConfigurationOutput() ConnectionMonitorIcmpConfigurationOutput
	ToConnectionMonitorIcmpConfigurationOutputWithContext(context.Context) ConnectionMonitorIcmpConfigurationOutput
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationArgs struct {
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute pulumi.BoolPtrInput `pulumi:"disableTraceRoute"`
}

func (ConnectionMonitorIcmpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationOutput() ConnectionMonitorIcmpConfigurationOutput {
	return i.ToConnectionMonitorIcmpConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationOutput)
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return i.ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationOutput).ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx)
}

// ConnectionMonitorIcmpConfigurationPtrInput is an input type that accepts ConnectionMonitorIcmpConfigurationArgs, ConnectionMonitorIcmpConfigurationPtr and ConnectionMonitorIcmpConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorIcmpConfigurationPtrInput` via:
//
//	        ConnectionMonitorIcmpConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorIcmpConfigurationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput
	ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Context) ConnectionMonitorIcmpConfigurationPtrOutput
}

type connectionMonitorIcmpConfigurationPtrType ConnectionMonitorIcmpConfigurationArgs

func ConnectionMonitorIcmpConfigurationPtr(v *ConnectionMonitorIcmpConfigurationArgs) ConnectionMonitorIcmpConfigurationPtrInput {
	return (*connectionMonitorIcmpConfigurationPtrType)(v)
}

func (*connectionMonitorIcmpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (i *connectionMonitorIcmpConfigurationPtrType) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return i.ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorIcmpConfigurationPtrType) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationPtrOutput)
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationOutput() ConnectionMonitorIcmpConfigurationOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return o.ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorIcmpConfiguration) *ConnectionMonitorIcmpConfiguration {
		return &v
	}).(ConnectionMonitorIcmpConfigurationPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorIcmpConfiguration) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

type ConnectionMonitorIcmpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationPtrOutput) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationPtrOutput) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationPtrOutput) Elem() ConnectionMonitorIcmpConfigurationOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfiguration) ConnectionMonitorIcmpConfiguration {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorIcmpConfiguration
		return ret
	}).(ConnectionMonitorIcmpConfigurationOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationPtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationResponse struct {
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorIcmpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationResponseOutput) ToConnectionMonitorIcmpConfigurationResponseOutput() ConnectionMonitorIcmpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationResponseOutput) ToConnectionMonitorIcmpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponseOutput {
	return o
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationResponseOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorIcmpConfigurationResponse) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

type ConnectionMonitorIcmpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorIcmpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) ToConnectionMonitorIcmpConfigurationResponsePtrOutput() ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) Elem() ConnectionMonitorIcmpConfigurationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfigurationResponse) ConnectionMonitorIcmpConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorIcmpConfigurationResponse
		return ret
	}).(ConnectionMonitorIcmpConfigurationResponseOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputType struct {
	// Connection monitor output destination type. Currently, only "Workspace" is supported.
	Type *string `pulumi:"type"`
	// Describes the settings for producing output into a log analytics workspace.
	WorkspaceSettings *ConnectionMonitorWorkspaceSettings `pulumi:"workspaceSettings"`
}

// ConnectionMonitorOutputTypeInput is an input type that accepts ConnectionMonitorOutputTypeArgs and ConnectionMonitorOutputTypeOutput values.
// You can construct a concrete instance of `ConnectionMonitorOutputTypeInput` via:
//
//	ConnectionMonitorOutputTypeArgs{...}
type ConnectionMonitorOutputTypeInput interface {
	pulumi.Input

	ToConnectionMonitorOutputTypeOutput() ConnectionMonitorOutputTypeOutput
	ToConnectionMonitorOutputTypeOutputWithContext(context.Context) ConnectionMonitorOutputTypeOutput
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputTypeArgs struct {
	// Connection monitor output destination type. Currently, only "Workspace" is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Describes the settings for producing output into a log analytics workspace.
	WorkspaceSettings ConnectionMonitorWorkspaceSettingsPtrInput `pulumi:"workspaceSettings"`
}

func (ConnectionMonitorOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorOutputType)(nil)).Elem()
}

func (i ConnectionMonitorOutputTypeArgs) ToConnectionMonitorOutputTypeOutput() ConnectionMonitorOutputTypeOutput {
	return i.ToConnectionMonitorOutputTypeOutputWithContext(context.Background())
}

func (i ConnectionMonitorOutputTypeArgs) ToConnectionMonitorOutputTypeOutputWithContext(ctx context.Context) ConnectionMonitorOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorOutputTypeOutput)
}

// ConnectionMonitorOutputTypeArrayInput is an input type that accepts ConnectionMonitorOutputTypeArray and ConnectionMonitorOutputTypeArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorOutputTypeArrayInput` via:
//
//	ConnectionMonitorOutputTypeArray{ ConnectionMonitorOutputTypeArgs{...} }
type ConnectionMonitorOutputTypeArrayInput interface {
	pulumi.Input

	ToConnectionMonitorOutputTypeArrayOutput() ConnectionMonitorOutputTypeArrayOutput
	ToConnectionMonitorOutputTypeArrayOutputWithContext(context.Context) ConnectionMonitorOutputTypeArrayOutput
}

type ConnectionMonitorOutputTypeArray []ConnectionMonitorOutputTypeInput

func (ConnectionMonitorOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorOutputType)(nil)).Elem()
}

func (i ConnectionMonitorOutputTypeArray) ToConnectionMonitorOutputTypeArrayOutput() ConnectionMonitorOutputTypeArrayOutput {
	return i.ToConnectionMonitorOutputTypeArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorOutputTypeArray) ToConnectionMonitorOutputTypeArrayOutputWithContext(ctx context.Context) ConnectionMonitorOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorOutputTypeArrayOutput)
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputTypeOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorOutputType)(nil)).Elem()
}

func (o ConnectionMonitorOutputTypeOutput) ToConnectionMonitorOutputTypeOutput() ConnectionMonitorOutputTypeOutput {
	return o
}

func (o ConnectionMonitorOutputTypeOutput) ToConnectionMonitorOutputTypeOutputWithContext(ctx context.Context) ConnectionMonitorOutputTypeOutput {
	return o
}

// Connection monitor output destination type. Currently, only "Workspace" is supported.
func (o ConnectionMonitorOutputTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutputType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
func (o ConnectionMonitorOutputTypeOutput) WorkspaceSettings() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutputType) *ConnectionMonitorWorkspaceSettings { return v.WorkspaceSettings }).(ConnectionMonitorWorkspaceSettingsPtrOutput)
}

type ConnectionMonitorOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorOutputType)(nil)).Elem()
}

func (o ConnectionMonitorOutputTypeArrayOutput) ToConnectionMonitorOutputTypeArrayOutput() ConnectionMonitorOutputTypeArrayOutput {
	return o
}

func (o ConnectionMonitorOutputTypeArrayOutput) ToConnectionMonitorOutputTypeArrayOutputWithContext(ctx context.Context) ConnectionMonitorOutputTypeArrayOutput {
	return o
}

func (o ConnectionMonitorOutputTypeArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorOutputType {
		return vs[0].([]ConnectionMonitorOutputType)[vs[1].(int)]
	}).(ConnectionMonitorOutputTypeOutput)
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputResponse struct {
	// Connection monitor output destination type. Currently, only "Workspace" is supported.
	Type *string `pulumi:"type"`
	// Describes the settings for producing output into a log analytics workspace.
	WorkspaceSettings *ConnectionMonitorWorkspaceSettingsResponse `pulumi:"workspaceSettings"`
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorOutputResponse)(nil)).Elem()
}

func (o ConnectionMonitorOutputResponseOutput) ToConnectionMonitorOutputResponseOutput() ConnectionMonitorOutputResponseOutput {
	return o
}

func (o ConnectionMonitorOutputResponseOutput) ToConnectionMonitorOutputResponseOutputWithContext(ctx context.Context) ConnectionMonitorOutputResponseOutput {
	return o
}

// Connection monitor output destination type. Currently, only "Workspace" is supported.
func (o ConnectionMonitorOutputResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutputResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
func (o ConnectionMonitorOutputResponseOutput) WorkspaceSettings() ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutputResponse) *ConnectionMonitorWorkspaceSettingsResponse {
		return v.WorkspaceSettings
	}).(ConnectionMonitorWorkspaceSettingsResponsePtrOutput)
}

type ConnectionMonitorOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorOutputResponse)(nil)).Elem()
}

func (o ConnectionMonitorOutputResponseArrayOutput) ToConnectionMonitorOutputResponseArrayOutput() ConnectionMonitorOutputResponseArrayOutput {
	return o
}

func (o ConnectionMonitorOutputResponseArrayOutput) ToConnectionMonitorOutputResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorOutputResponseArrayOutput {
	return o
}

func (o ConnectionMonitorOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorOutputResponse {
		return vs[0].([]ConnectionMonitorOutputResponse)[vs[1].(int)]
	}).(ConnectionMonitorOutputResponseOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSource struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// ConnectionMonitorSourceInput is an input type that accepts ConnectionMonitorSourceArgs and ConnectionMonitorSourceOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceInput` via:
//
//	ConnectionMonitorSourceArgs{...}
type ConnectionMonitorSourceInput interface {
	pulumi.Input

	ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput
	ToConnectionMonitorSourceOutputWithContext(context.Context) ConnectionMonitorSourceOutput
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceArgs struct {
	// The source port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ConnectionMonitorSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return i.ToConnectionMonitorSourceOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput)
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput).ToConnectionMonitorSourcePtrOutputWithContext(ctx)
}

// ConnectionMonitorSourcePtrInput is an input type that accepts ConnectionMonitorSourceArgs, ConnectionMonitorSourcePtr and ConnectionMonitorSourcePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourcePtrInput` via:
//
//	        ConnectionMonitorSourceArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorSourcePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput
	ToConnectionMonitorSourcePtrOutputWithContext(context.Context) ConnectionMonitorSourcePtrOutput
}

type connectionMonitorSourcePtrType ConnectionMonitorSourceArgs

func ConnectionMonitorSourcePtr(v *ConnectionMonitorSourceArgs) ConnectionMonitorSourcePtrInput {
	return (*connectionMonitorSourcePtrType)(v)
}

func (*connectionMonitorSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourcePtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorSource) *ConnectionMonitorSource {
		return &v
	}).(ConnectionMonitorSourcePtrOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourcePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) Elem() ConnectionMonitorSourceOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) ConnectionMonitorSource {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorSource
		return ret
	}).(ConnectionMonitorSourceOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponse struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput {
	return o
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponseOutput {
	return o
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) Elem() ConnectionMonitorSourceResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) ConnectionMonitorSourceResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorSourceResponse
		return ret
	}).(ConnectionMonitorSourceResponseOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThreshold struct {
	// The maximum percentage of failed checks permitted for a test to evaluate as successful.
	ChecksFailedPercent *int `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
	RoundTripTimeMs *float64 `pulumi:"roundTripTimeMs"`
}

// ConnectionMonitorSuccessThresholdInput is an input type that accepts ConnectionMonitorSuccessThresholdArgs and ConnectionMonitorSuccessThresholdOutput values.
// You can construct a concrete instance of `ConnectionMonitorSuccessThresholdInput` via:
//
//	ConnectionMonitorSuccessThresholdArgs{...}
type ConnectionMonitorSuccessThresholdInput interface {
	pulumi.Input

	ToConnectionMonitorSuccessThresholdOutput() ConnectionMonitorSuccessThresholdOutput
	ToConnectionMonitorSuccessThresholdOutputWithContext(context.Context) ConnectionMonitorSuccessThresholdOutput
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdArgs struct {
	// The maximum percentage of failed checks permitted for a test to evaluate as successful.
	ChecksFailedPercent pulumi.IntPtrInput `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
	RoundTripTimeMs pulumi.Float64PtrInput `pulumi:"roundTripTimeMs"`
}

func (ConnectionMonitorSuccessThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdOutput() ConnectionMonitorSuccessThresholdOutput {
	return i.ToConnectionMonitorSuccessThresholdOutputWithContext(context.Background())
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdOutput)
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return i.ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdOutput).ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx)
}

// ConnectionMonitorSuccessThresholdPtrInput is an input type that accepts ConnectionMonitorSuccessThresholdArgs, ConnectionMonitorSuccessThresholdPtr and ConnectionMonitorSuccessThresholdPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSuccessThresholdPtrInput` via:
//
//	        ConnectionMonitorSuccessThresholdArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorSuccessThresholdPtrInput interface {
	pulumi.Input

	ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput
	ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Context) ConnectionMonitorSuccessThresholdPtrOutput
}

type connectionMonitorSuccessThresholdPtrType ConnectionMonitorSuccessThresholdArgs

func ConnectionMonitorSuccessThresholdPtr(v *ConnectionMonitorSuccessThresholdArgs) ConnectionMonitorSuccessThresholdPtrInput {
	return (*connectionMonitorSuccessThresholdPtrType)(v)
}

func (*connectionMonitorSuccessThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (i *connectionMonitorSuccessThresholdPtrType) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return i.ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSuccessThresholdPtrType) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdPtrOutput)
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdOutput() ConnectionMonitorSuccessThresholdOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return o.ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorSuccessThreshold) *ConnectionMonitorSuccessThreshold {
		return &v
	}).(ConnectionMonitorSuccessThresholdPtrOutput)
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThreshold) *int { return v.ChecksFailedPercent }).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThreshold) *float64 { return v.RoundTripTimeMs }).(pulumi.Float64PtrOutput)
}

type ConnectionMonitorSuccessThresholdPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdPtrOutput) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdPtrOutput) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdPtrOutput) Elem() ConnectionMonitorSuccessThresholdOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThreshold) ConnectionMonitorSuccessThreshold {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorSuccessThreshold
		return ret
	}).(ConnectionMonitorSuccessThresholdOutput)
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdPtrOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThreshold) *int {
		if v == nil {
			return nil
		}
		return v.ChecksFailedPercent
	}).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdPtrOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThreshold) *float64 {
		if v == nil {
			return nil
		}
		return v.RoundTripTimeMs
	}).(pulumi.Float64PtrOutput)
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdResponse struct {
	// The maximum percentage of failed checks permitted for a test to evaluate as successful.
	ChecksFailedPercent *int `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
	RoundTripTimeMs *float64 `pulumi:"roundTripTimeMs"`
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSuccessThresholdResponse)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdResponseOutput) ToConnectionMonitorSuccessThresholdResponseOutput() ConnectionMonitorSuccessThresholdResponseOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdResponseOutput) ToConnectionMonitorSuccessThresholdResponseOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponseOutput {
	return o
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponseOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThresholdResponse) *int { return v.ChecksFailedPercent }).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponseOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThresholdResponse) *float64 { return v.RoundTripTimeMs }).(pulumi.Float64PtrOutput)
}

type ConnectionMonitorSuccessThresholdResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSuccessThresholdResponse)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) ToConnectionMonitorSuccessThresholdResponsePtrOutput() ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) Elem() ConnectionMonitorSuccessThresholdResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThresholdResponse) ConnectionMonitorSuccessThresholdResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorSuccessThresholdResponse
		return ret
	}).(ConnectionMonitorSuccessThresholdResponseOutput)
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThresholdResponse) *int {
		if v == nil {
			return nil
		}
		return v.ChecksFailedPercent
	}).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThresholdResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RoundTripTimeMs
	}).(pulumi.Float64PtrOutput)
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfiguration struct {
	// Destination port behavior.
	DestinationPortBehavior *string `pulumi:"destinationPortBehavior"`
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
	// The port to connect to.
	Port *int `pulumi:"port"`
}

// ConnectionMonitorTcpConfigurationInput is an input type that accepts ConnectionMonitorTcpConfigurationArgs and ConnectionMonitorTcpConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorTcpConfigurationInput` via:
//
//	ConnectionMonitorTcpConfigurationArgs{...}
type ConnectionMonitorTcpConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorTcpConfigurationOutput() ConnectionMonitorTcpConfigurationOutput
	ToConnectionMonitorTcpConfigurationOutputWithContext(context.Context) ConnectionMonitorTcpConfigurationOutput
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationArgs struct {
	// Destination port behavior.
	DestinationPortBehavior pulumi.StringPtrInput `pulumi:"destinationPortBehavior"`
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute pulumi.BoolPtrInput `pulumi:"disableTraceRoute"`
	// The port to connect to.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ConnectionMonitorTcpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationOutput() ConnectionMonitorTcpConfigurationOutput {
	return i.ToConnectionMonitorTcpConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationOutput)
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return i.ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationOutput).ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx)
}

// ConnectionMonitorTcpConfigurationPtrInput is an input type that accepts ConnectionMonitorTcpConfigurationArgs, ConnectionMonitorTcpConfigurationPtr and ConnectionMonitorTcpConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorTcpConfigurationPtrInput` via:
//
//	        ConnectionMonitorTcpConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorTcpConfigurationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput
	ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Context) ConnectionMonitorTcpConfigurationPtrOutput
}

type connectionMonitorTcpConfigurationPtrType ConnectionMonitorTcpConfigurationArgs

func ConnectionMonitorTcpConfigurationPtr(v *ConnectionMonitorTcpConfigurationArgs) ConnectionMonitorTcpConfigurationPtrInput {
	return (*connectionMonitorTcpConfigurationPtrType)(v)
}

func (*connectionMonitorTcpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (i *connectionMonitorTcpConfigurationPtrType) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return i.ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorTcpConfigurationPtrType) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationPtrOutput)
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationOutput() ConnectionMonitorTcpConfigurationOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return o.ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorTcpConfiguration) *ConnectionMonitorTcpConfiguration {
		return &v
	}).(ConnectionMonitorTcpConfigurationPtrOutput)
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfiguration) *string { return v.DestinationPortBehavior }).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfiguration) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfiguration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTcpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationPtrOutput) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationPtrOutput) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationPtrOutput) Elem() ConnectionMonitorTcpConfigurationOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) ConnectionMonitorTcpConfiguration {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorTcpConfiguration
		return ret
	}).(ConnectionMonitorTcpConfigurationOutput)
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationPtrOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPortBehavior
	}).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationPtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationResponse struct {
	// Destination port behavior.
	DestinationPortBehavior *string `pulumi:"destinationPortBehavior"`
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
	// The port to connect to.
	Port *int `pulumi:"port"`
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTcpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationResponseOutput) ToConnectionMonitorTcpConfigurationResponseOutput() ConnectionMonitorTcpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationResponseOutput) ToConnectionMonitorTcpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponseOutput {
	return o
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationResponseOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfigurationResponse) *string { return v.DestinationPortBehavior }).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationResponseOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfigurationResponse) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfigurationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTcpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorTcpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) ToConnectionMonitorTcpConfigurationResponsePtrOutput() ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) Elem() ConnectionMonitorTcpConfigurationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) ConnectionMonitorTcpConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorTcpConfigurationResponse
		return ret
	}).(ConnectionMonitorTcpConfigurationResponseOutput)
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPortBehavior
	}).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfiguration struct {
	// The parameters used to perform test evaluation over HTTP.
	HttpConfiguration *ConnectionMonitorHttpConfiguration `pulumi:"httpConfiguration"`
	// The parameters used to perform test evaluation over ICMP.
	IcmpConfiguration *ConnectionMonitorIcmpConfiguration `pulumi:"icmpConfiguration"`
	// The name of the connection monitor test configuration.
	Name string `pulumi:"name"`
	// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
	PreferredIPVersion *string `pulumi:"preferredIPVersion"`
	// The protocol to use in test evaluation.
	Protocol string `pulumi:"protocol"`
	// The threshold for declaring a test successful.
	SuccessThreshold *ConnectionMonitorSuccessThreshold `pulumi:"successThreshold"`
	// The parameters used to perform test evaluation over TCP.
	TcpConfiguration *ConnectionMonitorTcpConfiguration `pulumi:"tcpConfiguration"`
	// The frequency of test evaluation, in seconds.
	TestFrequencySec *int `pulumi:"testFrequencySec"`
}

// ConnectionMonitorTestConfigurationInput is an input type that accepts ConnectionMonitorTestConfigurationArgs and ConnectionMonitorTestConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestConfigurationInput` via:
//
//	ConnectionMonitorTestConfigurationArgs{...}
type ConnectionMonitorTestConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorTestConfigurationOutput() ConnectionMonitorTestConfigurationOutput
	ToConnectionMonitorTestConfigurationOutputWithContext(context.Context) ConnectionMonitorTestConfigurationOutput
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationArgs struct {
	// The parameters used to perform test evaluation over HTTP.
	HttpConfiguration ConnectionMonitorHttpConfigurationPtrInput `pulumi:"httpConfiguration"`
	// The parameters used to perform test evaluation over ICMP.
	IcmpConfiguration ConnectionMonitorIcmpConfigurationPtrInput `pulumi:"icmpConfiguration"`
	// The name of the connection monitor test configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
	PreferredIPVersion pulumi.StringPtrInput `pulumi:"preferredIPVersion"`
	// The protocol to use in test evaluation.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The threshold for declaring a test successful.
	SuccessThreshold ConnectionMonitorSuccessThresholdPtrInput `pulumi:"successThreshold"`
	// The parameters used to perform test evaluation over TCP.
	TcpConfiguration ConnectionMonitorTcpConfigurationPtrInput `pulumi:"tcpConfiguration"`
	// The frequency of test evaluation, in seconds.
	TestFrequencySec pulumi.IntPtrInput `pulumi:"testFrequencySec"`
}

func (ConnectionMonitorTestConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorTestConfigurationArgs) ToConnectionMonitorTestConfigurationOutput() ConnectionMonitorTestConfigurationOutput {
	return i.ToConnectionMonitorTestConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestConfigurationArgs) ToConnectionMonitorTestConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestConfigurationOutput)
}

// ConnectionMonitorTestConfigurationArrayInput is an input type that accepts ConnectionMonitorTestConfigurationArray and ConnectionMonitorTestConfigurationArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestConfigurationArrayInput` via:
//
//	ConnectionMonitorTestConfigurationArray{ ConnectionMonitorTestConfigurationArgs{...} }
type ConnectionMonitorTestConfigurationArrayInput interface {
	pulumi.Input

	ToConnectionMonitorTestConfigurationArrayOutput() ConnectionMonitorTestConfigurationArrayOutput
	ToConnectionMonitorTestConfigurationArrayOutputWithContext(context.Context) ConnectionMonitorTestConfigurationArrayOutput
}

type ConnectionMonitorTestConfigurationArray []ConnectionMonitorTestConfigurationInput

func (ConnectionMonitorTestConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorTestConfigurationArray) ToConnectionMonitorTestConfigurationArrayOutput() ConnectionMonitorTestConfigurationArrayOutput {
	return i.ToConnectionMonitorTestConfigurationArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestConfigurationArray) ToConnectionMonitorTestConfigurationArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestConfigurationArrayOutput)
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationOutput) ToConnectionMonitorTestConfigurationOutput() ConnectionMonitorTestConfigurationOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationOutput) ToConnectionMonitorTestConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationOutput {
	return o
}

// The parameters used to perform test evaluation over HTTP.
func (o ConnectionMonitorTestConfigurationOutput) HttpConfiguration() ConnectionMonitorHttpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorHttpConfiguration {
		return v.HttpConfiguration
	}).(ConnectionMonitorHttpConfigurationPtrOutput)
}

// The parameters used to perform test evaluation over ICMP.
func (o ConnectionMonitorTestConfigurationOutput) IcmpConfiguration() ConnectionMonitorIcmpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorIcmpConfiguration {
		return v.IcmpConfiguration
	}).(ConnectionMonitorIcmpConfigurationPtrOutput)
}

// The name of the connection monitor test configuration.
func (o ConnectionMonitorTestConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
func (o ConnectionMonitorTestConfigurationOutput) PreferredIPVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *string { return v.PreferredIPVersion }).(pulumi.StringPtrOutput)
}

// The protocol to use in test evaluation.
func (o ConnectionMonitorTestConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

// The threshold for declaring a test successful.
func (o ConnectionMonitorTestConfigurationOutput) SuccessThreshold() ConnectionMonitorSuccessThresholdPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorSuccessThreshold {
		return v.SuccessThreshold
	}).(ConnectionMonitorSuccessThresholdPtrOutput)
}

// The parameters used to perform test evaluation over TCP.
func (o ConnectionMonitorTestConfigurationOutput) TcpConfiguration() ConnectionMonitorTcpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorTcpConfiguration {
		return v.TcpConfiguration
	}).(ConnectionMonitorTcpConfigurationPtrOutput)
}

// The frequency of test evaluation, in seconds.
func (o ConnectionMonitorTestConfigurationOutput) TestFrequencySec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *int { return v.TestFrequencySec }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTestConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationArrayOutput) ToConnectionMonitorTestConfigurationArrayOutput() ConnectionMonitorTestConfigurationArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationArrayOutput) ToConnectionMonitorTestConfigurationArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestConfiguration {
		return vs[0].([]ConnectionMonitorTestConfiguration)[vs[1].(int)]
	}).(ConnectionMonitorTestConfigurationOutput)
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationResponse struct {
	// The parameters used to perform test evaluation over HTTP.
	HttpConfiguration *ConnectionMonitorHttpConfigurationResponse `pulumi:"httpConfiguration"`
	// The parameters used to perform test evaluation over ICMP.
	IcmpConfiguration *ConnectionMonitorIcmpConfigurationResponse `pulumi:"icmpConfiguration"`
	// The name of the connection monitor test configuration.
	Name string `pulumi:"name"`
	// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
	PreferredIPVersion *string `pulumi:"preferredIPVersion"`
	// The protocol to use in test evaluation.
	Protocol string `pulumi:"protocol"`
	// The threshold for declaring a test successful.
	SuccessThreshold *ConnectionMonitorSuccessThresholdResponse `pulumi:"successThreshold"`
	// The parameters used to perform test evaluation over TCP.
	TcpConfiguration *ConnectionMonitorTcpConfigurationResponse `pulumi:"tcpConfiguration"`
	// The frequency of test evaluation, in seconds.
	TestFrequencySec *int `pulumi:"testFrequencySec"`
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationResponseOutput) ToConnectionMonitorTestConfigurationResponseOutput() ConnectionMonitorTestConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationResponseOutput) ToConnectionMonitorTestConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationResponseOutput {
	return o
}

// The parameters used to perform test evaluation over HTTP.
func (o ConnectionMonitorTestConfigurationResponseOutput) HttpConfiguration() ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorHttpConfigurationResponse {
		return v.HttpConfiguration
	}).(ConnectionMonitorHttpConfigurationResponsePtrOutput)
}

// The parameters used to perform test evaluation over ICMP.
func (o ConnectionMonitorTestConfigurationResponseOutput) IcmpConfiguration() ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorIcmpConfigurationResponse {
		return v.IcmpConfiguration
	}).(ConnectionMonitorIcmpConfigurationResponsePtrOutput)
}

// The name of the connection monitor test configuration.
func (o ConnectionMonitorTestConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
func (o ConnectionMonitorTestConfigurationResponseOutput) PreferredIPVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *string { return v.PreferredIPVersion }).(pulumi.StringPtrOutput)
}

// The protocol to use in test evaluation.
func (o ConnectionMonitorTestConfigurationResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The threshold for declaring a test successful.
func (o ConnectionMonitorTestConfigurationResponseOutput) SuccessThreshold() ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorSuccessThresholdResponse {
		return v.SuccessThreshold
	}).(ConnectionMonitorSuccessThresholdResponsePtrOutput)
}

// The parameters used to perform test evaluation over TCP.
func (o ConnectionMonitorTestConfigurationResponseOutput) TcpConfiguration() ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorTcpConfigurationResponse {
		return v.TcpConfiguration
	}).(ConnectionMonitorTcpConfigurationResponsePtrOutput)
}

// The frequency of test evaluation, in seconds.
func (o ConnectionMonitorTestConfigurationResponseOutput) TestFrequencySec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *int { return v.TestFrequencySec }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTestConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationResponseArrayOutput) ToConnectionMonitorTestConfigurationResponseArrayOutput() ConnectionMonitorTestConfigurationResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationResponseArrayOutput) ToConnectionMonitorTestConfigurationResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestConfigurationResponse {
		return vs[0].([]ConnectionMonitorTestConfigurationResponse)[vs[1].(int)]
	}).(ConnectionMonitorTestConfigurationResponseOutput)
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroup struct {
	// List of destination endpoint names.
	Destinations []string `pulumi:"destinations"`
	// Value indicating whether test group is disabled.
	Disable *bool `pulumi:"disable"`
	// The name of the connection monitor test group.
	Name string `pulumi:"name"`
	// List of source endpoint names.
	Sources []string `pulumi:"sources"`
	// List of test configuration names.
	TestConfigurations []string `pulumi:"testConfigurations"`
}

// ConnectionMonitorTestGroupInput is an input type that accepts ConnectionMonitorTestGroupArgs and ConnectionMonitorTestGroupOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestGroupInput` via:
//
//	ConnectionMonitorTestGroupArgs{...}
type ConnectionMonitorTestGroupInput interface {
	pulumi.Input

	ToConnectionMonitorTestGroupOutput() ConnectionMonitorTestGroupOutput
	ToConnectionMonitorTestGroupOutputWithContext(context.Context) ConnectionMonitorTestGroupOutput
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupArgs struct {
	// List of destination endpoint names.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// Value indicating whether test group is disabled.
	Disable pulumi.BoolPtrInput `pulumi:"disable"`
	// The name of the connection monitor test group.
	Name pulumi.StringInput `pulumi:"name"`
	// List of source endpoint names.
	Sources pulumi.StringArrayInput `pulumi:"sources"`
	// List of test configuration names.
	TestConfigurations pulumi.StringArrayInput `pulumi:"testConfigurations"`
}

func (ConnectionMonitorTestGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestGroup)(nil)).Elem()
}

func (i ConnectionMonitorTestGroupArgs) ToConnectionMonitorTestGroupOutput() ConnectionMonitorTestGroupOutput {
	return i.ToConnectionMonitorTestGroupOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestGroupArgs) ToConnectionMonitorTestGroupOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestGroupOutput)
}

// ConnectionMonitorTestGroupArrayInput is an input type that accepts ConnectionMonitorTestGroupArray and ConnectionMonitorTestGroupArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestGroupArrayInput` via:
//
//	ConnectionMonitorTestGroupArray{ ConnectionMonitorTestGroupArgs{...} }
type ConnectionMonitorTestGroupArrayInput interface {
	pulumi.Input

	ToConnectionMonitorTestGroupArrayOutput() ConnectionMonitorTestGroupArrayOutput
	ToConnectionMonitorTestGroupArrayOutputWithContext(context.Context) ConnectionMonitorTestGroupArrayOutput
}

type ConnectionMonitorTestGroupArray []ConnectionMonitorTestGroupInput

func (ConnectionMonitorTestGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestGroup)(nil)).Elem()
}

func (i ConnectionMonitorTestGroupArray) ToConnectionMonitorTestGroupArrayOutput() ConnectionMonitorTestGroupArrayOutput {
	return i.ToConnectionMonitorTestGroupArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestGroupArray) ToConnectionMonitorTestGroupArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestGroupArrayOutput)
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestGroup)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupOutput) ToConnectionMonitorTestGroupOutput() ConnectionMonitorTestGroupOutput {
	return o
}

func (o ConnectionMonitorTestGroupOutput) ToConnectionMonitorTestGroupOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupOutput {
	return o
}

// List of destination endpoint names.
func (o ConnectionMonitorTestGroupOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// Value indicating whether test group is disabled.
func (o ConnectionMonitorTestGroupOutput) Disable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) *bool { return v.Disable }).(pulumi.BoolPtrOutput)
}

// The name of the connection monitor test group.
func (o ConnectionMonitorTestGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) string { return v.Name }).(pulumi.StringOutput)
}

// List of source endpoint names.
func (o ConnectionMonitorTestGroupOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// List of test configuration names.
func (o ConnectionMonitorTestGroupOutput) TestConfigurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) []string { return v.TestConfigurations }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorTestGroupArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestGroup)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupArrayOutput) ToConnectionMonitorTestGroupArrayOutput() ConnectionMonitorTestGroupArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupArrayOutput) ToConnectionMonitorTestGroupArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestGroup {
		return vs[0].([]ConnectionMonitorTestGroup)[vs[1].(int)]
	}).(ConnectionMonitorTestGroupOutput)
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupResponse struct {
	// List of destination endpoint names.
	Destinations []string `pulumi:"destinations"`
	// Value indicating whether test group is disabled.
	Disable *bool `pulumi:"disable"`
	// The name of the connection monitor test group.
	Name string `pulumi:"name"`
	// List of source endpoint names.
	Sources []string `pulumi:"sources"`
	// List of test configuration names.
	TestConfigurations []string `pulumi:"testConfigurations"`
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestGroupResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupResponseOutput) ToConnectionMonitorTestGroupResponseOutput() ConnectionMonitorTestGroupResponseOutput {
	return o
}

func (o ConnectionMonitorTestGroupResponseOutput) ToConnectionMonitorTestGroupResponseOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupResponseOutput {
	return o
}

// List of destination endpoint names.
func (o ConnectionMonitorTestGroupResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// Value indicating whether test group is disabled.
func (o ConnectionMonitorTestGroupResponseOutput) Disable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) *bool { return v.Disable }).(pulumi.BoolPtrOutput)
}

// The name of the connection monitor test group.
func (o ConnectionMonitorTestGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// List of source endpoint names.
func (o ConnectionMonitorTestGroupResponseOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// List of test configuration names.
func (o ConnectionMonitorTestGroupResponseOutput) TestConfigurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) []string { return v.TestConfigurations }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorTestGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestGroupResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupResponseArrayOutput) ToConnectionMonitorTestGroupResponseArrayOutput() ConnectionMonitorTestGroupResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupResponseArrayOutput) ToConnectionMonitorTestGroupResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestGroupResponse {
		return vs[0].([]ConnectionMonitorTestGroupResponse)[vs[1].(int)]
	}).(ConnectionMonitorTestGroupResponseOutput)
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettings struct {
	// Log analytics workspace resource ID.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// ConnectionMonitorWorkspaceSettingsInput is an input type that accepts ConnectionMonitorWorkspaceSettingsArgs and ConnectionMonitorWorkspaceSettingsOutput values.
// You can construct a concrete instance of `ConnectionMonitorWorkspaceSettingsInput` via:
//
//	ConnectionMonitorWorkspaceSettingsArgs{...}
type ConnectionMonitorWorkspaceSettingsInput interface {
	pulumi.Input

	ToConnectionMonitorWorkspaceSettingsOutput() ConnectionMonitorWorkspaceSettingsOutput
	ToConnectionMonitorWorkspaceSettingsOutputWithContext(context.Context) ConnectionMonitorWorkspaceSettingsOutput
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsArgs struct {
	// Log analytics workspace resource ID.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (ConnectionMonitorWorkspaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsOutput() ConnectionMonitorWorkspaceSettingsOutput {
	return i.ToConnectionMonitorWorkspaceSettingsOutputWithContext(context.Background())
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsOutput)
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return i.ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsOutput).ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx)
}

// ConnectionMonitorWorkspaceSettingsPtrInput is an input type that accepts ConnectionMonitorWorkspaceSettingsArgs, ConnectionMonitorWorkspaceSettingsPtr and ConnectionMonitorWorkspaceSettingsPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorWorkspaceSettingsPtrInput` via:
//
//	        ConnectionMonitorWorkspaceSettingsArgs{...}
//
//	or:
//
//	        nil
type ConnectionMonitorWorkspaceSettingsPtrInput interface {
	pulumi.Input

	ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput
	ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput
}

type connectionMonitorWorkspaceSettingsPtrType ConnectionMonitorWorkspaceSettingsArgs

func ConnectionMonitorWorkspaceSettingsPtr(v *ConnectionMonitorWorkspaceSettingsArgs) ConnectionMonitorWorkspaceSettingsPtrInput {
	return (*connectionMonitorWorkspaceSettingsPtrType)(v)
}

func (*connectionMonitorWorkspaceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (i *connectionMonitorWorkspaceSettingsPtrType) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return i.ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorWorkspaceSettingsPtrType) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsOutput() ConnectionMonitorWorkspaceSettingsOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o.ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionMonitorWorkspaceSettings) *ConnectionMonitorWorkspaceSettings {
		return &v
	}).(ConnectionMonitorWorkspaceSettingsPtrOutput)
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorWorkspaceSettings) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorWorkspaceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsPtrOutput) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsPtrOutput) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsPtrOutput) Elem() ConnectionMonitorWorkspaceSettingsOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettings) ConnectionMonitorWorkspaceSettings {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorWorkspaceSettings
		return ret
	}).(ConnectionMonitorWorkspaceSettingsOutput)
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsPtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettings) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsResponse struct {
	// Log analytics workspace resource ID.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorWorkspaceSettingsResponse)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsResponseOutput) ToConnectionMonitorWorkspaceSettingsResponseOutput() ConnectionMonitorWorkspaceSettingsResponseOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsResponseOutput) ToConnectionMonitorWorkspaceSettingsResponseOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponseOutput {
	return o
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorWorkspaceSettingsResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorWorkspaceSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorWorkspaceSettingsResponse)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) ToConnectionMonitorWorkspaceSettingsResponsePtrOutput() ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) Elem() ConnectionMonitorWorkspaceSettingsResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettingsResponse) ConnectionMonitorWorkspaceSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionMonitorWorkspaceSettingsResponse
		return ret
	}).(ConnectionMonitorWorkspaceSettingsResponseOutput)
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Connectivity group item.
type ConnectivityGroupItem struct {
	// Group connectivity type.
	GroupConnectivity string `pulumi:"groupConnectivity"`
	// Flag if global is supported.
	IsGlobal *string `pulumi:"isGlobal"`
	// Network group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
	// Flag if need to use hub gateway.
	UseHubGateway *string `pulumi:"useHubGateway"`
}

// ConnectivityGroupItemInput is an input type that accepts ConnectivityGroupItemArgs and ConnectivityGroupItemOutput values.
// You can construct a concrete instance of `ConnectivityGroupItemInput` via:
//
//	ConnectivityGroupItemArgs{...}
type ConnectivityGroupItemInput interface {
	pulumi.Input

	ToConnectivityGroupItemOutput() ConnectivityGroupItemOutput
	ToConnectivityGroupItemOutputWithContext(context.Context) ConnectivityGroupItemOutput
}

// Connectivity group item.
type ConnectivityGroupItemArgs struct {
	// Group connectivity type.
	GroupConnectivity pulumi.StringInput `pulumi:"groupConnectivity"`
	// Flag if global is supported.
	IsGlobal pulumi.StringPtrInput `pulumi:"isGlobal"`
	// Network group Id.
	NetworkGroupId pulumi.StringInput `pulumi:"networkGroupId"`
	// Flag if need to use hub gateway.
	UseHubGateway pulumi.StringPtrInput `pulumi:"useHubGateway"`
}

func (ConnectivityGroupItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityGroupItem)(nil)).Elem()
}

func (i ConnectivityGroupItemArgs) ToConnectivityGroupItemOutput() ConnectivityGroupItemOutput {
	return i.ToConnectivityGroupItemOutputWithContext(context.Background())
}

func (i ConnectivityGroupItemArgs) ToConnectivityGroupItemOutputWithContext(ctx context.Context) ConnectivityGroupItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityGroupItemOutput)
}

// ConnectivityGroupItemArrayInput is an input type that accepts ConnectivityGroupItemArray and ConnectivityGroupItemArrayOutput values.
// You can construct a concrete instance of `ConnectivityGroupItemArrayInput` via:
//
//	ConnectivityGroupItemArray{ ConnectivityGroupItemArgs{...} }
type ConnectivityGroupItemArrayInput interface {
	pulumi.Input

	ToConnectivityGroupItemArrayOutput() ConnectivityGroupItemArrayOutput
	ToConnectivityGroupItemArrayOutputWithContext(context.Context) ConnectivityGroupItemArrayOutput
}

type ConnectivityGroupItemArray []ConnectivityGroupItemInput

func (ConnectivityGroupItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectivityGroupItem)(nil)).Elem()
}

func (i ConnectivityGroupItemArray) ToConnectivityGroupItemArrayOutput() ConnectivityGroupItemArrayOutput {
	return i.ToConnectivityGroupItemArrayOutputWithContext(context.Background())
}

func (i ConnectivityGroupItemArray) ToConnectivityGroupItemArrayOutputWithContext(ctx context.Context) ConnectivityGroupItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityGroupItemArrayOutput)
}

// Connectivity group item.
type ConnectivityGroupItemOutput struct{ *pulumi.OutputState }

func (ConnectivityGroupItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityGroupItem)(nil)).Elem()
}

func (o ConnectivityGroupItemOutput) ToConnectivityGroupItemOutput() ConnectivityGroupItemOutput {
	return o
}

func (o ConnectivityGroupItemOutput) ToConnectivityGroupItemOutputWithContext(ctx context.Context) ConnectivityGroupItemOutput {
	return o
}

// Group connectivity type.
func (o ConnectivityGroupItemOutput) GroupConnectivity() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityGroupItem) string { return v.GroupConnectivity }).(pulumi.StringOutput)
}

// Flag if global is supported.
func (o ConnectivityGroupItemOutput) IsGlobal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityGroupItem) *string { return v.IsGlobal }).(pulumi.StringPtrOutput)
}

// Network group Id.
func (o ConnectivityGroupItemOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityGroupItem) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

// Flag if need to use hub gateway.
func (o ConnectivityGroupItemOutput) UseHubGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityGroupItem) *string { return v.UseHubGateway }).(pulumi.StringPtrOutput)
}

type ConnectivityGroupItemArrayOutput struct{ *pulumi.OutputState }

func (ConnectivityGroupItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectivityGroupItem)(nil)).Elem()
}

func (o ConnectivityGroupItemArrayOutput) ToConnectivityGroupItemArrayOutput() ConnectivityGroupItemArrayOutput {
	return o
}

func (o ConnectivityGroupItemArrayOutput) ToConnectivityGroupItemArrayOutputWithContext(ctx context.Context) ConnectivityGroupItemArrayOutput {
	return o
}

func (o ConnectivityGroupItemArrayOutput) Index(i pulumi.IntInput) ConnectivityGroupItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectivityGroupItem {
		return vs[0].([]ConnectivityGroupItem)[vs[1].(int)]
	}).(ConnectivityGroupItemOutput)
}

// Connectivity group item.
type ConnectivityGroupItemResponse struct {
	// Group connectivity type.
	GroupConnectivity string `pulumi:"groupConnectivity"`
	// Flag if global is supported.
	IsGlobal *string `pulumi:"isGlobal"`
	// Network group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
	// Flag if need to use hub gateway.
	UseHubGateway *string `pulumi:"useHubGateway"`
}

// Connectivity group item.
type ConnectivityGroupItemResponseOutput struct{ *pulumi.OutputState }

func (ConnectivityGroupItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityGroupItemResponse)(nil)).Elem()
}

func (o ConnectivityGroupItemResponseOutput) ToConnectivityGroupItemResponseOutput() ConnectivityGroupItemResponseOutput {
	return o
}

func (o ConnectivityGroupItemResponseOutput) ToConnectivityGroupItemResponseOutputWithContext(ctx context.Context) ConnectivityGroupItemResponseOutput {
	return o
}

// Group connectivity type.
func (o ConnectivityGroupItemResponseOutput) GroupConnectivity() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) string { return v.GroupConnectivity }).(pulumi.StringOutput)
}

// Flag if global is supported.
func (o ConnectivityGroupItemResponseOutput) IsGlobal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) *string { return v.IsGlobal }).(pulumi.StringPtrOutput)
}

// Network group Id.
func (o ConnectivityGroupItemResponseOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

// Flag if need to use hub gateway.
func (o ConnectivityGroupItemResponseOutput) UseHubGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) *string { return v.UseHubGateway }).(pulumi.StringPtrOutput)
}

type ConnectivityGroupItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectivityGroupItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectivityGroupItemResponse)(nil)).Elem()
}

func (o ConnectivityGroupItemResponseArrayOutput) ToConnectivityGroupItemResponseArrayOutput() ConnectivityGroupItemResponseArrayOutput {
	return o
}

func (o ConnectivityGroupItemResponseArrayOutput) ToConnectivityGroupItemResponseArrayOutputWithContext(ctx context.Context) ConnectivityGroupItemResponseArrayOutput {
	return o
}

func (o ConnectivityGroupItemResponseArrayOutput) Index(i pulumi.IntInput) ConnectivityGroupItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectivityGroupItemResponse {
		return vs[0].([]ConnectivityGroupItemResponse)[vs[1].(int)]
	}).(ConnectivityGroupItemResponseOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfiguration struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces []SubResource `pulumi:"containerNetworkInterfaces"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations []IPConfigurationProfile `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ContainerNetworkInterfaceConfigurationInput is an input type that accepts ContainerNetworkInterfaceConfigurationArgs and ContainerNetworkInterfaceConfigurationOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationInput` via:
//
//	ContainerNetworkInterfaceConfigurationArgs{...}
type ContainerNetworkInterfaceConfigurationInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput
	ToContainerNetworkInterfaceConfigurationOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationOutput
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationArgs struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces SubResourceArrayInput `pulumi:"containerNetworkInterfaces"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations IPConfigurationProfileArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ContainerNetworkInterfaceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput {
	return i.ToContainerNetworkInterfaceConfigurationOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationOutput)
}

// ContainerNetworkInterfaceConfigurationArrayInput is an input type that accepts ContainerNetworkInterfaceConfigurationArray and ContainerNetworkInterfaceConfigurationArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationArrayInput` via:
//
//	ContainerNetworkInterfaceConfigurationArray{ ContainerNetworkInterfaceConfigurationArgs{...} }
type ContainerNetworkInterfaceConfigurationArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput
	ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationArrayOutput
}

type ContainerNetworkInterfaceConfigurationArray []ContainerNetworkInterfaceConfigurationInput

func (ContainerNetworkInterfaceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationArray) ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput {
	return i.ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationArray) ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationArrayOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationOutput {
	return o
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationOutput) ContainerNetworkInterfaces() SubResourceArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) []SubResource { return v.ContainerNetworkInterfaces }).(SubResourceArrayOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationOutput) IpConfigurations() IPConfigurationProfileArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) []IPConfigurationProfile { return v.IpConfigurations }).(IPConfigurationProfileArrayOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ContainerNetworkInterfaceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceConfiguration {
		return vs[0].([]ContainerNetworkInterfaceConfiguration)[vs[1].(int)]
	}).(ContainerNetworkInterfaceConfigurationOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponse struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces []SubResourceResponse `pulumi:"containerNetworkInterfaces"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations []IPConfigurationProfileResponse `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the container network interface configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponseOutput() ContainerNetworkInterfaceConfigurationResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseOutput {
	return o
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) ContainerNetworkInterfaces() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) []SubResourceResponse {
		return v.ContainerNetworkInterfaces
	}).(SubResourceResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) IpConfigurations() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) []IPConfigurationProfileResponse {
		return v.IpConfigurations
	}).(IPConfigurationProfileResponseArrayOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the container network interface configuration resource.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) ToContainerNetworkInterfaceConfigurationResponseArrayOutput() ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceConfigurationResponse {
		return vs[0].([]ContainerNetworkInterfaceConfigurationResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the container network interface IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ToContainerNetworkInterfaceIpConfigurationResponseOutput() ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the container network interface IP configuration resource.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutput() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceIpConfigurationResponse {
		return vs[0].([]ContainerNetworkInterfaceIpConfigurationResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceIpConfigurationResponseOutput)
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponse struct {
	// Reference to the container to which this container network interface is attached.
	Container *ContainerResponse `pulumi:"container"`
	// Container network interface configuration from which this container network interface is created.
	ContainerNetworkInterfaceConfiguration ContainerNetworkInterfaceConfigurationResponse `pulumi:"containerNetworkInterfaceConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Reference to the ip configuration on this container nic.
	IpConfigurations []ContainerNetworkInterfaceIpConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the container network interface resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceResponseOutput) ToContainerNetworkInterfaceResponseOutput() ContainerNetworkInterfaceResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseOutput) ToContainerNetworkInterfaceResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseOutput {
	return o
}

// Reference to the container to which this container network interface is attached.
func (o ContainerNetworkInterfaceResponseOutput) Container() ContainerResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *ContainerResponse { return v.Container }).(ContainerResponsePtrOutput)
}

// Container network interface configuration from which this container network interface is created.
func (o ContainerNetworkInterfaceResponseOutput) ContainerNetworkInterfaceConfiguration() ContainerNetworkInterfaceConfigurationResponseOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) ContainerNetworkInterfaceConfigurationResponse {
		return v.ContainerNetworkInterfaceConfiguration
	}).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Reference to the ip configuration on this container nic.
func (o ContainerNetworkInterfaceResponseOutput) IpConfigurations() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) []ContainerNetworkInterfaceIpConfigurationResponse {
		return v.IpConfigurations
	}).(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the container network interface resource.
func (o ContainerNetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceResponseArrayOutput) ToContainerNetworkInterfaceResponseArrayOutput() ContainerNetworkInterfaceResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseArrayOutput) ToContainerNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceResponse {
		return vs[0].([]ContainerNetworkInterfaceResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceResponseOutput)
}

// Reference to container resource in remote resource provider.
type ContainerResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to container resource in remote resource provider.
type ContainerResponseOutput struct{ *pulumi.OutputState }

func (ContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResponse)(nil)).Elem()
}

func (o ContainerResponseOutput) ToContainerResponseOutput() ContainerResponseOutput {
	return o
}

func (o ContainerResponseOutput) ToContainerResponseOutputWithContext(ctx context.Context) ContainerResponseOutput {
	return o
}

// Resource ID.
func (o ContainerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResponse)(nil)).Elem()
}

func (o ContainerResponsePtrOutput) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return o
}

func (o ContainerResponsePtrOutput) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return o
}

func (o ContainerResponsePtrOutput) Elem() ContainerResponseOutput {
	return o.ApplyT(func(v *ContainerResponse) ContainerResponse {
		if v != nil {
			return *v
		}
		var ret ContainerResponse
		return ret
	}).(ContainerResponseOutput)
}

// Resource ID.
func (o ContainerResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A matching criteria which matches routes based on route prefix, community, and AS path.
type Criterion struct {
	// List of AS paths which this criteria matches.
	AsPath []string `pulumi:"asPath"`
	// List of BGP communities which this criteria matches.
	Community []string `pulumi:"community"`
	// Match condition to apply RouteMap rules.
	MatchCondition *string `pulumi:"matchCondition"`
	// List of route prefixes which this criteria matches.
	RoutePrefix []string `pulumi:"routePrefix"`
}

// CriterionInput is an input type that accepts CriterionArgs and CriterionOutput values.
// You can construct a concrete instance of `CriterionInput` via:
//
//	CriterionArgs{...}
type CriterionInput interface {
	pulumi.Input

	ToCriterionOutput() CriterionOutput
	ToCriterionOutputWithContext(context.Context) CriterionOutput
}

// A matching criteria which matches routes based on route prefix, community, and AS path.
type CriterionArgs struct {
	// List of AS paths which this criteria matches.
	AsPath pulumi.StringArrayInput `pulumi:"asPath"`
	// List of BGP communities which this criteria matches.
	Community pulumi.StringArrayInput `pulumi:"community"`
	// Match condition to apply RouteMap rules.
	MatchCondition pulumi.StringPtrInput `pulumi:"matchCondition"`
	// List of route prefixes which this criteria matches.
	RoutePrefix pulumi.StringArrayInput `pulumi:"routePrefix"`
}

func (CriterionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Criterion)(nil)).Elem()
}

func (i CriterionArgs) ToCriterionOutput() CriterionOutput {
	return i.ToCriterionOutputWithContext(context.Background())
}

func (i CriterionArgs) ToCriterionOutputWithContext(ctx context.Context) CriterionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CriterionOutput)
}

// CriterionArrayInput is an input type that accepts CriterionArray and CriterionArrayOutput values.
// You can construct a concrete instance of `CriterionArrayInput` via:
//
//	CriterionArray{ CriterionArgs{...} }
type CriterionArrayInput interface {
	pulumi.Input

	ToCriterionArrayOutput() CriterionArrayOutput
	ToCriterionArrayOutputWithContext(context.Context) CriterionArrayOutput
}

type CriterionArray []CriterionInput

func (CriterionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Criterion)(nil)).Elem()
}

func (i CriterionArray) ToCriterionArrayOutput() CriterionArrayOutput {
	return i.ToCriterionArrayOutputWithContext(context.Background())
}

func (i CriterionArray) ToCriterionArrayOutputWithContext(ctx context.Context) CriterionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CriterionArrayOutput)
}

// A matching criteria which matches routes based on route prefix, community, and AS path.
type CriterionOutput struct{ *pulumi.OutputState }

func (CriterionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Criterion)(nil)).Elem()
}

func (o CriterionOutput) ToCriterionOutput() CriterionOutput {
	return o
}

func (o CriterionOutput) ToCriterionOutputWithContext(ctx context.Context) CriterionOutput {
	return o
}

// List of AS paths which this criteria matches.
func (o CriterionOutput) AsPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Criterion) []string { return v.AsPath }).(pulumi.StringArrayOutput)
}

// List of BGP communities which this criteria matches.
func (o CriterionOutput) Community() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Criterion) []string { return v.Community }).(pulumi.StringArrayOutput)
}

// Match condition to apply RouteMap rules.
func (o CriterionOutput) MatchCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Criterion) *string { return v.MatchCondition }).(pulumi.StringPtrOutput)
}

// List of route prefixes which this criteria matches.
func (o CriterionOutput) RoutePrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Criterion) []string { return v.RoutePrefix }).(pulumi.StringArrayOutput)
}

type CriterionArrayOutput struct{ *pulumi.OutputState }

func (CriterionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Criterion)(nil)).Elem()
}

func (o CriterionArrayOutput) ToCriterionArrayOutput() CriterionArrayOutput {
	return o
}

func (o CriterionArrayOutput) ToCriterionArrayOutputWithContext(ctx context.Context) CriterionArrayOutput {
	return o
}

func (o CriterionArrayOutput) Index(i pulumi.IntInput) CriterionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Criterion {
		return vs[0].([]Criterion)[vs[1].(int)]
	}).(CriterionOutput)
}

// A matching criteria which matches routes based on route prefix, community, and AS path.
type CriterionResponse struct {
	// List of AS paths which this criteria matches.
	AsPath []string `pulumi:"asPath"`
	// List of BGP communities which this criteria matches.
	Community []string `pulumi:"community"`
	// Match condition to apply RouteMap rules.
	MatchCondition *string `pulumi:"matchCondition"`
	// List of route prefixes which this criteria matches.
	RoutePrefix []string `pulumi:"routePrefix"`
}

// A matching criteria which matches routes based on route prefix, community, and AS path.
type CriterionResponseOutput struct{ *pulumi.OutputState }

func (CriterionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CriterionResponse)(nil)).Elem()
}

func (o CriterionResponseOutput) ToCriterionResponseOutput() CriterionResponseOutput {
	return o
}

func (o CriterionResponseOutput) ToCriterionResponseOutputWithContext(ctx context.Context) CriterionResponseOutput {
	return o
}

// List of AS paths which this criteria matches.
func (o CriterionResponseOutput) AsPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CriterionResponse) []string { return v.AsPath }).(pulumi.StringArrayOutput)
}

// List of BGP communities which this criteria matches.
func (o CriterionResponseOutput) Community() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CriterionResponse) []string { return v.Community }).(pulumi.StringArrayOutput)
}

// Match condition to apply RouteMap rules.
func (o CriterionResponseOutput) MatchCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CriterionResponse) *string { return v.MatchCondition }).(pulumi.StringPtrOutput)
}

// List of route prefixes which this criteria matches.
func (o CriterionResponseOutput) RoutePrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CriterionResponse) []string { return v.RoutePrefix }).(pulumi.StringArrayOutput)
}

type CriterionResponseArrayOutput struct{ *pulumi.OutputState }

func (CriterionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CriterionResponse)(nil)).Elem()
}

func (o CriterionResponseArrayOutput) ToCriterionResponseArrayOutput() CriterionResponseArrayOutput {
	return o
}

func (o CriterionResponseArrayOutput) ToCriterionResponseArrayOutputWithContext(ctx context.Context) CriterionResponseArrayOutput {
	return o
}

func (o CriterionResponseArrayOutput) Index(i pulumi.IntInput) CriterionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CriterionResponse {
		return vs[0].([]CriterionResponse)[vs[1].(int)]
	}).(CriterionResponseOutput)
}

// Cross tenant scopes.
type CrossTenantScopesResponse struct {
	// List of management groups.
	ManagementGroups []string `pulumi:"managementGroups"`
	// List of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// Cross tenant scopes.
type CrossTenantScopesResponseOutput struct{ *pulumi.OutputState }

func (CrossTenantScopesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossTenantScopesResponse)(nil)).Elem()
}

func (o CrossTenantScopesResponseOutput) ToCrossTenantScopesResponseOutput() CrossTenantScopesResponseOutput {
	return o
}

func (o CrossTenantScopesResponseOutput) ToCrossTenantScopesResponseOutputWithContext(ctx context.Context) CrossTenantScopesResponseOutput {
	return o
}

// List of management groups.
func (o CrossTenantScopesResponseOutput) ManagementGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CrossTenantScopesResponse) []string { return v.ManagementGroups }).(pulumi.StringArrayOutput)
}

// List of subscriptions.
func (o CrossTenantScopesResponseOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CrossTenantScopesResponse) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

// Tenant ID.
func (o CrossTenantScopesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v CrossTenantScopesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type CrossTenantScopesResponseArrayOutput struct{ *pulumi.OutputState }

func (CrossTenantScopesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrossTenantScopesResponse)(nil)).Elem()
}

func (o CrossTenantScopesResponseArrayOutput) ToCrossTenantScopesResponseArrayOutput() CrossTenantScopesResponseArrayOutput {
	return o
}

func (o CrossTenantScopesResponseArrayOutput) ToCrossTenantScopesResponseArrayOutputWithContext(ctx context.Context) CrossTenantScopesResponseArrayOutput {
	return o
}

func (o CrossTenantScopesResponseArrayOutput) Index(i pulumi.IntInput) CrossTenantScopesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CrossTenantScopesResponse {
		return vs[0].([]CrossTenantScopesResponse)[vs[1].(int)]
	}).(CrossTenantScopesResponseOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormat struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// CustomDnsConfigPropertiesFormatInput is an input type that accepts CustomDnsConfigPropertiesFormatArgs and CustomDnsConfigPropertiesFormatOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatInput` via:
//
//	CustomDnsConfigPropertiesFormatArgs{...}
type CustomDnsConfigPropertiesFormatInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput
	ToCustomDnsConfigPropertiesFormatOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatOutput
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatArgs struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (CustomDnsConfigPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatArgs) ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput {
	return i.ToCustomDnsConfigPropertiesFormatOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatArgs) ToCustomDnsConfigPropertiesFormatOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatOutput)
}

// CustomDnsConfigPropertiesFormatArrayInput is an input type that accepts CustomDnsConfigPropertiesFormatArray and CustomDnsConfigPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatArrayInput` via:
//
//	CustomDnsConfigPropertiesFormatArray{ CustomDnsConfigPropertiesFormatArgs{...} }
type CustomDnsConfigPropertiesFormatArrayInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput
	ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatArrayOutput
}

type CustomDnsConfigPropertiesFormatArray []CustomDnsConfigPropertiesFormatInput

func (CustomDnsConfigPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatArray) ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput {
	return i.ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatArray) ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatArrayOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatOutput) ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatOutput) ToCustomDnsConfigPropertiesFormatOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o CustomDnsConfigPropertiesFormatOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormat) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A list of private ip addresses of the private endpoint.
func (o CustomDnsConfigPropertiesFormatOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormat) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type CustomDnsConfigPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) Index(i pulumi.IntInput) CustomDnsConfigPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDnsConfigPropertiesFormat {
		return vs[0].([]CustomDnsConfigPropertiesFormat)[vs[1].(int)]
	}).(CustomDnsConfigPropertiesFormatOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponse struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutput() CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o CustomDnsConfigPropertiesFormatResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A list of private ip addresses of the private endpoint.
func (o CustomDnsConfigPropertiesFormatResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type CustomDnsConfigPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutput() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) CustomDnsConfigPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDnsConfigPropertiesFormatResponse {
		return vs[0].([]CustomDnsConfigPropertiesFormatResponse)[vs[1].(int)]
	}).(CustomDnsConfigPropertiesFormatResponseOutput)
}

// Https settings for a domain
type CustomHttpsConfigurationResponse struct {
	// Defines the source of the SSL certificate
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the type of the certificate used for secure connections to a frontendEndpoint
	CertificateType *string `pulumi:"certificateType"`
	// The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
	MinimumTlsVersion string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery
	ProtocolType string `pulumi:"protocolType"`
	// The name of the Key Vault secret representing the full certificate PFX
	SecretName *string `pulumi:"secretName"`
	// The version of the Key Vault secret representing the full certificate PFX
	SecretVersion *string `pulumi:"secretVersion"`
	// The Key Vault containing the SSL certificate
	Vault *KeyVaultCertificateSourceParametersResponseVault `pulumi:"vault"`
}

// Https settings for a domain
type CustomHttpsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CustomHttpsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHttpsConfigurationResponse)(nil)).Elem()
}

func (o CustomHttpsConfigurationResponseOutput) ToCustomHttpsConfigurationResponseOutput() CustomHttpsConfigurationResponseOutput {
	return o
}

func (o CustomHttpsConfigurationResponseOutput) ToCustomHttpsConfigurationResponseOutputWithContext(ctx context.Context) CustomHttpsConfigurationResponseOutput {
	return o
}

// Defines the source of the SSL certificate
func (o CustomHttpsConfigurationResponseOutput) CertificateSource() pulumi.StringOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) string { return v.CertificateSource }).(pulumi.StringOutput)
}

// Defines the type of the certificate used for secure connections to a frontendEndpoint
func (o CustomHttpsConfigurationResponseOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *string { return v.CertificateType }).(pulumi.StringPtrOutput)
}

// The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
func (o CustomHttpsConfigurationResponseOutput) MinimumTlsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) string { return v.MinimumTlsVersion }).(pulumi.StringOutput)
}

// Defines the TLS extension protocol that is used for secure delivery
func (o CustomHttpsConfigurationResponseOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// The name of the Key Vault secret representing the full certificate PFX
func (o CustomHttpsConfigurationResponseOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// The version of the Key Vault secret representing the full certificate PFX
func (o CustomHttpsConfigurationResponseOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *string { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// The Key Vault containing the SSL certificate
func (o CustomHttpsConfigurationResponseOutput) Vault() KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *KeyVaultCertificateSourceParametersResponseVault {
		return v.Vault
	}).(KeyVaultCertificateSourceParametersResponseVaultPtrOutput)
}

// Defines contents of a web application rule
type CustomRule struct {
	// Describes what action to be applied when rule matches.
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []FrontDoorMatchCondition `pulumi:"matchConditions"`
	// Describes the name of the rule.
	Name *string `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Time window for resetting the rate limit count. Default is 1 minute.
	RateLimitDurationInMinutes *int `pulumi:"rateLimitDurationInMinutes"`
	// Number of allowed requests per client within the time window.
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// Describes type of rule.
	RuleType string `pulumi:"ruleType"`
}

// CustomRuleInput is an input type that accepts CustomRuleArgs and CustomRuleOutput values.
// You can construct a concrete instance of `CustomRuleInput` via:
//
//	CustomRuleArgs{...}
type CustomRuleInput interface {
	pulumi.Input

	ToCustomRuleOutput() CustomRuleOutput
	ToCustomRuleOutputWithContext(context.Context) CustomRuleOutput
}

// Defines contents of a web application rule
type CustomRuleArgs struct {
	// Describes what action to be applied when rule matches.
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions FrontDoorMatchConditionArrayInput `pulumi:"matchConditions"`
	// Describes the name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Time window for resetting the rate limit count. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntPtrInput `pulumi:"rateLimitDurationInMinutes"`
	// Number of allowed requests per client within the time window.
	RateLimitThreshold pulumi.IntPtrInput `pulumi:"rateLimitThreshold"`
	// Describes type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (CustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (i CustomRuleArgs) ToCustomRuleOutput() CustomRuleOutput {
	return i.ToCustomRuleOutputWithContext(context.Background())
}

func (i CustomRuleArgs) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleOutput)
}

// CustomRuleArrayInput is an input type that accepts CustomRuleArray and CustomRuleArrayOutput values.
// You can construct a concrete instance of `CustomRuleArrayInput` via:
//
//	CustomRuleArray{ CustomRuleArgs{...} }
type CustomRuleArrayInput interface {
	pulumi.Input

	ToCustomRuleArrayOutput() CustomRuleArrayOutput
	ToCustomRuleArrayOutputWithContext(context.Context) CustomRuleArrayOutput
}

type CustomRuleArray []CustomRuleInput

func (CustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (i CustomRuleArray) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return i.ToCustomRuleArrayOutputWithContext(context.Background())
}

func (i CustomRuleArray) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleArrayOutput)
}

// Defines contents of a web application rule
type CustomRuleOutput struct{ *pulumi.OutputState }

func (CustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (o CustomRuleOutput) ToCustomRuleOutput() CustomRuleOutput {
	return o
}

func (o CustomRuleOutput) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return o
}

// Describes what action to be applied when rule matches.
func (o CustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleOutput) MatchConditions() FrontDoorMatchConditionArrayOutput {
	return o.ApplyT(func(v CustomRule) []FrontDoorMatchCondition { return v.MatchConditions }).(FrontDoorMatchConditionArrayOutput)
}

// Describes the name of the rule.
func (o CustomRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o CustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Time window for resetting the rate limit count. Default is 1 minute.
func (o CustomRuleOutput) RateLimitDurationInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRule) *int { return v.RateLimitDurationInMinutes }).(pulumi.IntPtrOutput)
}

// Number of allowed requests per client within the time window.
func (o CustomRuleOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRule) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// Describes type of rule.
func (o CustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type CustomRuleArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) Index(i pulumi.IntInput) CustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRule {
		return vs[0].([]CustomRule)[vs[1].(int)]
	}).(CustomRuleOutput)
}

// Defines contents of custom rules
type CustomRuleList struct {
	// List of rules
	Rules []CustomRule `pulumi:"rules"`
}

// CustomRuleListInput is an input type that accepts CustomRuleListArgs and CustomRuleListOutput values.
// You can construct a concrete instance of `CustomRuleListInput` via:
//
//	CustomRuleListArgs{...}
type CustomRuleListInput interface {
	pulumi.Input

	ToCustomRuleListOutput() CustomRuleListOutput
	ToCustomRuleListOutputWithContext(context.Context) CustomRuleListOutput
}

// Defines contents of custom rules
type CustomRuleListArgs struct {
	// List of rules
	Rules CustomRuleArrayInput `pulumi:"rules"`
}

func (CustomRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (i CustomRuleListArgs) ToCustomRuleListOutput() CustomRuleListOutput {
	return i.ToCustomRuleListOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput)
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput).ToCustomRuleListPtrOutputWithContext(ctx)
}

// CustomRuleListPtrInput is an input type that accepts CustomRuleListArgs, CustomRuleListPtr and CustomRuleListPtrOutput values.
// You can construct a concrete instance of `CustomRuleListPtrInput` via:
//
//	        CustomRuleListArgs{...}
//
//	or:
//
//	        nil
type CustomRuleListPtrInput interface {
	pulumi.Input

	ToCustomRuleListPtrOutput() CustomRuleListPtrOutput
	ToCustomRuleListPtrOutputWithContext(context.Context) CustomRuleListPtrOutput
}

type customRuleListPtrType CustomRuleListArgs

func CustomRuleListPtr(v *CustomRuleListArgs) CustomRuleListPtrInput {
	return (*customRuleListPtrType)(v)
}

func (*customRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListPtrOutput)
}

// Defines contents of custom rules
type CustomRuleListOutput struct{ *pulumi.OutputState }

func (CustomRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListOutput) ToCustomRuleListOutput() CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomRuleList) *CustomRuleList {
		return &v
	}).(CustomRuleListPtrOutput)
}

// List of rules
func (o CustomRuleListOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v CustomRuleList) []CustomRule { return v.Rules }).(CustomRuleArrayOutput)
}

type CustomRuleListPtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) Elem() CustomRuleListOutput {
	return o.ApplyT(func(v *CustomRuleList) CustomRuleList {
		if v != nil {
			return *v
		}
		var ret CustomRuleList
		return ret
	}).(CustomRuleListOutput)
}

// List of rules
func (o CustomRuleListPtrOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v *CustomRuleList) []CustomRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleArrayOutput)
}

// Defines contents of custom rules
type CustomRuleListResponse struct {
	// List of rules
	Rules []CustomRuleResponse `pulumi:"rules"`
}

// Defines contents of custom rules
type CustomRuleListResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return o
}

// List of rules
func (o CustomRuleListResponseOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleListResponse) []CustomRuleResponse { return v.Rules }).(CustomRuleResponseArrayOutput)
}

type CustomRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) Elem() CustomRuleListResponseOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) CustomRuleListResponse {
		if v != nil {
			return *v
		}
		var ret CustomRuleListResponse
		return ret
	}).(CustomRuleListResponseOutput)
}

// List of rules
func (o CustomRuleListResponsePtrOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) []CustomRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleResponseArrayOutput)
}

// Defines contents of a web application rule
type CustomRuleResponse struct {
	// Describes what action to be applied when rule matches.
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []FrontDoorMatchConditionResponse `pulumi:"matchConditions"`
	// Describes the name of the rule.
	Name *string `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Time window for resetting the rate limit count. Default is 1 minute.
	RateLimitDurationInMinutes *int `pulumi:"rateLimitDurationInMinutes"`
	// Number of allowed requests per client within the time window.
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// Describes type of rule.
	RuleType string `pulumi:"ruleType"`
}

// Defines contents of a web application rule
type CustomRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return o
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches.
func (o CustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleResponseOutput) MatchConditions() FrontDoorMatchConditionResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleResponse) []FrontDoorMatchConditionResponse { return v.MatchConditions }).(FrontDoorMatchConditionResponseArrayOutput)
}

// Describes the name of the rule.
func (o CustomRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o CustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Time window for resetting the rate limit count. Default is 1 minute.
func (o CustomRuleResponseOutput) RateLimitDurationInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *int { return v.RateLimitDurationInMinutes }).(pulumi.IntPtrOutput)
}

// Number of allowed requests per client within the time window.
func (o CustomRuleResponseOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// Describes type of rule.
func (o CustomRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

type CustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) Index(i pulumi.IntInput) CustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleResponse {
		return vs[0].([]CustomRuleResponse)[vs[1].(int)]
	}).(CustomRuleResponseOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettings struct {
	// The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
	DdosProtectionPlan *SubResource `pulumi:"ddosProtectionPlan"`
	// The DDoS protection mode of the public IP
	ProtectionMode *string `pulumi:"protectionMode"`
}

// DdosSettingsInput is an input type that accepts DdosSettingsArgs and DdosSettingsOutput values.
// You can construct a concrete instance of `DdosSettingsInput` via:
//
//	DdosSettingsArgs{...}
type DdosSettingsInput interface {
	pulumi.Input

	ToDdosSettingsOutput() DdosSettingsOutput
	ToDdosSettingsOutputWithContext(context.Context) DdosSettingsOutput
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsArgs struct {
	// The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
	DdosProtectionPlan SubResourcePtrInput `pulumi:"ddosProtectionPlan"`
	// The DDoS protection mode of the public IP
	ProtectionMode pulumi.StringPtrInput `pulumi:"protectionMode"`
}

func (DdosSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (i DdosSettingsArgs) ToDdosSettingsOutput() DdosSettingsOutput {
	return i.ToDdosSettingsOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput)
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput).ToDdosSettingsPtrOutputWithContext(ctx)
}

// DdosSettingsPtrInput is an input type that accepts DdosSettingsArgs, DdosSettingsPtr and DdosSettingsPtrOutput values.
// You can construct a concrete instance of `DdosSettingsPtrInput` via:
//
//	        DdosSettingsArgs{...}
//
//	or:
//
//	        nil
type DdosSettingsPtrInput interface {
	pulumi.Input

	ToDdosSettingsPtrOutput() DdosSettingsPtrOutput
	ToDdosSettingsPtrOutputWithContext(context.Context) DdosSettingsPtrOutput
}

type ddosSettingsPtrType DdosSettingsArgs

func DdosSettingsPtr(v *DdosSettingsArgs) DdosSettingsPtrInput {
	return (*ddosSettingsPtrType)(v)
}

func (*ddosSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsOutput struct{ *pulumi.OutputState }

func (DdosSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (o DdosSettingsOutput) ToDdosSettingsOutput() DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DdosSettings) *DdosSettings {
		return &v
	}).(DdosSettingsPtrOutput)
}

// The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
func (o DdosSettingsOutput) DdosProtectionPlan() SubResourcePtrOutput {
	return o.ApplyT(func(v DdosSettings) *SubResource { return v.DdosProtectionPlan }).(SubResourcePtrOutput)
}

// The DDoS protection mode of the public IP
func (o DdosSettingsOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettings) *string { return v.ProtectionMode }).(pulumi.StringPtrOutput)
}

type DdosSettingsPtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) Elem() DdosSettingsOutput {
	return o.ApplyT(func(v *DdosSettings) DdosSettings {
		if v != nil {
			return *v
		}
		var ret DdosSettings
		return ret
	}).(DdosSettingsOutput)
}

// The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
func (o DdosSettingsPtrOutput) DdosProtectionPlan() SubResourcePtrOutput {
	return o.ApplyT(func(v *DdosSettings) *SubResource {
		if v == nil {
			return nil
		}
		return v.DdosProtectionPlan
	}).(SubResourcePtrOutput)
}

// The DDoS protection mode of the public IP
func (o DdosSettingsPtrOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionMode
	}).(pulumi.StringPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponse struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResourceResponse `pulumi:"ddosCustomPolicy"`
	// The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
	DdosProtectionPlan *SubResourceResponse `pulumi:"ddosProtectionPlan"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
	// The DDoS protection mode of the public IP
	ProtectionMode *string `pulumi:"protectionMode"`
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponseOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutput() DdosSettingsResponseOutput {
	return o
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutputWithContext(ctx context.Context) DdosSettingsResponseOutput {
	return o
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponseOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *SubResourceResponse { return v.DdosCustomPolicy }).(SubResourceResponsePtrOutput)
}

// The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
func (o DdosSettingsResponseOutput) DdosProtectionPlan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *SubResourceResponse { return v.DdosProtectionPlan }).(SubResourceResponsePtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponseOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

// The DDoS protection mode of the public IP
func (o DdosSettingsResponseOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *string { return v.ProtectionMode }).(pulumi.StringPtrOutput)
}

type DdosSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) Elem() DdosSettingsResponseOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) DdosSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DdosSettingsResponse
		return ret
	}).(DdosSettingsResponseOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponsePtrOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourceResponsePtrOutput)
}

// The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled
func (o DdosSettingsResponsePtrOutput) DdosProtectionPlan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DdosProtectionPlan
	}).(SubResourceResponsePtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponsePtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// The DDoS protection mode of the public IP
func (o DdosSettingsResponsePtrOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionMode
	}).(pulumi.StringPtrOutput)
}

// Details the service to which the subnet is delegated.
type Delegation struct {
	// Describes the actions permitted to the service upon delegation
	Actions []string `pulumi:"actions"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// DelegationInput is an input type that accepts DelegationArgs and DelegationOutput values.
// You can construct a concrete instance of `DelegationInput` via:
//
//	DelegationArgs{...}
type DelegationInput interface {
	pulumi.Input

	ToDelegationOutput() DelegationOutput
	ToDelegationOutputWithContext(context.Context) DelegationOutput
}

// Details the service to which the subnet is delegated.
type DelegationArgs struct {
	// Describes the actions permitted to the service upon delegation
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (i DelegationArgs) ToDelegationOutput() DelegationOutput {
	return i.ToDelegationOutputWithContext(context.Background())
}

func (i DelegationArgs) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationOutput)
}

// DelegationArrayInput is an input type that accepts DelegationArray and DelegationArrayOutput values.
// You can construct a concrete instance of `DelegationArrayInput` via:
//
//	DelegationArray{ DelegationArgs{...} }
type DelegationArrayInput interface {
	pulumi.Input

	ToDelegationArrayOutput() DelegationArrayOutput
	ToDelegationArrayOutputWithContext(context.Context) DelegationArrayOutput
}

type DelegationArray []DelegationInput

func (DelegationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (i DelegationArray) ToDelegationArrayOutput() DelegationArrayOutput {
	return i.ToDelegationArrayOutputWithContext(context.Background())
}

func (i DelegationArray) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationArrayOutput)
}

// Details the service to which the subnet is delegated.
type DelegationOutput struct{ *pulumi.OutputState }

func (DelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (o DelegationOutput) ToDelegationOutput() DelegationOutput {
	return o
}

func (o DelegationOutput) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return o
}

// Describes the actions permitted to the service upon delegation
func (o DelegationOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Delegation) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o DelegationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o DelegationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o DelegationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DelegationArrayOutput struct{ *pulumi.OutputState }

func (DelegationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (o DelegationArrayOutput) ToDelegationArrayOutput() DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) Index(i pulumi.IntInput) DelegationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Delegation {
		return vs[0].([]Delegation)[vs[1].(int)]
	}).(DelegationOutput)
}

// Properties of the delegation.
type DelegationProperties struct {
	// The service name to which the NVA is delegated.
	ServiceName *string `pulumi:"serviceName"`
}

// DelegationPropertiesInput is an input type that accepts DelegationPropertiesArgs and DelegationPropertiesOutput values.
// You can construct a concrete instance of `DelegationPropertiesInput` via:
//
//	DelegationPropertiesArgs{...}
type DelegationPropertiesInput interface {
	pulumi.Input

	ToDelegationPropertiesOutput() DelegationPropertiesOutput
	ToDelegationPropertiesOutputWithContext(context.Context) DelegationPropertiesOutput
}

// Properties of the delegation.
type DelegationPropertiesArgs struct {
	// The service name to which the NVA is delegated.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (DelegationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationProperties)(nil)).Elem()
}

func (i DelegationPropertiesArgs) ToDelegationPropertiesOutput() DelegationPropertiesOutput {
	return i.ToDelegationPropertiesOutputWithContext(context.Background())
}

func (i DelegationPropertiesArgs) ToDelegationPropertiesOutputWithContext(ctx context.Context) DelegationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationPropertiesOutput)
}

func (i DelegationPropertiesArgs) ToDelegationPropertiesPtrOutput() DelegationPropertiesPtrOutput {
	return i.ToDelegationPropertiesPtrOutputWithContext(context.Background())
}

func (i DelegationPropertiesArgs) ToDelegationPropertiesPtrOutputWithContext(ctx context.Context) DelegationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationPropertiesOutput).ToDelegationPropertiesPtrOutputWithContext(ctx)
}

// DelegationPropertiesPtrInput is an input type that accepts DelegationPropertiesArgs, DelegationPropertiesPtr and DelegationPropertiesPtrOutput values.
// You can construct a concrete instance of `DelegationPropertiesPtrInput` via:
//
//	        DelegationPropertiesArgs{...}
//
//	or:
//
//	        nil
type DelegationPropertiesPtrInput interface {
	pulumi.Input

	ToDelegationPropertiesPtrOutput() DelegationPropertiesPtrOutput
	ToDelegationPropertiesPtrOutputWithContext(context.Context) DelegationPropertiesPtrOutput
}

type delegationPropertiesPtrType DelegationPropertiesArgs

func DelegationPropertiesPtr(v *DelegationPropertiesArgs) DelegationPropertiesPtrInput {
	return (*delegationPropertiesPtrType)(v)
}

func (*delegationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DelegationProperties)(nil)).Elem()
}

func (i *delegationPropertiesPtrType) ToDelegationPropertiesPtrOutput() DelegationPropertiesPtrOutput {
	return i.ToDelegationPropertiesPtrOutputWithContext(context.Background())
}

func (i *delegationPropertiesPtrType) ToDelegationPropertiesPtrOutputWithContext(ctx context.Context) DelegationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationPropertiesPtrOutput)
}

// Properties of the delegation.
type DelegationPropertiesOutput struct{ *pulumi.OutputState }

func (DelegationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationProperties)(nil)).Elem()
}

func (o DelegationPropertiesOutput) ToDelegationPropertiesOutput() DelegationPropertiesOutput {
	return o
}

func (o DelegationPropertiesOutput) ToDelegationPropertiesOutputWithContext(ctx context.Context) DelegationPropertiesOutput {
	return o
}

func (o DelegationPropertiesOutput) ToDelegationPropertiesPtrOutput() DelegationPropertiesPtrOutput {
	return o.ToDelegationPropertiesPtrOutputWithContext(context.Background())
}

func (o DelegationPropertiesOutput) ToDelegationPropertiesPtrOutputWithContext(ctx context.Context) DelegationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DelegationProperties) *DelegationProperties {
		return &v
	}).(DelegationPropertiesPtrOutput)
}

// The service name to which the NVA is delegated.
func (o DelegationPropertiesOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationProperties) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type DelegationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DelegationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DelegationProperties)(nil)).Elem()
}

func (o DelegationPropertiesPtrOutput) ToDelegationPropertiesPtrOutput() DelegationPropertiesPtrOutput {
	return o
}

func (o DelegationPropertiesPtrOutput) ToDelegationPropertiesPtrOutputWithContext(ctx context.Context) DelegationPropertiesPtrOutput {
	return o
}

func (o DelegationPropertiesPtrOutput) Elem() DelegationPropertiesOutput {
	return o.ApplyT(func(v *DelegationProperties) DelegationProperties {
		if v != nil {
			return *v
		}
		var ret DelegationProperties
		return ret
	}).(DelegationPropertiesOutput)
}

// The service name to which the NVA is delegated.
func (o DelegationPropertiesPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DelegationProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Properties of the delegation.
type DelegationPropertiesResponse struct {
	// The current provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The service name to which the NVA is delegated.
	ServiceName *string `pulumi:"serviceName"`
}

// Properties of the delegation.
type DelegationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DelegationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationPropertiesResponse)(nil)).Elem()
}

func (o DelegationPropertiesResponseOutput) ToDelegationPropertiesResponseOutput() DelegationPropertiesResponseOutput {
	return o
}

func (o DelegationPropertiesResponseOutput) ToDelegationPropertiesResponseOutputWithContext(ctx context.Context) DelegationPropertiesResponseOutput {
	return o
}

// The current provisioning state.
func (o DelegationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The service name to which the NVA is delegated.
func (o DelegationPropertiesResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationPropertiesResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type DelegationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DelegationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DelegationPropertiesResponse)(nil)).Elem()
}

func (o DelegationPropertiesResponsePtrOutput) ToDelegationPropertiesResponsePtrOutput() DelegationPropertiesResponsePtrOutput {
	return o
}

func (o DelegationPropertiesResponsePtrOutput) ToDelegationPropertiesResponsePtrOutputWithContext(ctx context.Context) DelegationPropertiesResponsePtrOutput {
	return o
}

func (o DelegationPropertiesResponsePtrOutput) Elem() DelegationPropertiesResponseOutput {
	return o.ApplyT(func(v *DelegationPropertiesResponse) DelegationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DelegationPropertiesResponse
		return ret
	}).(DelegationPropertiesResponseOutput)
}

// The current provisioning state.
func (o DelegationPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DelegationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The service name to which the NVA is delegated.
func (o DelegationPropertiesResponsePtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DelegationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Details the service to which the subnet is delegated.
type DelegationResponse struct {
	// The actions permitted to the service upon delegation.
	Actions []string `pulumi:"actions"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service delegation resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Details the service to which the subnet is delegated.
type DelegationResponseOutput struct{ *pulumi.OutputState }

func (DelegationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseOutput) ToDelegationResponseOutput() DelegationResponseOutput {
	return o
}

func (o DelegationResponseOutput) ToDelegationResponseOutputWithContext(ctx context.Context) DelegationResponseOutput {
	return o
}

// The actions permitted to the service upon delegation.
func (o DelegationResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DelegationResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o DelegationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o DelegationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service delegation resource.
func (o DelegationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o DelegationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DelegationResponseArrayOutput struct{ *pulumi.OutputState }

func (DelegationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutput() DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutputWithContext(ctx context.Context) DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) Index(i pulumi.IntInput) DelegationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DelegationResponse {
		return vs[0].([]DelegationResponse)[vs[1].(int)]
	}).(DelegationResponseOutput)
}

// List of properties of the device.
type DeviceProperties struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// DevicePropertiesInput is an input type that accepts DevicePropertiesArgs and DevicePropertiesOutput values.
// You can construct a concrete instance of `DevicePropertiesInput` via:
//
//	DevicePropertiesArgs{...}
type DevicePropertiesInput interface {
	pulumi.Input

	ToDevicePropertiesOutput() DevicePropertiesOutput
	ToDevicePropertiesOutputWithContext(context.Context) DevicePropertiesOutput
}

// List of properties of the device.
type DevicePropertiesArgs struct {
	// Model of the device.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor pulumi.StringPtrInput `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (DevicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return i.ToDevicePropertiesOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput)
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput).ToDevicePropertiesPtrOutputWithContext(ctx)
}

// DevicePropertiesPtrInput is an input type that accepts DevicePropertiesArgs, DevicePropertiesPtr and DevicePropertiesPtrOutput values.
// You can construct a concrete instance of `DevicePropertiesPtrInput` via:
//
//	        DevicePropertiesArgs{...}
//
//	or:
//
//	        nil
type DevicePropertiesPtrInput interface {
	pulumi.Input

	ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput
	ToDevicePropertiesPtrOutputWithContext(context.Context) DevicePropertiesPtrOutput
}

type devicePropertiesPtrType DevicePropertiesArgs

func DevicePropertiesPtr(v *DevicePropertiesArgs) DevicePropertiesPtrInput {
	return (*devicePropertiesPtrType)(v)
}

func (*devicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesPtrOutput)
}

// List of properties of the device.
type DevicePropertiesOutput struct{ *pulumi.OutputState }

func (DevicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceProperties) *DeviceProperties {
		return &v
	}).(DevicePropertiesPtrOutput)
}

// Model of the device.
func (o DevicePropertiesOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) Elem() DevicePropertiesOutput {
	return o.ApplyT(func(v *DeviceProperties) DeviceProperties {
		if v != nil {
			return *v
		}
		var ret DeviceProperties
		return ret
	}).(DevicePropertiesOutput)
}

// Model of the device.
func (o DevicePropertiesPtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesPtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesPtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// List of properties of the device.
type DevicePropertiesResponse struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// List of properties of the device.
type DevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput {
	return o
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutputWithContext(ctx context.Context) DevicePropertiesResponseOutput {
	return o
}

// Model of the device.
func (o DevicePropertiesResponseOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponseOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponseOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) Elem() DevicePropertiesResponseOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) DevicePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DevicePropertiesResponse
		return ret
	}).(DevicePropertiesResponseOutput)
}

// Model of the device.
func (o DevicePropertiesResponsePtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponsePtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponsePtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptions struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsInput is an input type that accepts DhcpOptionsArgs and DhcpOptionsOutput values.
// You can construct a concrete instance of `DhcpOptionsInput` via:
//
//	DhcpOptionsArgs{...}
type DhcpOptionsInput interface {
	pulumi.Input

	ToDhcpOptionsOutput() DhcpOptionsOutput
	ToDhcpOptionsOutputWithContext(context.Context) DhcpOptionsOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return i.ToDhcpOptionsOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput)
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput).ToDhcpOptionsPtrOutputWithContext(ctx)
}

// DhcpOptionsPtrInput is an input type that accepts DhcpOptionsArgs, DhcpOptionsPtr and DhcpOptionsPtrOutput values.
// You can construct a concrete instance of `DhcpOptionsPtrInput` via:
//
//	        DhcpOptionsArgs{...}
//
//	or:
//
//	        nil
type DhcpOptionsPtrInput interface {
	pulumi.Input

	ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput
	ToDhcpOptionsPtrOutputWithContext(context.Context) DhcpOptionsPtrOutput
}

type dhcpOptionsPtrType DhcpOptionsArgs

func DhcpOptionsPtr(v *DhcpOptionsArgs) DhcpOptionsPtrInput {
	return (*dhcpOptionsPtrType)(v)
}

func (*dhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsOutput struct{ *pulumi.OutputState }

func (DhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DhcpOptions) *DhcpOptions {
		return &v
	}).(DhcpOptionsPtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptions) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) Elem() DhcpOptionsOutput {
	return o.ApplyT(func(v *DhcpOptions) DhcpOptions {
		if v != nil {
			return *v
		}
		var ret DhcpOptions
		return ret
	}).(DhcpOptionsOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponse struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return o
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) Elem() DhcpOptionsResponseOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) DhcpOptionsResponse {
		if v != nil {
			return *v
		}
		var ret DhcpOptionsResponse
		return ret
	}).(DhcpOptionsResponseOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfig struct {
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName *string `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl *float64 `pulumi:"ttl"`
}

// DnsConfigInput is an input type that accepts DnsConfigArgs and DnsConfigOutput values.
// You can construct a concrete instance of `DnsConfigInput` via:
//
//	DnsConfigArgs{...}
type DnsConfigInput interface {
	pulumi.Input

	ToDnsConfigOutput() DnsConfigOutput
	ToDnsConfigOutputWithContext(context.Context) DnsConfigOutput
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigArgs struct {
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName pulumi.StringPtrInput `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl pulumi.Float64PtrInput `pulumi:"ttl"`
}

func (DnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfig)(nil)).Elem()
}

func (i DnsConfigArgs) ToDnsConfigOutput() DnsConfigOutput {
	return i.ToDnsConfigOutputWithContext(context.Background())
}

func (i DnsConfigArgs) ToDnsConfigOutputWithContext(ctx context.Context) DnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigOutput)
}

func (i DnsConfigArgs) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return i.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (i DnsConfigArgs) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigOutput).ToDnsConfigPtrOutputWithContext(ctx)
}

// DnsConfigPtrInput is an input type that accepts DnsConfigArgs, DnsConfigPtr and DnsConfigPtrOutput values.
// You can construct a concrete instance of `DnsConfigPtrInput` via:
//
//	        DnsConfigArgs{...}
//
//	or:
//
//	        nil
type DnsConfigPtrInput interface {
	pulumi.Input

	ToDnsConfigPtrOutput() DnsConfigPtrOutput
	ToDnsConfigPtrOutputWithContext(context.Context) DnsConfigPtrOutput
}

type dnsConfigPtrType DnsConfigArgs

func DnsConfigPtr(v *DnsConfigArgs) DnsConfigPtrInput {
	return (*dnsConfigPtrType)(v)
}

func (*dnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfig)(nil)).Elem()
}

func (i *dnsConfigPtrType) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return i.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (i *dnsConfigPtrType) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigPtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigOutput struct{ *pulumi.OutputState }

func (DnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfig)(nil)).Elem()
}

func (o DnsConfigOutput) ToDnsConfigOutput() DnsConfigOutput {
	return o
}

func (o DnsConfigOutput) ToDnsConfigOutputWithContext(ctx context.Context) DnsConfigOutput {
	return o
}

func (o DnsConfigOutput) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return o.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (o DnsConfigOutput) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsConfig) *DnsConfig {
		return &v
	}).(DnsConfigPtrOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsConfig) *string { return v.RelativeName }).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigOutput) Ttl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DnsConfig) *float64 { return v.Ttl }).(pulumi.Float64PtrOutput)
}

type DnsConfigPtrOutput struct{ *pulumi.OutputState }

func (DnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfig)(nil)).Elem()
}

func (o DnsConfigPtrOutput) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return o
}

func (o DnsConfigPtrOutput) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return o
}

func (o DnsConfigPtrOutput) Elem() DnsConfigOutput {
	return o.ApplyT(func(v *DnsConfig) DnsConfig {
		if v != nil {
			return *v
		}
		var ret DnsConfig
		return ret
	}).(DnsConfigOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigPtrOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RelativeName
	}).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigPtrOutput) Ttl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DnsConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.Float64PtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponse struct {
	// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
	Fqdn string `pulumi:"fqdn"`
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName *string `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl *float64 `pulumi:"ttl"`
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponseOutput struct{ *pulumi.OutputState }

func (DnsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfigResponse)(nil)).Elem()
}

func (o DnsConfigResponseOutput) ToDnsConfigResponseOutput() DnsConfigResponseOutput {
	return o
}

func (o DnsConfigResponseOutput) ToDnsConfigResponseOutputWithContext(ctx context.Context) DnsConfigResponseOutput {
	return o
}

// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
func (o DnsConfigResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v DnsConfigResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigResponseOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *string { return v.RelativeName }).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigResponseOutput) Ttl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *float64 { return v.Ttl }).(pulumi.Float64PtrOutput)
}

type DnsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (DnsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfigResponse)(nil)).Elem()
}

func (o DnsConfigResponsePtrOutput) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return o
}

func (o DnsConfigResponsePtrOutput) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return o
}

func (o DnsConfigResponsePtrOutput) Elem() DnsConfigResponseOutput {
	return o.ApplyT(func(v *DnsConfigResponse) DnsConfigResponse {
		if v != nil {
			return *v
		}
		var ret DnsConfigResponse
		return ret
	}).(DnsConfigResponseOutput)
}

// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
func (o DnsConfigResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigResponsePtrOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativeName
	}).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigResponsePtrOutput) Ttl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.Float64PtrOutput)
}

// Represents a single Azure resource and its referencing DNS records.
type DnsResourceReferenceResponse struct {
	// A list of dns Records
	DnsResources []SubResourceResponse `pulumi:"dnsResources"`
	// A reference to an azure resource from where the dns resource value is taken.
	TargetResource *SubResourceResponse `pulumi:"targetResource"`
}

// Represents a single Azure resource and its referencing DNS records.
type DnsResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (DnsResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsResourceReferenceResponse)(nil)).Elem()
}

func (o DnsResourceReferenceResponseOutput) ToDnsResourceReferenceResponseOutput() DnsResourceReferenceResponseOutput {
	return o
}

func (o DnsResourceReferenceResponseOutput) ToDnsResourceReferenceResponseOutputWithContext(ctx context.Context) DnsResourceReferenceResponseOutput {
	return o
}

// A list of dns Records
func (o DnsResourceReferenceResponseOutput) DnsResources() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v DnsResourceReferenceResponse) []SubResourceResponse { return v.DnsResources }).(SubResourceResponseArrayOutput)
}

// A reference to an azure resource from where the dns resource value is taken.
func (o DnsResourceReferenceResponseOutput) TargetResource() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DnsResourceReferenceResponse) *SubResourceResponse { return v.TargetResource }).(SubResourceResponsePtrOutput)
}

type DnsResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (DnsResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsResourceReferenceResponse)(nil)).Elem()
}

func (o DnsResourceReferenceResponseArrayOutput) ToDnsResourceReferenceResponseArrayOutput() DnsResourceReferenceResponseArrayOutput {
	return o
}

func (o DnsResourceReferenceResponseArrayOutput) ToDnsResourceReferenceResponseArrayOutputWithContext(ctx context.Context) DnsResourceReferenceResponseArrayOutput {
	return o
}

func (o DnsResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) DnsResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsResourceReferenceResponse {
		return vs[0].([]DnsResourceReferenceResponse)[vs[1].(int)]
	}).(DnsResourceReferenceResponseOutput)
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettings struct {
	// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy *bool `pulumi:"enableProxy"`
	// FQDNs in Network Rules are supported when set to true.
	RequireProxyForNetworkRules *bool `pulumi:"requireProxyForNetworkRules"`
	// List of Custom DNS Servers.
	Servers []string `pulumi:"servers"`
}

// DnsSettingsInput is an input type that accepts DnsSettingsArgs and DnsSettingsOutput values.
// You can construct a concrete instance of `DnsSettingsInput` via:
//
//	DnsSettingsArgs{...}
type DnsSettingsInput interface {
	pulumi.Input

	ToDnsSettingsOutput() DnsSettingsOutput
	ToDnsSettingsOutputWithContext(context.Context) DnsSettingsOutput
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsArgs struct {
	// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy pulumi.BoolPtrInput `pulumi:"enableProxy"`
	// FQDNs in Network Rules are supported when set to true.
	RequireProxyForNetworkRules pulumi.BoolPtrInput `pulumi:"requireProxyForNetworkRules"`
	// List of Custom DNS Servers.
	Servers pulumi.StringArrayInput `pulumi:"servers"`
}

func (DnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsSettings)(nil)).Elem()
}

func (i DnsSettingsArgs) ToDnsSettingsOutput() DnsSettingsOutput {
	return i.ToDnsSettingsOutputWithContext(context.Background())
}

func (i DnsSettingsArgs) ToDnsSettingsOutputWithContext(ctx context.Context) DnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsOutput)
}

func (i DnsSettingsArgs) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return i.ToDnsSettingsPtrOutputWithContext(context.Background())
}

func (i DnsSettingsArgs) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsOutput).ToDnsSettingsPtrOutputWithContext(ctx)
}

// DnsSettingsPtrInput is an input type that accepts DnsSettingsArgs, DnsSettingsPtr and DnsSettingsPtrOutput values.
// You can construct a concrete instance of `DnsSettingsPtrInput` via:
//
//	        DnsSettingsArgs{...}
//
//	or:
//
//	        nil
type DnsSettingsPtrInput interface {
	pulumi.Input

	ToDnsSettingsPtrOutput() DnsSettingsPtrOutput
	ToDnsSettingsPtrOutputWithContext(context.Context) DnsSettingsPtrOutput
}

type dnsSettingsPtrType DnsSettingsArgs

func DnsSettingsPtr(v *DnsSettingsArgs) DnsSettingsPtrInput {
	return (*dnsSettingsPtrType)(v)
}

func (*dnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSettings)(nil)).Elem()
}

func (i *dnsSettingsPtrType) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return i.ToDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *dnsSettingsPtrType) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsPtrOutput)
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsOutput struct{ *pulumi.OutputState }

func (DnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsSettings)(nil)).Elem()
}

func (o DnsSettingsOutput) ToDnsSettingsOutput() DnsSettingsOutput {
	return o
}

func (o DnsSettingsOutput) ToDnsSettingsOutputWithContext(ctx context.Context) DnsSettingsOutput {
	return o
}

func (o DnsSettingsOutput) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return o.ToDnsSettingsPtrOutputWithContext(context.Background())
}

func (o DnsSettingsOutput) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsSettings) *DnsSettings {
		return &v
	}).(DnsSettingsPtrOutput)
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettings) *bool { return v.EnableProxy }).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettings) *bool { return v.RequireProxyForNetworkRules }).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DnsSettings) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

type DnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (DnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSettings)(nil)).Elem()
}

func (o DnsSettingsPtrOutput) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return o
}

func (o DnsSettingsPtrOutput) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return o
}

func (o DnsSettingsPtrOutput) Elem() DnsSettingsOutput {
	return o.ApplyT(func(v *DnsSettings) DnsSettings {
		if v != nil {
			return *v
		}
		var ret DnsSettings
		return ret
	}).(DnsSettingsOutput)
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsPtrOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProxy
	}).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsPtrOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.RequireProxyForNetworkRules
	}).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsPtrOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(pulumi.StringArrayOutput)
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsResponse struct {
	// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy *bool `pulumi:"enableProxy"`
	// FQDNs in Network Rules are supported when set to true.
	RequireProxyForNetworkRules *bool `pulumi:"requireProxyForNetworkRules"`
	// List of Custom DNS Servers.
	Servers []string `pulumi:"servers"`
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (DnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsSettingsResponse)(nil)).Elem()
}

func (o DnsSettingsResponseOutput) ToDnsSettingsResponseOutput() DnsSettingsResponseOutput {
	return o
}

func (o DnsSettingsResponseOutput) ToDnsSettingsResponseOutputWithContext(ctx context.Context) DnsSettingsResponseOutput {
	return o
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsResponseOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettingsResponse) *bool { return v.EnableProxy }).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsResponseOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettingsResponse) *bool { return v.RequireProxyForNetworkRules }).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsResponseOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DnsSettingsResponse) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

type DnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSettingsResponse)(nil)).Elem()
}

func (o DnsSettingsResponsePtrOutput) ToDnsSettingsResponsePtrOutput() DnsSettingsResponsePtrOutput {
	return o
}

func (o DnsSettingsResponsePtrOutput) ToDnsSettingsResponsePtrOutputWithContext(ctx context.Context) DnsSettingsResponsePtrOutput {
	return o
}

func (o DnsSettingsResponsePtrOutput) Elem() DnsSettingsResponseOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) DnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DnsSettingsResponse
		return ret
	}).(DnsSettingsResponseOutput)
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsResponsePtrOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProxy
	}).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsResponsePtrOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequireProxyForNetworkRules
	}).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsResponsePtrOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(pulumi.StringArrayOutput)
}

// The network manager effective connectivity configuration
type EffectiveConnectivityConfigurationResponse struct {
	// Groups for configuration
	AppliesToGroups []ConnectivityGroupItemResponse `pulumi:"appliesToGroups"`
	// Effective configuration groups.
	ConfigurationGroups []ConfigurationGroupResponse `pulumi:"configurationGroups"`
	// Connectivity topology type.
	ConnectivityTopology string `pulumi:"connectivityTopology"`
	// Flag if need to remove current existing peerings.
	DeleteExistingPeering *string `pulumi:"deleteExistingPeering"`
	// A description of the connectivity configuration.
	Description *string `pulumi:"description"`
	// A friendly name for the resource.
	DisplayName *string `pulumi:"displayName"`
	// List of hubItems
	Hubs []HubResponse `pulumi:"hubs"`
	// Connectivity configuration ID.
	Id *string `pulumi:"id"`
	// Flag if global mesh is supported.
	IsGlobal *string `pulumi:"isGlobal"`
	// The provisioning state of the connectivity configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
}

// The network manager effective connectivity configuration
type EffectiveConnectivityConfigurationResponseOutput struct{ *pulumi.OutputState }

func (EffectiveConnectivityConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EffectiveConnectivityConfigurationResponse)(nil)).Elem()
}

func (o EffectiveConnectivityConfigurationResponseOutput) ToEffectiveConnectivityConfigurationResponseOutput() EffectiveConnectivityConfigurationResponseOutput {
	return o
}

func (o EffectiveConnectivityConfigurationResponseOutput) ToEffectiveConnectivityConfigurationResponseOutputWithContext(ctx context.Context) EffectiveConnectivityConfigurationResponseOutput {
	return o
}

// Groups for configuration
func (o EffectiveConnectivityConfigurationResponseOutput) AppliesToGroups() ConnectivityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) []ConnectivityGroupItemResponse {
		return v.AppliesToGroups
	}).(ConnectivityGroupItemResponseArrayOutput)
}

// Effective configuration groups.
func (o EffectiveConnectivityConfigurationResponseOutput) ConfigurationGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) []ConfigurationGroupResponse {
		return v.ConfigurationGroups
	}).(ConfigurationGroupResponseArrayOutput)
}

// Connectivity topology type.
func (o EffectiveConnectivityConfigurationResponseOutput) ConnectivityTopology() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) string { return v.ConnectivityTopology }).(pulumi.StringOutput)
}

// Flag if need to remove current existing peerings.
func (o EffectiveConnectivityConfigurationResponseOutput) DeleteExistingPeering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.DeleteExistingPeering }).(pulumi.StringPtrOutput)
}

// A description of the connectivity configuration.
func (o EffectiveConnectivityConfigurationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A friendly name for the resource.
func (o EffectiveConnectivityConfigurationResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// List of hubItems
func (o EffectiveConnectivityConfigurationResponseOutput) Hubs() HubResponseArrayOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) []HubResponse { return v.Hubs }).(HubResponseArrayOutput)
}

// Connectivity configuration ID.
func (o EffectiveConnectivityConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Flag if global mesh is supported.
func (o EffectiveConnectivityConfigurationResponseOutput) IsGlobal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.IsGlobal }).(pulumi.StringPtrOutput)
}

// The provisioning state of the connectivity configuration resource.
func (o EffectiveConnectivityConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier for this resource.
func (o EffectiveConnectivityConfigurationResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

type EffectiveConnectivityConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (EffectiveConnectivityConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EffectiveConnectivityConfigurationResponse)(nil)).Elem()
}

func (o EffectiveConnectivityConfigurationResponseArrayOutput) ToEffectiveConnectivityConfigurationResponseArrayOutput() EffectiveConnectivityConfigurationResponseArrayOutput {
	return o
}

func (o EffectiveConnectivityConfigurationResponseArrayOutput) ToEffectiveConnectivityConfigurationResponseArrayOutputWithContext(ctx context.Context) EffectiveConnectivityConfigurationResponseArrayOutput {
	return o
}

func (o EffectiveConnectivityConfigurationResponseArrayOutput) Index(i pulumi.IntInput) EffectiveConnectivityConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EffectiveConnectivityConfigurationResponse {
		return vs[0].([]EffectiveConnectivityConfigurationResponse)[vs[1].(int)]
	}).(EffectiveConnectivityConfigurationResponseOutput)
}

// Network default admin rule.
type EffectiveDefaultSecurityAdminRuleResponse struct {
	// Indicates the access allowed for this particular rule
	Access string `pulumi:"access"`
	// A description of the security admin configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A display name of the security admin configuration.
	ConfigurationDisplayName *string `pulumi:"configurationDisplayName"`
	// A description for this rule. Restricted to 140 chars.
	Description string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// Default rule flag.
	Flag *string `pulumi:"flag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Default'.
	Kind string `pulumi:"kind"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// A display name of the rule collection.
	RuleCollectionDisplayName *string `pulumi:"ruleCollectionDisplayName"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network default admin rule.
type EffectiveDefaultSecurityAdminRuleResponseOutput struct{ *pulumi.OutputState }

func (EffectiveDefaultSecurityAdminRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EffectiveDefaultSecurityAdminRuleResponse)(nil)).Elem()
}

func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ToEffectiveDefaultSecurityAdminRuleResponseOutput() EffectiveDefaultSecurityAdminRuleResponseOutput {
	return o
}

func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ToEffectiveDefaultSecurityAdminRuleResponseOutputWithContext(ctx context.Context) EffectiveDefaultSecurityAdminRuleResponseOutput {
	return o
}

// Indicates the access allowed for this particular rule
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description of the security admin configuration.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A display name of the security admin configuration.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ConfigurationDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.ConfigurationDisplayName }).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The destination port ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A friendly name for the rule.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Default rule flag.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Flag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.Flag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Default'.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier for this resource.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Groups for rule collection
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// A display name of the rule collection.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.RuleCollectionDisplayName }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Network admin rule.
type EffectiveSecurityAdminRuleResponse struct {
	// Indicates the access allowed for this particular rule
	Access string `pulumi:"access"`
	// A description of the security admin configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A display name of the security admin configuration.
	ConfigurationDisplayName *string `pulumi:"configurationDisplayName"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName *string `pulumi:"displayName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Custom'.
	Kind string `pulumi:"kind"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Unique identifier for this resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// A display name of the rule collection.
	RuleCollectionDisplayName *string `pulumi:"ruleCollectionDisplayName"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network admin rule.
type EffectiveSecurityAdminRuleResponseOutput struct{ *pulumi.OutputState }

func (EffectiveSecurityAdminRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EffectiveSecurityAdminRuleResponse)(nil)).Elem()
}

func (o EffectiveSecurityAdminRuleResponseOutput) ToEffectiveSecurityAdminRuleResponseOutput() EffectiveSecurityAdminRuleResponseOutput {
	return o
}

func (o EffectiveSecurityAdminRuleResponseOutput) ToEffectiveSecurityAdminRuleResponseOutputWithContext(ctx context.Context) EffectiveSecurityAdminRuleResponseOutput {
	return o
}

// Indicates the access allowed for this particular rule
func (o EffectiveSecurityAdminRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description of the security admin configuration.
func (o EffectiveSecurityAdminRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A display name of the security admin configuration.
func (o EffectiveSecurityAdminRuleResponseOutput) ConfigurationDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.ConfigurationDisplayName }).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o EffectiveSecurityAdminRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o EffectiveSecurityAdminRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A friendly name for the rule.
func (o EffectiveSecurityAdminRuleResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o EffectiveSecurityAdminRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Custom'.
func (o EffectiveSecurityAdminRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o EffectiveSecurityAdminRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o EffectiveSecurityAdminRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o EffectiveSecurityAdminRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier for this resource.
func (o EffectiveSecurityAdminRuleResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Groups for rule collection
func (o EffectiveSecurityAdminRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o EffectiveSecurityAdminRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// A display name of the rule collection.
func (o EffectiveSecurityAdminRuleResponseOutput) RuleCollectionDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.RuleCollectionDisplayName }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o EffectiveSecurityAdminRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Effective Virtual Network
type EffectiveVirtualNetworkResponse struct {
	// Effective vnet Id.
	Id *string `pulumi:"id"`
	// Location of vnet.
	Location *string `pulumi:"location"`
	// Membership Type.
	MembershipType *string `pulumi:"membershipType"`
}

// Effective Virtual Network
type EffectiveVirtualNetworkResponseOutput struct{ *pulumi.OutputState }

func (EffectiveVirtualNetworkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EffectiveVirtualNetworkResponse)(nil)).Elem()
}

func (o EffectiveVirtualNetworkResponseOutput) ToEffectiveVirtualNetworkResponseOutput() EffectiveVirtualNetworkResponseOutput {
	return o
}

func (o EffectiveVirtualNetworkResponseOutput) ToEffectiveVirtualNetworkResponseOutputWithContext(ctx context.Context) EffectiveVirtualNetworkResponseOutput {
	return o
}

// Effective vnet Id.
func (o EffectiveVirtualNetworkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveVirtualNetworkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Location of vnet.
func (o EffectiveVirtualNetworkResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveVirtualNetworkResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Membership Type.
func (o EffectiveVirtualNetworkResponseOutput) MembershipType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveVirtualNetworkResponse) *string { return v.MembershipType }).(pulumi.StringPtrOutput)
}

type EffectiveVirtualNetworkResponseArrayOutput struct{ *pulumi.OutputState }

func (EffectiveVirtualNetworkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EffectiveVirtualNetworkResponse)(nil)).Elem()
}

func (o EffectiveVirtualNetworkResponseArrayOutput) ToEffectiveVirtualNetworkResponseArrayOutput() EffectiveVirtualNetworkResponseArrayOutput {
	return o
}

func (o EffectiveVirtualNetworkResponseArrayOutput) ToEffectiveVirtualNetworkResponseArrayOutputWithContext(ctx context.Context) EffectiveVirtualNetworkResponseArrayOutput {
	return o
}

func (o EffectiveVirtualNetworkResponseArrayOutput) Index(i pulumi.IntInput) EffectiveVirtualNetworkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EffectiveVirtualNetworkResponse {
		return vs[0].([]EffectiveVirtualNetworkResponse)[vs[1].(int)]
	}).(EffectiveVirtualNetworkResponseOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointType struct {
	// If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.
	AlwaysServe *string `pulumi:"alwaysServe"`
	// List of custom headers.
	CustomHeaders []EndpointPropertiesCustomHeaders `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus *string `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus *string `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping []string `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id *string `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints *float64 `pulumi:"minChildEndpoints"`
	// The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpointsIPv4 *float64 `pulumi:"minChildEndpointsIPv4"`
	// The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpointsIPv6 *float64 `pulumi:"minChildEndpointsIPv6"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority *float64 `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets []EndpointPropertiesSubnets `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target *string `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type *string `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight *float64 `pulumi:"weight"`
}

// EndpointTypeInput is an input type that accepts EndpointTypeArgs and EndpointTypeOutput values.
// You can construct a concrete instance of `EndpointTypeInput` via:
//
//	EndpointTypeArgs{...}
type EndpointTypeInput interface {
	pulumi.Input

	ToEndpointTypeOutput() EndpointTypeOutput
	ToEndpointTypeOutputWithContext(context.Context) EndpointTypeOutput
}

// Class representing a Traffic Manager endpoint.
type EndpointTypeArgs struct {
	// If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.
	AlwaysServe pulumi.StringPtrInput `pulumi:"alwaysServe"`
	// List of custom headers.
	CustomHeaders EndpointPropertiesCustomHeadersArrayInput `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation pulumi.StringPtrInput `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus pulumi.StringPtrInput `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus pulumi.StringPtrInput `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping pulumi.StringArrayInput `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints pulumi.Float64PtrInput `pulumi:"minChildEndpoints"`
	// The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpointsIPv4 pulumi.Float64PtrInput `pulumi:"minChildEndpointsIPv4"`
	// The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpointsIPv6 pulumi.Float64PtrInput `pulumi:"minChildEndpointsIPv6"`
	// The name of the resource
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets EndpointPropertiesSubnetsArrayInput `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight pulumi.Float64PtrInput `pulumi:"weight"`
}

func (EndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (i EndpointTypeArgs) ToEndpointTypeOutput() EndpointTypeOutput {
	return i.ToEndpointTypeOutputWithContext(context.Background())
}

func (i EndpointTypeArgs) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeOutput)
}

// EndpointTypeArrayInput is an input type that accepts EndpointTypeArray and EndpointTypeArrayOutput values.
// You can construct a concrete instance of `EndpointTypeArrayInput` via:
//
//	EndpointTypeArray{ EndpointTypeArgs{...} }
type EndpointTypeArrayInput interface {
	pulumi.Input

	ToEndpointTypeArrayOutput() EndpointTypeArrayOutput
	ToEndpointTypeArrayOutputWithContext(context.Context) EndpointTypeArrayOutput
}

type EndpointTypeArray []EndpointTypeInput

func (EndpointTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointType)(nil)).Elem()
}

func (i EndpointTypeArray) ToEndpointTypeArrayOutput() EndpointTypeArrayOutput {
	return i.ToEndpointTypeArrayOutputWithContext(context.Background())
}

func (i EndpointTypeArray) ToEndpointTypeArrayOutputWithContext(ctx context.Context) EndpointTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeArrayOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

// If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.
func (o EndpointTypeOutput) AlwaysServe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.AlwaysServe }).(pulumi.StringPtrOutput)
}

// List of custom headers.
func (o EndpointTypeOutput) CustomHeaders() EndpointPropertiesCustomHeadersArrayOutput {
	return o.ApplyT(func(v EndpointType) []EndpointPropertiesCustomHeaders { return v.CustomHeaders }).(EndpointPropertiesCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointTypeOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointLocation }).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointTypeOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointMonitorStatus }).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointTypeOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointStatus }).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointTypeOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointType) []string { return v.GeoMapping }).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointTypeOutput) MinChildEndpoints() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointType) *float64 { return v.MinChildEndpoints }).(pulumi.Float64PtrOutput)
}

// The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointTypeOutput) MinChildEndpointsIPv4() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointType) *float64 { return v.MinChildEndpointsIPv4 }).(pulumi.Float64PtrOutput)
}

// The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointTypeOutput) MinChildEndpointsIPv6() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointType) *float64 { return v.MinChildEndpointsIPv6 }).(pulumi.Float64PtrOutput)
}

// The name of the resource
func (o EndpointTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointTypeOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointType) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointTypeOutput) Subnets() EndpointPropertiesSubnetsArrayOutput {
	return o.ApplyT(func(v EndpointType) []EndpointPropertiesSubnets { return v.Subnets }).(EndpointPropertiesSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointTypeOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointTypeOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointTypeOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointType) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type EndpointTypeArrayOutput struct{ *pulumi.OutputState }

func (EndpointTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointType)(nil)).Elem()
}

func (o EndpointTypeArrayOutput) ToEndpointTypeArrayOutput() EndpointTypeArrayOutput {
	return o
}

func (o EndpointTypeArrayOutput) ToEndpointTypeArrayOutputWithContext(ctx context.Context) EndpointTypeArrayOutput {
	return o
}

func (o EndpointTypeArrayOutput) Index(i pulumi.IntInput) EndpointTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointType {
		return vs[0].([]EndpointType)[vs[1].(int)]
	}).(EndpointTypeOutput)
}

// Custom header name and value.
type EndpointPropertiesCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// EndpointPropertiesCustomHeadersInput is an input type that accepts EndpointPropertiesCustomHeadersArgs and EndpointPropertiesCustomHeadersOutput values.
// You can construct a concrete instance of `EndpointPropertiesCustomHeadersInput` via:
//
//	EndpointPropertiesCustomHeadersArgs{...}
type EndpointPropertiesCustomHeadersInput interface {
	pulumi.Input

	ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput
	ToEndpointPropertiesCustomHeadersOutputWithContext(context.Context) EndpointPropertiesCustomHeadersOutput
}

// Custom header name and value.
type EndpointPropertiesCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EndpointPropertiesCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesCustomHeadersArgs) ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput {
	return i.ToEndpointPropertiesCustomHeadersOutputWithContext(context.Background())
}

func (i EndpointPropertiesCustomHeadersArgs) ToEndpointPropertiesCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesCustomHeadersOutput)
}

// EndpointPropertiesCustomHeadersArrayInput is an input type that accepts EndpointPropertiesCustomHeadersArray and EndpointPropertiesCustomHeadersArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesCustomHeadersArrayInput` via:
//
//	EndpointPropertiesCustomHeadersArray{ EndpointPropertiesCustomHeadersArgs{...} }
type EndpointPropertiesCustomHeadersArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput
	ToEndpointPropertiesCustomHeadersArrayOutputWithContext(context.Context) EndpointPropertiesCustomHeadersArrayOutput
}

type EndpointPropertiesCustomHeadersArray []EndpointPropertiesCustomHeadersInput

func (EndpointPropertiesCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesCustomHeadersArray) ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput {
	return i.ToEndpointPropertiesCustomHeadersArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesCustomHeadersArray) ToEndpointPropertiesCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesCustomHeadersArrayOutput)
}

// Custom header name and value.
type EndpointPropertiesCustomHeadersOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesCustomHeadersOutput) ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersOutput) ToEndpointPropertiesCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersOutput {
	return o
}

// Header name.
func (o EndpointPropertiesCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o EndpointPropertiesCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesCustomHeadersArrayOutput) ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersArrayOutput) ToEndpointPropertiesCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesCustomHeaders {
		return vs[0].([]EndpointPropertiesCustomHeaders)[vs[1].(int)]
	}).(EndpointPropertiesCustomHeadersOutput)
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeadersOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesResponseCustomHeadersOutput) ToEndpointPropertiesResponseCustomHeadersOutput() EndpointPropertiesResponseCustomHeadersOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersOutput) ToEndpointPropertiesResponseCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersOutput {
	return o
}

// Header name.
func (o EndpointPropertiesResponseCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o EndpointPropertiesResponseCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesResponseCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) ToEndpointPropertiesResponseCustomHeadersArrayOutput() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesResponseCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesResponseCustomHeaders {
		return vs[0].([]EndpointPropertiesResponseCustomHeaders)[vs[1].(int)]
	}).(EndpointPropertiesResponseCustomHeadersOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnets struct {
	// First address in the subnet.
	First *string `pulumi:"first"`
	// Last address in the subnet.
	Last *string `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnetsOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseSubnetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (o EndpointPropertiesResponseSubnetsOutput) ToEndpointPropertiesResponseSubnetsOutput() EndpointPropertiesResponseSubnetsOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsOutput) ToEndpointPropertiesResponseSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsOutput {
	return o
}

// First address in the subnet.
func (o EndpointPropertiesResponseSubnetsOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *string { return v.First }).(pulumi.StringPtrOutput)
}

// Last address in the subnet.
func (o EndpointPropertiesResponseSubnetsOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// Block size (number of leading bits in the subnet mask).
func (o EndpointPropertiesResponseSubnetsOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type EndpointPropertiesResponseSubnetsArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseSubnetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) ToEndpointPropertiesResponseSubnetsArrayOutput() EndpointPropertiesResponseSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesResponseSubnetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesResponseSubnets {
		return vs[0].([]EndpointPropertiesResponseSubnets)[vs[1].(int)]
	}).(EndpointPropertiesResponseSubnetsOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnets struct {
	// First address in the subnet.
	First *string `pulumi:"first"`
	// Last address in the subnet.
	Last *string `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// EndpointPropertiesSubnetsInput is an input type that accepts EndpointPropertiesSubnetsArgs and EndpointPropertiesSubnetsOutput values.
// You can construct a concrete instance of `EndpointPropertiesSubnetsInput` via:
//
//	EndpointPropertiesSubnetsArgs{...}
type EndpointPropertiesSubnetsInput interface {
	pulumi.Input

	ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput
	ToEndpointPropertiesSubnetsOutputWithContext(context.Context) EndpointPropertiesSubnetsOutput
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnetsArgs struct {
	// First address in the subnet.
	First pulumi.StringPtrInput `pulumi:"first"`
	// Last address in the subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (EndpointPropertiesSubnetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesSubnets)(nil)).Elem()
}

func (i EndpointPropertiesSubnetsArgs) ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput {
	return i.ToEndpointPropertiesSubnetsOutputWithContext(context.Background())
}

func (i EndpointPropertiesSubnetsArgs) ToEndpointPropertiesSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesSubnetsOutput)
}

// EndpointPropertiesSubnetsArrayInput is an input type that accepts EndpointPropertiesSubnetsArray and EndpointPropertiesSubnetsArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesSubnetsArrayInput` via:
//
//	EndpointPropertiesSubnetsArray{ EndpointPropertiesSubnetsArgs{...} }
type EndpointPropertiesSubnetsArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput
	ToEndpointPropertiesSubnetsArrayOutputWithContext(context.Context) EndpointPropertiesSubnetsArrayOutput
}

type EndpointPropertiesSubnetsArray []EndpointPropertiesSubnetsInput

func (EndpointPropertiesSubnetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesSubnets)(nil)).Elem()
}

func (i EndpointPropertiesSubnetsArray) ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput {
	return i.ToEndpointPropertiesSubnetsArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesSubnetsArray) ToEndpointPropertiesSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesSubnetsArrayOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnetsOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesSubnetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesSubnets)(nil)).Elem()
}

func (o EndpointPropertiesSubnetsOutput) ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput {
	return o
}

func (o EndpointPropertiesSubnetsOutput) ToEndpointPropertiesSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsOutput {
	return o
}

// First address in the subnet.
func (o EndpointPropertiesSubnetsOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *string { return v.First }).(pulumi.StringPtrOutput)
}

// Last address in the subnet.
func (o EndpointPropertiesSubnetsOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// Block size (number of leading bits in the subnet mask).
func (o EndpointPropertiesSubnetsOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type EndpointPropertiesSubnetsArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesSubnetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesSubnets)(nil)).Elem()
}

func (o EndpointPropertiesSubnetsArrayOutput) ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesSubnetsArrayOutput) ToEndpointPropertiesSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesSubnetsArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesSubnetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesSubnets {
		return vs[0].([]EndpointPropertiesSubnets)[vs[1].(int)]
	}).(EndpointPropertiesSubnetsOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointResponse struct {
	// If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.
	AlwaysServe *string `pulumi:"alwaysServe"`
	// List of custom headers.
	CustomHeaders []EndpointPropertiesResponseCustomHeaders `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus *string `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus *string `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping []string `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id *string `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints *float64 `pulumi:"minChildEndpoints"`
	// The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpointsIPv4 *float64 `pulumi:"minChildEndpointsIPv4"`
	// The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpointsIPv6 *float64 `pulumi:"minChildEndpointsIPv6"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority *float64 `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets []EndpointPropertiesResponseSubnets `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target *string `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type *string `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight *float64 `pulumi:"weight"`
}

// Class representing a Traffic Manager endpoint.
type EndpointResponseOutput struct{ *pulumi.OutputState }

func (EndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseOutput) ToEndpointResponseOutput() EndpointResponseOutput {
	return o
}

func (o EndpointResponseOutput) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return o
}

// If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.
func (o EndpointResponseOutput) AlwaysServe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.AlwaysServe }).(pulumi.StringPtrOutput)
}

// List of custom headers.
func (o EndpointResponseOutput) CustomHeaders() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []EndpointPropertiesResponseCustomHeaders { return v.CustomHeaders }).(EndpointPropertiesResponseCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointResponseOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointLocation }).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointResponseOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointMonitorStatus }).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointResponseOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointStatus }).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointResponseOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []string { return v.GeoMapping }).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointResponseOutput) MinChildEndpoints() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointResponse) *float64 { return v.MinChildEndpoints }).(pulumi.Float64PtrOutput)
}

// The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointResponseOutput) MinChildEndpointsIPv4() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointResponse) *float64 { return v.MinChildEndpointsIPv4 }).(pulumi.Float64PtrOutput)
}

// The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointResponseOutput) MinChildEndpointsIPv6() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointResponse) *float64 { return v.MinChildEndpointsIPv6 }).(pulumi.Float64PtrOutput)
}

// The name of the resource
func (o EndpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointResponseOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointResponse) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointResponseOutput) Subnets() EndpointPropertiesResponseSubnetsArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []EndpointPropertiesResponseSubnets { return v.Subnets }).(EndpointPropertiesResponseSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointResponseOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointResponseOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointResponse) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type EndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (EndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutput() EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutputWithContext(ctx context.Context) EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) Index(i pulumi.IntInput) EndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointResponse {
		return vs[0].([]EndpointResponse)[vs[1].(int)]
	}).(EndpointResponseOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointService struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id *string `pulumi:"id"`
}

// EndpointServiceInput is an input type that accepts EndpointServiceArgs and EndpointServiceOutput values.
// You can construct a concrete instance of `EndpointServiceInput` via:
//
//	EndpointServiceArgs{...}
type EndpointServiceInput interface {
	pulumi.Input

	ToEndpointServiceOutput() EndpointServiceOutput
	ToEndpointServiceOutputWithContext(context.Context) EndpointServiceOutput
}

// Identifies the service being brought into the virtual network.
type EndpointServiceArgs struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointService)(nil)).Elem()
}

func (i EndpointServiceArgs) ToEndpointServiceOutput() EndpointServiceOutput {
	return i.ToEndpointServiceOutputWithContext(context.Background())
}

func (i EndpointServiceArgs) ToEndpointServiceOutputWithContext(ctx context.Context) EndpointServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceOutput)
}

func (i EndpointServiceArgs) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return i.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (i EndpointServiceArgs) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceOutput).ToEndpointServicePtrOutputWithContext(ctx)
}

// EndpointServicePtrInput is an input type that accepts EndpointServiceArgs, EndpointServicePtr and EndpointServicePtrOutput values.
// You can construct a concrete instance of `EndpointServicePtrInput` via:
//
//	        EndpointServiceArgs{...}
//
//	or:
//
//	        nil
type EndpointServicePtrInput interface {
	pulumi.Input

	ToEndpointServicePtrOutput() EndpointServicePtrOutput
	ToEndpointServicePtrOutputWithContext(context.Context) EndpointServicePtrOutput
}

type endpointServicePtrType EndpointServiceArgs

func EndpointServicePtr(v *EndpointServiceArgs) EndpointServicePtrInput {
	return (*endpointServicePtrType)(v)
}

func (*endpointServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointService)(nil)).Elem()
}

func (i *endpointServicePtrType) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return i.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (i *endpointServicePtrType) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServicePtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceOutput struct{ *pulumi.OutputState }

func (EndpointServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointService)(nil)).Elem()
}

func (o EndpointServiceOutput) ToEndpointServiceOutput() EndpointServiceOutput {
	return o
}

func (o EndpointServiceOutput) ToEndpointServiceOutputWithContext(ctx context.Context) EndpointServiceOutput {
	return o
}

func (o EndpointServiceOutput) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return o.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (o EndpointServiceOutput) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointService) *EndpointService {
		return &v
	}).(EndpointServicePtrOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointService) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointServicePtrOutput struct{ *pulumi.OutputState }

func (EndpointServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointService)(nil)).Elem()
}

func (o EndpointServicePtrOutput) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return o
}

func (o EndpointServicePtrOutput) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return o
}

func (o EndpointServicePtrOutput) Elem() EndpointServiceOutput {
	return o.ApplyT(func(v *EndpointService) EndpointService {
		if v != nil {
			return *v
		}
		var ret EndpointService
		return ret
	}).(EndpointServiceOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServicePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointService) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponse struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id *string `pulumi:"id"`
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponseOutput struct{ *pulumi.OutputState }

func (EndpointServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointServiceResponse)(nil)).Elem()
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponseOutput() EndpointServiceResponseOutput {
	return o
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponseOutputWithContext(ctx context.Context) EndpointServiceResponseOutput {
	return o
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointServiceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointServiceResponse)(nil)).Elem()
}

func (o EndpointServiceResponsePtrOutput) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return o
}

func (o EndpointServiceResponsePtrOutput) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return o
}

func (o EndpointServiceResponsePtrOutput) Elem() EndpointServiceResponseOutput {
	return o.ApplyT(func(v *EndpointServiceResponse) EndpointServiceResponse {
		if v != nil {
			return *v
		}
		var ret EndpointServiceResponse
		return ret
	}).(EndpointServiceResponseOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines a managed rule to use for exclusion.
type ExclusionManagedRule struct {
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// ExclusionManagedRuleInput is an input type that accepts ExclusionManagedRuleArgs and ExclusionManagedRuleOutput values.
// You can construct a concrete instance of `ExclusionManagedRuleInput` via:
//
//	ExclusionManagedRuleArgs{...}
type ExclusionManagedRuleInput interface {
	pulumi.Input

	ToExclusionManagedRuleOutput() ExclusionManagedRuleOutput
	ToExclusionManagedRuleOutputWithContext(context.Context) ExclusionManagedRuleOutput
}

// Defines a managed rule to use for exclusion.
type ExclusionManagedRuleArgs struct {
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (ExclusionManagedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRule)(nil)).Elem()
}

func (i ExclusionManagedRuleArgs) ToExclusionManagedRuleOutput() ExclusionManagedRuleOutput {
	return i.ToExclusionManagedRuleOutputWithContext(context.Background())
}

func (i ExclusionManagedRuleArgs) ToExclusionManagedRuleOutputWithContext(ctx context.Context) ExclusionManagedRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExclusionManagedRuleOutput)
}

// ExclusionManagedRuleArrayInput is an input type that accepts ExclusionManagedRuleArray and ExclusionManagedRuleArrayOutput values.
// You can construct a concrete instance of `ExclusionManagedRuleArrayInput` via:
//
//	ExclusionManagedRuleArray{ ExclusionManagedRuleArgs{...} }
type ExclusionManagedRuleArrayInput interface {
	pulumi.Input

	ToExclusionManagedRuleArrayOutput() ExclusionManagedRuleArrayOutput
	ToExclusionManagedRuleArrayOutputWithContext(context.Context) ExclusionManagedRuleArrayOutput
}

type ExclusionManagedRuleArray []ExclusionManagedRuleInput

func (ExclusionManagedRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRule)(nil)).Elem()
}

func (i ExclusionManagedRuleArray) ToExclusionManagedRuleArrayOutput() ExclusionManagedRuleArrayOutput {
	return i.ToExclusionManagedRuleArrayOutputWithContext(context.Background())
}

func (i ExclusionManagedRuleArray) ToExclusionManagedRuleArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExclusionManagedRuleArrayOutput)
}

// Defines a managed rule to use for exclusion.
type ExclusionManagedRuleOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRule)(nil)).Elem()
}

func (o ExclusionManagedRuleOutput) ToExclusionManagedRuleOutput() ExclusionManagedRuleOutput {
	return o
}

func (o ExclusionManagedRuleOutput) ToExclusionManagedRuleOutputWithContext(ctx context.Context) ExclusionManagedRuleOutput {
	return o
}

// Identifier for the managed rule.
func (o ExclusionManagedRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRule) string { return v.RuleId }).(pulumi.StringOutput)
}

type ExclusionManagedRuleArrayOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRule)(nil)).Elem()
}

func (o ExclusionManagedRuleArrayOutput) ToExclusionManagedRuleArrayOutput() ExclusionManagedRuleArrayOutput {
	return o
}

func (o ExclusionManagedRuleArrayOutput) ToExclusionManagedRuleArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleArrayOutput {
	return o
}

func (o ExclusionManagedRuleArrayOutput) Index(i pulumi.IntInput) ExclusionManagedRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExclusionManagedRule {
		return vs[0].([]ExclusionManagedRule)[vs[1].(int)]
	}).(ExclusionManagedRuleOutput)
}

// Defines a managed rule group to use for exclusion.
type ExclusionManagedRuleGroup struct {
	// The managed rule group for exclusion.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be excluded. If none specified, all rules in the group will be excluded.
	Rules []ExclusionManagedRule `pulumi:"rules"`
}

// ExclusionManagedRuleGroupInput is an input type that accepts ExclusionManagedRuleGroupArgs and ExclusionManagedRuleGroupOutput values.
// You can construct a concrete instance of `ExclusionManagedRuleGroupInput` via:
//
//	ExclusionManagedRuleGroupArgs{...}
type ExclusionManagedRuleGroupInput interface {
	pulumi.Input

	ToExclusionManagedRuleGroupOutput() ExclusionManagedRuleGroupOutput
	ToExclusionManagedRuleGroupOutputWithContext(context.Context) ExclusionManagedRuleGroupOutput
}

// Defines a managed rule group to use for exclusion.
type ExclusionManagedRuleGroupArgs struct {
	// The managed rule group for exclusion.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be excluded. If none specified, all rules in the group will be excluded.
	Rules ExclusionManagedRuleArrayInput `pulumi:"rules"`
}

func (ExclusionManagedRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRuleGroup)(nil)).Elem()
}

func (i ExclusionManagedRuleGroupArgs) ToExclusionManagedRuleGroupOutput() ExclusionManagedRuleGroupOutput {
	return i.ToExclusionManagedRuleGroupOutputWithContext(context.Background())
}

func (i ExclusionManagedRuleGroupArgs) ToExclusionManagedRuleGroupOutputWithContext(ctx context.Context) ExclusionManagedRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExclusionManagedRuleGroupOutput)
}

// ExclusionManagedRuleGroupArrayInput is an input type that accepts ExclusionManagedRuleGroupArray and ExclusionManagedRuleGroupArrayOutput values.
// You can construct a concrete instance of `ExclusionManagedRuleGroupArrayInput` via:
//
//	ExclusionManagedRuleGroupArray{ ExclusionManagedRuleGroupArgs{...} }
type ExclusionManagedRuleGroupArrayInput interface {
	pulumi.Input

	ToExclusionManagedRuleGroupArrayOutput() ExclusionManagedRuleGroupArrayOutput
	ToExclusionManagedRuleGroupArrayOutputWithContext(context.Context) ExclusionManagedRuleGroupArrayOutput
}

type ExclusionManagedRuleGroupArray []ExclusionManagedRuleGroupInput

func (ExclusionManagedRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRuleGroup)(nil)).Elem()
}

func (i ExclusionManagedRuleGroupArray) ToExclusionManagedRuleGroupArrayOutput() ExclusionManagedRuleGroupArrayOutput {
	return i.ToExclusionManagedRuleGroupArrayOutputWithContext(context.Background())
}

func (i ExclusionManagedRuleGroupArray) ToExclusionManagedRuleGroupArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExclusionManagedRuleGroupArrayOutput)
}

// Defines a managed rule group to use for exclusion.
type ExclusionManagedRuleGroupOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRuleGroup)(nil)).Elem()
}

func (o ExclusionManagedRuleGroupOutput) ToExclusionManagedRuleGroupOutput() ExclusionManagedRuleGroupOutput {
	return o
}

func (o ExclusionManagedRuleGroupOutput) ToExclusionManagedRuleGroupOutputWithContext(ctx context.Context) ExclusionManagedRuleGroupOutput {
	return o
}

// The managed rule group for exclusion.
func (o ExclusionManagedRuleGroupOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRuleGroup) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be excluded. If none specified, all rules in the group will be excluded.
func (o ExclusionManagedRuleGroupOutput) Rules() ExclusionManagedRuleArrayOutput {
	return o.ApplyT(func(v ExclusionManagedRuleGroup) []ExclusionManagedRule { return v.Rules }).(ExclusionManagedRuleArrayOutput)
}

type ExclusionManagedRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRuleGroup)(nil)).Elem()
}

func (o ExclusionManagedRuleGroupArrayOutput) ToExclusionManagedRuleGroupArrayOutput() ExclusionManagedRuleGroupArrayOutput {
	return o
}

func (o ExclusionManagedRuleGroupArrayOutput) ToExclusionManagedRuleGroupArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleGroupArrayOutput {
	return o
}

func (o ExclusionManagedRuleGroupArrayOutput) Index(i pulumi.IntInput) ExclusionManagedRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExclusionManagedRuleGroup {
		return vs[0].([]ExclusionManagedRuleGroup)[vs[1].(int)]
	}).(ExclusionManagedRuleGroupOutput)
}

// Defines a managed rule group to use for exclusion.
type ExclusionManagedRuleGroupResponse struct {
	// The managed rule group for exclusion.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be excluded. If none specified, all rules in the group will be excluded.
	Rules []ExclusionManagedRuleResponse `pulumi:"rules"`
}

// Defines a managed rule group to use for exclusion.
type ExclusionManagedRuleGroupResponseOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRuleGroupResponse)(nil)).Elem()
}

func (o ExclusionManagedRuleGroupResponseOutput) ToExclusionManagedRuleGroupResponseOutput() ExclusionManagedRuleGroupResponseOutput {
	return o
}

func (o ExclusionManagedRuleGroupResponseOutput) ToExclusionManagedRuleGroupResponseOutputWithContext(ctx context.Context) ExclusionManagedRuleGroupResponseOutput {
	return o
}

// The managed rule group for exclusion.
func (o ExclusionManagedRuleGroupResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRuleGroupResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be excluded. If none specified, all rules in the group will be excluded.
func (o ExclusionManagedRuleGroupResponseOutput) Rules() ExclusionManagedRuleResponseArrayOutput {
	return o.ApplyT(func(v ExclusionManagedRuleGroupResponse) []ExclusionManagedRuleResponse { return v.Rules }).(ExclusionManagedRuleResponseArrayOutput)
}

type ExclusionManagedRuleGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRuleGroupResponse)(nil)).Elem()
}

func (o ExclusionManagedRuleGroupResponseArrayOutput) ToExclusionManagedRuleGroupResponseArrayOutput() ExclusionManagedRuleGroupResponseArrayOutput {
	return o
}

func (o ExclusionManagedRuleGroupResponseArrayOutput) ToExclusionManagedRuleGroupResponseArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleGroupResponseArrayOutput {
	return o
}

func (o ExclusionManagedRuleGroupResponseArrayOutput) Index(i pulumi.IntInput) ExclusionManagedRuleGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExclusionManagedRuleGroupResponse {
		return vs[0].([]ExclusionManagedRuleGroupResponse)[vs[1].(int)]
	}).(ExclusionManagedRuleGroupResponseOutput)
}

// Defines a managed rule to use for exclusion.
type ExclusionManagedRuleResponse struct {
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// Defines a managed rule to use for exclusion.
type ExclusionManagedRuleResponseOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRuleResponse)(nil)).Elem()
}

func (o ExclusionManagedRuleResponseOutput) ToExclusionManagedRuleResponseOutput() ExclusionManagedRuleResponseOutput {
	return o
}

func (o ExclusionManagedRuleResponseOutput) ToExclusionManagedRuleResponseOutputWithContext(ctx context.Context) ExclusionManagedRuleResponseOutput {
	return o
}

// Identifier for the managed rule.
func (o ExclusionManagedRuleResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRuleResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

type ExclusionManagedRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRuleResponse)(nil)).Elem()
}

func (o ExclusionManagedRuleResponseArrayOutput) ToExclusionManagedRuleResponseArrayOutput() ExclusionManagedRuleResponseArrayOutput {
	return o
}

func (o ExclusionManagedRuleResponseArrayOutput) ToExclusionManagedRuleResponseArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleResponseArrayOutput {
	return o
}

func (o ExclusionManagedRuleResponseArrayOutput) Index(i pulumi.IntInput) ExclusionManagedRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExclusionManagedRuleResponse {
		return vs[0].([]ExclusionManagedRuleResponse)[vs[1].(int)]
	}).(ExclusionManagedRuleResponseOutput)
}

// Defines a managed rule set for Exclusions.
type ExclusionManagedRuleSet struct {
	// Defines the rule groups to apply to the rule set.
	RuleGroups []ExclusionManagedRuleGroup `pulumi:"ruleGroups"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ExclusionManagedRuleSetInput is an input type that accepts ExclusionManagedRuleSetArgs and ExclusionManagedRuleSetOutput values.
// You can construct a concrete instance of `ExclusionManagedRuleSetInput` via:
//
//	ExclusionManagedRuleSetArgs{...}
type ExclusionManagedRuleSetInput interface {
	pulumi.Input

	ToExclusionManagedRuleSetOutput() ExclusionManagedRuleSetOutput
	ToExclusionManagedRuleSetOutputWithContext(context.Context) ExclusionManagedRuleSetOutput
}

// Defines a managed rule set for Exclusions.
type ExclusionManagedRuleSetArgs struct {
	// Defines the rule groups to apply to the rule set.
	RuleGroups ExclusionManagedRuleGroupArrayInput `pulumi:"ruleGroups"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ExclusionManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRuleSet)(nil)).Elem()
}

func (i ExclusionManagedRuleSetArgs) ToExclusionManagedRuleSetOutput() ExclusionManagedRuleSetOutput {
	return i.ToExclusionManagedRuleSetOutputWithContext(context.Background())
}

func (i ExclusionManagedRuleSetArgs) ToExclusionManagedRuleSetOutputWithContext(ctx context.Context) ExclusionManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExclusionManagedRuleSetOutput)
}

// ExclusionManagedRuleSetArrayInput is an input type that accepts ExclusionManagedRuleSetArray and ExclusionManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `ExclusionManagedRuleSetArrayInput` via:
//
//	ExclusionManagedRuleSetArray{ ExclusionManagedRuleSetArgs{...} }
type ExclusionManagedRuleSetArrayInput interface {
	pulumi.Input

	ToExclusionManagedRuleSetArrayOutput() ExclusionManagedRuleSetArrayOutput
	ToExclusionManagedRuleSetArrayOutputWithContext(context.Context) ExclusionManagedRuleSetArrayOutput
}

type ExclusionManagedRuleSetArray []ExclusionManagedRuleSetInput

func (ExclusionManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRuleSet)(nil)).Elem()
}

func (i ExclusionManagedRuleSetArray) ToExclusionManagedRuleSetArrayOutput() ExclusionManagedRuleSetArrayOutput {
	return i.ToExclusionManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i ExclusionManagedRuleSetArray) ToExclusionManagedRuleSetArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExclusionManagedRuleSetArrayOutput)
}

// Defines a managed rule set for Exclusions.
type ExclusionManagedRuleSetOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRuleSet)(nil)).Elem()
}

func (o ExclusionManagedRuleSetOutput) ToExclusionManagedRuleSetOutput() ExclusionManagedRuleSetOutput {
	return o
}

func (o ExclusionManagedRuleSetOutput) ToExclusionManagedRuleSetOutputWithContext(ctx context.Context) ExclusionManagedRuleSetOutput {
	return o
}

// Defines the rule groups to apply to the rule set.
func (o ExclusionManagedRuleSetOutput) RuleGroups() ExclusionManagedRuleGroupArrayOutput {
	return o.ApplyT(func(v ExclusionManagedRuleSet) []ExclusionManagedRuleGroup { return v.RuleGroups }).(ExclusionManagedRuleGroupArrayOutput)
}

// Defines the rule set type to use.
func (o ExclusionManagedRuleSetOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRuleSet) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ExclusionManagedRuleSetOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRuleSet) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ExclusionManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRuleSet)(nil)).Elem()
}

func (o ExclusionManagedRuleSetArrayOutput) ToExclusionManagedRuleSetArrayOutput() ExclusionManagedRuleSetArrayOutput {
	return o
}

func (o ExclusionManagedRuleSetArrayOutput) ToExclusionManagedRuleSetArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleSetArrayOutput {
	return o
}

func (o ExclusionManagedRuleSetArrayOutput) Index(i pulumi.IntInput) ExclusionManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExclusionManagedRuleSet {
		return vs[0].([]ExclusionManagedRuleSet)[vs[1].(int)]
	}).(ExclusionManagedRuleSetOutput)
}

// Defines a managed rule set for Exclusions.
type ExclusionManagedRuleSetResponse struct {
	// Defines the rule groups to apply to the rule set.
	RuleGroups []ExclusionManagedRuleGroupResponse `pulumi:"ruleGroups"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// Defines a managed rule set for Exclusions.
type ExclusionManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExclusionManagedRuleSetResponse)(nil)).Elem()
}

func (o ExclusionManagedRuleSetResponseOutput) ToExclusionManagedRuleSetResponseOutput() ExclusionManagedRuleSetResponseOutput {
	return o
}

func (o ExclusionManagedRuleSetResponseOutput) ToExclusionManagedRuleSetResponseOutputWithContext(ctx context.Context) ExclusionManagedRuleSetResponseOutput {
	return o
}

// Defines the rule groups to apply to the rule set.
func (o ExclusionManagedRuleSetResponseOutput) RuleGroups() ExclusionManagedRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v ExclusionManagedRuleSetResponse) []ExclusionManagedRuleGroupResponse { return v.RuleGroups }).(ExclusionManagedRuleGroupResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ExclusionManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ExclusionManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ExclusionManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ExclusionManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ExclusionManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExclusionManagedRuleSetResponse)(nil)).Elem()
}

func (o ExclusionManagedRuleSetResponseArrayOutput) ToExclusionManagedRuleSetResponseArrayOutput() ExclusionManagedRuleSetResponseArrayOutput {
	return o
}

func (o ExclusionManagedRuleSetResponseArrayOutput) ToExclusionManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ExclusionManagedRuleSetResponseArrayOutput {
	return o
}

func (o ExclusionManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ExclusionManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExclusionManagedRuleSetResponse {
		return vs[0].([]ExclusionManagedRuleSetResponse)[vs[1].(int)]
	}).(ExclusionManagedRuleSetResponseOutput)
}

// Defines the endpoint properties
type ExperimentEndpoint struct {
	// The endpoint URL
	Endpoint *string `pulumi:"endpoint"`
	// The name of the endpoint
	Name *string `pulumi:"name"`
}

// ExperimentEndpointInput is an input type that accepts ExperimentEndpointArgs and ExperimentEndpointOutput values.
// You can construct a concrete instance of `ExperimentEndpointInput` via:
//
//	ExperimentEndpointArgs{...}
type ExperimentEndpointInput interface {
	pulumi.Input

	ToExperimentEndpointOutput() ExperimentEndpointOutput
	ToExperimentEndpointOutputWithContext(context.Context) ExperimentEndpointOutput
}

// Defines the endpoint properties
type ExperimentEndpointArgs struct {
	// The endpoint URL
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The name of the endpoint
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExperimentEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentEndpoint)(nil)).Elem()
}

func (i ExperimentEndpointArgs) ToExperimentEndpointOutput() ExperimentEndpointOutput {
	return i.ToExperimentEndpointOutputWithContext(context.Background())
}

func (i ExperimentEndpointArgs) ToExperimentEndpointOutputWithContext(ctx context.Context) ExperimentEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentEndpointOutput)
}

func (i ExperimentEndpointArgs) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return i.ToExperimentEndpointPtrOutputWithContext(context.Background())
}

func (i ExperimentEndpointArgs) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentEndpointOutput).ToExperimentEndpointPtrOutputWithContext(ctx)
}

// ExperimentEndpointPtrInput is an input type that accepts ExperimentEndpointArgs, ExperimentEndpointPtr and ExperimentEndpointPtrOutput values.
// You can construct a concrete instance of `ExperimentEndpointPtrInput` via:
//
//	        ExperimentEndpointArgs{...}
//
//	or:
//
//	        nil
type ExperimentEndpointPtrInput interface {
	pulumi.Input

	ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput
	ToExperimentEndpointPtrOutputWithContext(context.Context) ExperimentEndpointPtrOutput
}

type experimentEndpointPtrType ExperimentEndpointArgs

func ExperimentEndpointPtr(v *ExperimentEndpointArgs) ExperimentEndpointPtrInput {
	return (*experimentEndpointPtrType)(v)
}

func (*experimentEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentEndpoint)(nil)).Elem()
}

func (i *experimentEndpointPtrType) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return i.ToExperimentEndpointPtrOutputWithContext(context.Background())
}

func (i *experimentEndpointPtrType) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentEndpointPtrOutput)
}

// Defines the endpoint properties
type ExperimentEndpointOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentEndpoint)(nil)).Elem()
}

func (o ExperimentEndpointOutput) ToExperimentEndpointOutput() ExperimentEndpointOutput {
	return o
}

func (o ExperimentEndpointOutput) ToExperimentEndpointOutputWithContext(ctx context.Context) ExperimentEndpointOutput {
	return o
}

func (o ExperimentEndpointOutput) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return o.ToExperimentEndpointPtrOutputWithContext(context.Background())
}

func (o ExperimentEndpointOutput) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExperimentEndpoint) *ExperimentEndpoint {
		return &v
	}).(ExperimentEndpointPtrOutput)
}

// The endpoint URL
func (o ExperimentEndpointOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpoint) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpoint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExperimentEndpointPtrOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentEndpoint)(nil)).Elem()
}

func (o ExperimentEndpointPtrOutput) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return o
}

func (o ExperimentEndpointPtrOutput) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return o
}

func (o ExperimentEndpointPtrOutput) Elem() ExperimentEndpointOutput {
	return o.ApplyT(func(v *ExperimentEndpoint) ExperimentEndpoint {
		if v != nil {
			return *v
		}
		var ret ExperimentEndpoint
		return ret
	}).(ExperimentEndpointOutput)
}

// The endpoint URL
func (o ExperimentEndpointPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Defines the endpoint properties
type ExperimentEndpointResponse struct {
	// The endpoint URL
	Endpoint *string `pulumi:"endpoint"`
	// The name of the endpoint
	Name *string `pulumi:"name"`
}

// Defines the endpoint properties
type ExperimentEndpointResponseOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentEndpointResponse)(nil)).Elem()
}

func (o ExperimentEndpointResponseOutput) ToExperimentEndpointResponseOutput() ExperimentEndpointResponseOutput {
	return o
}

func (o ExperimentEndpointResponseOutput) ToExperimentEndpointResponseOutputWithContext(ctx context.Context) ExperimentEndpointResponseOutput {
	return o
}

// The endpoint URL
func (o ExperimentEndpointResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpointResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExperimentEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentEndpointResponse)(nil)).Elem()
}

func (o ExperimentEndpointResponsePtrOutput) ToExperimentEndpointResponsePtrOutput() ExperimentEndpointResponsePtrOutput {
	return o
}

func (o ExperimentEndpointResponsePtrOutput) ToExperimentEndpointResponsePtrOutputWithContext(ctx context.Context) ExperimentEndpointResponsePtrOutput {
	return o
}

func (o ExperimentEndpointResponsePtrOutput) Elem() ExperimentEndpointResponseOutput {
	return o.ApplyT(func(v *ExperimentEndpointResponse) ExperimentEndpointResponse {
		if v != nil {
			return *v
		}
		var ret ExperimentEndpointResponse
		return ret
	}).(ExperimentEndpointResponseOutput)
}

// The endpoint URL
func (o ExperimentEndpointResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Explicit Proxy Settings in Firewall Policy.
type ExplicitProxy struct {
	// When set to true, explicit proxy mode is enabled.
	EnableExplicitProxy *bool `pulumi:"enableExplicitProxy"`
	// When set to true, pac file port and url needs to be provided.
	EnablePacFile *bool `pulumi:"enablePacFile"`
	// Port number for explicit proxy http protocol, cannot be greater than 64000.
	HttpPort *int `pulumi:"httpPort"`
	// Port number for explicit proxy https protocol, cannot be greater than 64000.
	HttpsPort *int `pulumi:"httpsPort"`
	// SAS URL for PAC file.
	PacFile *string `pulumi:"pacFile"`
	// Port number for firewall to serve PAC file.
	PacFilePort *int `pulumi:"pacFilePort"`
}

// ExplicitProxyInput is an input type that accepts ExplicitProxyArgs and ExplicitProxyOutput values.
// You can construct a concrete instance of `ExplicitProxyInput` via:
//
//	ExplicitProxyArgs{...}
type ExplicitProxyInput interface {
	pulumi.Input

	ToExplicitProxyOutput() ExplicitProxyOutput
	ToExplicitProxyOutputWithContext(context.Context) ExplicitProxyOutput
}

// Explicit Proxy Settings in Firewall Policy.
type ExplicitProxyArgs struct {
	// When set to true, explicit proxy mode is enabled.
	EnableExplicitProxy pulumi.BoolPtrInput `pulumi:"enableExplicitProxy"`
	// When set to true, pac file port and url needs to be provided.
	EnablePacFile pulumi.BoolPtrInput `pulumi:"enablePacFile"`
	// Port number for explicit proxy http protocol, cannot be greater than 64000.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// Port number for explicit proxy https protocol, cannot be greater than 64000.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// SAS URL for PAC file.
	PacFile pulumi.StringPtrInput `pulumi:"pacFile"`
	// Port number for firewall to serve PAC file.
	PacFilePort pulumi.IntPtrInput `pulumi:"pacFilePort"`
}

func (ExplicitProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitProxy)(nil)).Elem()
}

func (i ExplicitProxyArgs) ToExplicitProxyOutput() ExplicitProxyOutput {
	return i.ToExplicitProxyOutputWithContext(context.Background())
}

func (i ExplicitProxyArgs) ToExplicitProxyOutputWithContext(ctx context.Context) ExplicitProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitProxyOutput)
}

func (i ExplicitProxyArgs) ToExplicitProxyPtrOutput() ExplicitProxyPtrOutput {
	return i.ToExplicitProxyPtrOutputWithContext(context.Background())
}

func (i ExplicitProxyArgs) ToExplicitProxyPtrOutputWithContext(ctx context.Context) ExplicitProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitProxyOutput).ToExplicitProxyPtrOutputWithContext(ctx)
}

// ExplicitProxyPtrInput is an input type that accepts ExplicitProxyArgs, ExplicitProxyPtr and ExplicitProxyPtrOutput values.
// You can construct a concrete instance of `ExplicitProxyPtrInput` via:
//
//	        ExplicitProxyArgs{...}
//
//	or:
//
//	        nil
type ExplicitProxyPtrInput interface {
	pulumi.Input

	ToExplicitProxyPtrOutput() ExplicitProxyPtrOutput
	ToExplicitProxyPtrOutputWithContext(context.Context) ExplicitProxyPtrOutput
}

type explicitProxyPtrType ExplicitProxyArgs

func ExplicitProxyPtr(v *ExplicitProxyArgs) ExplicitProxyPtrInput {
	return (*explicitProxyPtrType)(v)
}

func (*explicitProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExplicitProxy)(nil)).Elem()
}

func (i *explicitProxyPtrType) ToExplicitProxyPtrOutput() ExplicitProxyPtrOutput {
	return i.ToExplicitProxyPtrOutputWithContext(context.Background())
}

func (i *explicitProxyPtrType) ToExplicitProxyPtrOutputWithContext(ctx context.Context) ExplicitProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExplicitProxyPtrOutput)
}

// Explicit Proxy Settings in Firewall Policy.
type ExplicitProxyOutput struct{ *pulumi.OutputState }

func (ExplicitProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitProxy)(nil)).Elem()
}

func (o ExplicitProxyOutput) ToExplicitProxyOutput() ExplicitProxyOutput {
	return o
}

func (o ExplicitProxyOutput) ToExplicitProxyOutputWithContext(ctx context.Context) ExplicitProxyOutput {
	return o
}

func (o ExplicitProxyOutput) ToExplicitProxyPtrOutput() ExplicitProxyPtrOutput {
	return o.ToExplicitProxyPtrOutputWithContext(context.Background())
}

func (o ExplicitProxyOutput) ToExplicitProxyPtrOutputWithContext(ctx context.Context) ExplicitProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExplicitProxy) *ExplicitProxy {
		return &v
	}).(ExplicitProxyPtrOutput)
}

// When set to true, explicit proxy mode is enabled.
func (o ExplicitProxyOutput) EnableExplicitProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExplicitProxy) *bool { return v.EnableExplicitProxy }).(pulumi.BoolPtrOutput)
}

// When set to true, pac file port and url needs to be provided.
func (o ExplicitProxyOutput) EnablePacFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExplicitProxy) *bool { return v.EnablePacFile }).(pulumi.BoolPtrOutput)
}

// Port number for explicit proxy http protocol, cannot be greater than 64000.
func (o ExplicitProxyOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExplicitProxy) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// Port number for explicit proxy https protocol, cannot be greater than 64000.
func (o ExplicitProxyOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExplicitProxy) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// SAS URL for PAC file.
func (o ExplicitProxyOutput) PacFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitProxy) *string { return v.PacFile }).(pulumi.StringPtrOutput)
}

// Port number for firewall to serve PAC file.
func (o ExplicitProxyOutput) PacFilePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExplicitProxy) *int { return v.PacFilePort }).(pulumi.IntPtrOutput)
}

type ExplicitProxyPtrOutput struct{ *pulumi.OutputState }

func (ExplicitProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExplicitProxy)(nil)).Elem()
}

func (o ExplicitProxyPtrOutput) ToExplicitProxyPtrOutput() ExplicitProxyPtrOutput {
	return o
}

func (o ExplicitProxyPtrOutput) ToExplicitProxyPtrOutputWithContext(ctx context.Context) ExplicitProxyPtrOutput {
	return o
}

func (o ExplicitProxyPtrOutput) Elem() ExplicitProxyOutput {
	return o.ApplyT(func(v *ExplicitProxy) ExplicitProxy {
		if v != nil {
			return *v
		}
		var ret ExplicitProxy
		return ret
	}).(ExplicitProxyOutput)
}

// When set to true, explicit proxy mode is enabled.
func (o ExplicitProxyPtrOutput) EnableExplicitProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExplicitProxy) *bool {
		if v == nil {
			return nil
		}
		return v.EnableExplicitProxy
	}).(pulumi.BoolPtrOutput)
}

// When set to true, pac file port and url needs to be provided.
func (o ExplicitProxyPtrOutput) EnablePacFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExplicitProxy) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePacFile
	}).(pulumi.BoolPtrOutput)
}

// Port number for explicit proxy http protocol, cannot be greater than 64000.
func (o ExplicitProxyPtrOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExplicitProxy) *int {
		if v == nil {
			return nil
		}
		return v.HttpPort
	}).(pulumi.IntPtrOutput)
}

// Port number for explicit proxy https protocol, cannot be greater than 64000.
func (o ExplicitProxyPtrOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExplicitProxy) *int {
		if v == nil {
			return nil
		}
		return v.HttpsPort
	}).(pulumi.IntPtrOutput)
}

// SAS URL for PAC file.
func (o ExplicitProxyPtrOutput) PacFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExplicitProxy) *string {
		if v == nil {
			return nil
		}
		return v.PacFile
	}).(pulumi.StringPtrOutput)
}

// Port number for firewall to serve PAC file.
func (o ExplicitProxyPtrOutput) PacFilePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExplicitProxy) *int {
		if v == nil {
			return nil
		}
		return v.PacFilePort
	}).(pulumi.IntPtrOutput)
}

// Explicit Proxy Settings in Firewall Policy.
type ExplicitProxyResponse struct {
	// When set to true, explicit proxy mode is enabled.
	EnableExplicitProxy *bool `pulumi:"enableExplicitProxy"`
	// When set to true, pac file port and url needs to be provided.
	EnablePacFile *bool `pulumi:"enablePacFile"`
	// Port number for explicit proxy http protocol, cannot be greater than 64000.
	HttpPort *int `pulumi:"httpPort"`
	// Port number for explicit proxy https protocol, cannot be greater than 64000.
	HttpsPort *int `pulumi:"httpsPort"`
	// SAS URL for PAC file.
	PacFile *string `pulumi:"pacFile"`
	// Port number for firewall to serve PAC file.
	PacFilePort *int `pulumi:"pacFilePort"`
}

// Explicit Proxy Settings in Firewall Policy.
type ExplicitProxyResponseOutput struct{ *pulumi.OutputState }

func (ExplicitProxyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExplicitProxyResponse)(nil)).Elem()
}

func (o ExplicitProxyResponseOutput) ToExplicitProxyResponseOutput() ExplicitProxyResponseOutput {
	return o
}

func (o ExplicitProxyResponseOutput) ToExplicitProxyResponseOutputWithContext(ctx context.Context) ExplicitProxyResponseOutput {
	return o
}

// When set to true, explicit proxy mode is enabled.
func (o ExplicitProxyResponseOutput) EnableExplicitProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExplicitProxyResponse) *bool { return v.EnableExplicitProxy }).(pulumi.BoolPtrOutput)
}

// When set to true, pac file port and url needs to be provided.
func (o ExplicitProxyResponseOutput) EnablePacFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExplicitProxyResponse) *bool { return v.EnablePacFile }).(pulumi.BoolPtrOutput)
}

// Port number for explicit proxy http protocol, cannot be greater than 64000.
func (o ExplicitProxyResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExplicitProxyResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// Port number for explicit proxy https protocol, cannot be greater than 64000.
func (o ExplicitProxyResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExplicitProxyResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// SAS URL for PAC file.
func (o ExplicitProxyResponseOutput) PacFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExplicitProxyResponse) *string { return v.PacFile }).(pulumi.StringPtrOutput)
}

// Port number for firewall to serve PAC file.
func (o ExplicitProxyResponseOutput) PacFilePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExplicitProxyResponse) *int { return v.PacFilePort }).(pulumi.IntPtrOutput)
}

type ExplicitProxyResponsePtrOutput struct{ *pulumi.OutputState }

func (ExplicitProxyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExplicitProxyResponse)(nil)).Elem()
}

func (o ExplicitProxyResponsePtrOutput) ToExplicitProxyResponsePtrOutput() ExplicitProxyResponsePtrOutput {
	return o
}

func (o ExplicitProxyResponsePtrOutput) ToExplicitProxyResponsePtrOutputWithContext(ctx context.Context) ExplicitProxyResponsePtrOutput {
	return o
}

func (o ExplicitProxyResponsePtrOutput) Elem() ExplicitProxyResponseOutput {
	return o.ApplyT(func(v *ExplicitProxyResponse) ExplicitProxyResponse {
		if v != nil {
			return *v
		}
		var ret ExplicitProxyResponse
		return ret
	}).(ExplicitProxyResponseOutput)
}

// When set to true, explicit proxy mode is enabled.
func (o ExplicitProxyResponsePtrOutput) EnableExplicitProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExplicitProxyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableExplicitProxy
	}).(pulumi.BoolPtrOutput)
}

// When set to true, pac file port and url needs to be provided.
func (o ExplicitProxyResponsePtrOutput) EnablePacFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExplicitProxyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePacFile
	}).(pulumi.BoolPtrOutput)
}

// Port number for explicit proxy http protocol, cannot be greater than 64000.
func (o ExplicitProxyResponsePtrOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExplicitProxyResponse) *int {
		if v == nil {
			return nil
		}
		return v.HttpPort
	}).(pulumi.IntPtrOutput)
}

// Port number for explicit proxy https protocol, cannot be greater than 64000.
func (o ExplicitProxyResponsePtrOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExplicitProxyResponse) *int {
		if v == nil {
			return nil
		}
		return v.HttpsPort
	}).(pulumi.IntPtrOutput)
}

// SAS URL for PAC file.
func (o ExplicitProxyResponsePtrOutput) PacFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExplicitProxyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PacFile
	}).(pulumi.StringPtrOutput)
}

// Port number for firewall to serve PAC file.
func (o ExplicitProxyResponsePtrOutput) PacFilePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExplicitProxyResponse) *int {
		if v == nil {
			return nil
		}
		return v.PacFilePort
	}).(pulumi.IntPtrOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationType struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ExpressRouteCircuitAuthorizationTypeInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArgs and ExpressRouteCircuitAuthorizationTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeInput` via:
//
//	ExpressRouteCircuitAuthorizationTypeArgs{...}
type ExpressRouteCircuitAuthorizationTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput
	ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExpressRouteCircuitAuthorizationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// ExpressRouteCircuitAuthorizationTypeArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArray and ExpressRouteCircuitAuthorizationTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeArrayInput` via:
//
//	ExpressRouteCircuitAuthorizationTypeArray{ ExpressRouteCircuitAuthorizationTypeArgs{...} }
type ExpressRouteCircuitAuthorizationTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput
	ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput
}

type ExpressRouteCircuitAuthorizationTypeArray []ExpressRouteCircuitAuthorizationTypeInput

func (ExpressRouteCircuitAuthorizationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The authorization use status.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitAuthorizationTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationType {
		return vs[0].([]ExpressRouteCircuitAuthorizationType)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponse struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the authorization resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The authorization use status.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the authorization resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExpressRouteCircuitAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationResponse {
		return vs[0].([]ExpressRouteCircuitAuthorizationResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionType struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResource `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IPv6 Address PrefixProperties of the express route circuit connection.
	Ipv6CircuitConnectionConfig *Ipv6CircuitConnectionConfig `pulumi:"ipv6CircuitConnectionConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResource `pulumi:"peerExpressRouteCircuitPeering"`
}

// ExpressRouteCircuitConnectionTypeInput is an input type that accepts ExpressRouteCircuitConnectionTypeArgs and ExpressRouteCircuitConnectionTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeInput` via:
//
//	ExpressRouteCircuitConnectionTypeArgs{...}
type ExpressRouteCircuitConnectionTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput
	ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeOutput
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IPv6 Address PrefixProperties of the express route circuit connection.
	Ipv6CircuitConnectionConfig Ipv6CircuitConnectionConfigPtrInput `pulumi:"ipv6CircuitConnectionConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
}

func (ExpressRouteCircuitConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return i.ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeOutput)
}

// ExpressRouteCircuitConnectionTypeArrayInput is an input type that accepts ExpressRouteCircuitConnectionTypeArray and ExpressRouteCircuitConnectionTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeArrayInput` via:
//
//	ExpressRouteCircuitConnectionTypeArray{ ExpressRouteCircuitConnectionTypeArgs{...} }
type ExpressRouteCircuitConnectionTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput
	ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeArrayOutput
}

type ExpressRouteCircuitConnectionTypeArray []ExpressRouteCircuitConnectionTypeInput

func (ExpressRouteCircuitConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return i.ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionTypeOutput) ExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *SubResource { return v.ExpressRouteCircuitPeering }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IPv6 Address PrefixProperties of the express route circuit connection.
func (o ExpressRouteCircuitConnectionTypeOutput) Ipv6CircuitConnectionConfig() Ipv6CircuitConnectionConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *Ipv6CircuitConnectionConfig {
		return v.Ipv6CircuitConnectionConfig
	}).(Ipv6CircuitConnectionConfigPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionTypeOutput) PeerExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *SubResource { return v.PeerExpressRouteCircuitPeering }).(SubResourcePtrOutput)
}

type ExpressRouteCircuitConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionType {
		return vs[0].([]ExpressRouteCircuitConnectionType)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionTypeOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponse struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResourceResponse `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IPv6 Address PrefixProperties of the express route circuit connection.
	Ipv6CircuitConnectionConfig *Ipv6CircuitConnectionConfigResponse `pulumi:"ipv6CircuitConnectionConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResourceResponse `pulumi:"peerExpressRouteCircuitPeering"`
	// The provisioning state of the express route circuit connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o ExpressRouteCircuitConnectionResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionResponseOutput) ExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.ExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IPv6 Address PrefixProperties of the express route circuit connection.
func (o ExpressRouteCircuitConnectionResponseOutput) Ipv6CircuitConnectionConfig() Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *Ipv6CircuitConnectionConfigResponse {
		return v.Ipv6CircuitConnectionConfig
	}).(Ipv6CircuitConnectionConfigResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionResponseOutput) PeerExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the express route circuit connection resource.
func (o ExpressRouteCircuitConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ExpressRouteCircuitConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExpressRouteCircuitConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionResponse {
		return vs[0].([]ExpressRouteCircuitConnectionResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionResponseOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringType struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionType `pulumi:"connections"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfig `pulumi:"ipv6PeeringConfig"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *float64 `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResource `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// The peering stats of express route circuit.
	Stats *ExpressRouteCircuitStats `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringTypeInput is an input type that accepts ExpressRouteCircuitPeeringTypeArgs and ExpressRouteCircuitPeeringTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeInput` via:
//
//	ExpressRouteCircuitPeeringTypeArgs{...}
type ExpressRouteCircuitPeeringTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput
	ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections ExpressRouteCircuitConnectionTypeArrayInput `pulumi:"connections"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"ipv6PeeringConfig"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.Float64PtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter SubResourcePtrInput `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The peering stats of express route circuit.
	Stats ExpressRouteCircuitStatsPtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return i.ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeOutput)
}

// ExpressRouteCircuitPeeringTypeArrayInput is an input type that accepts ExpressRouteCircuitPeeringTypeArray and ExpressRouteCircuitPeeringTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeArrayInput` via:
//
//	ExpressRouteCircuitPeeringTypeArray{ ExpressRouteCircuitPeeringTypeArgs{...} }
type ExpressRouteCircuitPeeringTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput
	ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeArrayOutput
}

type ExpressRouteCircuitPeeringTypeArray []ExpressRouteCircuitPeeringTypeInput

func (ExpressRouteCircuitPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return i.ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringTypeOutput) Connections() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) []ExpressRouteCircuitConnectionType { return v.Connections }).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringTypeOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringTypeOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *Ipv6ExpressRouteCircuitPeeringConfig {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringTypeOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) PeerASN() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *float64 { return v.PeerASN }).(pulumi.Float64PtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringTypeOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o ExpressRouteCircuitPeeringTypeOutput) RouteFilter() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *SubResource { return v.RouteFilter }).(SubResourcePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The peering stats of express route circuit.
func (o ExpressRouteCircuitPeeringTypeOutput) Stats() ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitStats { return v.Stats }).(ExpressRouteCircuitStatsPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringTypeOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringType {
		return vs[0].([]ExpressRouteCircuitPeeringType)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringTypeOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfig struct {
	// The communities of bgp peering. Specified for microsoft peering.
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference to AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs and ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigInput` via:
//
//	ExpressRouteCircuitPeeringConfigArgs{...}
type ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput
	ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigArgs struct {
	// The communities of bgp peering. Specified for microsoft peering.
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// The reference to AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode pulumi.IntPtrInput `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return i.ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput)
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput).ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs, ExpressRouteCircuitPeeringConfigPtr and ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//	        ExpressRouteCircuitPeeringConfigArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput
	ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigPtrOutput
}

type expressRouteCircuitPeeringConfigPtrType ExpressRouteCircuitPeeringConfigArgs

func ExpressRouteCircuitPeeringConfigPtr(v *ExpressRouteCircuitPeeringConfigArgs) ExpressRouteCircuitPeeringConfigPtrInput {
	return (*expressRouteCircuitPeeringConfigPtrType)(v)
}

func (*expressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return &v
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) Elem() ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) ExpressRouteCircuitPeeringConfig {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitPeeringConfig
		return ret
	}).(ExpressRouteCircuitPeeringConfigOutput)
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponse struct {
	// The communities of bgp peering. Specified for microsoft peering.
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference to AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// The advertised public prefix state of the Peering resource.
	AdvertisedPublicPrefixesState string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// The advertised public prefix state of the Peering resource.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixesState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) ExpressRouteCircuitPeeringConfigResponse {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitPeeringConfigResponse
		return ret
	}).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// The advertised public prefix state of the Peering resource.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringId struct {
	// The ID of the ExpressRoute circuit peering.
	Id *string `pulumi:"id"`
}

// ExpressRouteCircuitPeeringIdInput is an input type that accepts ExpressRouteCircuitPeeringIdArgs and ExpressRouteCircuitPeeringIdOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdInput` via:
//
//	ExpressRouteCircuitPeeringIdArgs{...}
type ExpressRouteCircuitPeeringIdInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput
	ToExpressRouteCircuitPeeringIdOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdOutput
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdArgs struct {
	// The ID of the ExpressRoute circuit peering.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ExpressRouteCircuitPeeringIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput {
	return i.ToExpressRouteCircuitPeeringIdOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdOutput {
	return o
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponse struct {
	// The ID of the ExpressRoute circuit peering.
	Id *string `pulumi:"id"`
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponseOutput() ExpressRouteCircuitPeeringIdResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponseOutput {
	return o
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponse struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionResponse `pulumi:"connections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The ExpressRoute connection.
	ExpressRouteConnection *ExpressRouteConnectionIdResponse `pulumi:"expressRouteConnection"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfigResponse `pulumi:"ipv6PeeringConfig"`
	// Who was the last to modify the peering.
	LastModifiedBy string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *float64 `pulumi:"peerASN"`
	// The list of peered circuit connections associated with Azure Private Peering for this circuit.
	PeeredConnections []PeerExpressRouteCircuitConnectionResponse `pulumi:"peeredConnections"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The provisioning state of the express route circuit peering resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResourceResponse `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// The peering stats of express route circuit.
	Stats *ExpressRouteCircuitStatsResponse `pulumi:"stats"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringResponseOutput) Connections() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) []ExpressRouteCircuitConnectionResponse {
		return v.Connections
	}).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitPeeringResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ExpressRoute connection.
func (o ExpressRouteCircuitPeeringResponseOutput) ExpressRouteConnection() ExpressRouteConnectionIdResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteConnectionIdResponse {
		return v.ExpressRouteConnection
	}).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringResponseOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringResponseOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Who was the last to modify the peering.
func (o ExpressRouteCircuitPeeringResponseOutput) LastModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.LastModifiedBy }).(pulumi.StringOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) PeerASN() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *float64 { return v.PeerASN }).(pulumi.Float64PtrOutput)
}

// The list of peered circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringResponseOutput) PeeredConnections() PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) []PeerExpressRouteCircuitConnectionResponse {
		return v.PeeredConnections
	}).(PeerExpressRouteCircuitConnectionResponseArrayOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringResponseOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The provisioning state of the express route circuit peering resource.
func (o ExpressRouteCircuitPeeringResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the RouteFilter resource.
func (o ExpressRouteCircuitPeeringResponseOutput) RouteFilter() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *SubResourceResponse { return v.RouteFilter }).(SubResourceResponsePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The peering stats of express route circuit.
func (o ExpressRouteCircuitPeeringResponseOutput) Stats() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitStatsResponse { return v.Stats }).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Type of the resource.
func (o ExpressRouteCircuitPeeringResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringResponse {
		return vs[0].([]ExpressRouteCircuitPeeringResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringResponseOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderProperties struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs and ExpressRouteCircuitServiceProviderPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesInput` via:
//
//	ExpressRouteCircuitServiceProviderPropertiesArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput
	ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput).ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesPtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs, ExpressRouteCircuitServiceProviderPropertiesPtr and ExpressRouteCircuitServiceProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesPtrInput` via:
//
//	        ExpressRouteCircuitServiceProviderPropertiesArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitServiceProviderPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput
}

type expressRouteCircuitServiceProviderPropertiesPtrType ExpressRouteCircuitServiceProviderPropertiesArgs

func ExpressRouteCircuitServiceProviderPropertiesPtr(v *ExpressRouteCircuitServiceProviderPropertiesArgs) ExpressRouteCircuitServiceProviderPropertiesPtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesPtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitServiceProviderProperties) *ExpressRouteCircuitServiceProviderProperties {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) ExpressRouteCircuitServiceProviderProperties {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitServiceProviderProperties
		return ret
	}).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponse struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) ExpressRouteCircuitServiceProviderPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitServiceProviderPropertiesResponse
		return ret
	}).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSku struct {
	// The family of the SKU.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuInput is an input type that accepts ExpressRouteCircuitSkuArgs and ExpressRouteCircuitSkuOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuInput` via:
//
//	ExpressRouteCircuitSkuArgs{...}
type ExpressRouteCircuitSkuInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput
	ToExpressRouteCircuitSkuOutputWithContext(context.Context) ExpressRouteCircuitSkuOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuArgs struct {
	// The family of the SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return i.ToExpressRouteCircuitSkuOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput)
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput).ToExpressRouteCircuitSkuPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuPtrInput is an input type that accepts ExpressRouteCircuitSkuArgs, ExpressRouteCircuitSkuPtr and ExpressRouteCircuitSkuPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuPtrInput` via:
//
//	        ExpressRouteCircuitSkuArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitSkuPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput
	ToExpressRouteCircuitSkuPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuPtrOutput
}

type expressRouteCircuitSkuPtrType ExpressRouteCircuitSkuArgs

func ExpressRouteCircuitSkuPtr(v *ExpressRouteCircuitSkuArgs) ExpressRouteCircuitSkuPtrInput {
	return (*expressRouteCircuitSkuPtrType)(v)
}

func (*expressRouteCircuitSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitSku) *ExpressRouteCircuitSku {
		return &v
	}).(ExpressRouteCircuitSkuPtrOutput)
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) Elem() ExpressRouteCircuitSkuOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) ExpressRouteCircuitSku {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitSku
		return ret
	}).(ExpressRouteCircuitSkuOutput)
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponse struct {
	// The family of the SKU.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU.
	Tier *string `pulumi:"tier"`
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return o
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) Elem() ExpressRouteCircuitSkuResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) ExpressRouteCircuitSkuResponse {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitSkuResponse
		return ret
	}).(ExpressRouteCircuitSkuResponseOutput)
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStats struct {
	// The Primary BytesIn of the peering.
	PrimarybytesIn *float64 `pulumi:"primarybytesIn"`
	// The primary BytesOut of the peering.
	PrimarybytesOut *float64 `pulumi:"primarybytesOut"`
	// The secondary BytesIn of the peering.
	SecondarybytesIn *float64 `pulumi:"secondarybytesIn"`
	// The secondary BytesOut of the peering.
	SecondarybytesOut *float64 `pulumi:"secondarybytesOut"`
}

// ExpressRouteCircuitStatsInput is an input type that accepts ExpressRouteCircuitStatsArgs and ExpressRouteCircuitStatsOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsInput` via:
//
//	ExpressRouteCircuitStatsArgs{...}
type ExpressRouteCircuitStatsInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput
	ToExpressRouteCircuitStatsOutputWithContext(context.Context) ExpressRouteCircuitStatsOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsArgs struct {
	// The Primary BytesIn of the peering.
	PrimarybytesIn pulumi.Float64PtrInput `pulumi:"primarybytesIn"`
	// The primary BytesOut of the peering.
	PrimarybytesOut pulumi.Float64PtrInput `pulumi:"primarybytesOut"`
	// The secondary BytesIn of the peering.
	SecondarybytesIn pulumi.Float64PtrInput `pulumi:"secondarybytesIn"`
	// The secondary BytesOut of the peering.
	SecondarybytesOut pulumi.Float64PtrInput `pulumi:"secondarybytesOut"`
}

func (ExpressRouteCircuitStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return i.ToExpressRouteCircuitStatsOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput)
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput).ToExpressRouteCircuitStatsPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsPtrInput is an input type that accepts ExpressRouteCircuitStatsArgs, ExpressRouteCircuitStatsPtr and ExpressRouteCircuitStatsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsPtrInput` via:
//
//	        ExpressRouteCircuitStatsArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitStatsPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput
	ToExpressRouteCircuitStatsPtrOutputWithContext(context.Context) ExpressRouteCircuitStatsPtrOutput
}

type expressRouteCircuitStatsPtrType ExpressRouteCircuitStatsArgs

func ExpressRouteCircuitStatsPtr(v *ExpressRouteCircuitStatsArgs) ExpressRouteCircuitStatsPtrInput {
	return (*expressRouteCircuitStatsPtrType)(v)
}

func (*expressRouteCircuitStatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitStats) *ExpressRouteCircuitStats {
		return &v
	}).(ExpressRouteCircuitStatsPtrOutput)
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *float64 { return v.PrimarybytesIn }).(pulumi.Float64PtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *float64 { return v.PrimarybytesOut }).(pulumi.Float64PtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *float64 { return v.SecondarybytesIn }).(pulumi.Float64PtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *float64 { return v.SecondarybytesOut }).(pulumi.Float64PtrOutput)
}

type ExpressRouteCircuitStatsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) Elem() ExpressRouteCircuitStatsOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) ExpressRouteCircuitStats {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitStats
		return ret
	}).(ExpressRouteCircuitStatsOutput)
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *float64 {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.Float64PtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *float64 {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.Float64PtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *float64 {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.Float64PtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *float64 {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.Float64PtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponse struct {
	// The Primary BytesIn of the peering.
	PrimarybytesIn *float64 `pulumi:"primarybytesIn"`
	// The primary BytesOut of the peering.
	PrimarybytesOut *float64 `pulumi:"primarybytesOut"`
	// The secondary BytesIn of the peering.
	SecondarybytesIn *float64 `pulumi:"secondarybytesIn"`
	// The secondary BytesOut of the peering.
	SecondarybytesOut *float64 `pulumi:"secondarybytesOut"`
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return o
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *float64 { return v.PrimarybytesIn }).(pulumi.Float64PtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *float64 { return v.PrimarybytesOut }).(pulumi.Float64PtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *float64 { return v.SecondarybytesIn }).(pulumi.Float64PtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *float64 { return v.SecondarybytesOut }).(pulumi.Float64PtrOutput)
}

type ExpressRouteCircuitStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) Elem() ExpressRouteCircuitStatsResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) ExpressRouteCircuitStatsResponse {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitStatsResponse
		return ret
	}).(ExpressRouteCircuitStatsResponseOutput)
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.Float64PtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.Float64PtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesIn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.Float64PtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesOut() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.Float64PtrOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionType struct {
	// Authorization key to establish the connection.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.
	EnablePrivateLinkFastPath *bool `pulumi:"enablePrivateLinkFastPath"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringId `pulumi:"expressRouteCircuitPeering"`
	// Enable FastPath to vWan Firewall hub.
	ExpressRouteGatewayBypass *bool `pulumi:"expressRouteGatewayBypass"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfiguration `pulumi:"routingConfiguration"`
	// The routing weight associated to the connection.
	RoutingWeight *int `pulumi:"routingWeight"`
}

// ExpressRouteConnectionTypeInput is an input type that accepts ExpressRouteConnectionTypeArgs and ExpressRouteConnectionTypeOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionTypeInput` via:
//
//	ExpressRouteConnectionTypeArgs{...}
type ExpressRouteConnectionTypeInput interface {
	pulumi.Input

	ToExpressRouteConnectionTypeOutput() ExpressRouteConnectionTypeOutput
	ToExpressRouteConnectionTypeOutputWithContext(context.Context) ExpressRouteConnectionTypeOutput
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionTypeArgs struct {
	// Authorization key to establish the connection.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Enable internet security.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.
	EnablePrivateLinkFastPath pulumi.BoolPtrInput `pulumi:"enablePrivateLinkFastPath"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringIdInput `pulumi:"expressRouteCircuitPeering"`
	// Enable FastPath to vWan Firewall hub.
	ExpressRouteGatewayBypass pulumi.BoolPtrInput `pulumi:"expressRouteGatewayBypass"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationPtrInput `pulumi:"routingConfiguration"`
	// The routing weight associated to the connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
}

func (ExpressRouteConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionType)(nil)).Elem()
}

func (i ExpressRouteConnectionTypeArgs) ToExpressRouteConnectionTypeOutput() ExpressRouteConnectionTypeOutput {
	return i.ToExpressRouteConnectionTypeOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionTypeArgs) ToExpressRouteConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionTypeOutput)
}

// ExpressRouteConnectionTypeArrayInput is an input type that accepts ExpressRouteConnectionTypeArray and ExpressRouteConnectionTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionTypeArrayInput` via:
//
//	ExpressRouteConnectionTypeArray{ ExpressRouteConnectionTypeArgs{...} }
type ExpressRouteConnectionTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteConnectionTypeArrayOutput() ExpressRouteConnectionTypeArrayOutput
	ToExpressRouteConnectionTypeArrayOutputWithContext(context.Context) ExpressRouteConnectionTypeArrayOutput
}

type ExpressRouteConnectionTypeArray []ExpressRouteConnectionTypeInput

func (ExpressRouteConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionType)(nil)).Elem()
}

func (i ExpressRouteConnectionTypeArray) ToExpressRouteConnectionTypeArrayOutput() ExpressRouteConnectionTypeArrayOutput {
	return i.ToExpressRouteConnectionTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionTypeArray) ToExpressRouteConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionTypeArrayOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionType)(nil)).Elem()
}

func (o ExpressRouteConnectionTypeOutput) ToExpressRouteConnectionTypeOutput() ExpressRouteConnectionTypeOutput {
	return o
}

func (o ExpressRouteConnectionTypeOutput) ToExpressRouteConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteConnectionTypeOutput {
	return o
}

// Authorization key to establish the connection.
func (o ExpressRouteConnectionTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Enable internet security.
func (o ExpressRouteConnectionTypeOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.
func (o ExpressRouteConnectionTypeOutput) EnablePrivateLinkFastPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) *bool { return v.EnablePrivateLinkFastPath }).(pulumi.BoolPtrOutput)
}

// The ExpressRoute circuit peering.
func (o ExpressRouteConnectionTypeOutput) ExpressRouteCircuitPeering() ExpressRouteCircuitPeeringIdOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) ExpressRouteCircuitPeeringId { return v.ExpressRouteCircuitPeering }).(ExpressRouteCircuitPeeringIdOutput)
}

// Enable FastPath to vWan Firewall hub.
func (o ExpressRouteConnectionTypeOutput) ExpressRouteGatewayBypass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) *bool { return v.ExpressRouteGatewayBypass }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o ExpressRouteConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ExpressRouteConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o ExpressRouteConnectionTypeOutput) RoutingConfiguration() RoutingConfigurationPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) *RoutingConfiguration { return v.RoutingConfiguration }).(RoutingConfigurationPtrOutput)
}

// The routing weight associated to the connection.
func (o ExpressRouteConnectionTypeOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

type ExpressRouteConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionType)(nil)).Elem()
}

func (o ExpressRouteConnectionTypeArrayOutput) ToExpressRouteConnectionTypeArrayOutput() ExpressRouteConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteConnectionTypeArrayOutput) ToExpressRouteConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteConnectionTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteConnectionType {
		return vs[0].([]ExpressRouteConnectionType)[vs[1].(int)]
	}).(ExpressRouteConnectionTypeOutput)
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponse struct {
	// The ID of the ExpressRouteConnection.
	Id string `pulumi:"id"`
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponseOutput() ExpressRouteConnectionIdResponseOutput {
	return o
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponseOutput {
	return o
}

// The ID of the ExpressRouteConnection.
func (o ExpressRouteConnectionIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ExpressRouteConnectionIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionIdResponsePtrOutput) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionIdResponsePtrOutput) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionIdResponsePtrOutput) Elem() ExpressRouteConnectionIdResponseOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionIdResponse) ExpressRouteConnectionIdResponse {
		if v != nil {
			return *v
		}
		var ret ExpressRouteConnectionIdResponse
		return ret
	}).(ExpressRouteConnectionIdResponseOutput)
}

// The ID of the ExpressRouteConnection.
func (o ExpressRouteConnectionIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponse struct {
	// Authorization key to establish the connection.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.
	EnablePrivateLinkFastPath *bool `pulumi:"enablePrivateLinkFastPath"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringIdResponse `pulumi:"expressRouteCircuitPeering"`
	// Enable FastPath to vWan Firewall hub.
	ExpressRouteGatewayBypass *bool `pulumi:"expressRouteGatewayBypass"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The provisioning state of the express route connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// The routing weight associated to the connection.
	RoutingWeight *int `pulumi:"routingWeight"`
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionResponseOutput) ToExpressRouteConnectionResponseOutput() ExpressRouteConnectionResponseOutput {
	return o
}

func (o ExpressRouteConnectionResponseOutput) ToExpressRouteConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseOutput {
	return o
}

// Authorization key to establish the connection.
func (o ExpressRouteConnectionResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Enable internet security.
func (o ExpressRouteConnectionResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled.
func (o ExpressRouteConnectionResponseOutput) EnablePrivateLinkFastPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *bool { return v.EnablePrivateLinkFastPath }).(pulumi.BoolPtrOutput)
}

// The ExpressRoute circuit peering.
func (o ExpressRouteConnectionResponseOutput) ExpressRouteCircuitPeering() ExpressRouteCircuitPeeringIdResponseOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) ExpressRouteCircuitPeeringIdResponse {
		return v.ExpressRouteCircuitPeering
	}).(ExpressRouteCircuitPeeringIdResponseOutput)
}

// Enable FastPath to vWan Firewall hub.
func (o ExpressRouteConnectionResponseOutput) ExpressRouteGatewayBypass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *bool { return v.ExpressRouteGatewayBypass }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o ExpressRouteConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ExpressRouteConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the express route connection resource.
func (o ExpressRouteConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o ExpressRouteConnectionResponseOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *RoutingConfigurationResponse { return v.RoutingConfiguration }).(RoutingConfigurationResponsePtrOutput)
}

// The routing weight associated to the connection.
func (o ExpressRouteConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

type ExpressRouteConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionResponseArrayOutput) ToExpressRouteConnectionResponseArrayOutput() ExpressRouteConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionResponseArrayOutput) ToExpressRouteConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteConnectionResponse {
		return vs[0].([]ExpressRouteConnectionResponse)[vs[1].(int)]
	}).(ExpressRouteConnectionResponseOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesAutoScaleConfiguration struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds *ExpressRouteGatewayPropertiesBounds `pulumi:"bounds"`
}

// ExpressRouteGatewayPropertiesAutoScaleConfigurationInput is an input type that accepts ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs and ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesAutoScaleConfigurationInput` via:
//
//	ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs{...}
type ExpressRouteGatewayPropertiesAutoScaleConfigurationInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput
	ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds ExpressRouteGatewayPropertiesBoundsPtrInput `pulumi:"bounds"`
}

func (ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return i.ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput)
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return i.ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput).ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput is an input type that accepts ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs, ExpressRouteGatewayPropertiesAutoScaleConfigurationPtr and ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput` via:
//
//	        ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput
	ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput
}

type expressRouteGatewayPropertiesAutoScaleConfigurationPtrType ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs

func ExpressRouteGatewayPropertiesAutoScaleConfigurationPtr(v *ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput {
	return (*expressRouteGatewayPropertiesAutoScaleConfigurationPtrType)(v)
}

func (*expressRouteGatewayPropertiesAutoScaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesAutoScaleConfigurationPtrType) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return i.ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesAutoScaleConfigurationPtrType) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o.ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteGatewayPropertiesAutoScaleConfiguration) *ExpressRouteGatewayPropertiesAutoScaleConfiguration {
		return &v
	}).(ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) Bounds() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesAutoScaleConfiguration) *ExpressRouteGatewayPropertiesBounds {
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

type ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) Elem() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesAutoScaleConfiguration) ExpressRouteGatewayPropertiesAutoScaleConfiguration {
		if v != nil {
			return *v
		}
		var ret ExpressRouteGatewayPropertiesAutoScaleConfiguration
		return ret
	}).(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) Bounds() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesAutoScaleConfiguration) *ExpressRouteGatewayPropertiesBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesBounds struct {
	// Maximum number of scale units deployed for ExpressRoute gateway.
	Max *int `pulumi:"max"`
	// Minimum number of scale units deployed for ExpressRoute gateway.
	Min *int `pulumi:"min"`
}

// ExpressRouteGatewayPropertiesBoundsInput is an input type that accepts ExpressRouteGatewayPropertiesBoundsArgs and ExpressRouteGatewayPropertiesBoundsOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesBoundsInput` via:
//
//	ExpressRouteGatewayPropertiesBoundsArgs{...}
type ExpressRouteGatewayPropertiesBoundsInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesBoundsOutput() ExpressRouteGatewayPropertiesBoundsOutput
	ToExpressRouteGatewayPropertiesBoundsOutputWithContext(context.Context) ExpressRouteGatewayPropertiesBoundsOutput
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesBoundsArgs struct {
	// Maximum number of scale units deployed for ExpressRoute gateway.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Minimum number of scale units deployed for ExpressRoute gateway.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ExpressRouteGatewayPropertiesBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsOutput() ExpressRouteGatewayPropertiesBoundsOutput {
	return i.ToExpressRouteGatewayPropertiesBoundsOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesBoundsOutput)
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return i.ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesBoundsOutput).ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesBoundsPtrInput is an input type that accepts ExpressRouteGatewayPropertiesBoundsArgs, ExpressRouteGatewayPropertiesBoundsPtr and ExpressRouteGatewayPropertiesBoundsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesBoundsPtrInput` via:
//
//	        ExpressRouteGatewayPropertiesBoundsArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteGatewayPropertiesBoundsPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput
	ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput
}

type expressRouteGatewayPropertiesBoundsPtrType ExpressRouteGatewayPropertiesBoundsArgs

func ExpressRouteGatewayPropertiesBoundsPtr(v *ExpressRouteGatewayPropertiesBoundsArgs) ExpressRouteGatewayPropertiesBoundsPtrInput {
	return (*expressRouteGatewayPropertiesBoundsPtrType)(v)
}

func (*expressRouteGatewayPropertiesBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesBoundsPtrType) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return i.ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesBoundsPtrType) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesBoundsOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsOutput() ExpressRouteGatewayPropertiesBoundsOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteGatewayPropertiesBounds) *ExpressRouteGatewayPropertiesBounds {
		return &v
	}).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesBounds) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesBounds) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ExpressRouteGatewayPropertiesBoundsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) Elem() ExpressRouteGatewayPropertiesBoundsOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesBounds) ExpressRouteGatewayPropertiesBounds {
		if v != nil {
			return *v
		}
		var ret ExpressRouteGatewayPropertiesBounds
		return ret
	}).(ExpressRouteGatewayPropertiesBoundsOutput)
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesBounds) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesBounds) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds *ExpressRouteGatewayPropertiesResponseBounds `pulumi:"bounds"`
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return o
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) Bounds() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration) *ExpressRouteGatewayPropertiesResponseBounds {
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput)
}

type ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) Elem() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration) ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration {
		if v != nil {
			return *v
		}
		var ret ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration
		return ret
	}).(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) Bounds() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration) *ExpressRouteGatewayPropertiesResponseBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesResponseBounds struct {
	// Maximum number of scale units deployed for ExpressRoute gateway.
	Max *int `pulumi:"max"`
	// Minimum number of scale units deployed for ExpressRoute gateway.
	Min *int `pulumi:"min"`
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesResponseBoundsOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) ToExpressRouteGatewayPropertiesResponseBoundsOutput() ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) ToExpressRouteGatewayPropertiesResponseBoundsOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return o
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseBounds) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseBounds) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ExpressRouteGatewayPropertiesResponseBoundsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutput() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) Elem() ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseBounds) ExpressRouteGatewayPropertiesResponseBounds {
		if v != nil {
			return *v
		}
		var ret ExpressRouteGatewayPropertiesResponseBounds
		return ret
	}).(ExpressRouteGatewayPropertiesResponseBoundsOutput)
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseBounds) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseBounds) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLink struct {
	// Administrative state of the physical port.
	AdminState *string `pulumi:"adminState"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// MacSec configuration.
	MacSecConfig *ExpressRouteLinkMacSecConfig `pulumi:"macSecConfig"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name *string `pulumi:"name"`
}

// ExpressRouteLinkInput is an input type that accepts ExpressRouteLinkArgs and ExpressRouteLinkOutput values.
// You can construct a concrete instance of `ExpressRouteLinkInput` via:
//
//	ExpressRouteLinkArgs{...}
type ExpressRouteLinkInput interface {
	pulumi.Input

	ToExpressRouteLinkOutput() ExpressRouteLinkOutput
	ToExpressRouteLinkOutputWithContext(context.Context) ExpressRouteLinkOutput
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkArgs struct {
	// Administrative state of the physical port.
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// MacSec configuration.
	MacSecConfig ExpressRouteLinkMacSecConfigPtrInput `pulumi:"macSecConfig"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExpressRouteLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLink)(nil)).Elem()
}

func (i ExpressRouteLinkArgs) ToExpressRouteLinkOutput() ExpressRouteLinkOutput {
	return i.ToExpressRouteLinkOutputWithContext(context.Background())
}

func (i ExpressRouteLinkArgs) ToExpressRouteLinkOutputWithContext(ctx context.Context) ExpressRouteLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkOutput)
}

// ExpressRouteLinkArrayInput is an input type that accepts ExpressRouteLinkArray and ExpressRouteLinkArrayOutput values.
// You can construct a concrete instance of `ExpressRouteLinkArrayInput` via:
//
//	ExpressRouteLinkArray{ ExpressRouteLinkArgs{...} }
type ExpressRouteLinkArrayInput interface {
	pulumi.Input

	ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput
	ToExpressRouteLinkArrayOutputWithContext(context.Context) ExpressRouteLinkArrayOutput
}

type ExpressRouteLinkArray []ExpressRouteLinkInput

func (ExpressRouteLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLink)(nil)).Elem()
}

func (i ExpressRouteLinkArray) ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput {
	return i.ToExpressRouteLinkArrayOutputWithContext(context.Background())
}

func (i ExpressRouteLinkArray) ToExpressRouteLinkArrayOutputWithContext(ctx context.Context) ExpressRouteLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkArrayOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLink)(nil)).Elem()
}

func (o ExpressRouteLinkOutput) ToExpressRouteLinkOutput() ExpressRouteLinkOutput {
	return o
}

func (o ExpressRouteLinkOutput) ToExpressRouteLinkOutputWithContext(ctx context.Context) ExpressRouteLinkOutput {
	return o
}

// Administrative state of the physical port.
func (o ExpressRouteLinkOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// MacSec configuration.
func (o ExpressRouteLinkOutput) MacSecConfig() ExpressRouteLinkMacSecConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *ExpressRouteLinkMacSecConfig { return v.MacSecConfig }).(ExpressRouteLinkMacSecConfigPtrOutput)
}

// Name of child port resource that is unique among child port resources of the parent.
func (o ExpressRouteLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExpressRouteLinkArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLink)(nil)).Elem()
}

func (o ExpressRouteLinkArrayOutput) ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput {
	return o
}

func (o ExpressRouteLinkArrayOutput) ToExpressRouteLinkArrayOutputWithContext(ctx context.Context) ExpressRouteLinkArrayOutput {
	return o
}

func (o ExpressRouteLinkArrayOutput) Index(i pulumi.IntInput) ExpressRouteLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteLink {
		return vs[0].([]ExpressRouteLink)[vs[1].(int)]
	}).(ExpressRouteLinkOutput)
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfig struct {
	// Keyvault Secret Identifier URL containing Mac security CAK key.
	CakSecretIdentifier *string `pulumi:"cakSecretIdentifier"`
	// Mac security cipher.
	Cipher *string `pulumi:"cipher"`
	// Keyvault Secret Identifier URL containing Mac security CKN key.
	CknSecretIdentifier *string `pulumi:"cknSecretIdentifier"`
	// Sci mode enabled/disabled.
	SciState *string `pulumi:"sciState"`
}

// ExpressRouteLinkMacSecConfigInput is an input type that accepts ExpressRouteLinkMacSecConfigArgs and ExpressRouteLinkMacSecConfigOutput values.
// You can construct a concrete instance of `ExpressRouteLinkMacSecConfigInput` via:
//
//	ExpressRouteLinkMacSecConfigArgs{...}
type ExpressRouteLinkMacSecConfigInput interface {
	pulumi.Input

	ToExpressRouteLinkMacSecConfigOutput() ExpressRouteLinkMacSecConfigOutput
	ToExpressRouteLinkMacSecConfigOutputWithContext(context.Context) ExpressRouteLinkMacSecConfigOutput
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigArgs struct {
	// Keyvault Secret Identifier URL containing Mac security CAK key.
	CakSecretIdentifier pulumi.StringPtrInput `pulumi:"cakSecretIdentifier"`
	// Mac security cipher.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// Keyvault Secret Identifier URL containing Mac security CKN key.
	CknSecretIdentifier pulumi.StringPtrInput `pulumi:"cknSecretIdentifier"`
	// Sci mode enabled/disabled.
	SciState pulumi.StringPtrInput `pulumi:"sciState"`
}

func (ExpressRouteLinkMacSecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigOutput() ExpressRouteLinkMacSecConfigOutput {
	return i.ToExpressRouteLinkMacSecConfigOutputWithContext(context.Background())
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigOutput)
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return i.ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigOutput).ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx)
}

// ExpressRouteLinkMacSecConfigPtrInput is an input type that accepts ExpressRouteLinkMacSecConfigArgs, ExpressRouteLinkMacSecConfigPtr and ExpressRouteLinkMacSecConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteLinkMacSecConfigPtrInput` via:
//
//	        ExpressRouteLinkMacSecConfigArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteLinkMacSecConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput
	ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Context) ExpressRouteLinkMacSecConfigPtrOutput
}

type expressRouteLinkMacSecConfigPtrType ExpressRouteLinkMacSecConfigArgs

func ExpressRouteLinkMacSecConfigPtr(v *ExpressRouteLinkMacSecConfigArgs) ExpressRouteLinkMacSecConfigPtrInput {
	return (*expressRouteLinkMacSecConfigPtrType)(v)
}

func (*expressRouteLinkMacSecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (i *expressRouteLinkMacSecConfigPtrType) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return i.ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteLinkMacSecConfigPtrType) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigPtrOutput)
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigOutput() ExpressRouteLinkMacSecConfigOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return o.ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteLinkMacSecConfig) *ExpressRouteLinkMacSecConfig {
		return &v
	}).(ExpressRouteLinkMacSecConfigPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.CakSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.CknSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.SciState }).(pulumi.StringPtrOutput)
}

type ExpressRouteLinkMacSecConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigPtrOutput) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigPtrOutput) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigPtrOutput) Elem() ExpressRouteLinkMacSecConfigOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) ExpressRouteLinkMacSecConfig {
		if v != nil {
			return *v
		}
		var ret ExpressRouteLinkMacSecConfig
		return ret
	}).(ExpressRouteLinkMacSecConfigOutput)
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigPtrOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.CakSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigPtrOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cipher
	}).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigPtrOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.CknSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigPtrOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.SciState
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigResponse struct {
	// Keyvault Secret Identifier URL containing Mac security CAK key.
	CakSecretIdentifier *string `pulumi:"cakSecretIdentifier"`
	// Mac security cipher.
	Cipher *string `pulumi:"cipher"`
	// Keyvault Secret Identifier URL containing Mac security CKN key.
	CknSecretIdentifier *string `pulumi:"cknSecretIdentifier"`
	// Sci mode enabled/disabled.
	SciState *string `pulumi:"sciState"`
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkMacSecConfigResponse)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigResponseOutput) ToExpressRouteLinkMacSecConfigResponseOutput() ExpressRouteLinkMacSecConfigResponseOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigResponseOutput) ToExpressRouteLinkMacSecConfigResponseOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponseOutput {
	return o
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigResponseOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.CakSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigResponseOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigResponseOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.CknSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigResponseOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.SciState }).(pulumi.StringPtrOutput)
}

type ExpressRouteLinkMacSecConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkMacSecConfigResponse)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) ToExpressRouteLinkMacSecConfigResponsePtrOutput() ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) Elem() ExpressRouteLinkMacSecConfigResponseOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) ExpressRouteLinkMacSecConfigResponse {
		if v != nil {
			return *v
		}
		var ret ExpressRouteLinkMacSecConfigResponse
		return ret
	}).(ExpressRouteLinkMacSecConfigResponseOutput)
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CakSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cipher
	}).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CknSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SciState
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponse struct {
	// Administrative state of the physical port.
	AdminState *string `pulumi:"adminState"`
	// Cololocation for ExpressRoute Hybrid Direct.
	ColoLocation string `pulumi:"coloLocation"`
	// Physical fiber port type.
	ConnectorType string `pulumi:"connectorType"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of Azure router interface.
	InterfaceName string `pulumi:"interfaceName"`
	// MacSec configuration.
	MacSecConfig *ExpressRouteLinkMacSecConfigResponse `pulumi:"macSecConfig"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name *string `pulumi:"name"`
	// Mapping between physical port to patch panel port.
	PatchPanelId string `pulumi:"patchPanelId"`
	// The provisioning state of the express route link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Mapping of physical patch panel to rack.
	RackId string `pulumi:"rackId"`
	// Name of Azure router associated with physical port.
	RouterName string `pulumi:"routerName"`
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkResponse)(nil)).Elem()
}

func (o ExpressRouteLinkResponseOutput) ToExpressRouteLinkResponseOutput() ExpressRouteLinkResponseOutput {
	return o
}

func (o ExpressRouteLinkResponseOutput) ToExpressRouteLinkResponseOutputWithContext(ctx context.Context) ExpressRouteLinkResponseOutput {
	return o
}

// Administrative state of the physical port.
func (o ExpressRouteLinkResponseOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Cololocation for ExpressRoute Hybrid Direct.
func (o ExpressRouteLinkResponseOutput) ColoLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.ColoLocation }).(pulumi.StringOutput)
}

// Physical fiber port type.
func (o ExpressRouteLinkResponseOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of Azure router interface.
func (o ExpressRouteLinkResponseOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// MacSec configuration.
func (o ExpressRouteLinkResponseOutput) MacSecConfig() ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *ExpressRouteLinkMacSecConfigResponse { return v.MacSecConfig }).(ExpressRouteLinkMacSecConfigResponsePtrOutput)
}

// Name of child port resource that is unique among child port resources of the parent.
func (o ExpressRouteLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Mapping between physical port to patch panel port.
func (o ExpressRouteLinkResponseOutput) PatchPanelId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.PatchPanelId }).(pulumi.StringOutput)
}

// The provisioning state of the express route link resource.
func (o ExpressRouteLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Mapping of physical patch panel to rack.
func (o ExpressRouteLinkResponseOutput) RackId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.RackId }).(pulumi.StringOutput)
}

// Name of Azure router associated with physical port.
func (o ExpressRouteLinkResponseOutput) RouterName() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.RouterName }).(pulumi.StringOutput)
}

type ExpressRouteLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLinkResponse)(nil)).Elem()
}

func (o ExpressRouteLinkResponseArrayOutput) ToExpressRouteLinkResponseArrayOutput() ExpressRouteLinkResponseArrayOutput {
	return o
}

func (o ExpressRouteLinkResponseArrayOutput) ToExpressRouteLinkResponseArrayOutputWithContext(ctx context.Context) ExpressRouteLinkResponseArrayOutput {
	return o
}

func (o ExpressRouteLinkResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteLinkResponse {
		return vs[0].([]ExpressRouteLinkResponse)[vs[1].(int)]
	}).(ExpressRouteLinkResponseOutput)
}

// ExtendedLocation complex type.
type ExtendedLocation struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// ExtendedLocation complex type.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// ExtendedLocation complex type.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocation complex type.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocation complex type.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Will contain the filter name and values to operate on
type FilterItems struct {
	// The name of the field we would like to filter
	Field *string `pulumi:"field"`
	// List of values to filter the current field by
	Values []string `pulumi:"values"`
}

// FilterItemsInput is an input type that accepts FilterItemsArgs and FilterItemsOutput values.
// You can construct a concrete instance of `FilterItemsInput` via:
//
//	FilterItemsArgs{...}
type FilterItemsInput interface {
	pulumi.Input

	ToFilterItemsOutput() FilterItemsOutput
	ToFilterItemsOutputWithContext(context.Context) FilterItemsOutput
}

// Will contain the filter name and values to operate on
type FilterItemsArgs struct {
	// The name of the field we would like to filter
	Field pulumi.StringPtrInput `pulumi:"field"`
	// List of values to filter the current field by
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (FilterItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterItems)(nil)).Elem()
}

func (i FilterItemsArgs) ToFilterItemsOutput() FilterItemsOutput {
	return i.ToFilterItemsOutputWithContext(context.Background())
}

func (i FilterItemsArgs) ToFilterItemsOutputWithContext(ctx context.Context) FilterItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterItemsOutput)
}

// FilterItemsArrayInput is an input type that accepts FilterItemsArray and FilterItemsArrayOutput values.
// You can construct a concrete instance of `FilterItemsArrayInput` via:
//
//	FilterItemsArray{ FilterItemsArgs{...} }
type FilterItemsArrayInput interface {
	pulumi.Input

	ToFilterItemsArrayOutput() FilterItemsArrayOutput
	ToFilterItemsArrayOutputWithContext(context.Context) FilterItemsArrayOutput
}

type FilterItemsArray []FilterItemsInput

func (FilterItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterItems)(nil)).Elem()
}

func (i FilterItemsArray) ToFilterItemsArrayOutput() FilterItemsArrayOutput {
	return i.ToFilterItemsArrayOutputWithContext(context.Background())
}

func (i FilterItemsArray) ToFilterItemsArrayOutputWithContext(ctx context.Context) FilterItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterItemsArrayOutput)
}

// Will contain the filter name and values to operate on
type FilterItemsOutput struct{ *pulumi.OutputState }

func (FilterItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterItems)(nil)).Elem()
}

func (o FilterItemsOutput) ToFilterItemsOutput() FilterItemsOutput {
	return o
}

func (o FilterItemsOutput) ToFilterItemsOutputWithContext(ctx context.Context) FilterItemsOutput {
	return o
}

// The name of the field we would like to filter
func (o FilterItemsOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterItems) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// List of values to filter the current field by
func (o FilterItemsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterItems) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type FilterItemsArrayOutput struct{ *pulumi.OutputState }

func (FilterItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterItems)(nil)).Elem()
}

func (o FilterItemsArrayOutput) ToFilterItemsArrayOutput() FilterItemsArrayOutput {
	return o
}

func (o FilterItemsArrayOutput) ToFilterItemsArrayOutputWithContext(ctx context.Context) FilterItemsArrayOutput {
	return o
}

func (o FilterItemsArrayOutput) Index(i pulumi.IntInput) FilterItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterItems {
		return vs[0].([]FilterItems)[vs[1].(int)]
	}).(FilterItemsOutput)
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthority struct {
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the CA certificate.
	Name *string `pulumi:"name"`
}

// FirewallPolicyCertificateAuthorityInput is an input type that accepts FirewallPolicyCertificateAuthorityArgs and FirewallPolicyCertificateAuthorityOutput values.
// You can construct a concrete instance of `FirewallPolicyCertificateAuthorityInput` via:
//
//	FirewallPolicyCertificateAuthorityArgs{...}
type FirewallPolicyCertificateAuthorityInput interface {
	pulumi.Input

	ToFirewallPolicyCertificateAuthorityOutput() FirewallPolicyCertificateAuthorityOutput
	ToFirewallPolicyCertificateAuthorityOutputWithContext(context.Context) FirewallPolicyCertificateAuthorityOutput
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityArgs struct {
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the CA certificate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyCertificateAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityOutput() FirewallPolicyCertificateAuthorityOutput {
	return i.ToFirewallPolicyCertificateAuthorityOutputWithContext(context.Background())
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityOutput)
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return i.ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityOutput).ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx)
}

// FirewallPolicyCertificateAuthorityPtrInput is an input type that accepts FirewallPolicyCertificateAuthorityArgs, FirewallPolicyCertificateAuthorityPtr and FirewallPolicyCertificateAuthorityPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyCertificateAuthorityPtrInput` via:
//
//	        FirewallPolicyCertificateAuthorityArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyCertificateAuthorityPtrInput interface {
	pulumi.Input

	ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput
	ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Context) FirewallPolicyCertificateAuthorityPtrOutput
}

type firewallPolicyCertificateAuthorityPtrType FirewallPolicyCertificateAuthorityArgs

func FirewallPolicyCertificateAuthorityPtr(v *FirewallPolicyCertificateAuthorityArgs) FirewallPolicyCertificateAuthorityPtrInput {
	return (*firewallPolicyCertificateAuthorityPtrType)(v)
}

func (*firewallPolicyCertificateAuthorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (i *firewallPolicyCertificateAuthorityPtrType) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return i.ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyCertificateAuthorityPtrType) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityPtrOutput)
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityOutput() FirewallPolicyCertificateAuthorityOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyCertificateAuthority) *FirewallPolicyCertificateAuthority {
		return &v
	}).(FirewallPolicyCertificateAuthorityPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthority) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthority) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyCertificateAuthorityPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityPtrOutput) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityPtrOutput) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityPtrOutput) Elem() FirewallPolicyCertificateAuthorityOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthority) FirewallPolicyCertificateAuthority {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyCertificateAuthority
		return ret
	}).(FirewallPolicyCertificateAuthorityOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityPtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthority) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthority) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityResponse struct {
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the CA certificate.
	Name *string `pulumi:"name"`
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCertificateAuthorityResponse)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityResponseOutput) ToFirewallPolicyCertificateAuthorityResponseOutput() FirewallPolicyCertificateAuthorityResponseOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityResponseOutput) ToFirewallPolicyCertificateAuthorityResponseOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponseOutput {
	return o
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthorityResponse) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthorityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyCertificateAuthorityResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyCertificateAuthorityResponse)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) ToFirewallPolicyCertificateAuthorityResponsePtrOutput() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) Elem() FirewallPolicyCertificateAuthorityResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthorityResponse) FirewallPolicyCertificateAuthorityResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyCertificateAuthorityResponse
		return ret
	}).(FirewallPolicyCertificateAuthorityResponseOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRule struct {
	// The action type of a Filter rule.
	Action *FirewallPolicyFilterRuleAction `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// Collection of rule conditions used by a rule.
	RuleConditions []interface{} `pulumi:"ruleConditions"`
	// The type of the rule.
	// Expected value is 'FirewallPolicyFilterRule'.
	RuleType string `pulumi:"ruleType"`
}

// FirewallPolicyFilterRuleInput is an input type that accepts FirewallPolicyFilterRuleArgs and FirewallPolicyFilterRuleOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleInput` via:
//
//	FirewallPolicyFilterRuleArgs{...}
type FirewallPolicyFilterRuleInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleOutput() FirewallPolicyFilterRuleOutput
	ToFirewallPolicyFilterRuleOutputWithContext(context.Context) FirewallPolicyFilterRuleOutput
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleArgs struct {
	// The action type of a Filter rule.
	Action FirewallPolicyFilterRuleActionPtrInput `pulumi:"action"`
	// The name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rule conditions used by a rule.
	RuleConditions pulumi.ArrayInput `pulumi:"ruleConditions"`
	// The type of the rule.
	// Expected value is 'FirewallPolicyFilterRule'.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (FirewallPolicyFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRule)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleArgs) ToFirewallPolicyFilterRuleOutput() FirewallPolicyFilterRuleOutput {
	return i.ToFirewallPolicyFilterRuleOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleArgs) ToFirewallPolicyFilterRuleOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleOutput)
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRule)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleOutput) ToFirewallPolicyFilterRuleOutput() FirewallPolicyFilterRuleOutput {
	return o
}

func (o FirewallPolicyFilterRuleOutput) ToFirewallPolicyFilterRuleOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleOutput {
	return o
}

// The action type of a Filter rule.
func (o FirewallPolicyFilterRuleOutput) Action() FirewallPolicyFilterRuleActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) *FirewallPolicyFilterRuleAction { return v.Action }).(FirewallPolicyFilterRuleActionPtrOutput)
}

// The name of the rule.
func (o FirewallPolicyFilterRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyFilterRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rule conditions used by a rule.
func (o FirewallPolicyFilterRuleOutput) RuleConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) []interface{} { return v.RuleConditions }).(pulumi.ArrayOutput)
}

// The type of the rule.
// Expected value is 'FirewallPolicyFilterRule'.
func (o FirewallPolicyFilterRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyFilterRuleActionInput is an input type that accepts FirewallPolicyFilterRuleActionArgs and FirewallPolicyFilterRuleActionOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleActionInput` via:
//
//	FirewallPolicyFilterRuleActionArgs{...}
type FirewallPolicyFilterRuleActionInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleActionOutput() FirewallPolicyFilterRuleActionOutput
	ToFirewallPolicyFilterRuleActionOutputWithContext(context.Context) FirewallPolicyFilterRuleActionOutput
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyFilterRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionOutput() FirewallPolicyFilterRuleActionOutput {
	return i.ToFirewallPolicyFilterRuleActionOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionOutput)
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionOutput).ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx)
}

// FirewallPolicyFilterRuleActionPtrInput is an input type that accepts FirewallPolicyFilterRuleActionArgs, FirewallPolicyFilterRuleActionPtr and FirewallPolicyFilterRuleActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleActionPtrInput` via:
//
//	        FirewallPolicyFilterRuleActionArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyFilterRuleActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput
	ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Context) FirewallPolicyFilterRuleActionPtrOutput
}

type firewallPolicyFilterRuleActionPtrType FirewallPolicyFilterRuleActionArgs

func FirewallPolicyFilterRuleActionPtr(v *FirewallPolicyFilterRuleActionArgs) FirewallPolicyFilterRuleActionPtrInput {
	return (*firewallPolicyFilterRuleActionPtrType)(v)
}

func (*firewallPolicyFilterRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (i *firewallPolicyFilterRuleActionPtrType) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyFilterRuleActionPtrType) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionOutput() FirewallPolicyFilterRuleActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return o.ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyFilterRuleAction) *FirewallPolicyFilterRuleAction {
		return &v
	}).(FirewallPolicyFilterRuleActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionPtrOutput) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionPtrOutput) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionPtrOutput) Elem() FirewallPolicyFilterRuleActionOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleAction) FirewallPolicyFilterRuleAction {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyFilterRuleAction
		return ret
	}).(FirewallPolicyFilterRuleActionOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionResponseOutput) ToFirewallPolicyFilterRuleActionResponseOutput() FirewallPolicyFilterRuleActionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionResponseOutput) ToFirewallPolicyFilterRuleActionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponseOutput {
	return o
}

// The type of action.
func (o FirewallPolicyFilterRuleActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionResponsePtrOutput) ToFirewallPolicyFilterRuleActionResponsePtrOutput() FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionResponsePtrOutput) ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionResponsePtrOutput) Elem() FirewallPolicyFilterRuleActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleActionResponse) FirewallPolicyFilterRuleActionResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyFilterRuleActionResponse
		return ret
	}).(FirewallPolicyFilterRuleActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollection struct {
	// The action type of a Filter rule collection.
	Action *FirewallPolicyFilterRuleCollectionAction `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	// Expected value is 'FirewallPolicyFilterRuleCollection'.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// FirewallPolicyFilterRuleCollectionInput is an input type that accepts FirewallPolicyFilterRuleCollectionArgs and FirewallPolicyFilterRuleCollectionOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionInput` via:
//
//	FirewallPolicyFilterRuleCollectionArgs{...}
type FirewallPolicyFilterRuleCollectionInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionOutput() FirewallPolicyFilterRuleCollectionOutput
	ToFirewallPolicyFilterRuleCollectionOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionOutput
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionArgs struct {
	// The action type of a Filter rule collection.
	Action FirewallPolicyFilterRuleCollectionActionPtrInput `pulumi:"action"`
	// The name of the rule collection.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The type of the rule collection.
	// Expected value is 'FirewallPolicyFilterRuleCollection'.
	RuleCollectionType pulumi.StringInput `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules pulumi.ArrayInput `pulumi:"rules"`
}

func (FirewallPolicyFilterRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleCollectionArgs) ToFirewallPolicyFilterRuleCollectionOutput() FirewallPolicyFilterRuleCollectionOutput {
	return i.ToFirewallPolicyFilterRuleCollectionOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionArgs) ToFirewallPolicyFilterRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionOutput)
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionOutput) ToFirewallPolicyFilterRuleCollectionOutput() FirewallPolicyFilterRuleCollectionOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionOutput) ToFirewallPolicyFilterRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionOutput {
	return o
}

// The action type of a Filter rule collection.
func (o FirewallPolicyFilterRuleCollectionOutput) Action() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) *FirewallPolicyFilterRuleCollectionAction { return v.Action }).(FirewallPolicyFilterRuleCollectionActionPtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyFilterRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyFilterRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
// Expected value is 'FirewallPolicyFilterRuleCollection'.
func (o FirewallPolicyFilterRuleCollectionOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyFilterRuleCollectionOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyFilterRuleCollectionActionInput is an input type that accepts FirewallPolicyFilterRuleCollectionActionArgs and FirewallPolicyFilterRuleCollectionActionOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionActionInput` via:
//
//	FirewallPolicyFilterRuleCollectionActionArgs{...}
type FirewallPolicyFilterRuleCollectionActionInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionActionOutput() FirewallPolicyFilterRuleCollectionActionOutput
	ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionActionOutput
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyFilterRuleCollectionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionOutput() FirewallPolicyFilterRuleCollectionActionOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionOutput)
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionOutput).ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx)
}

// FirewallPolicyFilterRuleCollectionActionPtrInput is an input type that accepts FirewallPolicyFilterRuleCollectionActionArgs, FirewallPolicyFilterRuleCollectionActionPtr and FirewallPolicyFilterRuleCollectionActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionActionPtrInput` via:
//
//	        FirewallPolicyFilterRuleCollectionActionArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyFilterRuleCollectionActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput
	ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput
}

type firewallPolicyFilterRuleCollectionActionPtrType FirewallPolicyFilterRuleCollectionActionArgs

func FirewallPolicyFilterRuleCollectionActionPtr(v *FirewallPolicyFilterRuleCollectionActionArgs) FirewallPolicyFilterRuleCollectionActionPtrInput {
	return (*firewallPolicyFilterRuleCollectionActionPtrType)(v)
}

func (*firewallPolicyFilterRuleCollectionActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (i *firewallPolicyFilterRuleCollectionActionPtrType) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyFilterRuleCollectionActionPtrType) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionOutput() FirewallPolicyFilterRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o.ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyFilterRuleCollectionAction) *FirewallPolicyFilterRuleCollectionAction {
		return &v
	}).(FirewallPolicyFilterRuleCollectionActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleCollectionActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) Elem() FirewallPolicyFilterRuleCollectionActionOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionAction) FirewallPolicyFilterRuleCollectionAction {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyFilterRuleCollectionAction
		return ret
	}).(FirewallPolicyFilterRuleCollectionActionOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) ToFirewallPolicyFilterRuleCollectionActionResponseOutput() FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) ToFirewallPolicyFilterRuleCollectionActionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return o
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleCollectionActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutput() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) Elem() FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionActionResponse) FirewallPolicyFilterRuleCollectionActionResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyFilterRuleCollectionActionResponse
		return ret
	}).(FirewallPolicyFilterRuleCollectionActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionResponse struct {
	// The action type of a Filter rule collection.
	Action *FirewallPolicyFilterRuleCollectionActionResponse `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	// Expected value is 'FirewallPolicyFilterRuleCollection'.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionResponseOutput) ToFirewallPolicyFilterRuleCollectionResponseOutput() FirewallPolicyFilterRuleCollectionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionResponseOutput) ToFirewallPolicyFilterRuleCollectionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionResponseOutput {
	return o
}

// The action type of a Filter rule collection.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Action() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) *FirewallPolicyFilterRuleCollectionActionResponse {
		return v.Action
	}).(FirewallPolicyFilterRuleCollectionActionResponsePtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
// Expected value is 'FirewallPolicyFilterRuleCollection'.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleResponse struct {
	// The action type of a Filter rule.
	Action *FirewallPolicyFilterRuleActionResponse `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// Collection of rule conditions used by a rule.
	RuleConditions []interface{} `pulumi:"ruleConditions"`
	// The type of the rule.
	// Expected value is 'FirewallPolicyFilterRule'.
	RuleType string `pulumi:"ruleType"`
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleResponseOutput) ToFirewallPolicyFilterRuleResponseOutput() FirewallPolicyFilterRuleResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleResponseOutput) ToFirewallPolicyFilterRuleResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleResponseOutput {
	return o
}

// The action type of a Filter rule.
func (o FirewallPolicyFilterRuleResponseOutput) Action() FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) *FirewallPolicyFilterRuleActionResponse { return v.Action }).(FirewallPolicyFilterRuleActionResponsePtrOutput)
}

// The name of the rule.
func (o FirewallPolicyFilterRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyFilterRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rule conditions used by a rule.
func (o FirewallPolicyFilterRuleResponseOutput) RuleConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) []interface{} { return v.RuleConditions }).(pulumi.ArrayOutput)
}

// The type of the rule.
// Expected value is 'FirewallPolicyFilterRule'.
func (o FirewallPolicyFilterRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// name and value of HTTP/S header to insert
type FirewallPolicyHttpHeaderToInsert struct {
	// Contains the name of the header
	HeaderName *string `pulumi:"headerName"`
	// Contains the value of the header
	HeaderValue *string `pulumi:"headerValue"`
}

// FirewallPolicyHttpHeaderToInsertInput is an input type that accepts FirewallPolicyHttpHeaderToInsertArgs and FirewallPolicyHttpHeaderToInsertOutput values.
// You can construct a concrete instance of `FirewallPolicyHttpHeaderToInsertInput` via:
//
//	FirewallPolicyHttpHeaderToInsertArgs{...}
type FirewallPolicyHttpHeaderToInsertInput interface {
	pulumi.Input

	ToFirewallPolicyHttpHeaderToInsertOutput() FirewallPolicyHttpHeaderToInsertOutput
	ToFirewallPolicyHttpHeaderToInsertOutputWithContext(context.Context) FirewallPolicyHttpHeaderToInsertOutput
}

// name and value of HTTP/S header to insert
type FirewallPolicyHttpHeaderToInsertArgs struct {
	// Contains the name of the header
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// Contains the value of the header
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (FirewallPolicyHttpHeaderToInsertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyHttpHeaderToInsert)(nil)).Elem()
}

func (i FirewallPolicyHttpHeaderToInsertArgs) ToFirewallPolicyHttpHeaderToInsertOutput() FirewallPolicyHttpHeaderToInsertOutput {
	return i.ToFirewallPolicyHttpHeaderToInsertOutputWithContext(context.Background())
}

func (i FirewallPolicyHttpHeaderToInsertArgs) ToFirewallPolicyHttpHeaderToInsertOutputWithContext(ctx context.Context) FirewallPolicyHttpHeaderToInsertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyHttpHeaderToInsertOutput)
}

// FirewallPolicyHttpHeaderToInsertArrayInput is an input type that accepts FirewallPolicyHttpHeaderToInsertArray and FirewallPolicyHttpHeaderToInsertArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyHttpHeaderToInsertArrayInput` via:
//
//	FirewallPolicyHttpHeaderToInsertArray{ FirewallPolicyHttpHeaderToInsertArgs{...} }
type FirewallPolicyHttpHeaderToInsertArrayInput interface {
	pulumi.Input

	ToFirewallPolicyHttpHeaderToInsertArrayOutput() FirewallPolicyHttpHeaderToInsertArrayOutput
	ToFirewallPolicyHttpHeaderToInsertArrayOutputWithContext(context.Context) FirewallPolicyHttpHeaderToInsertArrayOutput
}

type FirewallPolicyHttpHeaderToInsertArray []FirewallPolicyHttpHeaderToInsertInput

func (FirewallPolicyHttpHeaderToInsertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyHttpHeaderToInsert)(nil)).Elem()
}

func (i FirewallPolicyHttpHeaderToInsertArray) ToFirewallPolicyHttpHeaderToInsertArrayOutput() FirewallPolicyHttpHeaderToInsertArrayOutput {
	return i.ToFirewallPolicyHttpHeaderToInsertArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyHttpHeaderToInsertArray) ToFirewallPolicyHttpHeaderToInsertArrayOutputWithContext(ctx context.Context) FirewallPolicyHttpHeaderToInsertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyHttpHeaderToInsertArrayOutput)
}

// name and value of HTTP/S header to insert
type FirewallPolicyHttpHeaderToInsertOutput struct{ *pulumi.OutputState }

func (FirewallPolicyHttpHeaderToInsertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyHttpHeaderToInsert)(nil)).Elem()
}

func (o FirewallPolicyHttpHeaderToInsertOutput) ToFirewallPolicyHttpHeaderToInsertOutput() FirewallPolicyHttpHeaderToInsertOutput {
	return o
}

func (o FirewallPolicyHttpHeaderToInsertOutput) ToFirewallPolicyHttpHeaderToInsertOutputWithContext(ctx context.Context) FirewallPolicyHttpHeaderToInsertOutput {
	return o
}

// Contains the name of the header
func (o FirewallPolicyHttpHeaderToInsertOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyHttpHeaderToInsert) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Contains the value of the header
func (o FirewallPolicyHttpHeaderToInsertOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyHttpHeaderToInsert) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type FirewallPolicyHttpHeaderToInsertArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyHttpHeaderToInsertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyHttpHeaderToInsert)(nil)).Elem()
}

func (o FirewallPolicyHttpHeaderToInsertArrayOutput) ToFirewallPolicyHttpHeaderToInsertArrayOutput() FirewallPolicyHttpHeaderToInsertArrayOutput {
	return o
}

func (o FirewallPolicyHttpHeaderToInsertArrayOutput) ToFirewallPolicyHttpHeaderToInsertArrayOutputWithContext(ctx context.Context) FirewallPolicyHttpHeaderToInsertArrayOutput {
	return o
}

func (o FirewallPolicyHttpHeaderToInsertArrayOutput) Index(i pulumi.IntInput) FirewallPolicyHttpHeaderToInsertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyHttpHeaderToInsert {
		return vs[0].([]FirewallPolicyHttpHeaderToInsert)[vs[1].(int)]
	}).(FirewallPolicyHttpHeaderToInsertOutput)
}

// name and value of HTTP/S header to insert
type FirewallPolicyHttpHeaderToInsertResponse struct {
	// Contains the name of the header
	HeaderName *string `pulumi:"headerName"`
	// Contains the value of the header
	HeaderValue *string `pulumi:"headerValue"`
}

// name and value of HTTP/S header to insert
type FirewallPolicyHttpHeaderToInsertResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyHttpHeaderToInsertResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyHttpHeaderToInsertResponse)(nil)).Elem()
}

func (o FirewallPolicyHttpHeaderToInsertResponseOutput) ToFirewallPolicyHttpHeaderToInsertResponseOutput() FirewallPolicyHttpHeaderToInsertResponseOutput {
	return o
}

func (o FirewallPolicyHttpHeaderToInsertResponseOutput) ToFirewallPolicyHttpHeaderToInsertResponseOutputWithContext(ctx context.Context) FirewallPolicyHttpHeaderToInsertResponseOutput {
	return o
}

// Contains the name of the header
func (o FirewallPolicyHttpHeaderToInsertResponseOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyHttpHeaderToInsertResponse) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Contains the value of the header
func (o FirewallPolicyHttpHeaderToInsertResponseOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyHttpHeaderToInsertResponse) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type FirewallPolicyHttpHeaderToInsertResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyHttpHeaderToInsertResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyHttpHeaderToInsertResponse)(nil)).Elem()
}

func (o FirewallPolicyHttpHeaderToInsertResponseArrayOutput) ToFirewallPolicyHttpHeaderToInsertResponseArrayOutput() FirewallPolicyHttpHeaderToInsertResponseArrayOutput {
	return o
}

func (o FirewallPolicyHttpHeaderToInsertResponseArrayOutput) ToFirewallPolicyHttpHeaderToInsertResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyHttpHeaderToInsertResponseArrayOutput {
	return o
}

func (o FirewallPolicyHttpHeaderToInsertResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyHttpHeaderToInsertResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyHttpHeaderToInsertResponse {
		return vs[0].([]FirewallPolicyHttpHeaderToInsertResponse)[vs[1].(int)]
	}).(FirewallPolicyHttpHeaderToInsertResponseOutput)
}

// Firewall Policy Insights.
type FirewallPolicyInsights struct {
	// A flag to indicate if the insights are enabled on the policy.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Workspaces needed to configure the Firewall Policy Insights.
	LogAnalyticsResources *FirewallPolicyLogAnalyticsResources `pulumi:"logAnalyticsResources"`
	// Number of days the insights should be enabled on the policy.
	RetentionDays *int `pulumi:"retentionDays"`
}

// FirewallPolicyInsightsInput is an input type that accepts FirewallPolicyInsightsArgs and FirewallPolicyInsightsOutput values.
// You can construct a concrete instance of `FirewallPolicyInsightsInput` via:
//
//	FirewallPolicyInsightsArgs{...}
type FirewallPolicyInsightsInput interface {
	pulumi.Input

	ToFirewallPolicyInsightsOutput() FirewallPolicyInsightsOutput
	ToFirewallPolicyInsightsOutputWithContext(context.Context) FirewallPolicyInsightsOutput
}

// Firewall Policy Insights.
type FirewallPolicyInsightsArgs struct {
	// A flag to indicate if the insights are enabled on the policy.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Workspaces needed to configure the Firewall Policy Insights.
	LogAnalyticsResources FirewallPolicyLogAnalyticsResourcesPtrInput `pulumi:"logAnalyticsResources"`
	// Number of days the insights should be enabled on the policy.
	RetentionDays pulumi.IntPtrInput `pulumi:"retentionDays"`
}

func (FirewallPolicyInsightsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInsights)(nil)).Elem()
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsOutput() FirewallPolicyInsightsOutput {
	return i.ToFirewallPolicyInsightsOutputWithContext(context.Background())
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsOutputWithContext(ctx context.Context) FirewallPolicyInsightsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsOutput)
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return i.ToFirewallPolicyInsightsPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsOutput).ToFirewallPolicyInsightsPtrOutputWithContext(ctx)
}

// FirewallPolicyInsightsPtrInput is an input type that accepts FirewallPolicyInsightsArgs, FirewallPolicyInsightsPtr and FirewallPolicyInsightsPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyInsightsPtrInput` via:
//
//	        FirewallPolicyInsightsArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyInsightsPtrInput interface {
	pulumi.Input

	ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput
	ToFirewallPolicyInsightsPtrOutputWithContext(context.Context) FirewallPolicyInsightsPtrOutput
}

type firewallPolicyInsightsPtrType FirewallPolicyInsightsArgs

func FirewallPolicyInsightsPtr(v *FirewallPolicyInsightsArgs) FirewallPolicyInsightsPtrInput {
	return (*firewallPolicyInsightsPtrType)(v)
}

func (*firewallPolicyInsightsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyInsights)(nil)).Elem()
}

func (i *firewallPolicyInsightsPtrType) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return i.ToFirewallPolicyInsightsPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyInsightsPtrType) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsPtrOutput)
}

// Firewall Policy Insights.
type FirewallPolicyInsightsOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInsights)(nil)).Elem()
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsOutput() FirewallPolicyInsightsOutput {
	return o
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsOutputWithContext(ctx context.Context) FirewallPolicyInsightsOutput {
	return o
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return o.ToFirewallPolicyInsightsPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyInsights) *FirewallPolicyInsights {
		return &v
	}).(FirewallPolicyInsightsPtrOutput)
}

// A flag to indicate if the insights are enabled on the policy.
func (o FirewallPolicyInsightsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInsights) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Workspaces needed to configure the Firewall Policy Insights.
func (o FirewallPolicyInsightsOutput) LogAnalyticsResources() FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInsights) *FirewallPolicyLogAnalyticsResources { return v.LogAnalyticsResources }).(FirewallPolicyLogAnalyticsResourcesPtrOutput)
}

// Number of days the insights should be enabled on the policy.
func (o FirewallPolicyInsightsOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInsights) *int { return v.RetentionDays }).(pulumi.IntPtrOutput)
}

type FirewallPolicyInsightsPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyInsights)(nil)).Elem()
}

func (o FirewallPolicyInsightsPtrOutput) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return o
}

func (o FirewallPolicyInsightsPtrOutput) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return o
}

func (o FirewallPolicyInsightsPtrOutput) Elem() FirewallPolicyInsightsOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) FirewallPolicyInsights {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyInsights
		return ret
	}).(FirewallPolicyInsightsOutput)
}

// A flag to indicate if the insights are enabled on the policy.
func (o FirewallPolicyInsightsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Workspaces needed to configure the Firewall Policy Insights.
func (o FirewallPolicyInsightsPtrOutput) LogAnalyticsResources() FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) *FirewallPolicyLogAnalyticsResources {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsResources
	}).(FirewallPolicyLogAnalyticsResourcesPtrOutput)
}

// Number of days the insights should be enabled on the policy.
func (o FirewallPolicyInsightsPtrOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) *int {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.IntPtrOutput)
}

// Firewall Policy Insights.
type FirewallPolicyInsightsResponse struct {
	// A flag to indicate if the insights are enabled on the policy.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Workspaces needed to configure the Firewall Policy Insights.
	LogAnalyticsResources *FirewallPolicyLogAnalyticsResourcesResponse `pulumi:"logAnalyticsResources"`
	// Number of days the insights should be enabled on the policy.
	RetentionDays *int `pulumi:"retentionDays"`
}

// Firewall Policy Insights.
type FirewallPolicyInsightsResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInsightsResponse)(nil)).Elem()
}

func (o FirewallPolicyInsightsResponseOutput) ToFirewallPolicyInsightsResponseOutput() FirewallPolicyInsightsResponseOutput {
	return o
}

func (o FirewallPolicyInsightsResponseOutput) ToFirewallPolicyInsightsResponseOutputWithContext(ctx context.Context) FirewallPolicyInsightsResponseOutput {
	return o
}

// A flag to indicate if the insights are enabled on the policy.
func (o FirewallPolicyInsightsResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInsightsResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Workspaces needed to configure the Firewall Policy Insights.
func (o FirewallPolicyInsightsResponseOutput) LogAnalyticsResources() FirewallPolicyLogAnalyticsResourcesResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyInsightsResponse) *FirewallPolicyLogAnalyticsResourcesResponse {
		return v.LogAnalyticsResources
	}).(FirewallPolicyLogAnalyticsResourcesResponsePtrOutput)
}

// Number of days the insights should be enabled on the policy.
func (o FirewallPolicyInsightsResponseOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInsightsResponse) *int { return v.RetentionDays }).(pulumi.IntPtrOutput)
}

type FirewallPolicyInsightsResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyInsightsResponse)(nil)).Elem()
}

func (o FirewallPolicyInsightsResponsePtrOutput) ToFirewallPolicyInsightsResponsePtrOutput() FirewallPolicyInsightsResponsePtrOutput {
	return o
}

func (o FirewallPolicyInsightsResponsePtrOutput) ToFirewallPolicyInsightsResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsResponsePtrOutput {
	return o
}

func (o FirewallPolicyInsightsResponsePtrOutput) Elem() FirewallPolicyInsightsResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyInsightsResponse) FirewallPolicyInsightsResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyInsightsResponse
		return ret
	}).(FirewallPolicyInsightsResponseOutput)
}

// A flag to indicate if the insights are enabled on the policy.
func (o FirewallPolicyInsightsResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsightsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Workspaces needed to configure the Firewall Policy Insights.
func (o FirewallPolicyInsightsResponsePtrOutput) LogAnalyticsResources() FirewallPolicyLogAnalyticsResourcesResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsightsResponse) *FirewallPolicyLogAnalyticsResourcesResponse {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsResources
	}).(FirewallPolicyLogAnalyticsResourcesResponsePtrOutput)
}

// Number of days the insights should be enabled on the policy.
func (o FirewallPolicyInsightsResponsePtrOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsightsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.IntPtrOutput)
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetection struct {
	// Intrusion detection configuration properties.
	Configuration *FirewallPolicyIntrusionDetectionConfiguration `pulumi:"configuration"`
	// Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
	Mode *string `pulumi:"mode"`
	// IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
	Profile *string `pulumi:"profile"`
}

// FirewallPolicyIntrusionDetectionInput is an input type that accepts FirewallPolicyIntrusionDetectionArgs and FirewallPolicyIntrusionDetectionOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionInput` via:
//
//	FirewallPolicyIntrusionDetectionArgs{...}
type FirewallPolicyIntrusionDetectionInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput
	ToFirewallPolicyIntrusionDetectionOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionOutput
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionArgs struct {
	// Intrusion detection configuration properties.
	Configuration FirewallPolicyIntrusionDetectionConfigurationPtrInput `pulumi:"configuration"`
	// Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
	Profile pulumi.StringPtrInput `pulumi:"profile"`
}

func (FirewallPolicyIntrusionDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput {
	return i.ToFirewallPolicyIntrusionDetectionOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionOutput)
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionOutput).ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx)
}

// FirewallPolicyIntrusionDetectionPtrInput is an input type that accepts FirewallPolicyIntrusionDetectionArgs, FirewallPolicyIntrusionDetectionPtr and FirewallPolicyIntrusionDetectionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionPtrInput` via:
//
//	        FirewallPolicyIntrusionDetectionArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyIntrusionDetectionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput
	ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionPtrOutput
}

type firewallPolicyIntrusionDetectionPtrType FirewallPolicyIntrusionDetectionArgs

func FirewallPolicyIntrusionDetectionPtr(v *FirewallPolicyIntrusionDetectionArgs) FirewallPolicyIntrusionDetectionPtrInput {
	return (*firewallPolicyIntrusionDetectionPtrType)(v)
}

func (*firewallPolicyIntrusionDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (i *firewallPolicyIntrusionDetectionPtrType) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIntrusionDetectionPtrType) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionPtrOutput)
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return o.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyIntrusionDetection) *FirewallPolicyIntrusionDetection {
		return &v
	}).(FirewallPolicyIntrusionDetectionPtrOutput)
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) *FirewallPolicyIntrusionDetectionConfiguration {
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
func (o FirewallPolicyIntrusionDetectionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
func (o FirewallPolicyIntrusionDetectionOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) Elem() FirewallPolicyIntrusionDetectionOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) FirewallPolicyIntrusionDetection {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyIntrusionDetection
		return ret
	}).(FirewallPolicyIntrusionDetectionOutput)
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionPtrOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) *FirewallPolicyIntrusionDetectionConfiguration {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
func (o FirewallPolicyIntrusionDetectionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
func (o FirewallPolicyIntrusionDetectionPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecifications struct {
	// Description of the bypass traffic rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or ranges for this rule.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports or ranges.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the bypass traffic rule.
	Name *string `pulumi:"name"`
	// The rule bypass protocol.
	Protocol *string `pulumi:"protocol"`
	// List of source IP addresses or ranges for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput is an input type that accepts FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs and FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput` via:
//
//	FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs{...}
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput
	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs struct {
	// Description of the bypass traffic rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or ranges for this rule.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports or ranges.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the bypass traffic rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The rule bypass protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// List of source IP addresses or ranges for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return i.ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput)
}

// FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray and FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput` via:
//
//	FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray{ FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs{...} }
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput
	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput
}

type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput)
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return o
}

// Description of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string {
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string {
		return v.DestinationIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of destination ports or ranges.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string {
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Name of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule bypass protocol.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// List of source IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
		return vs[0].([]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput)
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse struct {
	// Description of the bypass traffic rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or ranges for this rule.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports or ranges.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the bypass traffic rule.
	Name *string `pulumi:"name"`
	// The rule bypass protocol.
	Protocol *string `pulumi:"protocol"`
	// List of source IP addresses or ranges for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return o
}

// Description of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.DestinationIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of destination ports or ranges.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Name of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule bypass protocol.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// List of source IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse {
		return vs[0].([]FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput)
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfiguration struct {
	// List of rules for traffic to bypass.
	BypassTrafficSettings []FirewallPolicyIntrusionDetectionBypassTrafficSpecifications `pulumi:"bypassTrafficSettings"`
	// IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
	PrivateRanges []string `pulumi:"privateRanges"`
	// List of specific signatures states.
	SignatureOverrides []FirewallPolicyIntrusionDetectionSignatureSpecification `pulumi:"signatureOverrides"`
}

// FirewallPolicyIntrusionDetectionConfigurationInput is an input type that accepts FirewallPolicyIntrusionDetectionConfigurationArgs and FirewallPolicyIntrusionDetectionConfigurationOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionConfigurationInput` via:
//
//	FirewallPolicyIntrusionDetectionConfigurationArgs{...}
type FirewallPolicyIntrusionDetectionConfigurationInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionConfigurationOutput() FirewallPolicyIntrusionDetectionConfigurationOutput
	ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionConfigurationOutput
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationArgs struct {
	// List of rules for traffic to bypass.
	BypassTrafficSettings FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput `pulumi:"bypassTrafficSettings"`
	// IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
	PrivateRanges pulumi.StringArrayInput `pulumi:"privateRanges"`
	// List of specific signatures states.
	SignatureOverrides FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput `pulumi:"signatureOverrides"`
}

func (FirewallPolicyIntrusionDetectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationOutput() FirewallPolicyIntrusionDetectionConfigurationOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationOutput)
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationOutput).ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx)
}

// FirewallPolicyIntrusionDetectionConfigurationPtrInput is an input type that accepts FirewallPolicyIntrusionDetectionConfigurationArgs, FirewallPolicyIntrusionDetectionConfigurationPtr and FirewallPolicyIntrusionDetectionConfigurationPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionConfigurationPtrInput` via:
//
//	        FirewallPolicyIntrusionDetectionConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyIntrusionDetectionConfigurationPtrInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput
	ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput
}

type firewallPolicyIntrusionDetectionConfigurationPtrType FirewallPolicyIntrusionDetectionConfigurationArgs

func FirewallPolicyIntrusionDetectionConfigurationPtr(v *FirewallPolicyIntrusionDetectionConfigurationArgs) FirewallPolicyIntrusionDetectionConfigurationPtrInput {
	return (*firewallPolicyIntrusionDetectionConfigurationPtrType)(v)
}

func (*firewallPolicyIntrusionDetectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (i *firewallPolicyIntrusionDetectionConfigurationPtrType) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIntrusionDetectionConfigurationPtrType) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationOutput() FirewallPolicyIntrusionDetectionConfigurationOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyIntrusionDetectionConfiguration) *FirewallPolicyIntrusionDetectionConfiguration {
		return &v
	}).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput)
}

// IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
func (o FirewallPolicyIntrusionDetectionConfigurationOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfiguration) []string { return v.PrivateRanges }).(pulumi.StringArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionSignatureSpecification {
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput)
}

type FirewallPolicyIntrusionDetectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) Elem() FirewallPolicyIntrusionDetectionConfigurationOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfiguration) FirewallPolicyIntrusionDetectionConfiguration {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyIntrusionDetectionConfiguration
		return ret
	}).(FirewallPolicyIntrusionDetectionConfigurationOutput)
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
		if v == nil {
			return nil
		}
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput)
}

// IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.PrivateRanges
	}).(pulumi.StringArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionSignatureSpecification {
		if v == nil {
			return nil
		}
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput)
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationResponse struct {
	// List of rules for traffic to bypass.
	BypassTrafficSettings []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse `pulumi:"bypassTrafficSettings"`
	// IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
	PrivateRanges []string `pulumi:"privateRanges"`
	// List of specific signatures states.
	SignatureOverrides []FirewallPolicyIntrusionDetectionSignatureSpecificationResponse `pulumi:"signatureOverrides"`
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionConfigurationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponseOutput() FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return o
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse {
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput)
}

// IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfigurationResponse) []string { return v.PrivateRanges }).(pulumi.StringArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionSignatureSpecificationResponse {
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput)
}

type FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionConfigurationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) Elem() FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfigurationResponse) FirewallPolicyIntrusionDetectionConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyIntrusionDetectionConfigurationResponse
		return ret
	}).(FirewallPolicyIntrusionDetectionConfigurationResponseOutput)
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse {
		if v == nil {
			return nil
		}
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput)
}

// IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property
func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.PrivateRanges
	}).(pulumi.StringArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionSignatureSpecificationResponse {
		if v == nil {
			return nil
		}
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput)
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionResponse struct {
	// Intrusion detection configuration properties.
	Configuration *FirewallPolicyIntrusionDetectionConfigurationResponse `pulumi:"configuration"`
	// Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
	Mode *string `pulumi:"mode"`
	// IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
	Profile *string `pulumi:"profile"`
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionResponseOutput) ToFirewallPolicyIntrusionDetectionResponseOutput() FirewallPolicyIntrusionDetectionResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionResponseOutput) ToFirewallPolicyIntrusionDetectionResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponseOutput {
	return o
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionResponseOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionResponse) *FirewallPolicyIntrusionDetectionConfigurationResponse {
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput)
}

// Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
func (o FirewallPolicyIntrusionDetectionResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
func (o FirewallPolicyIntrusionDetectionResponseOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionResponse) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) ToFirewallPolicyIntrusionDetectionResponsePtrOutput() FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) Elem() FirewallPolicyIntrusionDetectionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionResponse) FirewallPolicyIntrusionDetectionResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyIntrusionDetectionResponse
		return ret
	}).(FirewallPolicyIntrusionDetectionResponseOutput)
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionResponse) *FirewallPolicyIntrusionDetectionConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput)
}

// Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two.
func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy.
func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecification struct {
	// Signature id.
	Id *string `pulumi:"id"`
	// The signature state.
	Mode *string `pulumi:"mode"`
}

// FirewallPolicyIntrusionDetectionSignatureSpecificationInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureSpecificationArgs and FirewallPolicyIntrusionDetectionSignatureSpecificationOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureSpecificationInput` via:
//
//	FirewallPolicyIntrusionDetectionSignatureSpecificationArgs{...}
type FirewallPolicyIntrusionDetectionSignatureSpecificationInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationOutput
	ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationArgs struct {
	// Signature id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The signature state.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (FirewallPolicyIntrusionDetectionSignatureSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArgs) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArgs) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureSpecificationOutput)
}

// FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureSpecificationArray and FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput` via:
//
//	FirewallPolicyIntrusionDetectionSignatureSpecificationArray{ FirewallPolicyIntrusionDetectionSignatureSpecificationArgs{...} }
type FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput
	ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput
}

type FirewallPolicyIntrusionDetectionSignatureSpecificationArray []FirewallPolicyIntrusionDetectionSignatureSpecificationInput

func (FirewallPolicyIntrusionDetectionSignatureSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArray) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArray) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput)
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return o
}

// Signature id.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecification) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The signature state.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecification) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionSignatureSpecification {
		return vs[0].([]FirewallPolicyIntrusionDetectionSignatureSpecification)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationOutput)
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationResponse struct {
	// Signature id.
	Id *string `pulumi:"id"`
	// The signature state.
	Mode *string `pulumi:"mode"`
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return o
}

// Signature id.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecificationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The signature state.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecificationResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionSignatureSpecificationResponse {
		return vs[0].([]FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput)
}

// Log Analytics Resources for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsResources struct {
	// The default workspace Id for Firewall Policy Insights.
	DefaultWorkspaceId *SubResource `pulumi:"defaultWorkspaceId"`
	// List of workspaces for Firewall Policy Insights.
	Workspaces []FirewallPolicyLogAnalyticsWorkspace `pulumi:"workspaces"`
}

// FirewallPolicyLogAnalyticsResourcesInput is an input type that accepts FirewallPolicyLogAnalyticsResourcesArgs and FirewallPolicyLogAnalyticsResourcesOutput values.
// You can construct a concrete instance of `FirewallPolicyLogAnalyticsResourcesInput` via:
//
//	FirewallPolicyLogAnalyticsResourcesArgs{...}
type FirewallPolicyLogAnalyticsResourcesInput interface {
	pulumi.Input

	ToFirewallPolicyLogAnalyticsResourcesOutput() FirewallPolicyLogAnalyticsResourcesOutput
	ToFirewallPolicyLogAnalyticsResourcesOutputWithContext(context.Context) FirewallPolicyLogAnalyticsResourcesOutput
}

// Log Analytics Resources for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsResourcesArgs struct {
	// The default workspace Id for Firewall Policy Insights.
	DefaultWorkspaceId SubResourcePtrInput `pulumi:"defaultWorkspaceId"`
	// List of workspaces for Firewall Policy Insights.
	Workspaces FirewallPolicyLogAnalyticsWorkspaceArrayInput `pulumi:"workspaces"`
}

func (FirewallPolicyLogAnalyticsResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyLogAnalyticsResources)(nil)).Elem()
}

func (i FirewallPolicyLogAnalyticsResourcesArgs) ToFirewallPolicyLogAnalyticsResourcesOutput() FirewallPolicyLogAnalyticsResourcesOutput {
	return i.ToFirewallPolicyLogAnalyticsResourcesOutputWithContext(context.Background())
}

func (i FirewallPolicyLogAnalyticsResourcesArgs) ToFirewallPolicyLogAnalyticsResourcesOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyLogAnalyticsResourcesOutput)
}

func (i FirewallPolicyLogAnalyticsResourcesArgs) ToFirewallPolicyLogAnalyticsResourcesPtrOutput() FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return i.ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyLogAnalyticsResourcesArgs) ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyLogAnalyticsResourcesOutput).ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(ctx)
}

// FirewallPolicyLogAnalyticsResourcesPtrInput is an input type that accepts FirewallPolicyLogAnalyticsResourcesArgs, FirewallPolicyLogAnalyticsResourcesPtr and FirewallPolicyLogAnalyticsResourcesPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyLogAnalyticsResourcesPtrInput` via:
//
//	        FirewallPolicyLogAnalyticsResourcesArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyLogAnalyticsResourcesPtrInput interface {
	pulumi.Input

	ToFirewallPolicyLogAnalyticsResourcesPtrOutput() FirewallPolicyLogAnalyticsResourcesPtrOutput
	ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(context.Context) FirewallPolicyLogAnalyticsResourcesPtrOutput
}

type firewallPolicyLogAnalyticsResourcesPtrType FirewallPolicyLogAnalyticsResourcesArgs

func FirewallPolicyLogAnalyticsResourcesPtr(v *FirewallPolicyLogAnalyticsResourcesArgs) FirewallPolicyLogAnalyticsResourcesPtrInput {
	return (*firewallPolicyLogAnalyticsResourcesPtrType)(v)
}

func (*firewallPolicyLogAnalyticsResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyLogAnalyticsResources)(nil)).Elem()
}

func (i *firewallPolicyLogAnalyticsResourcesPtrType) ToFirewallPolicyLogAnalyticsResourcesPtrOutput() FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return i.ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyLogAnalyticsResourcesPtrType) ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyLogAnalyticsResourcesPtrOutput)
}

// Log Analytics Resources for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsResourcesOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyLogAnalyticsResources)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsResourcesOutput) ToFirewallPolicyLogAnalyticsResourcesOutput() FirewallPolicyLogAnalyticsResourcesOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsResourcesOutput) ToFirewallPolicyLogAnalyticsResourcesOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsResourcesOutput) ToFirewallPolicyLogAnalyticsResourcesPtrOutput() FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return o.ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyLogAnalyticsResourcesOutput) ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyLogAnalyticsResources) *FirewallPolicyLogAnalyticsResources {
		return &v
	}).(FirewallPolicyLogAnalyticsResourcesPtrOutput)
}

// The default workspace Id for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesOutput) DefaultWorkspaceId() SubResourcePtrOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsResources) *SubResource { return v.DefaultWorkspaceId }).(SubResourcePtrOutput)
}

// List of workspaces for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesOutput) Workspaces() FirewallPolicyLogAnalyticsWorkspaceArrayOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsResources) []FirewallPolicyLogAnalyticsWorkspace { return v.Workspaces }).(FirewallPolicyLogAnalyticsWorkspaceArrayOutput)
}

type FirewallPolicyLogAnalyticsResourcesPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyLogAnalyticsResources)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsResourcesPtrOutput) ToFirewallPolicyLogAnalyticsResourcesPtrOutput() FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsResourcesPtrOutput) ToFirewallPolicyLogAnalyticsResourcesPtrOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesPtrOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsResourcesPtrOutput) Elem() FirewallPolicyLogAnalyticsResourcesOutput {
	return o.ApplyT(func(v *FirewallPolicyLogAnalyticsResources) FirewallPolicyLogAnalyticsResources {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyLogAnalyticsResources
		return ret
	}).(FirewallPolicyLogAnalyticsResourcesOutput)
}

// The default workspace Id for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesPtrOutput) DefaultWorkspaceId() SubResourcePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyLogAnalyticsResources) *SubResource {
		if v == nil {
			return nil
		}
		return v.DefaultWorkspaceId
	}).(SubResourcePtrOutput)
}

// List of workspaces for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesPtrOutput) Workspaces() FirewallPolicyLogAnalyticsWorkspaceArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyLogAnalyticsResources) []FirewallPolicyLogAnalyticsWorkspace {
		if v == nil {
			return nil
		}
		return v.Workspaces
	}).(FirewallPolicyLogAnalyticsWorkspaceArrayOutput)
}

// Log Analytics Resources for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsResourcesResponse struct {
	// The default workspace Id for Firewall Policy Insights.
	DefaultWorkspaceId *SubResourceResponse `pulumi:"defaultWorkspaceId"`
	// List of workspaces for Firewall Policy Insights.
	Workspaces []FirewallPolicyLogAnalyticsWorkspaceResponse `pulumi:"workspaces"`
}

// Log Analytics Resources for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsResourcesResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsResourcesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyLogAnalyticsResourcesResponse)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsResourcesResponseOutput) ToFirewallPolicyLogAnalyticsResourcesResponseOutput() FirewallPolicyLogAnalyticsResourcesResponseOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsResourcesResponseOutput) ToFirewallPolicyLogAnalyticsResourcesResponseOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesResponseOutput {
	return o
}

// The default workspace Id for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesResponseOutput) DefaultWorkspaceId() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsResourcesResponse) *SubResourceResponse { return v.DefaultWorkspaceId }).(SubResourceResponsePtrOutput)
}

// List of workspaces for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesResponseOutput) Workspaces() FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsResourcesResponse) []FirewallPolicyLogAnalyticsWorkspaceResponse {
		return v.Workspaces
	}).(FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput)
}

type FirewallPolicyLogAnalyticsResourcesResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsResourcesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyLogAnalyticsResourcesResponse)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsResourcesResponsePtrOutput) ToFirewallPolicyLogAnalyticsResourcesResponsePtrOutput() FirewallPolicyLogAnalyticsResourcesResponsePtrOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsResourcesResponsePtrOutput) ToFirewallPolicyLogAnalyticsResourcesResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsResourcesResponsePtrOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsResourcesResponsePtrOutput) Elem() FirewallPolicyLogAnalyticsResourcesResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyLogAnalyticsResourcesResponse) FirewallPolicyLogAnalyticsResourcesResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyLogAnalyticsResourcesResponse
		return ret
	}).(FirewallPolicyLogAnalyticsResourcesResponseOutput)
}

// The default workspace Id for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesResponsePtrOutput) DefaultWorkspaceId() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyLogAnalyticsResourcesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DefaultWorkspaceId
	}).(SubResourceResponsePtrOutput)
}

// List of workspaces for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsResourcesResponsePtrOutput) Workspaces() FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyLogAnalyticsResourcesResponse) []FirewallPolicyLogAnalyticsWorkspaceResponse {
		if v == nil {
			return nil
		}
		return v.Workspaces
	}).(FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput)
}

// Log Analytics Workspace for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsWorkspace struct {
	// Region to configure the Workspace.
	Region *string `pulumi:"region"`
	// The workspace Id for Firewall Policy Insights.
	WorkspaceId *SubResource `pulumi:"workspaceId"`
}

// FirewallPolicyLogAnalyticsWorkspaceInput is an input type that accepts FirewallPolicyLogAnalyticsWorkspaceArgs and FirewallPolicyLogAnalyticsWorkspaceOutput values.
// You can construct a concrete instance of `FirewallPolicyLogAnalyticsWorkspaceInput` via:
//
//	FirewallPolicyLogAnalyticsWorkspaceArgs{...}
type FirewallPolicyLogAnalyticsWorkspaceInput interface {
	pulumi.Input

	ToFirewallPolicyLogAnalyticsWorkspaceOutput() FirewallPolicyLogAnalyticsWorkspaceOutput
	ToFirewallPolicyLogAnalyticsWorkspaceOutputWithContext(context.Context) FirewallPolicyLogAnalyticsWorkspaceOutput
}

// Log Analytics Workspace for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsWorkspaceArgs struct {
	// Region to configure the Workspace.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The workspace Id for Firewall Policy Insights.
	WorkspaceId SubResourcePtrInput `pulumi:"workspaceId"`
}

func (FirewallPolicyLogAnalyticsWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyLogAnalyticsWorkspace)(nil)).Elem()
}

func (i FirewallPolicyLogAnalyticsWorkspaceArgs) ToFirewallPolicyLogAnalyticsWorkspaceOutput() FirewallPolicyLogAnalyticsWorkspaceOutput {
	return i.ToFirewallPolicyLogAnalyticsWorkspaceOutputWithContext(context.Background())
}

func (i FirewallPolicyLogAnalyticsWorkspaceArgs) ToFirewallPolicyLogAnalyticsWorkspaceOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyLogAnalyticsWorkspaceOutput)
}

// FirewallPolicyLogAnalyticsWorkspaceArrayInput is an input type that accepts FirewallPolicyLogAnalyticsWorkspaceArray and FirewallPolicyLogAnalyticsWorkspaceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyLogAnalyticsWorkspaceArrayInput` via:
//
//	FirewallPolicyLogAnalyticsWorkspaceArray{ FirewallPolicyLogAnalyticsWorkspaceArgs{...} }
type FirewallPolicyLogAnalyticsWorkspaceArrayInput interface {
	pulumi.Input

	ToFirewallPolicyLogAnalyticsWorkspaceArrayOutput() FirewallPolicyLogAnalyticsWorkspaceArrayOutput
	ToFirewallPolicyLogAnalyticsWorkspaceArrayOutputWithContext(context.Context) FirewallPolicyLogAnalyticsWorkspaceArrayOutput
}

type FirewallPolicyLogAnalyticsWorkspaceArray []FirewallPolicyLogAnalyticsWorkspaceInput

func (FirewallPolicyLogAnalyticsWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyLogAnalyticsWorkspace)(nil)).Elem()
}

func (i FirewallPolicyLogAnalyticsWorkspaceArray) ToFirewallPolicyLogAnalyticsWorkspaceArrayOutput() FirewallPolicyLogAnalyticsWorkspaceArrayOutput {
	return i.ToFirewallPolicyLogAnalyticsWorkspaceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyLogAnalyticsWorkspaceArray) ToFirewallPolicyLogAnalyticsWorkspaceArrayOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyLogAnalyticsWorkspaceArrayOutput)
}

// Log Analytics Workspace for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsWorkspaceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyLogAnalyticsWorkspace)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsWorkspaceOutput) ToFirewallPolicyLogAnalyticsWorkspaceOutput() FirewallPolicyLogAnalyticsWorkspaceOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsWorkspaceOutput) ToFirewallPolicyLogAnalyticsWorkspaceOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsWorkspaceOutput {
	return o
}

// Region to configure the Workspace.
func (o FirewallPolicyLogAnalyticsWorkspaceOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsWorkspace) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The workspace Id for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsWorkspaceOutput) WorkspaceId() SubResourcePtrOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsWorkspace) *SubResource { return v.WorkspaceId }).(SubResourcePtrOutput)
}

type FirewallPolicyLogAnalyticsWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyLogAnalyticsWorkspace)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsWorkspaceArrayOutput) ToFirewallPolicyLogAnalyticsWorkspaceArrayOutput() FirewallPolicyLogAnalyticsWorkspaceArrayOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsWorkspaceArrayOutput) ToFirewallPolicyLogAnalyticsWorkspaceArrayOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsWorkspaceArrayOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsWorkspaceArrayOutput) Index(i pulumi.IntInput) FirewallPolicyLogAnalyticsWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyLogAnalyticsWorkspace {
		return vs[0].([]FirewallPolicyLogAnalyticsWorkspace)[vs[1].(int)]
	}).(FirewallPolicyLogAnalyticsWorkspaceOutput)
}

// Log Analytics Workspace for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsWorkspaceResponse struct {
	// Region to configure the Workspace.
	Region *string `pulumi:"region"`
	// The workspace Id for Firewall Policy Insights.
	WorkspaceId *SubResourceResponse `pulumi:"workspaceId"`
}

// Log Analytics Workspace for Firewall Policy Insights.
type FirewallPolicyLogAnalyticsWorkspaceResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsWorkspaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyLogAnalyticsWorkspaceResponse)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsWorkspaceResponseOutput) ToFirewallPolicyLogAnalyticsWorkspaceResponseOutput() FirewallPolicyLogAnalyticsWorkspaceResponseOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsWorkspaceResponseOutput) ToFirewallPolicyLogAnalyticsWorkspaceResponseOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsWorkspaceResponseOutput {
	return o
}

// Region to configure the Workspace.
func (o FirewallPolicyLogAnalyticsWorkspaceResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsWorkspaceResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The workspace Id for Firewall Policy Insights.
func (o FirewallPolicyLogAnalyticsWorkspaceResponseOutput) WorkspaceId() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyLogAnalyticsWorkspaceResponse) *SubResourceResponse { return v.WorkspaceId }).(SubResourceResponsePtrOutput)
}

type FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyLogAnalyticsWorkspaceResponse)(nil)).Elem()
}

func (o FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput) ToFirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput() FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput) ToFirewallPolicyLogAnalyticsWorkspaceResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput {
	return o
}

func (o FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyLogAnalyticsWorkspaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyLogAnalyticsWorkspaceResponse {
		return vs[0].([]FirewallPolicyLogAnalyticsWorkspaceResponse)[vs[1].(int)]
	}).(FirewallPolicyLogAnalyticsWorkspaceResponseOutput)
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRule struct {
	// The action type of a Nat rule.
	Action *FirewallPolicyNatRuleAction `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// The match conditions for incoming traffic.
	RuleCondition interface{} `pulumi:"ruleCondition"`
	// The type of the rule.
	// Expected value is 'FirewallPolicyNatRule'.
	RuleType string `pulumi:"ruleType"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// FirewallPolicyNatRuleInput is an input type that accepts FirewallPolicyNatRuleArgs and FirewallPolicyNatRuleOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleInput` via:
//
//	FirewallPolicyNatRuleArgs{...}
type FirewallPolicyNatRuleInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleOutput() FirewallPolicyNatRuleOutput
	ToFirewallPolicyNatRuleOutputWithContext(context.Context) FirewallPolicyNatRuleOutput
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleArgs struct {
	// The action type of a Nat rule.
	Action FirewallPolicyNatRuleActionPtrInput `pulumi:"action"`
	// The name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The match conditions for incoming traffic.
	RuleCondition pulumi.Input `pulumi:"ruleCondition"`
	// The type of the rule.
	// Expected value is 'FirewallPolicyNatRule'.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (FirewallPolicyNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRule)(nil)).Elem()
}

func (i FirewallPolicyNatRuleArgs) ToFirewallPolicyNatRuleOutput() FirewallPolicyNatRuleOutput {
	return i.ToFirewallPolicyNatRuleOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleArgs) ToFirewallPolicyNatRuleOutputWithContext(ctx context.Context) FirewallPolicyNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleOutput)
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRule)(nil)).Elem()
}

func (o FirewallPolicyNatRuleOutput) ToFirewallPolicyNatRuleOutput() FirewallPolicyNatRuleOutput {
	return o
}

func (o FirewallPolicyNatRuleOutput) ToFirewallPolicyNatRuleOutputWithContext(ctx context.Context) FirewallPolicyNatRuleOutput {
	return o
}

// The action type of a Nat rule.
func (o FirewallPolicyNatRuleOutput) Action() FirewallPolicyNatRuleActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *FirewallPolicyNatRuleAction { return v.Action }).(FirewallPolicyNatRuleActionPtrOutput)
}

// The name of the rule.
func (o FirewallPolicyNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyNatRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The match conditions for incoming traffic.
func (o FirewallPolicyNatRuleOutput) RuleCondition() pulumi.AnyOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) interface{} { return v.RuleCondition }).(pulumi.AnyOutput)
}

// The type of the rule.
// Expected value is 'FirewallPolicyNatRule'.
func (o FirewallPolicyNatRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// The translated address for this NAT rule.
func (o FirewallPolicyNatRuleOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o FirewallPolicyNatRuleOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyNatRuleActionInput is an input type that accepts FirewallPolicyNatRuleActionArgs and FirewallPolicyNatRuleActionOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleActionInput` via:
//
//	FirewallPolicyNatRuleActionArgs{...}
type FirewallPolicyNatRuleActionInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleActionOutput() FirewallPolicyNatRuleActionOutput
	ToFirewallPolicyNatRuleActionOutputWithContext(context.Context) FirewallPolicyNatRuleActionOutput
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyNatRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionOutput() FirewallPolicyNatRuleActionOutput {
	return i.ToFirewallPolicyNatRuleActionOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionOutput)
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return i.ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionOutput).ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx)
}

// FirewallPolicyNatRuleActionPtrInput is an input type that accepts FirewallPolicyNatRuleActionArgs, FirewallPolicyNatRuleActionPtr and FirewallPolicyNatRuleActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleActionPtrInput` via:
//
//	        FirewallPolicyNatRuleActionArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyNatRuleActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput
	ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Context) FirewallPolicyNatRuleActionPtrOutput
}

type firewallPolicyNatRuleActionPtrType FirewallPolicyNatRuleActionArgs

func FirewallPolicyNatRuleActionPtr(v *FirewallPolicyNatRuleActionArgs) FirewallPolicyNatRuleActionPtrInput {
	return (*firewallPolicyNatRuleActionPtrType)(v)
}

func (*firewallPolicyNatRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (i *firewallPolicyNatRuleActionPtrType) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return i.ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyNatRuleActionPtrType) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionPtrOutput)
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionOutput() FirewallPolicyNatRuleActionOutput {
	return o
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionOutput {
	return o
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return o.ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyNatRuleAction) *FirewallPolicyNatRuleAction {
		return &v
	}).(FirewallPolicyNatRuleActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionPtrOutput) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionPtrOutput) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionPtrOutput) Elem() FirewallPolicyNatRuleActionOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleAction) FirewallPolicyNatRuleAction {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyNatRuleAction
		return ret
	}).(FirewallPolicyNatRuleActionOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionResponseOutput) ToFirewallPolicyNatRuleActionResponseOutput() FirewallPolicyNatRuleActionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleActionResponseOutput) ToFirewallPolicyNatRuleActionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponseOutput {
	return o
}

// The type of action.
func (o FirewallPolicyNatRuleActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionResponsePtrOutput) ToFirewallPolicyNatRuleActionResponsePtrOutput() FirewallPolicyNatRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionResponsePtrOutput) ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionResponsePtrOutput) Elem() FirewallPolicyNatRuleActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleActionResponse) FirewallPolicyNatRuleActionResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyNatRuleActionResponse
		return ret
	}).(FirewallPolicyNatRuleActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollection struct {
	// The action type of a Nat rule collection.
	Action *FirewallPolicyNatRuleCollectionAction `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	// Expected value is 'FirewallPolicyNatRuleCollection'.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// FirewallPolicyNatRuleCollectionInput is an input type that accepts FirewallPolicyNatRuleCollectionArgs and FirewallPolicyNatRuleCollectionOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionInput` via:
//
//	FirewallPolicyNatRuleCollectionArgs{...}
type FirewallPolicyNatRuleCollectionInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionOutput() FirewallPolicyNatRuleCollectionOutput
	ToFirewallPolicyNatRuleCollectionOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionOutput
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionArgs struct {
	// The action type of a Nat rule collection.
	Action FirewallPolicyNatRuleCollectionActionPtrInput `pulumi:"action"`
	// The name of the rule collection.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The type of the rule collection.
	// Expected value is 'FirewallPolicyNatRuleCollection'.
	RuleCollectionType pulumi.StringInput `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules pulumi.ArrayInput `pulumi:"rules"`
}

func (FirewallPolicyNatRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyNatRuleCollectionArgs) ToFirewallPolicyNatRuleCollectionOutput() FirewallPolicyNatRuleCollectionOutput {
	return i.ToFirewallPolicyNatRuleCollectionOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionArgs) ToFirewallPolicyNatRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionOutput)
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionOutput) ToFirewallPolicyNatRuleCollectionOutput() FirewallPolicyNatRuleCollectionOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionOutput) ToFirewallPolicyNatRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionOutput {
	return o
}

// The action type of a Nat rule collection.
func (o FirewallPolicyNatRuleCollectionOutput) Action() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) *FirewallPolicyNatRuleCollectionAction { return v.Action }).(FirewallPolicyNatRuleCollectionActionPtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyNatRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyNatRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
// Expected value is 'FirewallPolicyNatRuleCollection'.
func (o FirewallPolicyNatRuleCollectionOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyNatRuleCollectionOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyNatRuleCollectionActionInput is an input type that accepts FirewallPolicyNatRuleCollectionActionArgs and FirewallPolicyNatRuleCollectionActionOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionActionInput` via:
//
//	FirewallPolicyNatRuleCollectionActionArgs{...}
type FirewallPolicyNatRuleCollectionActionInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionActionOutput() FirewallPolicyNatRuleCollectionActionOutput
	ToFirewallPolicyNatRuleCollectionActionOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionActionOutput
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyNatRuleCollectionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionOutput() FirewallPolicyNatRuleCollectionActionOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionOutput)
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionOutput).ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx)
}

// FirewallPolicyNatRuleCollectionActionPtrInput is an input type that accepts FirewallPolicyNatRuleCollectionActionArgs, FirewallPolicyNatRuleCollectionActionPtr and FirewallPolicyNatRuleCollectionActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionActionPtrInput` via:
//
//	        FirewallPolicyNatRuleCollectionActionArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyNatRuleCollectionActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput
	ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput
}

type firewallPolicyNatRuleCollectionActionPtrType FirewallPolicyNatRuleCollectionActionArgs

func FirewallPolicyNatRuleCollectionActionPtr(v *FirewallPolicyNatRuleCollectionActionArgs) FirewallPolicyNatRuleCollectionActionPtrInput {
	return (*firewallPolicyNatRuleCollectionActionPtrType)(v)
}

func (*firewallPolicyNatRuleCollectionActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (i *firewallPolicyNatRuleCollectionActionPtrType) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyNatRuleCollectionActionPtrType) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionPtrOutput)
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionOutput() FirewallPolicyNatRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o.ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyNatRuleCollectionAction) *FirewallPolicyNatRuleCollectionAction {
		return &v
	}).(FirewallPolicyNatRuleCollectionActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleCollectionActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionPtrOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionPtrOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionPtrOutput) Elem() FirewallPolicyNatRuleCollectionActionOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionAction) FirewallPolicyNatRuleCollectionAction {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyNatRuleCollectionAction
		return ret
	}).(FirewallPolicyNatRuleCollectionActionOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionResponseOutput) ToFirewallPolicyNatRuleCollectionActionResponseOutput() FirewallPolicyNatRuleCollectionActionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionResponseOutput) ToFirewallPolicyNatRuleCollectionActionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponseOutput {
	return o
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleCollectionActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutput() FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) Elem() FirewallPolicyNatRuleCollectionActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionActionResponse) FirewallPolicyNatRuleCollectionActionResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyNatRuleCollectionActionResponse
		return ret
	}).(FirewallPolicyNatRuleCollectionActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionResponse struct {
	// The action type of a Nat rule collection.
	Action *FirewallPolicyNatRuleCollectionActionResponse `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	// Expected value is 'FirewallPolicyNatRuleCollection'.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionResponseOutput) ToFirewallPolicyNatRuleCollectionResponseOutput() FirewallPolicyNatRuleCollectionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionResponseOutput) ToFirewallPolicyNatRuleCollectionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionResponseOutput {
	return o
}

// The action type of a Nat rule collection.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Action() FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) *FirewallPolicyNatRuleCollectionActionResponse {
		return v.Action
	}).(FirewallPolicyNatRuleCollectionActionResponsePtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
// Expected value is 'FirewallPolicyNatRuleCollection'.
func (o FirewallPolicyNatRuleCollectionResponseOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleResponse struct {
	// The action type of a Nat rule.
	Action *FirewallPolicyNatRuleActionResponse `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// The match conditions for incoming traffic.
	RuleCondition interface{} `pulumi:"ruleCondition"`
	// The type of the rule.
	// Expected value is 'FirewallPolicyNatRule'.
	RuleType string `pulumi:"ruleType"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleResponseOutput) ToFirewallPolicyNatRuleResponseOutput() FirewallPolicyNatRuleResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleResponseOutput) ToFirewallPolicyNatRuleResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleResponseOutput {
	return o
}

// The action type of a Nat rule.
func (o FirewallPolicyNatRuleResponseOutput) Action() FirewallPolicyNatRuleActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *FirewallPolicyNatRuleActionResponse { return v.Action }).(FirewallPolicyNatRuleActionResponsePtrOutput)
}

// The name of the rule.
func (o FirewallPolicyNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyNatRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The match conditions for incoming traffic.
func (o FirewallPolicyNatRuleResponseOutput) RuleCondition() pulumi.AnyOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) interface{} { return v.RuleCondition }).(pulumi.AnyOutput)
}

// The type of the rule.
// Expected value is 'FirewallPolicyNatRule'.
func (o FirewallPolicyNatRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// The translated address for this NAT rule.
func (o FirewallPolicyNatRuleResponseOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o FirewallPolicyNatRuleResponseOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocol struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// FirewallPolicyRuleApplicationProtocolInput is an input type that accepts FirewallPolicyRuleApplicationProtocolArgs and FirewallPolicyRuleApplicationProtocolOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleApplicationProtocolInput` via:
//
//	FirewallPolicyRuleApplicationProtocolArgs{...}
type FirewallPolicyRuleApplicationProtocolInput interface {
	pulumi.Input

	ToFirewallPolicyRuleApplicationProtocolOutput() FirewallPolicyRuleApplicationProtocolOutput
	ToFirewallPolicyRuleApplicationProtocolOutputWithContext(context.Context) FirewallPolicyRuleApplicationProtocolOutput
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (FirewallPolicyRuleApplicationProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleApplicationProtocolArgs) ToFirewallPolicyRuleApplicationProtocolOutput() FirewallPolicyRuleApplicationProtocolOutput {
	return i.ToFirewallPolicyRuleApplicationProtocolOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleApplicationProtocolArgs) ToFirewallPolicyRuleApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleApplicationProtocolOutput)
}

// FirewallPolicyRuleApplicationProtocolArrayInput is an input type that accepts FirewallPolicyRuleApplicationProtocolArray and FirewallPolicyRuleApplicationProtocolArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleApplicationProtocolArrayInput` via:
//
//	FirewallPolicyRuleApplicationProtocolArray{ FirewallPolicyRuleApplicationProtocolArgs{...} }
type FirewallPolicyRuleApplicationProtocolArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleApplicationProtocolArrayOutput() FirewallPolicyRuleApplicationProtocolArrayOutput
	ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(context.Context) FirewallPolicyRuleApplicationProtocolArrayOutput
}

type FirewallPolicyRuleApplicationProtocolArray []FirewallPolicyRuleApplicationProtocolInput

func (FirewallPolicyRuleApplicationProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleApplicationProtocolArray) ToFirewallPolicyRuleApplicationProtocolArrayOutput() FirewallPolicyRuleApplicationProtocolArrayOutput {
	return i.ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleApplicationProtocolArray) ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleApplicationProtocolArrayOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolOutput) ToFirewallPolicyRuleApplicationProtocolOutput() FirewallPolicyRuleApplicationProtocolOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolOutput) ToFirewallPolicyRuleApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleApplicationProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleApplicationProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleApplicationProtocolArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolArrayOutput) ToFirewallPolicyRuleApplicationProtocolArrayOutput() FirewallPolicyRuleApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolArrayOutput) ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleApplicationProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleApplicationProtocol {
		return vs[0].([]FirewallPolicyRuleApplicationProtocol)[vs[1].(int)]
	}).(FirewallPolicyRuleApplicationProtocolOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolResponseOutput) ToFirewallPolicyRuleApplicationProtocolResponseOutput() FirewallPolicyRuleApplicationProtocolResponseOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolResponseOutput) ToFirewallPolicyRuleApplicationProtocolResponseOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleApplicationProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleApplicationProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleApplicationProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleApplicationProtocolResponseArrayOutput() FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleApplicationProtocolResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleApplicationProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleApplicationProtocolResponse {
		return vs[0].([]FirewallPolicyRuleApplicationProtocolResponse)[vs[1].(int)]
	}).(FirewallPolicyRuleApplicationProtocolResponseOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocol struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// FirewallPolicyRuleConditionApplicationProtocolInput is an input type that accepts FirewallPolicyRuleConditionApplicationProtocolArgs and FirewallPolicyRuleConditionApplicationProtocolOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleConditionApplicationProtocolInput` via:
//
//	FirewallPolicyRuleConditionApplicationProtocolArgs{...}
type FirewallPolicyRuleConditionApplicationProtocolInput interface {
	pulumi.Input

	ToFirewallPolicyRuleConditionApplicationProtocolOutput() FirewallPolicyRuleConditionApplicationProtocolOutput
	ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(context.Context) FirewallPolicyRuleConditionApplicationProtocolOutput
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (FirewallPolicyRuleConditionApplicationProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleConditionApplicationProtocolArgs) ToFirewallPolicyRuleConditionApplicationProtocolOutput() FirewallPolicyRuleConditionApplicationProtocolOutput {
	return i.ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleConditionApplicationProtocolArgs) ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleConditionApplicationProtocolOutput)
}

// FirewallPolicyRuleConditionApplicationProtocolArrayInput is an input type that accepts FirewallPolicyRuleConditionApplicationProtocolArray and FirewallPolicyRuleConditionApplicationProtocolArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleConditionApplicationProtocolArrayInput` via:
//
//	FirewallPolicyRuleConditionApplicationProtocolArray{ FirewallPolicyRuleConditionApplicationProtocolArgs{...} }
type FirewallPolicyRuleConditionApplicationProtocolArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleConditionApplicationProtocolArrayOutput() FirewallPolicyRuleConditionApplicationProtocolArrayOutput
	ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(context.Context) FirewallPolicyRuleConditionApplicationProtocolArrayOutput
}

type FirewallPolicyRuleConditionApplicationProtocolArray []FirewallPolicyRuleConditionApplicationProtocolInput

func (FirewallPolicyRuleConditionApplicationProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleConditionApplicationProtocolArray) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutput() FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return i.ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleConditionApplicationProtocolArray) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleConditionApplicationProtocolArrayOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolOutput) ToFirewallPolicyRuleConditionApplicationProtocolOutput() FirewallPolicyRuleConditionApplicationProtocolOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolOutput) ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleConditionApplicationProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleConditionApplicationProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleConditionApplicationProtocolArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutput() FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleConditionApplicationProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleConditionApplicationProtocol {
		return vs[0].([]FirewallPolicyRuleConditionApplicationProtocol)[vs[1].(int)]
	}).(FirewallPolicyRuleConditionApplicationProtocolOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleConditionApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseOutput() FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleConditionApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput() FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleConditionApplicationProtocolResponse {
		return vs[0].([]FirewallPolicyRuleConditionApplicationProtocolResponse)[vs[1].(int)]
	}).(FirewallPolicyRuleConditionApplicationProtocolResponseOutput)
}

// The private IP addresses/IP ranges to which traffic will not be SNAT.
type FirewallPolicySNAT struct {
	// The operation mode for automatically learning private ranges to not be SNAT
	AutoLearnPrivateRanges *string `pulumi:"autoLearnPrivateRanges"`
	// List of private IP addresses/IP address ranges to not be SNAT.
	PrivateRanges []string `pulumi:"privateRanges"`
}

// FirewallPolicySNATInput is an input type that accepts FirewallPolicySNATArgs and FirewallPolicySNATOutput values.
// You can construct a concrete instance of `FirewallPolicySNATInput` via:
//
//	FirewallPolicySNATArgs{...}
type FirewallPolicySNATInput interface {
	pulumi.Input

	ToFirewallPolicySNATOutput() FirewallPolicySNATOutput
	ToFirewallPolicySNATOutputWithContext(context.Context) FirewallPolicySNATOutput
}

// The private IP addresses/IP ranges to which traffic will not be SNAT.
type FirewallPolicySNATArgs struct {
	// The operation mode for automatically learning private ranges to not be SNAT
	AutoLearnPrivateRanges pulumi.StringPtrInput `pulumi:"autoLearnPrivateRanges"`
	// List of private IP addresses/IP address ranges to not be SNAT.
	PrivateRanges pulumi.StringArrayInput `pulumi:"privateRanges"`
}

func (FirewallPolicySNATArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySNAT)(nil)).Elem()
}

func (i FirewallPolicySNATArgs) ToFirewallPolicySNATOutput() FirewallPolicySNATOutput {
	return i.ToFirewallPolicySNATOutputWithContext(context.Background())
}

func (i FirewallPolicySNATArgs) ToFirewallPolicySNATOutputWithContext(ctx context.Context) FirewallPolicySNATOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySNATOutput)
}

func (i FirewallPolicySNATArgs) ToFirewallPolicySNATPtrOutput() FirewallPolicySNATPtrOutput {
	return i.ToFirewallPolicySNATPtrOutputWithContext(context.Background())
}

func (i FirewallPolicySNATArgs) ToFirewallPolicySNATPtrOutputWithContext(ctx context.Context) FirewallPolicySNATPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySNATOutput).ToFirewallPolicySNATPtrOutputWithContext(ctx)
}

// FirewallPolicySNATPtrInput is an input type that accepts FirewallPolicySNATArgs, FirewallPolicySNATPtr and FirewallPolicySNATPtrOutput values.
// You can construct a concrete instance of `FirewallPolicySNATPtrInput` via:
//
//	        FirewallPolicySNATArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicySNATPtrInput interface {
	pulumi.Input

	ToFirewallPolicySNATPtrOutput() FirewallPolicySNATPtrOutput
	ToFirewallPolicySNATPtrOutputWithContext(context.Context) FirewallPolicySNATPtrOutput
}

type firewallPolicySNATPtrType FirewallPolicySNATArgs

func FirewallPolicySNATPtr(v *FirewallPolicySNATArgs) FirewallPolicySNATPtrInput {
	return (*firewallPolicySNATPtrType)(v)
}

func (*firewallPolicySNATPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySNAT)(nil)).Elem()
}

func (i *firewallPolicySNATPtrType) ToFirewallPolicySNATPtrOutput() FirewallPolicySNATPtrOutput {
	return i.ToFirewallPolicySNATPtrOutputWithContext(context.Background())
}

func (i *firewallPolicySNATPtrType) ToFirewallPolicySNATPtrOutputWithContext(ctx context.Context) FirewallPolicySNATPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySNATPtrOutput)
}

// The private IP addresses/IP ranges to which traffic will not be SNAT.
type FirewallPolicySNATOutput struct{ *pulumi.OutputState }

func (FirewallPolicySNATOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySNAT)(nil)).Elem()
}

func (o FirewallPolicySNATOutput) ToFirewallPolicySNATOutput() FirewallPolicySNATOutput {
	return o
}

func (o FirewallPolicySNATOutput) ToFirewallPolicySNATOutputWithContext(ctx context.Context) FirewallPolicySNATOutput {
	return o
}

func (o FirewallPolicySNATOutput) ToFirewallPolicySNATPtrOutput() FirewallPolicySNATPtrOutput {
	return o.ToFirewallPolicySNATPtrOutputWithContext(context.Background())
}

func (o FirewallPolicySNATOutput) ToFirewallPolicySNATPtrOutputWithContext(ctx context.Context) FirewallPolicySNATPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicySNAT) *FirewallPolicySNAT {
		return &v
	}).(FirewallPolicySNATPtrOutput)
}

// The operation mode for automatically learning private ranges to not be SNAT
func (o FirewallPolicySNATOutput) AutoLearnPrivateRanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySNAT) *string { return v.AutoLearnPrivateRanges }).(pulumi.StringPtrOutput)
}

// List of private IP addresses/IP address ranges to not be SNAT.
func (o FirewallPolicySNATOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicySNAT) []string { return v.PrivateRanges }).(pulumi.StringArrayOutput)
}

type FirewallPolicySNATPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySNATPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySNAT)(nil)).Elem()
}

func (o FirewallPolicySNATPtrOutput) ToFirewallPolicySNATPtrOutput() FirewallPolicySNATPtrOutput {
	return o
}

func (o FirewallPolicySNATPtrOutput) ToFirewallPolicySNATPtrOutputWithContext(ctx context.Context) FirewallPolicySNATPtrOutput {
	return o
}

func (o FirewallPolicySNATPtrOutput) Elem() FirewallPolicySNATOutput {
	return o.ApplyT(func(v *FirewallPolicySNAT) FirewallPolicySNAT {
		if v != nil {
			return *v
		}
		var ret FirewallPolicySNAT
		return ret
	}).(FirewallPolicySNATOutput)
}

// The operation mode for automatically learning private ranges to not be SNAT
func (o FirewallPolicySNATPtrOutput) AutoLearnPrivateRanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySNAT) *string {
		if v == nil {
			return nil
		}
		return v.AutoLearnPrivateRanges
	}).(pulumi.StringPtrOutput)
}

// List of private IP addresses/IP address ranges to not be SNAT.
func (o FirewallPolicySNATPtrOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicySNAT) []string {
		if v == nil {
			return nil
		}
		return v.PrivateRanges
	}).(pulumi.StringArrayOutput)
}

// The private IP addresses/IP ranges to which traffic will not be SNAT.
type FirewallPolicySNATResponse struct {
	// The operation mode for automatically learning private ranges to not be SNAT
	AutoLearnPrivateRanges *string `pulumi:"autoLearnPrivateRanges"`
	// List of private IP addresses/IP address ranges to not be SNAT.
	PrivateRanges []string `pulumi:"privateRanges"`
}

// The private IP addresses/IP ranges to which traffic will not be SNAT.
type FirewallPolicySNATResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicySNATResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySNATResponse)(nil)).Elem()
}

func (o FirewallPolicySNATResponseOutput) ToFirewallPolicySNATResponseOutput() FirewallPolicySNATResponseOutput {
	return o
}

func (o FirewallPolicySNATResponseOutput) ToFirewallPolicySNATResponseOutputWithContext(ctx context.Context) FirewallPolicySNATResponseOutput {
	return o
}

// The operation mode for automatically learning private ranges to not be SNAT
func (o FirewallPolicySNATResponseOutput) AutoLearnPrivateRanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySNATResponse) *string { return v.AutoLearnPrivateRanges }).(pulumi.StringPtrOutput)
}

// List of private IP addresses/IP address ranges to not be SNAT.
func (o FirewallPolicySNATResponseOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicySNATResponse) []string { return v.PrivateRanges }).(pulumi.StringArrayOutput)
}

type FirewallPolicySNATResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySNATResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySNATResponse)(nil)).Elem()
}

func (o FirewallPolicySNATResponsePtrOutput) ToFirewallPolicySNATResponsePtrOutput() FirewallPolicySNATResponsePtrOutput {
	return o
}

func (o FirewallPolicySNATResponsePtrOutput) ToFirewallPolicySNATResponsePtrOutputWithContext(ctx context.Context) FirewallPolicySNATResponsePtrOutput {
	return o
}

func (o FirewallPolicySNATResponsePtrOutput) Elem() FirewallPolicySNATResponseOutput {
	return o.ApplyT(func(v *FirewallPolicySNATResponse) FirewallPolicySNATResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicySNATResponse
		return ret
	}).(FirewallPolicySNATResponseOutput)
}

// The operation mode for automatically learning private ranges to not be SNAT
func (o FirewallPolicySNATResponsePtrOutput) AutoLearnPrivateRanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySNATResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoLearnPrivateRanges
	}).(pulumi.StringPtrOutput)
}

// List of private IP addresses/IP address ranges to not be SNAT.
func (o FirewallPolicySNATResponsePtrOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicySNATResponse) []string {
		if v == nil {
			return nil
		}
		return v.PrivateRanges
	}).(pulumi.StringArrayOutput)
}

// SQL Settings in Firewall Policy.
type FirewallPolicySQL struct {
	// A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
	AllowSqlRedirect *bool `pulumi:"allowSqlRedirect"`
}

// FirewallPolicySQLInput is an input type that accepts FirewallPolicySQLArgs and FirewallPolicySQLOutput values.
// You can construct a concrete instance of `FirewallPolicySQLInput` via:
//
//	FirewallPolicySQLArgs{...}
type FirewallPolicySQLInput interface {
	pulumi.Input

	ToFirewallPolicySQLOutput() FirewallPolicySQLOutput
	ToFirewallPolicySQLOutputWithContext(context.Context) FirewallPolicySQLOutput
}

// SQL Settings in Firewall Policy.
type FirewallPolicySQLArgs struct {
	// A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
	AllowSqlRedirect pulumi.BoolPtrInput `pulumi:"allowSqlRedirect"`
}

func (FirewallPolicySQLArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySQL)(nil)).Elem()
}

func (i FirewallPolicySQLArgs) ToFirewallPolicySQLOutput() FirewallPolicySQLOutput {
	return i.ToFirewallPolicySQLOutputWithContext(context.Background())
}

func (i FirewallPolicySQLArgs) ToFirewallPolicySQLOutputWithContext(ctx context.Context) FirewallPolicySQLOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySQLOutput)
}

func (i FirewallPolicySQLArgs) ToFirewallPolicySQLPtrOutput() FirewallPolicySQLPtrOutput {
	return i.ToFirewallPolicySQLPtrOutputWithContext(context.Background())
}

func (i FirewallPolicySQLArgs) ToFirewallPolicySQLPtrOutputWithContext(ctx context.Context) FirewallPolicySQLPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySQLOutput).ToFirewallPolicySQLPtrOutputWithContext(ctx)
}

// FirewallPolicySQLPtrInput is an input type that accepts FirewallPolicySQLArgs, FirewallPolicySQLPtr and FirewallPolicySQLPtrOutput values.
// You can construct a concrete instance of `FirewallPolicySQLPtrInput` via:
//
//	        FirewallPolicySQLArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicySQLPtrInput interface {
	pulumi.Input

	ToFirewallPolicySQLPtrOutput() FirewallPolicySQLPtrOutput
	ToFirewallPolicySQLPtrOutputWithContext(context.Context) FirewallPolicySQLPtrOutput
}

type firewallPolicySQLPtrType FirewallPolicySQLArgs

func FirewallPolicySQLPtr(v *FirewallPolicySQLArgs) FirewallPolicySQLPtrInput {
	return (*firewallPolicySQLPtrType)(v)
}

func (*firewallPolicySQLPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySQL)(nil)).Elem()
}

func (i *firewallPolicySQLPtrType) ToFirewallPolicySQLPtrOutput() FirewallPolicySQLPtrOutput {
	return i.ToFirewallPolicySQLPtrOutputWithContext(context.Background())
}

func (i *firewallPolicySQLPtrType) ToFirewallPolicySQLPtrOutputWithContext(ctx context.Context) FirewallPolicySQLPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySQLPtrOutput)
}

// SQL Settings in Firewall Policy.
type FirewallPolicySQLOutput struct{ *pulumi.OutputState }

func (FirewallPolicySQLOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySQL)(nil)).Elem()
}

func (o FirewallPolicySQLOutput) ToFirewallPolicySQLOutput() FirewallPolicySQLOutput {
	return o
}

func (o FirewallPolicySQLOutput) ToFirewallPolicySQLOutputWithContext(ctx context.Context) FirewallPolicySQLOutput {
	return o
}

func (o FirewallPolicySQLOutput) ToFirewallPolicySQLPtrOutput() FirewallPolicySQLPtrOutput {
	return o.ToFirewallPolicySQLPtrOutputWithContext(context.Background())
}

func (o FirewallPolicySQLOutput) ToFirewallPolicySQLPtrOutputWithContext(ctx context.Context) FirewallPolicySQLPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicySQL) *FirewallPolicySQL {
		return &v
	}).(FirewallPolicySQLPtrOutput)
}

// A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
func (o FirewallPolicySQLOutput) AllowSqlRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicySQL) *bool { return v.AllowSqlRedirect }).(pulumi.BoolPtrOutput)
}

type FirewallPolicySQLPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySQLPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySQL)(nil)).Elem()
}

func (o FirewallPolicySQLPtrOutput) ToFirewallPolicySQLPtrOutput() FirewallPolicySQLPtrOutput {
	return o
}

func (o FirewallPolicySQLPtrOutput) ToFirewallPolicySQLPtrOutputWithContext(ctx context.Context) FirewallPolicySQLPtrOutput {
	return o
}

func (o FirewallPolicySQLPtrOutput) Elem() FirewallPolicySQLOutput {
	return o.ApplyT(func(v *FirewallPolicySQL) FirewallPolicySQL {
		if v != nil {
			return *v
		}
		var ret FirewallPolicySQL
		return ret
	}).(FirewallPolicySQLOutput)
}

// A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
func (o FirewallPolicySQLPtrOutput) AllowSqlRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySQL) *bool {
		if v == nil {
			return nil
		}
		return v.AllowSqlRedirect
	}).(pulumi.BoolPtrOutput)
}

// SQL Settings in Firewall Policy.
type FirewallPolicySQLResponse struct {
	// A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
	AllowSqlRedirect *bool `pulumi:"allowSqlRedirect"`
}

// SQL Settings in Firewall Policy.
type FirewallPolicySQLResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicySQLResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySQLResponse)(nil)).Elem()
}

func (o FirewallPolicySQLResponseOutput) ToFirewallPolicySQLResponseOutput() FirewallPolicySQLResponseOutput {
	return o
}

func (o FirewallPolicySQLResponseOutput) ToFirewallPolicySQLResponseOutputWithContext(ctx context.Context) FirewallPolicySQLResponseOutput {
	return o
}

// A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
func (o FirewallPolicySQLResponseOutput) AllowSqlRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicySQLResponse) *bool { return v.AllowSqlRedirect }).(pulumi.BoolPtrOutput)
}

type FirewallPolicySQLResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySQLResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySQLResponse)(nil)).Elem()
}

func (o FirewallPolicySQLResponsePtrOutput) ToFirewallPolicySQLResponsePtrOutput() FirewallPolicySQLResponsePtrOutput {
	return o
}

func (o FirewallPolicySQLResponsePtrOutput) ToFirewallPolicySQLResponsePtrOutputWithContext(ctx context.Context) FirewallPolicySQLResponsePtrOutput {
	return o
}

func (o FirewallPolicySQLResponsePtrOutput) Elem() FirewallPolicySQLResponseOutput {
	return o.ApplyT(func(v *FirewallPolicySQLResponse) FirewallPolicySQLResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicySQLResponse
		return ret
	}).(FirewallPolicySQLResponseOutput)
}

// A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999.
func (o FirewallPolicySQLResponsePtrOutput) AllowSqlRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySQLResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowSqlRedirect
	}).(pulumi.BoolPtrOutput)
}

// SKU of Firewall policy.
type FirewallPolicySku struct {
	// Tier of Firewall Policy.
	Tier *string `pulumi:"tier"`
}

// FirewallPolicySkuInput is an input type that accepts FirewallPolicySkuArgs and FirewallPolicySkuOutput values.
// You can construct a concrete instance of `FirewallPolicySkuInput` via:
//
//	FirewallPolicySkuArgs{...}
type FirewallPolicySkuInput interface {
	pulumi.Input

	ToFirewallPolicySkuOutput() FirewallPolicySkuOutput
	ToFirewallPolicySkuOutputWithContext(context.Context) FirewallPolicySkuOutput
}

// SKU of Firewall policy.
type FirewallPolicySkuArgs struct {
	// Tier of Firewall Policy.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (FirewallPolicySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySku)(nil)).Elem()
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuOutput() FirewallPolicySkuOutput {
	return i.ToFirewallPolicySkuOutputWithContext(context.Background())
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuOutputWithContext(ctx context.Context) FirewallPolicySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuOutput)
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return i.ToFirewallPolicySkuPtrOutputWithContext(context.Background())
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuOutput).ToFirewallPolicySkuPtrOutputWithContext(ctx)
}

// FirewallPolicySkuPtrInput is an input type that accepts FirewallPolicySkuArgs, FirewallPolicySkuPtr and FirewallPolicySkuPtrOutput values.
// You can construct a concrete instance of `FirewallPolicySkuPtrInput` via:
//
//	        FirewallPolicySkuArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicySkuPtrInput interface {
	pulumi.Input

	ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput
	ToFirewallPolicySkuPtrOutputWithContext(context.Context) FirewallPolicySkuPtrOutput
}

type firewallPolicySkuPtrType FirewallPolicySkuArgs

func FirewallPolicySkuPtr(v *FirewallPolicySkuArgs) FirewallPolicySkuPtrInput {
	return (*firewallPolicySkuPtrType)(v)
}

func (*firewallPolicySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySku)(nil)).Elem()
}

func (i *firewallPolicySkuPtrType) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return i.ToFirewallPolicySkuPtrOutputWithContext(context.Background())
}

func (i *firewallPolicySkuPtrType) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuPtrOutput)
}

// SKU of Firewall policy.
type FirewallPolicySkuOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySku)(nil)).Elem()
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuOutput() FirewallPolicySkuOutput {
	return o
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuOutputWithContext(ctx context.Context) FirewallPolicySkuOutput {
	return o
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return o.ToFirewallPolicySkuPtrOutputWithContext(context.Background())
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicySku) *FirewallPolicySku {
		return &v
	}).(FirewallPolicySkuPtrOutput)
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type FirewallPolicySkuPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySku)(nil)).Elem()
}

func (o FirewallPolicySkuPtrOutput) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return o
}

func (o FirewallPolicySkuPtrOutput) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return o
}

func (o FirewallPolicySkuPtrOutput) Elem() FirewallPolicySkuOutput {
	return o.ApplyT(func(v *FirewallPolicySku) FirewallPolicySku {
		if v != nil {
			return *v
		}
		var ret FirewallPolicySku
		return ret
	}).(FirewallPolicySkuOutput)
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of Firewall policy.
type FirewallPolicySkuResponse struct {
	// Tier of Firewall Policy.
	Tier *string `pulumi:"tier"`
}

// SKU of Firewall policy.
type FirewallPolicySkuResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySkuResponse)(nil)).Elem()
}

func (o FirewallPolicySkuResponseOutput) ToFirewallPolicySkuResponseOutput() FirewallPolicySkuResponseOutput {
	return o
}

func (o FirewallPolicySkuResponseOutput) ToFirewallPolicySkuResponseOutputWithContext(ctx context.Context) FirewallPolicySkuResponseOutput {
	return o
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type FirewallPolicySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySkuResponse)(nil)).Elem()
}

func (o FirewallPolicySkuResponsePtrOutput) ToFirewallPolicySkuResponsePtrOutput() FirewallPolicySkuResponsePtrOutput {
	return o
}

func (o FirewallPolicySkuResponsePtrOutput) ToFirewallPolicySkuResponsePtrOutputWithContext(ctx context.Context) FirewallPolicySkuResponsePtrOutput {
	return o
}

func (o FirewallPolicySkuResponsePtrOutput) Elem() FirewallPolicySkuResponseOutput {
	return o.ApplyT(func(v *FirewallPolicySkuResponse) FirewallPolicySkuResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicySkuResponse
		return ret
	}).(FirewallPolicySkuResponseOutput)
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelist struct {
	// List of FQDNs for the ThreatIntel Whitelist.
	Fqdns []string `pulumi:"fqdns"`
	// List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// FirewallPolicyThreatIntelWhitelistInput is an input type that accepts FirewallPolicyThreatIntelWhitelistArgs and FirewallPolicyThreatIntelWhitelistOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelWhitelistInput` via:
//
//	FirewallPolicyThreatIntelWhitelistArgs{...}
type FirewallPolicyThreatIntelWhitelistInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelWhitelistOutput() FirewallPolicyThreatIntelWhitelistOutput
	ToFirewallPolicyThreatIntelWhitelistOutputWithContext(context.Context) FirewallPolicyThreatIntelWhitelistOutput
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistArgs struct {
	// List of FQDNs for the ThreatIntel Whitelist.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (FirewallPolicyThreatIntelWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistOutput() FirewallPolicyThreatIntelWhitelistOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistOutput)
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistOutput).ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx)
}

// FirewallPolicyThreatIntelWhitelistPtrInput is an input type that accepts FirewallPolicyThreatIntelWhitelistArgs, FirewallPolicyThreatIntelWhitelistPtr and FirewallPolicyThreatIntelWhitelistPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelWhitelistPtrInput` via:
//
//	        FirewallPolicyThreatIntelWhitelistArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyThreatIntelWhitelistPtrInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput
	ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput
}

type firewallPolicyThreatIntelWhitelistPtrType FirewallPolicyThreatIntelWhitelistArgs

func FirewallPolicyThreatIntelWhitelistPtr(v *FirewallPolicyThreatIntelWhitelistArgs) FirewallPolicyThreatIntelWhitelistPtrInput {
	return (*firewallPolicyThreatIntelWhitelistPtrType)(v)
}

func (*firewallPolicyThreatIntelWhitelistPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (i *firewallPolicyThreatIntelWhitelistPtrType) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyThreatIntelWhitelistPtrType) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistPtrOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistOutput() FirewallPolicyThreatIntelWhitelistOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o.ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyThreatIntelWhitelist) *FirewallPolicyThreatIntelWhitelist {
		return &v
	}).(FirewallPolicyThreatIntelWhitelistPtrOutput)
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelist) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelist) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type FirewallPolicyThreatIntelWhitelistPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistPtrOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistPtrOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistPtrOutput) Elem() FirewallPolicyThreatIntelWhitelistOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelist) FirewallPolicyThreatIntelWhitelist {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyThreatIntelWhitelist
		return ret
	}).(FirewallPolicyThreatIntelWhitelistOutput)
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistPtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelist) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelist) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistResponse struct {
	// List of FQDNs for the ThreatIntel Whitelist.
	Fqdns []string `pulumi:"fqdns"`
	// List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelWhitelistResponse)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistResponseOutput) ToFirewallPolicyThreatIntelWhitelistResponseOutput() FirewallPolicyThreatIntelWhitelistResponseOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistResponseOutput) ToFirewallPolicyThreatIntelWhitelistResponseOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponseOutput {
	return o
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelistResponse) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelistResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type FirewallPolicyThreatIntelWhitelistResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelWhitelistResponse)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutput() FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) Elem() FirewallPolicyThreatIntelWhitelistResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelistResponse) FirewallPolicyThreatIntelWhitelistResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyThreatIntelWhitelistResponse
		return ret
	}).(FirewallPolicyThreatIntelWhitelistResponseOutput)
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelistResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelistResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurity struct {
	// The CA used for intermediate CA generation.
	CertificateAuthority *FirewallPolicyCertificateAuthority `pulumi:"certificateAuthority"`
}

// FirewallPolicyTransportSecurityInput is an input type that accepts FirewallPolicyTransportSecurityArgs and FirewallPolicyTransportSecurityOutput values.
// You can construct a concrete instance of `FirewallPolicyTransportSecurityInput` via:
//
//	FirewallPolicyTransportSecurityArgs{...}
type FirewallPolicyTransportSecurityInput interface {
	pulumi.Input

	ToFirewallPolicyTransportSecurityOutput() FirewallPolicyTransportSecurityOutput
	ToFirewallPolicyTransportSecurityOutputWithContext(context.Context) FirewallPolicyTransportSecurityOutput
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityArgs struct {
	// The CA used for intermediate CA generation.
	CertificateAuthority FirewallPolicyCertificateAuthorityPtrInput `pulumi:"certificateAuthority"`
}

func (FirewallPolicyTransportSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityOutput() FirewallPolicyTransportSecurityOutput {
	return i.ToFirewallPolicyTransportSecurityOutputWithContext(context.Background())
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityOutput)
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return i.ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityOutput).ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx)
}

// FirewallPolicyTransportSecurityPtrInput is an input type that accepts FirewallPolicyTransportSecurityArgs, FirewallPolicyTransportSecurityPtr and FirewallPolicyTransportSecurityPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyTransportSecurityPtrInput` via:
//
//	        FirewallPolicyTransportSecurityArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyTransportSecurityPtrInput interface {
	pulumi.Input

	ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput
	ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Context) FirewallPolicyTransportSecurityPtrOutput
}

type firewallPolicyTransportSecurityPtrType FirewallPolicyTransportSecurityArgs

func FirewallPolicyTransportSecurityPtr(v *FirewallPolicyTransportSecurityArgs) FirewallPolicyTransportSecurityPtrInput {
	return (*firewallPolicyTransportSecurityPtrType)(v)
}

func (*firewallPolicyTransportSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (i *firewallPolicyTransportSecurityPtrType) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return i.ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyTransportSecurityPtrType) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityPtrOutput)
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityOutput() FirewallPolicyTransportSecurityOutput {
	return o
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityOutput {
	return o
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return o.ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyTransportSecurity) *FirewallPolicyTransportSecurity {
		return &v
	}).(FirewallPolicyTransportSecurityPtrOutput)
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ApplyT(func(v FirewallPolicyTransportSecurity) *FirewallPolicyCertificateAuthority {
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityPtrOutput)
}

type FirewallPolicyTransportSecurityPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityPtrOutput) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityPtrOutput) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityPtrOutput) Elem() FirewallPolicyTransportSecurityOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurity) FirewallPolicyTransportSecurity {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyTransportSecurity
		return ret
	}).(FirewallPolicyTransportSecurityOutput)
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityPtrOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurity) *FirewallPolicyCertificateAuthority {
		if v == nil {
			return nil
		}
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityPtrOutput)
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityResponse struct {
	// The CA used for intermediate CA generation.
	CertificateAuthority *FirewallPolicyCertificateAuthorityResponse `pulumi:"certificateAuthority"`
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTransportSecurityResponse)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityResponseOutput) ToFirewallPolicyTransportSecurityResponseOutput() FirewallPolicyTransportSecurityResponseOutput {
	return o
}

func (o FirewallPolicyTransportSecurityResponseOutput) ToFirewallPolicyTransportSecurityResponseOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponseOutput {
	return o
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityResponseOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyTransportSecurityResponse) *FirewallPolicyCertificateAuthorityResponse {
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityResponsePtrOutput)
}

type FirewallPolicyTransportSecurityResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTransportSecurityResponse)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityResponsePtrOutput) ToFirewallPolicyTransportSecurityResponsePtrOutput() FirewallPolicyTransportSecurityResponsePtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityResponsePtrOutput) ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponsePtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityResponsePtrOutput) Elem() FirewallPolicyTransportSecurityResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurityResponse) FirewallPolicyTransportSecurityResponse {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyTransportSecurityResponse
		return ret
	}).(FirewallPolicyTransportSecurityResponseOutput)
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityResponsePtrOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurityResponse) *FirewallPolicyCertificateAuthorityResponse {
		if v == nil {
			return nil
		}
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityResponsePtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParameters struct {
	// The file type of flow log.
	Type *string `pulumi:"type"`
	// The version (revision) of the flow log.
	Version *int `pulumi:"version"`
}

// Defaults sets the appropriate defaults for FlowLogFormatParameters
func (val *FlowLogFormatParameters) Defaults() *FlowLogFormatParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Version == nil {
		version_ := 0
		tmp.Version = &version_
	}
	return &tmp
}

// FlowLogFormatParametersInput is an input type that accepts FlowLogFormatParametersArgs and FlowLogFormatParametersOutput values.
// You can construct a concrete instance of `FlowLogFormatParametersInput` via:
//
//	FlowLogFormatParametersArgs{...}
type FlowLogFormatParametersInput interface {
	pulumi.Input

	ToFlowLogFormatParametersOutput() FlowLogFormatParametersOutput
	ToFlowLogFormatParametersOutputWithContext(context.Context) FlowLogFormatParametersOutput
}

// Parameters that define the flow log format.
type FlowLogFormatParametersArgs struct {
	// The file type of flow log.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The version (revision) of the flow log.
	Version pulumi.IntPtrInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for FlowLogFormatParametersArgs
func (val *FlowLogFormatParametersArgs) Defaults() *FlowLogFormatParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Version == nil {
		tmp.Version = pulumi.IntPtr(0)
	}
	return &tmp
}
func (FlowLogFormatParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParameters)(nil)).Elem()
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersOutput() FlowLogFormatParametersOutput {
	return i.ToFlowLogFormatParametersOutputWithContext(context.Background())
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersOutputWithContext(ctx context.Context) FlowLogFormatParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersOutput)
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return i.ToFlowLogFormatParametersPtrOutputWithContext(context.Background())
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersOutput).ToFlowLogFormatParametersPtrOutputWithContext(ctx)
}

// FlowLogFormatParametersPtrInput is an input type that accepts FlowLogFormatParametersArgs, FlowLogFormatParametersPtr and FlowLogFormatParametersPtrOutput values.
// You can construct a concrete instance of `FlowLogFormatParametersPtrInput` via:
//
//	        FlowLogFormatParametersArgs{...}
//
//	or:
//
//	        nil
type FlowLogFormatParametersPtrInput interface {
	pulumi.Input

	ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput
	ToFlowLogFormatParametersPtrOutputWithContext(context.Context) FlowLogFormatParametersPtrOutput
}

type flowLogFormatParametersPtrType FlowLogFormatParametersArgs

func FlowLogFormatParametersPtr(v *FlowLogFormatParametersArgs) FlowLogFormatParametersPtrInput {
	return (*flowLogFormatParametersPtrType)(v)
}

func (*flowLogFormatParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParameters)(nil)).Elem()
}

func (i *flowLogFormatParametersPtrType) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return i.ToFlowLogFormatParametersPtrOutputWithContext(context.Background())
}

func (i *flowLogFormatParametersPtrType) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersPtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParametersOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParameters)(nil)).Elem()
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersOutput() FlowLogFormatParametersOutput {
	return o
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersOutputWithContext(ctx context.Context) FlowLogFormatParametersOutput {
	return o
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return o.ToFlowLogFormatParametersPtrOutputWithContext(context.Background())
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowLogFormatParameters) *FlowLogFormatParameters {
		return &v
	}).(FlowLogFormatParametersPtrOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParameters) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParameters) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type FlowLogFormatParametersPtrOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParameters)(nil)).Elem()
}

func (o FlowLogFormatParametersPtrOutput) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return o
}

func (o FlowLogFormatParametersPtrOutput) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return o
}

func (o FlowLogFormatParametersPtrOutput) Elem() FlowLogFormatParametersOutput {
	return o.ApplyT(func(v *FlowLogFormatParameters) FlowLogFormatParameters {
		if v != nil {
			return *v
		}
		var ret FlowLogFormatParameters
		return ret
	}).(FlowLogFormatParametersOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParameters) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParameters) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponse struct {
	// The file type of flow log.
	Type *string `pulumi:"type"`
	// The version (revision) of the flow log.
	Version *int `pulumi:"version"`
}

// Defaults sets the appropriate defaults for FlowLogFormatParametersResponse
func (val *FlowLogFormatParametersResponse) Defaults() *FlowLogFormatParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Version == nil {
		version_ := 0
		tmp.Version = &version_
	}
	return &tmp
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponseOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutput() FlowLogFormatParametersResponseOutput {
	return o
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutputWithContext(ctx context.Context) FlowLogFormatParametersResponseOutput {
	return o
}

// The file type of flow log.
func (o FlowLogFormatParametersResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type FlowLogFormatParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx context.Context) FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) Elem() FlowLogFormatParametersResponseOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) FlowLogFormatParametersResponse {
		if v != nil {
			return *v
		}
		var ret FlowLogFormatParametersResponse
		return ret
	}).(FlowLogFormatParametersResponseOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// A flow log resource.
type FlowLogResponse struct {
	// Flag to enable/disable flow logging.
	Enabled *bool `pulumi:"enabled"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Parameters that define the configuration of traffic analytics.
	FlowAnalyticsConfiguration *TrafficAnalyticsPropertiesResponse `pulumi:"flowAnalyticsConfiguration"`
	// Parameters that define the flow log format.
	Format *FlowLogFormatParametersResponse `pulumi:"format"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the flow log.
	ProvisioningState string `pulumi:"provisioningState"`
	// Parameters that define the retention policy for flow log.
	RetentionPolicy *RetentionPolicyParametersResponse `pulumi:"retentionPolicy"`
	// ID of the storage account which is used to store the flow log.
	StorageId string `pulumi:"storageId"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Guid of network security group to which flow log will be applied.
	TargetResourceGuid string `pulumi:"targetResourceGuid"`
	// ID of network security group to which flow log will be applied.
	TargetResourceId string `pulumi:"targetResourceId"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for FlowLogResponse
func (val *FlowLogResponse) Defaults() *FlowLogResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Format = tmp.Format.Defaults()

	tmp.RetentionPolicy = tmp.RetentionPolicy.Defaults()

	return &tmp
}

// A flow log resource.
type FlowLogResponseOutput struct{ *pulumi.OutputState }

func (FlowLogResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutput() FlowLogResponseOutput {
	return o
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutputWithContext(ctx context.Context) FlowLogResponseOutput {
	return o
}

// Flag to enable/disable flow logging.
func (o FlowLogResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FlowLogResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o FlowLogResponseOutput) FlowAnalyticsConfiguration() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *TrafficAnalyticsPropertiesResponse { return v.FlowAnalyticsConfiguration }).(TrafficAnalyticsPropertiesResponsePtrOutput)
}

// Parameters that define the flow log format.
func (o FlowLogResponseOutput) Format() FlowLogFormatParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *FlowLogFormatParametersResponse { return v.Format }).(FlowLogFormatParametersResponsePtrOutput)
}

// Resource ID.
func (o FlowLogResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o FlowLogResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FlowLogResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the flow log.
func (o FlowLogResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Parameters that define the retention policy for flow log.
func (o FlowLogResponseOutput) RetentionPolicy() RetentionPolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *RetentionPolicyParametersResponse { return v.RetentionPolicy }).(RetentionPolicyParametersResponsePtrOutput)
}

// ID of the storage account which is used to store the flow log.
func (o FlowLogResponseOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.StorageId }).(pulumi.StringOutput)
}

// Resource tags.
func (o FlowLogResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowLogResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Guid of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceGuid }).(pulumi.StringOutput)
}

// ID of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// Resource type.
func (o FlowLogResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FlowLogResponseArrayOutput struct{ *pulumi.OutputState }

func (FlowLogResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutput() FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutputWithContext(ctx context.Context) FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) Index(i pulumi.IntInput) FlowLogResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogResponse {
		return vs[0].([]FlowLogResponse)[vs[1].(int)]
	}).(FlowLogResponseOutput)
}

// Describes Forwarding Route.
type ForwardingConfiguration struct {
	// A reference to the BackendPool which this rule routes to.
	BackendPool *SubResource `pulumi:"backendPool"`
	// The caching configuration associated with this rule.
	CacheConfiguration *CacheConfiguration `pulumi:"cacheConfiguration"`
	// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
	CustomForwardingPath *string `pulumi:"customForwardingPath"`
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
	OdataType string `pulumi:"odataType"`
}

// ForwardingConfigurationInput is an input type that accepts ForwardingConfigurationArgs and ForwardingConfigurationOutput values.
// You can construct a concrete instance of `ForwardingConfigurationInput` via:
//
//	ForwardingConfigurationArgs{...}
type ForwardingConfigurationInput interface {
	pulumi.Input

	ToForwardingConfigurationOutput() ForwardingConfigurationOutput
	ToForwardingConfigurationOutputWithContext(context.Context) ForwardingConfigurationOutput
}

// Describes Forwarding Route.
type ForwardingConfigurationArgs struct {
	// A reference to the BackendPool which this rule routes to.
	BackendPool SubResourcePtrInput `pulumi:"backendPool"`
	// The caching configuration associated with this rule.
	CacheConfiguration CacheConfigurationPtrInput `pulumi:"cacheConfiguration"`
	// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
	CustomForwardingPath pulumi.StringPtrInput `pulumi:"customForwardingPath"`
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol pulumi.StringPtrInput `pulumi:"forwardingProtocol"`
	// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
	OdataType pulumi.StringInput `pulumi:"odataType"`
}

func (ForwardingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingConfiguration)(nil)).Elem()
}

func (i ForwardingConfigurationArgs) ToForwardingConfigurationOutput() ForwardingConfigurationOutput {
	return i.ToForwardingConfigurationOutputWithContext(context.Background())
}

func (i ForwardingConfigurationArgs) ToForwardingConfigurationOutputWithContext(ctx context.Context) ForwardingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingConfigurationOutput)
}

func (i ForwardingConfigurationArgs) ToForwardingConfigurationPtrOutput() ForwardingConfigurationPtrOutput {
	return i.ToForwardingConfigurationPtrOutputWithContext(context.Background())
}

func (i ForwardingConfigurationArgs) ToForwardingConfigurationPtrOutputWithContext(ctx context.Context) ForwardingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingConfigurationOutput).ToForwardingConfigurationPtrOutputWithContext(ctx)
}

// ForwardingConfigurationPtrInput is an input type that accepts ForwardingConfigurationArgs, ForwardingConfigurationPtr and ForwardingConfigurationPtrOutput values.
// You can construct a concrete instance of `ForwardingConfigurationPtrInput` via:
//
//	        ForwardingConfigurationArgs{...}
//
//	or:
//
//	        nil
type ForwardingConfigurationPtrInput interface {
	pulumi.Input

	ToForwardingConfigurationPtrOutput() ForwardingConfigurationPtrOutput
	ToForwardingConfigurationPtrOutputWithContext(context.Context) ForwardingConfigurationPtrOutput
}

type forwardingConfigurationPtrType ForwardingConfigurationArgs

func ForwardingConfigurationPtr(v *ForwardingConfigurationArgs) ForwardingConfigurationPtrInput {
	return (*forwardingConfigurationPtrType)(v)
}

func (*forwardingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingConfiguration)(nil)).Elem()
}

func (i *forwardingConfigurationPtrType) ToForwardingConfigurationPtrOutput() ForwardingConfigurationPtrOutput {
	return i.ToForwardingConfigurationPtrOutputWithContext(context.Background())
}

func (i *forwardingConfigurationPtrType) ToForwardingConfigurationPtrOutputWithContext(ctx context.Context) ForwardingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingConfigurationPtrOutput)
}

// Describes Forwarding Route.
type ForwardingConfigurationOutput struct{ *pulumi.OutputState }

func (ForwardingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingConfiguration)(nil)).Elem()
}

func (o ForwardingConfigurationOutput) ToForwardingConfigurationOutput() ForwardingConfigurationOutput {
	return o
}

func (o ForwardingConfigurationOutput) ToForwardingConfigurationOutputWithContext(ctx context.Context) ForwardingConfigurationOutput {
	return o
}

func (o ForwardingConfigurationOutput) ToForwardingConfigurationPtrOutput() ForwardingConfigurationPtrOutput {
	return o.ToForwardingConfigurationPtrOutputWithContext(context.Background())
}

func (o ForwardingConfigurationOutput) ToForwardingConfigurationPtrOutputWithContext(ctx context.Context) ForwardingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingConfiguration) *ForwardingConfiguration {
		return &v
	}).(ForwardingConfigurationPtrOutput)
}

// A reference to the BackendPool which this rule routes to.
func (o ForwardingConfigurationOutput) BackendPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *SubResource { return v.BackendPool }).(SubResourcePtrOutput)
}

// The caching configuration associated with this rule.
func (o ForwardingConfigurationOutput) CacheConfiguration() CacheConfigurationPtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *CacheConfiguration { return v.CacheConfiguration }).(CacheConfigurationPtrOutput)
}

// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
func (o ForwardingConfigurationOutput) CustomForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *string { return v.CustomForwardingPath }).(pulumi.StringPtrOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o ForwardingConfigurationOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *string { return v.ForwardingProtocol }).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
func (o ForwardingConfigurationOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingConfiguration) string { return v.OdataType }).(pulumi.StringOutput)
}

type ForwardingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ForwardingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingConfiguration)(nil)).Elem()
}

func (o ForwardingConfigurationPtrOutput) ToForwardingConfigurationPtrOutput() ForwardingConfigurationPtrOutput {
	return o
}

func (o ForwardingConfigurationPtrOutput) ToForwardingConfigurationPtrOutputWithContext(ctx context.Context) ForwardingConfigurationPtrOutput {
	return o
}

func (o ForwardingConfigurationPtrOutput) Elem() ForwardingConfigurationOutput {
	return o.ApplyT(func(v *ForwardingConfiguration) ForwardingConfiguration {
		if v != nil {
			return *v
		}
		var ret ForwardingConfiguration
		return ret
	}).(ForwardingConfigurationOutput)
}

// A reference to the BackendPool which this rule routes to.
func (o ForwardingConfigurationPtrOutput) BackendPool() SubResourcePtrOutput {
	return o.ApplyT(func(v *ForwardingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.BackendPool
	}).(SubResourcePtrOutput)
}

// The caching configuration associated with this rule.
func (o ForwardingConfigurationPtrOutput) CacheConfiguration() CacheConfigurationPtrOutput {
	return o.ApplyT(func(v *ForwardingConfiguration) *CacheConfiguration {
		if v == nil {
			return nil
		}
		return v.CacheConfiguration
	}).(CacheConfigurationPtrOutput)
}

// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
func (o ForwardingConfigurationPtrOutput) CustomForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomForwardingPath
	}).(pulumi.StringPtrOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o ForwardingConfigurationPtrOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ForwardingProtocol
	}).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
func (o ForwardingConfigurationPtrOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.OdataType
	}).(pulumi.StringPtrOutput)
}

// Describes Forwarding Route.
type ForwardingConfigurationResponse struct {
	// A reference to the BackendPool which this rule routes to.
	BackendPool *SubResourceResponse `pulumi:"backendPool"`
	// The caching configuration associated with this rule.
	CacheConfiguration *CacheConfigurationResponse `pulumi:"cacheConfiguration"`
	// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
	CustomForwardingPath *string `pulumi:"customForwardingPath"`
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
	OdataType string `pulumi:"odataType"`
}

// Describes Forwarding Route.
type ForwardingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ForwardingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingConfigurationResponse)(nil)).Elem()
}

func (o ForwardingConfigurationResponseOutput) ToForwardingConfigurationResponseOutput() ForwardingConfigurationResponseOutput {
	return o
}

func (o ForwardingConfigurationResponseOutput) ToForwardingConfigurationResponseOutputWithContext(ctx context.Context) ForwardingConfigurationResponseOutput {
	return o
}

// A reference to the BackendPool which this rule routes to.
func (o ForwardingConfigurationResponseOutput) BackendPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *SubResourceResponse { return v.BackendPool }).(SubResourceResponsePtrOutput)
}

// The caching configuration associated with this rule.
func (o ForwardingConfigurationResponseOutput) CacheConfiguration() CacheConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *CacheConfigurationResponse { return v.CacheConfiguration }).(CacheConfigurationResponsePtrOutput)
}

// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
func (o ForwardingConfigurationResponseOutput) CustomForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *string { return v.CustomForwardingPath }).(pulumi.StringPtrOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o ForwardingConfigurationResponseOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *string { return v.ForwardingProtocol }).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
func (o ForwardingConfigurationResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

type ForwardingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ForwardingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingConfigurationResponse)(nil)).Elem()
}

func (o ForwardingConfigurationResponsePtrOutput) ToForwardingConfigurationResponsePtrOutput() ForwardingConfigurationResponsePtrOutput {
	return o
}

func (o ForwardingConfigurationResponsePtrOutput) ToForwardingConfigurationResponsePtrOutputWithContext(ctx context.Context) ForwardingConfigurationResponsePtrOutput {
	return o
}

func (o ForwardingConfigurationResponsePtrOutput) Elem() ForwardingConfigurationResponseOutput {
	return o.ApplyT(func(v *ForwardingConfigurationResponse) ForwardingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ForwardingConfigurationResponse
		return ret
	}).(ForwardingConfigurationResponseOutput)
}

// A reference to the BackendPool which this rule routes to.
func (o ForwardingConfigurationResponsePtrOutput) BackendPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ForwardingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BackendPool
	}).(SubResourceResponsePtrOutput)
}

// The caching configuration associated with this rule.
func (o ForwardingConfigurationResponsePtrOutput) CacheConfiguration() CacheConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ForwardingConfigurationResponse) *CacheConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.CacheConfiguration
	}).(CacheConfigurationResponsePtrOutput)
}

// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
func (o ForwardingConfigurationResponsePtrOutput) CustomForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomForwardingPath
	}).(pulumi.StringPtrOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o ForwardingConfigurationResponsePtrOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ForwardingProtocol
	}).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'.
func (o ForwardingConfigurationResponsePtrOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OdataType
	}).(pulumi.StringPtrOutput)
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleGroupOverride struct {
	// Describes the exclusions that are applied to all rules in the group.
	Exclusions []ManagedRuleExclusion `pulumi:"exclusions"`
	// Describes the managed rule group to override.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []FrontDoorManagedRuleOverride `pulumi:"rules"`
}

// FrontDoorManagedRuleGroupOverrideInput is an input type that accepts FrontDoorManagedRuleGroupOverrideArgs and FrontDoorManagedRuleGroupOverrideOutput values.
// You can construct a concrete instance of `FrontDoorManagedRuleGroupOverrideInput` via:
//
//	FrontDoorManagedRuleGroupOverrideArgs{...}
type FrontDoorManagedRuleGroupOverrideInput interface {
	pulumi.Input

	ToFrontDoorManagedRuleGroupOverrideOutput() FrontDoorManagedRuleGroupOverrideOutput
	ToFrontDoorManagedRuleGroupOverrideOutputWithContext(context.Context) FrontDoorManagedRuleGroupOverrideOutput
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleGroupOverrideArgs struct {
	// Describes the exclusions that are applied to all rules in the group.
	Exclusions ManagedRuleExclusionArrayInput `pulumi:"exclusions"`
	// Describes the managed rule group to override.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules FrontDoorManagedRuleOverrideArrayInput `pulumi:"rules"`
}

func (FrontDoorManagedRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleGroupOverride)(nil)).Elem()
}

func (i FrontDoorManagedRuleGroupOverrideArgs) ToFrontDoorManagedRuleGroupOverrideOutput() FrontDoorManagedRuleGroupOverrideOutput {
	return i.ToFrontDoorManagedRuleGroupOverrideOutputWithContext(context.Background())
}

func (i FrontDoorManagedRuleGroupOverrideArgs) ToFrontDoorManagedRuleGroupOverrideOutputWithContext(ctx context.Context) FrontDoorManagedRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorManagedRuleGroupOverrideOutput)
}

// FrontDoorManagedRuleGroupOverrideArrayInput is an input type that accepts FrontDoorManagedRuleGroupOverrideArray and FrontDoorManagedRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `FrontDoorManagedRuleGroupOverrideArrayInput` via:
//
//	FrontDoorManagedRuleGroupOverrideArray{ FrontDoorManagedRuleGroupOverrideArgs{...} }
type FrontDoorManagedRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToFrontDoorManagedRuleGroupOverrideArrayOutput() FrontDoorManagedRuleGroupOverrideArrayOutput
	ToFrontDoorManagedRuleGroupOverrideArrayOutputWithContext(context.Context) FrontDoorManagedRuleGroupOverrideArrayOutput
}

type FrontDoorManagedRuleGroupOverrideArray []FrontDoorManagedRuleGroupOverrideInput

func (FrontDoorManagedRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleGroupOverride)(nil)).Elem()
}

func (i FrontDoorManagedRuleGroupOverrideArray) ToFrontDoorManagedRuleGroupOverrideArrayOutput() FrontDoorManagedRuleGroupOverrideArrayOutput {
	return i.ToFrontDoorManagedRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i FrontDoorManagedRuleGroupOverrideArray) ToFrontDoorManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorManagedRuleGroupOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleGroupOverride)(nil)).Elem()
}

func (o FrontDoorManagedRuleGroupOverrideOutput) ToFrontDoorManagedRuleGroupOverrideOutput() FrontDoorManagedRuleGroupOverrideOutput {
	return o
}

func (o FrontDoorManagedRuleGroupOverrideOutput) ToFrontDoorManagedRuleGroupOverrideOutputWithContext(ctx context.Context) FrontDoorManagedRuleGroupOverrideOutput {
	return o
}

// Describes the exclusions that are applied to all rules in the group.
func (o FrontDoorManagedRuleGroupOverrideOutput) Exclusions() ManagedRuleExclusionArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleGroupOverride) []ManagedRuleExclusion { return v.Exclusions }).(ManagedRuleExclusionArrayOutput)
}

// Describes the managed rule group to override.
func (o FrontDoorManagedRuleGroupOverrideOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleGroupOverride) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o FrontDoorManagedRuleGroupOverrideOutput) Rules() FrontDoorManagedRuleOverrideArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleGroupOverride) []FrontDoorManagedRuleOverride { return v.Rules }).(FrontDoorManagedRuleOverrideArrayOutput)
}

type FrontDoorManagedRuleGroupOverrideArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleGroupOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleGroupOverride)(nil)).Elem()
}

func (o FrontDoorManagedRuleGroupOverrideArrayOutput) ToFrontDoorManagedRuleGroupOverrideArrayOutput() FrontDoorManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o FrontDoorManagedRuleGroupOverrideArrayOutput) ToFrontDoorManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o FrontDoorManagedRuleGroupOverrideArrayOutput) Index(i pulumi.IntInput) FrontDoorManagedRuleGroupOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorManagedRuleGroupOverride {
		return vs[0].([]FrontDoorManagedRuleGroupOverride)[vs[1].(int)]
	}).(FrontDoorManagedRuleGroupOverrideOutput)
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleGroupOverrideResponse struct {
	// Describes the exclusions that are applied to all rules in the group.
	Exclusions []ManagedRuleExclusionResponse `pulumi:"exclusions"`
	// Describes the managed rule group to override.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []FrontDoorManagedRuleOverrideResponse `pulumi:"rules"`
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o FrontDoorManagedRuleGroupOverrideResponseOutput) ToFrontDoorManagedRuleGroupOverrideResponseOutput() FrontDoorManagedRuleGroupOverrideResponseOutput {
	return o
}

func (o FrontDoorManagedRuleGroupOverrideResponseOutput) ToFrontDoorManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) FrontDoorManagedRuleGroupOverrideResponseOutput {
	return o
}

// Describes the exclusions that are applied to all rules in the group.
func (o FrontDoorManagedRuleGroupOverrideResponseOutput) Exclusions() ManagedRuleExclusionResponseArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleGroupOverrideResponse) []ManagedRuleExclusionResponse { return v.Exclusions }).(ManagedRuleExclusionResponseArrayOutput)
}

// Describes the managed rule group to override.
func (o FrontDoorManagedRuleGroupOverrideResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleGroupOverrideResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o FrontDoorManagedRuleGroupOverrideResponseOutput) Rules() FrontDoorManagedRuleOverrideResponseArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleGroupOverrideResponse) []FrontDoorManagedRuleOverrideResponse {
		return v.Rules
	}).(FrontDoorManagedRuleOverrideResponseArrayOutput)
}

type FrontDoorManagedRuleGroupOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleGroupOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o FrontDoorManagedRuleGroupOverrideResponseArrayOutput) ToFrontDoorManagedRuleGroupOverrideResponseArrayOutput() FrontDoorManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o FrontDoorManagedRuleGroupOverrideResponseArrayOutput) ToFrontDoorManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o FrontDoorManagedRuleGroupOverrideResponseArrayOutput) Index(i pulumi.IntInput) FrontDoorManagedRuleGroupOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorManagedRuleGroupOverrideResponse {
		return vs[0].([]FrontDoorManagedRuleGroupOverrideResponse)[vs[1].(int)]
	}).(FrontDoorManagedRuleGroupOverrideResponseOutput)
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleOverride struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Describes the exclusions that are applied to this specific rule.
	Exclusions []ManagedRuleExclusion `pulumi:"exclusions"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// FrontDoorManagedRuleOverrideInput is an input type that accepts FrontDoorManagedRuleOverrideArgs and FrontDoorManagedRuleOverrideOutput values.
// You can construct a concrete instance of `FrontDoorManagedRuleOverrideInput` via:
//
//	FrontDoorManagedRuleOverrideArgs{...}
type FrontDoorManagedRuleOverrideInput interface {
	pulumi.Input

	ToFrontDoorManagedRuleOverrideOutput() FrontDoorManagedRuleOverrideOutput
	ToFrontDoorManagedRuleOverrideOutputWithContext(context.Context) FrontDoorManagedRuleOverrideOutput
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleOverrideArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes the exclusions that are applied to this specific rule.
	Exclusions ManagedRuleExclusionArrayInput `pulumi:"exclusions"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (FrontDoorManagedRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleOverride)(nil)).Elem()
}

func (i FrontDoorManagedRuleOverrideArgs) ToFrontDoorManagedRuleOverrideOutput() FrontDoorManagedRuleOverrideOutput {
	return i.ToFrontDoorManagedRuleOverrideOutputWithContext(context.Background())
}

func (i FrontDoorManagedRuleOverrideArgs) ToFrontDoorManagedRuleOverrideOutputWithContext(ctx context.Context) FrontDoorManagedRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorManagedRuleOverrideOutput)
}

// FrontDoorManagedRuleOverrideArrayInput is an input type that accepts FrontDoorManagedRuleOverrideArray and FrontDoorManagedRuleOverrideArrayOutput values.
// You can construct a concrete instance of `FrontDoorManagedRuleOverrideArrayInput` via:
//
//	FrontDoorManagedRuleOverrideArray{ FrontDoorManagedRuleOverrideArgs{...} }
type FrontDoorManagedRuleOverrideArrayInput interface {
	pulumi.Input

	ToFrontDoorManagedRuleOverrideArrayOutput() FrontDoorManagedRuleOverrideArrayOutput
	ToFrontDoorManagedRuleOverrideArrayOutputWithContext(context.Context) FrontDoorManagedRuleOverrideArrayOutput
}

type FrontDoorManagedRuleOverrideArray []FrontDoorManagedRuleOverrideInput

func (FrontDoorManagedRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleOverride)(nil)).Elem()
}

func (i FrontDoorManagedRuleOverrideArray) ToFrontDoorManagedRuleOverrideArrayOutput() FrontDoorManagedRuleOverrideArrayOutput {
	return i.ToFrontDoorManagedRuleOverrideArrayOutputWithContext(context.Background())
}

func (i FrontDoorManagedRuleOverrideArray) ToFrontDoorManagedRuleOverrideArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorManagedRuleOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleOverrideOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleOverride)(nil)).Elem()
}

func (o FrontDoorManagedRuleOverrideOutput) ToFrontDoorManagedRuleOverrideOutput() FrontDoorManagedRuleOverrideOutput {
	return o
}

func (o FrontDoorManagedRuleOverrideOutput) ToFrontDoorManagedRuleOverrideOutputWithContext(ctx context.Context) FrontDoorManagedRuleOverrideOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o FrontDoorManagedRuleOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverride) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o FrontDoorManagedRuleOverrideOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverride) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes the exclusions that are applied to this specific rule.
func (o FrontDoorManagedRuleOverrideOutput) Exclusions() ManagedRuleExclusionArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverride) []ManagedRuleExclusion { return v.Exclusions }).(ManagedRuleExclusionArrayOutput)
}

// Identifier for the managed rule.
func (o FrontDoorManagedRuleOverrideOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverride) string { return v.RuleId }).(pulumi.StringOutput)
}

type FrontDoorManagedRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleOverride)(nil)).Elem()
}

func (o FrontDoorManagedRuleOverrideArrayOutput) ToFrontDoorManagedRuleOverrideArrayOutput() FrontDoorManagedRuleOverrideArrayOutput {
	return o
}

func (o FrontDoorManagedRuleOverrideArrayOutput) ToFrontDoorManagedRuleOverrideArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleOverrideArrayOutput {
	return o
}

func (o FrontDoorManagedRuleOverrideArrayOutput) Index(i pulumi.IntInput) FrontDoorManagedRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorManagedRuleOverride {
		return vs[0].([]FrontDoorManagedRuleOverride)[vs[1].(int)]
	}).(FrontDoorManagedRuleOverrideOutput)
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleOverrideResponse struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Describes the exclusions that are applied to this specific rule.
	Exclusions []ManagedRuleExclusionResponse `pulumi:"exclusions"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// Defines a managed rule group override setting.
type FrontDoorManagedRuleOverrideResponseOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleOverrideResponse)(nil)).Elem()
}

func (o FrontDoorManagedRuleOverrideResponseOutput) ToFrontDoorManagedRuleOverrideResponseOutput() FrontDoorManagedRuleOverrideResponseOutput {
	return o
}

func (o FrontDoorManagedRuleOverrideResponseOutput) ToFrontDoorManagedRuleOverrideResponseOutputWithContext(ctx context.Context) FrontDoorManagedRuleOverrideResponseOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o FrontDoorManagedRuleOverrideResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverrideResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o FrontDoorManagedRuleOverrideResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverrideResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes the exclusions that are applied to this specific rule.
func (o FrontDoorManagedRuleOverrideResponseOutput) Exclusions() ManagedRuleExclusionResponseArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverrideResponse) []ManagedRuleExclusionResponse { return v.Exclusions }).(ManagedRuleExclusionResponseArrayOutput)
}

// Identifier for the managed rule.
func (o FrontDoorManagedRuleOverrideResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleOverrideResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

type FrontDoorManagedRuleOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleOverrideResponse)(nil)).Elem()
}

func (o FrontDoorManagedRuleOverrideResponseArrayOutput) ToFrontDoorManagedRuleOverrideResponseArrayOutput() FrontDoorManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o FrontDoorManagedRuleOverrideResponseArrayOutput) ToFrontDoorManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o FrontDoorManagedRuleOverrideResponseArrayOutput) Index(i pulumi.IntInput) FrontDoorManagedRuleOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorManagedRuleOverrideResponse {
		return vs[0].([]FrontDoorManagedRuleOverrideResponse)[vs[1].(int)]
	}).(FrontDoorManagedRuleOverrideResponseOutput)
}

// Defines a managed rule set.
type FrontDoorManagedRuleSet struct {
	// Describes the exclusions that are applied to all rules in the set.
	Exclusions []ManagedRuleExclusion `pulumi:"exclusions"`
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides []FrontDoorManagedRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// Defines the rule set action.
	RuleSetAction *string `pulumi:"ruleSetAction"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// FrontDoorManagedRuleSetInput is an input type that accepts FrontDoorManagedRuleSetArgs and FrontDoorManagedRuleSetOutput values.
// You can construct a concrete instance of `FrontDoorManagedRuleSetInput` via:
//
//	FrontDoorManagedRuleSetArgs{...}
type FrontDoorManagedRuleSetInput interface {
	pulumi.Input

	ToFrontDoorManagedRuleSetOutput() FrontDoorManagedRuleSetOutput
	ToFrontDoorManagedRuleSetOutputWithContext(context.Context) FrontDoorManagedRuleSetOutput
}

// Defines a managed rule set.
type FrontDoorManagedRuleSetArgs struct {
	// Describes the exclusions that are applied to all rules in the set.
	Exclusions ManagedRuleExclusionArrayInput `pulumi:"exclusions"`
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides FrontDoorManagedRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set action.
	RuleSetAction pulumi.StringPtrInput `pulumi:"ruleSetAction"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (FrontDoorManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleSet)(nil)).Elem()
}

func (i FrontDoorManagedRuleSetArgs) ToFrontDoorManagedRuleSetOutput() FrontDoorManagedRuleSetOutput {
	return i.ToFrontDoorManagedRuleSetOutputWithContext(context.Background())
}

func (i FrontDoorManagedRuleSetArgs) ToFrontDoorManagedRuleSetOutputWithContext(ctx context.Context) FrontDoorManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorManagedRuleSetOutput)
}

// FrontDoorManagedRuleSetArrayInput is an input type that accepts FrontDoorManagedRuleSetArray and FrontDoorManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `FrontDoorManagedRuleSetArrayInput` via:
//
//	FrontDoorManagedRuleSetArray{ FrontDoorManagedRuleSetArgs{...} }
type FrontDoorManagedRuleSetArrayInput interface {
	pulumi.Input

	ToFrontDoorManagedRuleSetArrayOutput() FrontDoorManagedRuleSetArrayOutput
	ToFrontDoorManagedRuleSetArrayOutputWithContext(context.Context) FrontDoorManagedRuleSetArrayOutput
}

type FrontDoorManagedRuleSetArray []FrontDoorManagedRuleSetInput

func (FrontDoorManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleSet)(nil)).Elem()
}

func (i FrontDoorManagedRuleSetArray) ToFrontDoorManagedRuleSetArrayOutput() FrontDoorManagedRuleSetArrayOutput {
	return i.ToFrontDoorManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i FrontDoorManagedRuleSetArray) ToFrontDoorManagedRuleSetArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorManagedRuleSetArrayOutput)
}

// Defines a managed rule set.
type FrontDoorManagedRuleSetOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleSet)(nil)).Elem()
}

func (o FrontDoorManagedRuleSetOutput) ToFrontDoorManagedRuleSetOutput() FrontDoorManagedRuleSetOutput {
	return o
}

func (o FrontDoorManagedRuleSetOutput) ToFrontDoorManagedRuleSetOutputWithContext(ctx context.Context) FrontDoorManagedRuleSetOutput {
	return o
}

// Describes the exclusions that are applied to all rules in the set.
func (o FrontDoorManagedRuleSetOutput) Exclusions() ManagedRuleExclusionArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSet) []ManagedRuleExclusion { return v.Exclusions }).(ManagedRuleExclusionArrayOutput)
}

// Defines the rule group overrides to apply to the rule set.
func (o FrontDoorManagedRuleSetOutput) RuleGroupOverrides() FrontDoorManagedRuleGroupOverrideArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSet) []FrontDoorManagedRuleGroupOverride { return v.RuleGroupOverrides }).(FrontDoorManagedRuleGroupOverrideArrayOutput)
}

// Defines the rule set action.
func (o FrontDoorManagedRuleSetOutput) RuleSetAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSet) *string { return v.RuleSetAction }).(pulumi.StringPtrOutput)
}

// Defines the rule set type to use.
func (o FrontDoorManagedRuleSetOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSet) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o FrontDoorManagedRuleSetOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSet) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type FrontDoorManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleSet)(nil)).Elem()
}

func (o FrontDoorManagedRuleSetArrayOutput) ToFrontDoorManagedRuleSetArrayOutput() FrontDoorManagedRuleSetArrayOutput {
	return o
}

func (o FrontDoorManagedRuleSetArrayOutput) ToFrontDoorManagedRuleSetArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleSetArrayOutput {
	return o
}

func (o FrontDoorManagedRuleSetArrayOutput) Index(i pulumi.IntInput) FrontDoorManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorManagedRuleSet {
		return vs[0].([]FrontDoorManagedRuleSet)[vs[1].(int)]
	}).(FrontDoorManagedRuleSetOutput)
}

// Defines a managed rule set.
type FrontDoorManagedRuleSetResponse struct {
	// Describes the exclusions that are applied to all rules in the set.
	Exclusions []ManagedRuleExclusionResponse `pulumi:"exclusions"`
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides []FrontDoorManagedRuleGroupOverrideResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set action.
	RuleSetAction *string `pulumi:"ruleSetAction"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// Defines a managed rule set.
type FrontDoorManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorManagedRuleSetResponse)(nil)).Elem()
}

func (o FrontDoorManagedRuleSetResponseOutput) ToFrontDoorManagedRuleSetResponseOutput() FrontDoorManagedRuleSetResponseOutput {
	return o
}

func (o FrontDoorManagedRuleSetResponseOutput) ToFrontDoorManagedRuleSetResponseOutputWithContext(ctx context.Context) FrontDoorManagedRuleSetResponseOutput {
	return o
}

// Describes the exclusions that are applied to all rules in the set.
func (o FrontDoorManagedRuleSetResponseOutput) Exclusions() ManagedRuleExclusionResponseArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSetResponse) []ManagedRuleExclusionResponse { return v.Exclusions }).(ManagedRuleExclusionResponseArrayOutput)
}

// Defines the rule group overrides to apply to the rule set.
func (o FrontDoorManagedRuleSetResponseOutput) RuleGroupOverrides() FrontDoorManagedRuleGroupOverrideResponseArrayOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSetResponse) []FrontDoorManagedRuleGroupOverrideResponse {
		return v.RuleGroupOverrides
	}).(FrontDoorManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines the rule set action.
func (o FrontDoorManagedRuleSetResponseOutput) RuleSetAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSetResponse) *string { return v.RuleSetAction }).(pulumi.StringPtrOutput)
}

// Defines the rule set type to use.
func (o FrontDoorManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o FrontDoorManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type FrontDoorManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorManagedRuleSetResponse)(nil)).Elem()
}

func (o FrontDoorManagedRuleSetResponseArrayOutput) ToFrontDoorManagedRuleSetResponseArrayOutput() FrontDoorManagedRuleSetResponseArrayOutput {
	return o
}

func (o FrontDoorManagedRuleSetResponseArrayOutput) ToFrontDoorManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) FrontDoorManagedRuleSetResponseArrayOutput {
	return o
}

func (o FrontDoorManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) FrontDoorManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorManagedRuleSetResponse {
		return vs[0].([]FrontDoorManagedRuleSetResponse)[vs[1].(int)]
	}).(FrontDoorManagedRuleSetResponseOutput)
}

// Define a match condition.
type FrontDoorMatchCondition struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Request variable to compare with.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Comparison type to use for matching with the variable value.
	Operator string `pulumi:"operator"`
	// Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// FrontDoorMatchConditionInput is an input type that accepts FrontDoorMatchConditionArgs and FrontDoorMatchConditionOutput values.
// You can construct a concrete instance of `FrontDoorMatchConditionInput` via:
//
//	FrontDoorMatchConditionArgs{...}
type FrontDoorMatchConditionInput interface {
	pulumi.Input

	ToFrontDoorMatchConditionOutput() FrontDoorMatchConditionOutput
	ToFrontDoorMatchConditionOutputWithContext(context.Context) FrontDoorMatchConditionOutput
}

// Define a match condition.
type FrontDoorMatchConditionArgs struct {
	// List of possible match values.
	MatchValue pulumi.StringArrayInput `pulumi:"matchValue"`
	// Request variable to compare with.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Comparison type to use for matching with the variable value.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (FrontDoorMatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorMatchCondition)(nil)).Elem()
}

func (i FrontDoorMatchConditionArgs) ToFrontDoorMatchConditionOutput() FrontDoorMatchConditionOutput {
	return i.ToFrontDoorMatchConditionOutputWithContext(context.Background())
}

func (i FrontDoorMatchConditionArgs) ToFrontDoorMatchConditionOutputWithContext(ctx context.Context) FrontDoorMatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorMatchConditionOutput)
}

// FrontDoorMatchConditionArrayInput is an input type that accepts FrontDoorMatchConditionArray and FrontDoorMatchConditionArrayOutput values.
// You can construct a concrete instance of `FrontDoorMatchConditionArrayInput` via:
//
//	FrontDoorMatchConditionArray{ FrontDoorMatchConditionArgs{...} }
type FrontDoorMatchConditionArrayInput interface {
	pulumi.Input

	ToFrontDoorMatchConditionArrayOutput() FrontDoorMatchConditionArrayOutput
	ToFrontDoorMatchConditionArrayOutputWithContext(context.Context) FrontDoorMatchConditionArrayOutput
}

type FrontDoorMatchConditionArray []FrontDoorMatchConditionInput

func (FrontDoorMatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorMatchCondition)(nil)).Elem()
}

func (i FrontDoorMatchConditionArray) ToFrontDoorMatchConditionArrayOutput() FrontDoorMatchConditionArrayOutput {
	return i.ToFrontDoorMatchConditionArrayOutputWithContext(context.Background())
}

func (i FrontDoorMatchConditionArray) ToFrontDoorMatchConditionArrayOutputWithContext(ctx context.Context) FrontDoorMatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorMatchConditionArrayOutput)
}

// Define a match condition.
type FrontDoorMatchConditionOutput struct{ *pulumi.OutputState }

func (FrontDoorMatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorMatchCondition)(nil)).Elem()
}

func (o FrontDoorMatchConditionOutput) ToFrontDoorMatchConditionOutput() FrontDoorMatchConditionOutput {
	return o
}

func (o FrontDoorMatchConditionOutput) ToFrontDoorMatchConditionOutputWithContext(ctx context.Context) FrontDoorMatchConditionOutput {
	return o
}

// List of possible match values.
func (o FrontDoorMatchConditionOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontDoorMatchCondition) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Request variable to compare with.
func (o FrontDoorMatchConditionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorMatchCondition) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o FrontDoorMatchConditionOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FrontDoorMatchCondition) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Comparison type to use for matching with the variable value.
func (o FrontDoorMatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorMatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
func (o FrontDoorMatchConditionOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorMatchCondition) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o FrontDoorMatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontDoorMatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type FrontDoorMatchConditionArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorMatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorMatchCondition)(nil)).Elem()
}

func (o FrontDoorMatchConditionArrayOutput) ToFrontDoorMatchConditionArrayOutput() FrontDoorMatchConditionArrayOutput {
	return o
}

func (o FrontDoorMatchConditionArrayOutput) ToFrontDoorMatchConditionArrayOutputWithContext(ctx context.Context) FrontDoorMatchConditionArrayOutput {
	return o
}

func (o FrontDoorMatchConditionArrayOutput) Index(i pulumi.IntInput) FrontDoorMatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorMatchCondition {
		return vs[0].([]FrontDoorMatchCondition)[vs[1].(int)]
	}).(FrontDoorMatchConditionOutput)
}

// Define a match condition.
type FrontDoorMatchConditionResponse struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Request variable to compare with.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Comparison type to use for matching with the variable value.
	Operator string `pulumi:"operator"`
	// Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// Define a match condition.
type FrontDoorMatchConditionResponseOutput struct{ *pulumi.OutputState }

func (FrontDoorMatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorMatchConditionResponse)(nil)).Elem()
}

func (o FrontDoorMatchConditionResponseOutput) ToFrontDoorMatchConditionResponseOutput() FrontDoorMatchConditionResponseOutput {
	return o
}

func (o FrontDoorMatchConditionResponseOutput) ToFrontDoorMatchConditionResponseOutputWithContext(ctx context.Context) FrontDoorMatchConditionResponseOutput {
	return o
}

// List of possible match values.
func (o FrontDoorMatchConditionResponseOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontDoorMatchConditionResponse) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Request variable to compare with.
func (o FrontDoorMatchConditionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorMatchConditionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o FrontDoorMatchConditionResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FrontDoorMatchConditionResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Comparison type to use for matching with the variable value.
func (o FrontDoorMatchConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v FrontDoorMatchConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
func (o FrontDoorMatchConditionResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorMatchConditionResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o FrontDoorMatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontDoorMatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type FrontDoorMatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontDoorMatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontDoorMatchConditionResponse)(nil)).Elem()
}

func (o FrontDoorMatchConditionResponseArrayOutput) ToFrontDoorMatchConditionResponseArrayOutput() FrontDoorMatchConditionResponseArrayOutput {
	return o
}

func (o FrontDoorMatchConditionResponseArrayOutput) ToFrontDoorMatchConditionResponseArrayOutputWithContext(ctx context.Context) FrontDoorMatchConditionResponseArrayOutput {
	return o
}

func (o FrontDoorMatchConditionResponseArrayOutput) Index(i pulumi.IntInput) FrontDoorMatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontDoorMatchConditionResponse {
		return vs[0].([]FrontDoorMatchConditionResponse)[vs[1].(int)]
	}).(FrontDoorMatchConditionResponseOutput)
}

// Defines top-level WebApplicationFirewallPolicy configuration settings.
type FrontDoorPolicySettings struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody *string `pulumi:"customBlockResponseBody"`
	// If the action type is block, customer can override the response status code.
	CustomBlockResponseStatusCode *int `pulumi:"customBlockResponseStatusCode"`
	// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
	// If action type is redirect, this field represents redirect URL for the client.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Describes if policy managed rules will inspect the request body content.
	RequestBodyCheck *string `pulumi:"requestBodyCheck"`
}

// FrontDoorPolicySettingsInput is an input type that accepts FrontDoorPolicySettingsArgs and FrontDoorPolicySettingsOutput values.
// You can construct a concrete instance of `FrontDoorPolicySettingsInput` via:
//
//	FrontDoorPolicySettingsArgs{...}
type FrontDoorPolicySettingsInput interface {
	pulumi.Input

	ToFrontDoorPolicySettingsOutput() FrontDoorPolicySettingsOutput
	ToFrontDoorPolicySettingsOutputWithContext(context.Context) FrontDoorPolicySettingsOutput
}

// Defines top-level WebApplicationFirewallPolicy configuration settings.
type FrontDoorPolicySettingsArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody pulumi.StringPtrInput `pulumi:"customBlockResponseBody"`
	// If the action type is block, customer can override the response status code.
	CustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"customBlockResponseStatusCode"`
	// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// If action type is redirect, this field represents redirect URL for the client.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// Describes if policy managed rules will inspect the request body content.
	RequestBodyCheck pulumi.StringPtrInput `pulumi:"requestBodyCheck"`
}

func (FrontDoorPolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorPolicySettings)(nil)).Elem()
}

func (i FrontDoorPolicySettingsArgs) ToFrontDoorPolicySettingsOutput() FrontDoorPolicySettingsOutput {
	return i.ToFrontDoorPolicySettingsOutputWithContext(context.Background())
}

func (i FrontDoorPolicySettingsArgs) ToFrontDoorPolicySettingsOutputWithContext(ctx context.Context) FrontDoorPolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorPolicySettingsOutput)
}

func (i FrontDoorPolicySettingsArgs) ToFrontDoorPolicySettingsPtrOutput() FrontDoorPolicySettingsPtrOutput {
	return i.ToFrontDoorPolicySettingsPtrOutputWithContext(context.Background())
}

func (i FrontDoorPolicySettingsArgs) ToFrontDoorPolicySettingsPtrOutputWithContext(ctx context.Context) FrontDoorPolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorPolicySettingsOutput).ToFrontDoorPolicySettingsPtrOutputWithContext(ctx)
}

// FrontDoorPolicySettingsPtrInput is an input type that accepts FrontDoorPolicySettingsArgs, FrontDoorPolicySettingsPtr and FrontDoorPolicySettingsPtrOutput values.
// You can construct a concrete instance of `FrontDoorPolicySettingsPtrInput` via:
//
//	        FrontDoorPolicySettingsArgs{...}
//
//	or:
//
//	        nil
type FrontDoorPolicySettingsPtrInput interface {
	pulumi.Input

	ToFrontDoorPolicySettingsPtrOutput() FrontDoorPolicySettingsPtrOutput
	ToFrontDoorPolicySettingsPtrOutputWithContext(context.Context) FrontDoorPolicySettingsPtrOutput
}

type frontDoorPolicySettingsPtrType FrontDoorPolicySettingsArgs

func FrontDoorPolicySettingsPtr(v *FrontDoorPolicySettingsArgs) FrontDoorPolicySettingsPtrInput {
	return (*frontDoorPolicySettingsPtrType)(v)
}

func (*frontDoorPolicySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontDoorPolicySettings)(nil)).Elem()
}

func (i *frontDoorPolicySettingsPtrType) ToFrontDoorPolicySettingsPtrOutput() FrontDoorPolicySettingsPtrOutput {
	return i.ToFrontDoorPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *frontDoorPolicySettingsPtrType) ToFrontDoorPolicySettingsPtrOutputWithContext(ctx context.Context) FrontDoorPolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontDoorPolicySettingsPtrOutput)
}

// Defines top-level WebApplicationFirewallPolicy configuration settings.
type FrontDoorPolicySettingsOutput struct{ *pulumi.OutputState }

func (FrontDoorPolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorPolicySettings)(nil)).Elem()
}

func (o FrontDoorPolicySettingsOutput) ToFrontDoorPolicySettingsOutput() FrontDoorPolicySettingsOutput {
	return o
}

func (o FrontDoorPolicySettingsOutput) ToFrontDoorPolicySettingsOutputWithContext(ctx context.Context) FrontDoorPolicySettingsOutput {
	return o
}

func (o FrontDoorPolicySettingsOutput) ToFrontDoorPolicySettingsPtrOutput() FrontDoorPolicySettingsPtrOutput {
	return o.ToFrontDoorPolicySettingsPtrOutputWithContext(context.Background())
}

func (o FrontDoorPolicySettingsOutput) ToFrontDoorPolicySettingsPtrOutputWithContext(ctx context.Context) FrontDoorPolicySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FrontDoorPolicySettings) *FrontDoorPolicySettings {
		return &v
	}).(FrontDoorPolicySettingsPtrOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o FrontDoorPolicySettingsOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettings) *string { return v.CustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o FrontDoorPolicySettingsOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettings) *int { return v.CustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
func (o FrontDoorPolicySettingsOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettings) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o FrontDoorPolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// If action type is redirect, this field represents redirect URL for the client.
func (o FrontDoorPolicySettingsOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettings) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// Describes if policy managed rules will inspect the request body content.
func (o FrontDoorPolicySettingsOutput) RequestBodyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettings) *string { return v.RequestBodyCheck }).(pulumi.StringPtrOutput)
}

type FrontDoorPolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (FrontDoorPolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontDoorPolicySettings)(nil)).Elem()
}

func (o FrontDoorPolicySettingsPtrOutput) ToFrontDoorPolicySettingsPtrOutput() FrontDoorPolicySettingsPtrOutput {
	return o
}

func (o FrontDoorPolicySettingsPtrOutput) ToFrontDoorPolicySettingsPtrOutputWithContext(ctx context.Context) FrontDoorPolicySettingsPtrOutput {
	return o
}

func (o FrontDoorPolicySettingsPtrOutput) Elem() FrontDoorPolicySettingsOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettings) FrontDoorPolicySettings {
		if v != nil {
			return *v
		}
		var ret FrontDoorPolicySettings
		return ret
	}).(FrontDoorPolicySettingsOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o FrontDoorPolicySettingsPtrOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o FrontDoorPolicySettingsPtrOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
func (o FrontDoorPolicySettingsPtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o FrontDoorPolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// If action type is redirect, this field represents redirect URL for the client.
func (o FrontDoorPolicySettingsPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// Describes if policy managed rules will inspect the request body content.
func (o FrontDoorPolicySettingsPtrOutput) RequestBodyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.StringPtrOutput)
}

// Defines top-level WebApplicationFirewallPolicy configuration settings.
type FrontDoorPolicySettingsResponse struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody *string `pulumi:"customBlockResponseBody"`
	// If the action type is block, customer can override the response status code.
	CustomBlockResponseStatusCode *int `pulumi:"customBlockResponseStatusCode"`
	// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
	// If action type is redirect, this field represents redirect URL for the client.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Describes if policy managed rules will inspect the request body content.
	RequestBodyCheck *string `pulumi:"requestBodyCheck"`
}

// Defines top-level WebApplicationFirewallPolicy configuration settings.
type FrontDoorPolicySettingsResponseOutput struct{ *pulumi.OutputState }

func (FrontDoorPolicySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontDoorPolicySettingsResponse)(nil)).Elem()
}

func (o FrontDoorPolicySettingsResponseOutput) ToFrontDoorPolicySettingsResponseOutput() FrontDoorPolicySettingsResponseOutput {
	return o
}

func (o FrontDoorPolicySettingsResponseOutput) ToFrontDoorPolicySettingsResponseOutputWithContext(ctx context.Context) FrontDoorPolicySettingsResponseOutput {
	return o
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o FrontDoorPolicySettingsResponseOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettingsResponse) *string { return v.CustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o FrontDoorPolicySettingsResponseOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettingsResponse) *int { return v.CustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
func (o FrontDoorPolicySettingsResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettingsResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o FrontDoorPolicySettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// If action type is redirect, this field represents redirect URL for the client.
func (o FrontDoorPolicySettingsResponseOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettingsResponse) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// Describes if policy managed rules will inspect the request body content.
func (o FrontDoorPolicySettingsResponseOutput) RequestBodyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontDoorPolicySettingsResponse) *string { return v.RequestBodyCheck }).(pulumi.StringPtrOutput)
}

type FrontDoorPolicySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontDoorPolicySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontDoorPolicySettingsResponse)(nil)).Elem()
}

func (o FrontDoorPolicySettingsResponsePtrOutput) ToFrontDoorPolicySettingsResponsePtrOutput() FrontDoorPolicySettingsResponsePtrOutput {
	return o
}

func (o FrontDoorPolicySettingsResponsePtrOutput) ToFrontDoorPolicySettingsResponsePtrOutputWithContext(ctx context.Context) FrontDoorPolicySettingsResponsePtrOutput {
	return o
}

func (o FrontDoorPolicySettingsResponsePtrOutput) Elem() FrontDoorPolicySettingsResponseOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettingsResponse) FrontDoorPolicySettingsResponse {
		if v != nil {
			return *v
		}
		var ret FrontDoorPolicySettingsResponse
		return ret
	}).(FrontDoorPolicySettingsResponseOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o FrontDoorPolicySettingsResponsePtrOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o FrontDoorPolicySettingsResponsePtrOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
func (o FrontDoorPolicySettingsResponsePtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o FrontDoorPolicySettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// If action type is redirect, this field represents redirect URL for the client.
func (o FrontDoorPolicySettingsResponsePtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// Describes if policy managed rules will inspect the request body content.
func (o FrontDoorPolicySettingsResponsePtrOutput) RequestBodyCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontDoorPolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.StringPtrOutput)
}

// A frontend endpoint used for routing.
type FrontendEndpoint struct {
	// The host name of the frontendEndpoint. Must be a domain name.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
	SessionAffinityEnabledState *string `pulumi:"sessionAffinityEnabledState"`
	// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
	SessionAffinityTtlSeconds *int `pulumi:"sessionAffinityTtlSeconds"`
	// Defines the Web Application Firewall policy for each host (if applicable)
	WebApplicationFirewallPolicyLink *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// FrontendEndpointInput is an input type that accepts FrontendEndpointArgs and FrontendEndpointOutput values.
// You can construct a concrete instance of `FrontendEndpointInput` via:
//
//	FrontendEndpointArgs{...}
type FrontendEndpointInput interface {
	pulumi.Input

	ToFrontendEndpointOutput() FrontendEndpointOutput
	ToFrontendEndpointOutputWithContext(context.Context) FrontendEndpointOutput
}

// A frontend endpoint used for routing.
type FrontendEndpointArgs struct {
	// The host name of the frontendEndpoint. Must be a domain name.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
	SessionAffinityEnabledState pulumi.StringPtrInput `pulumi:"sessionAffinityEnabledState"`
	// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
	SessionAffinityTtlSeconds pulumi.IntPtrInput `pulumi:"sessionAffinityTtlSeconds"`
	// Defines the Web Application Firewall policy for each host (if applicable)
	WebApplicationFirewallPolicyLink FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput `pulumi:"webApplicationFirewallPolicyLink"`
}

func (FrontendEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpoint)(nil)).Elem()
}

func (i FrontendEndpointArgs) ToFrontendEndpointOutput() FrontendEndpointOutput {
	return i.ToFrontendEndpointOutputWithContext(context.Background())
}

func (i FrontendEndpointArgs) ToFrontendEndpointOutputWithContext(ctx context.Context) FrontendEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointOutput)
}

// FrontendEndpointArrayInput is an input type that accepts FrontendEndpointArray and FrontendEndpointArrayOutput values.
// You can construct a concrete instance of `FrontendEndpointArrayInput` via:
//
//	FrontendEndpointArray{ FrontendEndpointArgs{...} }
type FrontendEndpointArrayInput interface {
	pulumi.Input

	ToFrontendEndpointArrayOutput() FrontendEndpointArrayOutput
	ToFrontendEndpointArrayOutputWithContext(context.Context) FrontendEndpointArrayOutput
}

type FrontendEndpointArray []FrontendEndpointInput

func (FrontendEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpoint)(nil)).Elem()
}

func (i FrontendEndpointArray) ToFrontendEndpointArrayOutput() FrontendEndpointArrayOutput {
	return i.ToFrontendEndpointArrayOutputWithContext(context.Background())
}

func (i FrontendEndpointArray) ToFrontendEndpointArrayOutputWithContext(ctx context.Context) FrontendEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointArrayOutput)
}

// A frontend endpoint used for routing.
type FrontendEndpointOutput struct{ *pulumi.OutputState }

func (FrontendEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpoint)(nil)).Elem()
}

func (o FrontendEndpointOutput) ToFrontendEndpointOutput() FrontendEndpointOutput {
	return o
}

func (o FrontendEndpointOutput) ToFrontendEndpointOutputWithContext(ctx context.Context) FrontendEndpointOutput {
	return o
}

// The host name of the frontendEndpoint. Must be a domain name.
func (o FrontendEndpointOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FrontendEndpointOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
func (o FrontendEndpointOutput) SessionAffinityEnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.SessionAffinityEnabledState }).(pulumi.StringPtrOutput)
}

// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
func (o FrontendEndpointOutput) SessionAffinityTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *int { return v.SessionAffinityTtlSeconds }).(pulumi.IntPtrOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
func (o FrontendEndpointOutput) WebApplicationFirewallPolicyLink() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

type FrontendEndpointArrayOutput struct{ *pulumi.OutputState }

func (FrontendEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpoint)(nil)).Elem()
}

func (o FrontendEndpointArrayOutput) ToFrontendEndpointArrayOutput() FrontendEndpointArrayOutput {
	return o
}

func (o FrontendEndpointArrayOutput) ToFrontendEndpointArrayOutputWithContext(ctx context.Context) FrontendEndpointArrayOutput {
	return o
}

func (o FrontendEndpointArrayOutput) Index(i pulumi.IntInput) FrontendEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendEndpoint {
		return vs[0].([]FrontendEndpoint)[vs[1].(int)]
	}).(FrontendEndpointOutput)
}

// Defines the Resource ID for a Frontend Endpoint.
type FrontendEndpointLinkResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Resource ID for a Frontend Endpoint.
type FrontendEndpointLinkResponseOutput struct{ *pulumi.OutputState }

func (FrontendEndpointLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointLinkResponse)(nil)).Elem()
}

func (o FrontendEndpointLinkResponseOutput) ToFrontendEndpointLinkResponseOutput() FrontendEndpointLinkResponseOutput {
	return o
}

func (o FrontendEndpointLinkResponseOutput) ToFrontendEndpointLinkResponseOutputWithContext(ctx context.Context) FrontendEndpointLinkResponseOutput {
	return o
}

// Resource ID.
func (o FrontendEndpointLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type FrontendEndpointLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendEndpointLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpointLinkResponse)(nil)).Elem()
}

func (o FrontendEndpointLinkResponseArrayOutput) ToFrontendEndpointLinkResponseArrayOutput() FrontendEndpointLinkResponseArrayOutput {
	return o
}

func (o FrontendEndpointLinkResponseArrayOutput) ToFrontendEndpointLinkResponseArrayOutputWithContext(ctx context.Context) FrontendEndpointLinkResponseArrayOutput {
	return o
}

func (o FrontendEndpointLinkResponseArrayOutput) Index(i pulumi.IntInput) FrontendEndpointLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendEndpointLinkResponse {
		return vs[0].([]FrontendEndpointLinkResponse)[vs[1].(int)]
	}).(FrontendEndpointLinkResponseOutput)
}

// A frontend endpoint used for routing.
type FrontendEndpointResponse struct {
	// The configuration specifying how to enable HTTPS
	CustomHttpsConfiguration CustomHttpsConfigurationResponse `pulumi:"customHttpsConfiguration"`
	// Provisioning status of Custom Https of the frontendEndpoint.
	CustomHttpsProvisioningState string `pulumi:"customHttpsProvisioningState"`
	// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
	CustomHttpsProvisioningSubstate string `pulumi:"customHttpsProvisioningSubstate"`
	// The host name of the frontendEndpoint. Must be a domain name.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
	SessionAffinityEnabledState *string `pulumi:"sessionAffinityEnabledState"`
	// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
	SessionAffinityTtlSeconds *int `pulumi:"sessionAffinityTtlSeconds"`
	// Resource type.
	Type string `pulumi:"type"`
	// Defines the Web Application Firewall policy for each host (if applicable)
	WebApplicationFirewallPolicyLink *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// A frontend endpoint used for routing.
type FrontendEndpointResponseOutput struct{ *pulumi.OutputState }

func (FrontendEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointResponse)(nil)).Elem()
}

func (o FrontendEndpointResponseOutput) ToFrontendEndpointResponseOutput() FrontendEndpointResponseOutput {
	return o
}

func (o FrontendEndpointResponseOutput) ToFrontendEndpointResponseOutputWithContext(ctx context.Context) FrontendEndpointResponseOutput {
	return o
}

// The configuration specifying how to enable HTTPS
func (o FrontendEndpointResponseOutput) CustomHttpsConfiguration() CustomHttpsConfigurationResponseOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) CustomHttpsConfigurationResponse { return v.CustomHttpsConfiguration }).(CustomHttpsConfigurationResponseOutput)
}

// Provisioning status of Custom Https of the frontendEndpoint.
func (o FrontendEndpointResponseOutput) CustomHttpsProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.CustomHttpsProvisioningState }).(pulumi.StringOutput)
}

// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
func (o FrontendEndpointResponseOutput) CustomHttpsProvisioningSubstate() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.CustomHttpsProvisioningSubstate }).(pulumi.StringOutput)
}

// The host name of the frontendEndpoint. Must be a domain name.
func (o FrontendEndpointResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FrontendEndpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o FrontendEndpointResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
func (o FrontendEndpointResponseOutput) SessionAffinityEnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.SessionAffinityEnabledState }).(pulumi.StringPtrOutput)
}

// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
func (o FrontendEndpointResponseOutput) SessionAffinityTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *int { return v.SessionAffinityTtlSeconds }).(pulumi.IntPtrOutput)
}

// Resource type.
func (o FrontendEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
func (o FrontendEndpointResponseOutput) WebApplicationFirewallPolicyLink() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

type FrontendEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpointResponse)(nil)).Elem()
}

func (o FrontendEndpointResponseArrayOutput) ToFrontendEndpointResponseArrayOutput() FrontendEndpointResponseArrayOutput {
	return o
}

func (o FrontendEndpointResponseArrayOutput) ToFrontendEndpointResponseArrayOutputWithContext(ctx context.Context) FrontendEndpointResponseArrayOutput {
	return o
}

func (o FrontendEndpointResponseArrayOutput) Index(i pulumi.IntInput) FrontendEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendEndpointResponse {
		return vs[0].([]FrontendEndpointResponse)[vs[1].(int)]
	}).(FrontendEndpointResponseOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

// Resource ID.
func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink
		return ret
	}).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs and FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//	FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs, FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtr and FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//	        FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//	or:
//
//	        nil
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs

func FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
		return &v
	}).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Elem() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink
		return ret
	}).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfiguration struct {
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResource `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for FrontendIPConfiguration
func (val *FrontendIPConfiguration) Defaults() *FrontendIPConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// FrontendIPConfigurationInput is an input type that accepts FrontendIPConfigurationArgs and FrontendIPConfigurationOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInput` via:
//
//	FrontendIPConfigurationArgs{...}
type FrontendIPConfigurationInput interface {
	pulumi.Input

	ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput
	ToFrontendIPConfigurationOutputWithContext(context.Context) FrontendIPConfigurationOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationArgs struct {
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer SubResourcePtrInput `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the Public IP resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for FrontendIPConfigurationArgs
func (val *FrontendIPConfigurationArgs) Defaults() *FrontendIPConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (FrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return i.ToFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput)
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return i.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput).ToFrontendIPConfigurationPtrOutputWithContext(ctx)
}

// FrontendIPConfigurationPtrInput is an input type that accepts FrontendIPConfigurationArgs, FrontendIPConfigurationPtr and FrontendIPConfigurationPtrOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationPtrInput` via:
//
//	        FrontendIPConfigurationArgs{...}
//
//	or:
//
//	        nil
type FrontendIPConfigurationPtrInput interface {
	pulumi.Input

	ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput
	ToFrontendIPConfigurationPtrOutputWithContext(context.Context) FrontendIPConfigurationPtrOutput
}

type frontendIPConfigurationPtrType FrontendIPConfigurationArgs

func FrontendIPConfigurationPtr(v *FrontendIPConfigurationArgs) FrontendIPConfigurationPtrInput {
	return (*frontendIPConfigurationPtrType)(v)
}

func (*frontendIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfiguration)(nil)).Elem()
}

func (i *frontendIPConfigurationPtrType) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return i.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *frontendIPConfigurationPtrType) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPtrOutput)
}

// FrontendIPConfigurationArrayInput is an input type that accepts FrontendIPConfigurationArray and FrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationArrayInput` via:
//
//	FrontendIPConfigurationArray{ FrontendIPConfigurationArgs{...} }
type FrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput
	ToFrontendIPConfigurationArrayOutputWithContext(context.Context) FrontendIPConfigurationArrayOutput
}

type FrontendIPConfigurationArray []FrontendIPConfigurationInput

func (FrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return i.ToFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return o.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FrontendIPConfiguration) *FrontendIPConfiguration {
		return &v
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to gateway load balancer frontend IP.
func (o FrontendIPConfigurationOutput) GatewayLoadBalancer() SubResourcePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubResource { return v.GatewayLoadBalancer }).(SubResourcePtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationPtrOutput) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return o
}

func (o FrontendIPConfigurationPtrOutput) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return o
}

func (o FrontendIPConfigurationPtrOutput) Elem() FrontendIPConfigurationOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) FrontendIPConfiguration {
		if v != nil {
			return *v
		}
		var ret FrontendIPConfiguration
		return ret
	}).(FrontendIPConfigurationOutput)
}

// The reference to gateway load balancer frontend IP.
func (o FrontendIPConfigurationPtrOutput) GatewayLoadBalancer() SubResourcePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayLoadBalancer
	}).(SubResourcePtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationPtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationPtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfiguration {
		return vs[0].([]FrontendIPConfiguration)[vs[1].(int)]
	}).(FrontendIPConfigurationOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResourceResponse `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of references to inbound pools that use this frontend IP.
	InboundNatPools []SubResourceResponse `pulumi:"inboundNatPools"`
	// An array of references to inbound rules that use this frontend IP.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// An array of references to load balancing rules that use this frontend IP.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// An array of references to outbound rules that use this frontend IP.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for FrontendIPConfigurationResponse
func (val *FrontendIPConfigurationResponse) Defaults() *FrontendIPConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PublicIPAddress = tmp.PublicIPAddress.Defaults()

	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The reference to gateway load balancer frontend IP.
func (o FrontendIPConfigurationResponseOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubResourceResponse { return v.GatewayLoadBalancer }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatPools }).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatRules }).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) Elem() FrontendIPConfigurationResponseOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) FrontendIPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret FrontendIPConfigurationResponse
		return ret
	}).(FrontendIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference to gateway load balancer frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayLoadBalancer
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfigurationResponse {
		return vs[0].([]FrontendIPConfigurationResponse)[vs[1].(int)]
	}).(FrontendIPConfigurationResponseOutput)
}

// GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.
type GatewayCustomBgpIpAddressIpConfiguration struct {
	// The custom BgpPeeringAddress which belongs to IpconfigurationId.
	CustomBgpIpAddress string `pulumi:"customBgpIpAddress"`
	// The IpconfigurationId of ipconfiguration which belongs to gateway.
	IpConfigurationId string `pulumi:"ipConfigurationId"`
}

// GatewayCustomBgpIpAddressIpConfigurationInput is an input type that accepts GatewayCustomBgpIpAddressIpConfigurationArgs and GatewayCustomBgpIpAddressIpConfigurationOutput values.
// You can construct a concrete instance of `GatewayCustomBgpIpAddressIpConfigurationInput` via:
//
//	GatewayCustomBgpIpAddressIpConfigurationArgs{...}
type GatewayCustomBgpIpAddressIpConfigurationInput interface {
	pulumi.Input

	ToGatewayCustomBgpIpAddressIpConfigurationOutput() GatewayCustomBgpIpAddressIpConfigurationOutput
	ToGatewayCustomBgpIpAddressIpConfigurationOutputWithContext(context.Context) GatewayCustomBgpIpAddressIpConfigurationOutput
}

// GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.
type GatewayCustomBgpIpAddressIpConfigurationArgs struct {
	// The custom BgpPeeringAddress which belongs to IpconfigurationId.
	CustomBgpIpAddress pulumi.StringInput `pulumi:"customBgpIpAddress"`
	// The IpconfigurationId of ipconfiguration which belongs to gateway.
	IpConfigurationId pulumi.StringInput `pulumi:"ipConfigurationId"`
}

func (GatewayCustomBgpIpAddressIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCustomBgpIpAddressIpConfiguration)(nil)).Elem()
}

func (i GatewayCustomBgpIpAddressIpConfigurationArgs) ToGatewayCustomBgpIpAddressIpConfigurationOutput() GatewayCustomBgpIpAddressIpConfigurationOutput {
	return i.ToGatewayCustomBgpIpAddressIpConfigurationOutputWithContext(context.Background())
}

func (i GatewayCustomBgpIpAddressIpConfigurationArgs) ToGatewayCustomBgpIpAddressIpConfigurationOutputWithContext(ctx context.Context) GatewayCustomBgpIpAddressIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomBgpIpAddressIpConfigurationOutput)
}

// GatewayCustomBgpIpAddressIpConfigurationArrayInput is an input type that accepts GatewayCustomBgpIpAddressIpConfigurationArray and GatewayCustomBgpIpAddressIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GatewayCustomBgpIpAddressIpConfigurationArrayInput` via:
//
//	GatewayCustomBgpIpAddressIpConfigurationArray{ GatewayCustomBgpIpAddressIpConfigurationArgs{...} }
type GatewayCustomBgpIpAddressIpConfigurationArrayInput interface {
	pulumi.Input

	ToGatewayCustomBgpIpAddressIpConfigurationArrayOutput() GatewayCustomBgpIpAddressIpConfigurationArrayOutput
	ToGatewayCustomBgpIpAddressIpConfigurationArrayOutputWithContext(context.Context) GatewayCustomBgpIpAddressIpConfigurationArrayOutput
}

type GatewayCustomBgpIpAddressIpConfigurationArray []GatewayCustomBgpIpAddressIpConfigurationInput

func (GatewayCustomBgpIpAddressIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayCustomBgpIpAddressIpConfiguration)(nil)).Elem()
}

func (i GatewayCustomBgpIpAddressIpConfigurationArray) ToGatewayCustomBgpIpAddressIpConfigurationArrayOutput() GatewayCustomBgpIpAddressIpConfigurationArrayOutput {
	return i.ToGatewayCustomBgpIpAddressIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GatewayCustomBgpIpAddressIpConfigurationArray) ToGatewayCustomBgpIpAddressIpConfigurationArrayOutputWithContext(ctx context.Context) GatewayCustomBgpIpAddressIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomBgpIpAddressIpConfigurationArrayOutput)
}

// GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.
type GatewayCustomBgpIpAddressIpConfigurationOutput struct{ *pulumi.OutputState }

func (GatewayCustomBgpIpAddressIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCustomBgpIpAddressIpConfiguration)(nil)).Elem()
}

func (o GatewayCustomBgpIpAddressIpConfigurationOutput) ToGatewayCustomBgpIpAddressIpConfigurationOutput() GatewayCustomBgpIpAddressIpConfigurationOutput {
	return o
}

func (o GatewayCustomBgpIpAddressIpConfigurationOutput) ToGatewayCustomBgpIpAddressIpConfigurationOutputWithContext(ctx context.Context) GatewayCustomBgpIpAddressIpConfigurationOutput {
	return o
}

// The custom BgpPeeringAddress which belongs to IpconfigurationId.
func (o GatewayCustomBgpIpAddressIpConfigurationOutput) CustomBgpIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayCustomBgpIpAddressIpConfiguration) string { return v.CustomBgpIpAddress }).(pulumi.StringOutput)
}

// The IpconfigurationId of ipconfiguration which belongs to gateway.
func (o GatewayCustomBgpIpAddressIpConfigurationOutput) IpConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayCustomBgpIpAddressIpConfiguration) string { return v.IpConfigurationId }).(pulumi.StringOutput)
}

type GatewayCustomBgpIpAddressIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GatewayCustomBgpIpAddressIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayCustomBgpIpAddressIpConfiguration)(nil)).Elem()
}

func (o GatewayCustomBgpIpAddressIpConfigurationArrayOutput) ToGatewayCustomBgpIpAddressIpConfigurationArrayOutput() GatewayCustomBgpIpAddressIpConfigurationArrayOutput {
	return o
}

func (o GatewayCustomBgpIpAddressIpConfigurationArrayOutput) ToGatewayCustomBgpIpAddressIpConfigurationArrayOutputWithContext(ctx context.Context) GatewayCustomBgpIpAddressIpConfigurationArrayOutput {
	return o
}

func (o GatewayCustomBgpIpAddressIpConfigurationArrayOutput) Index(i pulumi.IntInput) GatewayCustomBgpIpAddressIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayCustomBgpIpAddressIpConfiguration {
		return vs[0].([]GatewayCustomBgpIpAddressIpConfiguration)[vs[1].(int)]
	}).(GatewayCustomBgpIpAddressIpConfigurationOutput)
}

// GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.
type GatewayCustomBgpIpAddressIpConfigurationResponse struct {
	// The custom BgpPeeringAddress which belongs to IpconfigurationId.
	CustomBgpIpAddress string `pulumi:"customBgpIpAddress"`
	// The IpconfigurationId of ipconfiguration which belongs to gateway.
	IpConfigurationId string `pulumi:"ipConfigurationId"`
}

// GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.
type GatewayCustomBgpIpAddressIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GatewayCustomBgpIpAddressIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayCustomBgpIpAddressIpConfigurationResponse)(nil)).Elem()
}

func (o GatewayCustomBgpIpAddressIpConfigurationResponseOutput) ToGatewayCustomBgpIpAddressIpConfigurationResponseOutput() GatewayCustomBgpIpAddressIpConfigurationResponseOutput {
	return o
}

func (o GatewayCustomBgpIpAddressIpConfigurationResponseOutput) ToGatewayCustomBgpIpAddressIpConfigurationResponseOutputWithContext(ctx context.Context) GatewayCustomBgpIpAddressIpConfigurationResponseOutput {
	return o
}

// The custom BgpPeeringAddress which belongs to IpconfigurationId.
func (o GatewayCustomBgpIpAddressIpConfigurationResponseOutput) CustomBgpIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayCustomBgpIpAddressIpConfigurationResponse) string { return v.CustomBgpIpAddress }).(pulumi.StringOutput)
}

// The IpconfigurationId of ipconfiguration which belongs to gateway.
func (o GatewayCustomBgpIpAddressIpConfigurationResponseOutput) IpConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayCustomBgpIpAddressIpConfigurationResponse) string { return v.IpConfigurationId }).(pulumi.StringOutput)
}

type GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayCustomBgpIpAddressIpConfigurationResponse)(nil)).Elem()
}

func (o GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput) ToGatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput() GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput {
	return o
}

func (o GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput) ToGatewayCustomBgpIpAddressIpConfigurationResponseArrayOutputWithContext(ctx context.Context) GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput {
	return o
}

func (o GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) GatewayCustomBgpIpAddressIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayCustomBgpIpAddressIpConfigurationResponse {
		return vs[0].([]GatewayCustomBgpIpAddressIpConfigurationResponse)[vs[1].(int)]
	}).(GatewayCustomBgpIpAddressIpConfigurationResponseOutput)
}

// Gateway load balancer tunnel interface of a load balancer backend address pool.
type GatewayLoadBalancerTunnelInterface struct {
	// Identifier of gateway load balancer tunnel interface.
	Identifier *int `pulumi:"identifier"`
	// Port of gateway load balancer tunnel interface.
	Port *int `pulumi:"port"`
	// Protocol of gateway load balancer tunnel interface.
	Protocol *string `pulumi:"protocol"`
	// Traffic type of gateway load balancer tunnel interface.
	Type *string `pulumi:"type"`
}

// GatewayLoadBalancerTunnelInterfaceInput is an input type that accepts GatewayLoadBalancerTunnelInterfaceArgs and GatewayLoadBalancerTunnelInterfaceOutput values.
// You can construct a concrete instance of `GatewayLoadBalancerTunnelInterfaceInput` via:
//
//	GatewayLoadBalancerTunnelInterfaceArgs{...}
type GatewayLoadBalancerTunnelInterfaceInput interface {
	pulumi.Input

	ToGatewayLoadBalancerTunnelInterfaceOutput() GatewayLoadBalancerTunnelInterfaceOutput
	ToGatewayLoadBalancerTunnelInterfaceOutputWithContext(context.Context) GatewayLoadBalancerTunnelInterfaceOutput
}

// Gateway load balancer tunnel interface of a load balancer backend address pool.
type GatewayLoadBalancerTunnelInterfaceArgs struct {
	// Identifier of gateway load balancer tunnel interface.
	Identifier pulumi.IntPtrInput `pulumi:"identifier"`
	// Port of gateway load balancer tunnel interface.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol of gateway load balancer tunnel interface.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Traffic type of gateway load balancer tunnel interface.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GatewayLoadBalancerTunnelInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLoadBalancerTunnelInterface)(nil)).Elem()
}

func (i GatewayLoadBalancerTunnelInterfaceArgs) ToGatewayLoadBalancerTunnelInterfaceOutput() GatewayLoadBalancerTunnelInterfaceOutput {
	return i.ToGatewayLoadBalancerTunnelInterfaceOutputWithContext(context.Background())
}

func (i GatewayLoadBalancerTunnelInterfaceArgs) ToGatewayLoadBalancerTunnelInterfaceOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLoadBalancerTunnelInterfaceOutput)
}

// GatewayLoadBalancerTunnelInterfaceArrayInput is an input type that accepts GatewayLoadBalancerTunnelInterfaceArray and GatewayLoadBalancerTunnelInterfaceArrayOutput values.
// You can construct a concrete instance of `GatewayLoadBalancerTunnelInterfaceArrayInput` via:
//
//	GatewayLoadBalancerTunnelInterfaceArray{ GatewayLoadBalancerTunnelInterfaceArgs{...} }
type GatewayLoadBalancerTunnelInterfaceArrayInput interface {
	pulumi.Input

	ToGatewayLoadBalancerTunnelInterfaceArrayOutput() GatewayLoadBalancerTunnelInterfaceArrayOutput
	ToGatewayLoadBalancerTunnelInterfaceArrayOutputWithContext(context.Context) GatewayLoadBalancerTunnelInterfaceArrayOutput
}

type GatewayLoadBalancerTunnelInterfaceArray []GatewayLoadBalancerTunnelInterfaceInput

func (GatewayLoadBalancerTunnelInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayLoadBalancerTunnelInterface)(nil)).Elem()
}

func (i GatewayLoadBalancerTunnelInterfaceArray) ToGatewayLoadBalancerTunnelInterfaceArrayOutput() GatewayLoadBalancerTunnelInterfaceArrayOutput {
	return i.ToGatewayLoadBalancerTunnelInterfaceArrayOutputWithContext(context.Background())
}

func (i GatewayLoadBalancerTunnelInterfaceArray) ToGatewayLoadBalancerTunnelInterfaceArrayOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLoadBalancerTunnelInterfaceArrayOutput)
}

// Gateway load balancer tunnel interface of a load balancer backend address pool.
type GatewayLoadBalancerTunnelInterfaceOutput struct{ *pulumi.OutputState }

func (GatewayLoadBalancerTunnelInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLoadBalancerTunnelInterface)(nil)).Elem()
}

func (o GatewayLoadBalancerTunnelInterfaceOutput) ToGatewayLoadBalancerTunnelInterfaceOutput() GatewayLoadBalancerTunnelInterfaceOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceOutput) ToGatewayLoadBalancerTunnelInterfaceOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceOutput {
	return o
}

// Identifier of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceOutput) Identifier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterface) *int { return v.Identifier }).(pulumi.IntPtrOutput)
}

// Port of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterface) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterface) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Traffic type of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterface) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayLoadBalancerTunnelInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GatewayLoadBalancerTunnelInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayLoadBalancerTunnelInterface)(nil)).Elem()
}

func (o GatewayLoadBalancerTunnelInterfaceArrayOutput) ToGatewayLoadBalancerTunnelInterfaceArrayOutput() GatewayLoadBalancerTunnelInterfaceArrayOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceArrayOutput) ToGatewayLoadBalancerTunnelInterfaceArrayOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceArrayOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceArrayOutput) Index(i pulumi.IntInput) GatewayLoadBalancerTunnelInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayLoadBalancerTunnelInterface {
		return vs[0].([]GatewayLoadBalancerTunnelInterface)[vs[1].(int)]
	}).(GatewayLoadBalancerTunnelInterfaceOutput)
}

// Gateway load balancer tunnel interface of a load balancer backend address pool.
type GatewayLoadBalancerTunnelInterfaceResponse struct {
	// Identifier of gateway load balancer tunnel interface.
	Identifier *int `pulumi:"identifier"`
	// Port of gateway load balancer tunnel interface.
	Port *int `pulumi:"port"`
	// Protocol of gateway load balancer tunnel interface.
	Protocol *string `pulumi:"protocol"`
	// Traffic type of gateway load balancer tunnel interface.
	Type *string `pulumi:"type"`
}

// Gateway load balancer tunnel interface of a load balancer backend address pool.
type GatewayLoadBalancerTunnelInterfaceResponseOutput struct{ *pulumi.OutputState }

func (GatewayLoadBalancerTunnelInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLoadBalancerTunnelInterfaceResponse)(nil)).Elem()
}

func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) ToGatewayLoadBalancerTunnelInterfaceResponseOutput() GatewayLoadBalancerTunnelInterfaceResponseOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) ToGatewayLoadBalancerTunnelInterfaceResponseOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceResponseOutput {
	return o
}

// Identifier of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Identifier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *int { return v.Identifier }).(pulumi.IntPtrOutput)
}

// Port of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Traffic type of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayLoadBalancerTunnelInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayLoadBalancerTunnelInterfaceResponse)(nil)).Elem()
}

func (o GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) ToGatewayLoadBalancerTunnelInterfaceResponseArrayOutput() GatewayLoadBalancerTunnelInterfaceResponseArrayOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) ToGatewayLoadBalancerTunnelInterfaceResponseArrayOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceResponseArrayOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) Index(i pulumi.IntInput) GatewayLoadBalancerTunnelInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayLoadBalancerTunnelInterfaceResponse {
		return vs[0].([]GatewayLoadBalancerTunnelInterfaceResponse)[vs[1].(int)]
	}).(GatewayLoadBalancerTunnelInterfaceResponseOutput)
}

// Gateway routing details.
type GatewayRouteResponse struct {
	// The route's AS path sequence.
	AsPath string `pulumi:"asPath"`
	// The gateway's local address.
	LocalAddress string `pulumi:"localAddress"`
	// The route's network prefix.
	Network string `pulumi:"network"`
	// The route's next hop.
	NextHop string `pulumi:"nextHop"`
	// The source this route was learned from.
	Origin string `pulumi:"origin"`
	// The peer this route was learned from.
	SourcePeer string `pulumi:"sourcePeer"`
	// The route's weight.
	Weight int `pulumi:"weight"`
}

// Gateway routing details.
type GatewayRouteResponseOutput struct{ *pulumi.OutputState }

func (GatewayRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteResponse)(nil)).Elem()
}

func (o GatewayRouteResponseOutput) ToGatewayRouteResponseOutput() GatewayRouteResponseOutput {
	return o
}

func (o GatewayRouteResponseOutput) ToGatewayRouteResponseOutputWithContext(ctx context.Context) GatewayRouteResponseOutput {
	return o
}

// The route's AS path sequence.
func (o GatewayRouteResponseOutput) AsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.AsPath }).(pulumi.StringOutput)
}

// The gateway's local address.
func (o GatewayRouteResponseOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.LocalAddress }).(pulumi.StringOutput)
}

// The route's network prefix.
func (o GatewayRouteResponseOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.Network }).(pulumi.StringOutput)
}

// The route's next hop.
func (o GatewayRouteResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

// The source this route was learned from.
func (o GatewayRouteResponseOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.Origin }).(pulumi.StringOutput)
}

// The peer this route was learned from.
func (o GatewayRouteResponseOutput) SourcePeer() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.SourcePeer }).(pulumi.StringOutput)
}

// The route's weight.
func (o GatewayRouteResponseOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteResponse) int { return v.Weight }).(pulumi.IntOutput)
}

type GatewayRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteResponse)(nil)).Elem()
}

func (o GatewayRouteResponseArrayOutput) ToGatewayRouteResponseArrayOutput() GatewayRouteResponseArrayOutput {
	return o
}

func (o GatewayRouteResponseArrayOutput) ToGatewayRouteResponseArrayOutputWithContext(ctx context.Context) GatewayRouteResponseArrayOutput {
	return o
}

func (o GatewayRouteResponseArrayOutput) Index(i pulumi.IntInput) GatewayRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteResponse {
		return vs[0].([]GatewayRouteResponse)[vs[1].(int)]
	}).(GatewayRouteResponseOutput)
}

// Define user session identifier group by clauses.
type GroupByUserSession struct {
	// List of group by clause variables.
	GroupByVariables []GroupByVariable `pulumi:"groupByVariables"`
}

// GroupByUserSessionInput is an input type that accepts GroupByUserSessionArgs and GroupByUserSessionOutput values.
// You can construct a concrete instance of `GroupByUserSessionInput` via:
//
//	GroupByUserSessionArgs{...}
type GroupByUserSessionInput interface {
	pulumi.Input

	ToGroupByUserSessionOutput() GroupByUserSessionOutput
	ToGroupByUserSessionOutputWithContext(context.Context) GroupByUserSessionOutput
}

// Define user session identifier group by clauses.
type GroupByUserSessionArgs struct {
	// List of group by clause variables.
	GroupByVariables GroupByVariableArrayInput `pulumi:"groupByVariables"`
}

func (GroupByUserSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupByUserSession)(nil)).Elem()
}

func (i GroupByUserSessionArgs) ToGroupByUserSessionOutput() GroupByUserSessionOutput {
	return i.ToGroupByUserSessionOutputWithContext(context.Background())
}

func (i GroupByUserSessionArgs) ToGroupByUserSessionOutputWithContext(ctx context.Context) GroupByUserSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupByUserSessionOutput)
}

// GroupByUserSessionArrayInput is an input type that accepts GroupByUserSessionArray and GroupByUserSessionArrayOutput values.
// You can construct a concrete instance of `GroupByUserSessionArrayInput` via:
//
//	GroupByUserSessionArray{ GroupByUserSessionArgs{...} }
type GroupByUserSessionArrayInput interface {
	pulumi.Input

	ToGroupByUserSessionArrayOutput() GroupByUserSessionArrayOutput
	ToGroupByUserSessionArrayOutputWithContext(context.Context) GroupByUserSessionArrayOutput
}

type GroupByUserSessionArray []GroupByUserSessionInput

func (GroupByUserSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupByUserSession)(nil)).Elem()
}

func (i GroupByUserSessionArray) ToGroupByUserSessionArrayOutput() GroupByUserSessionArrayOutput {
	return i.ToGroupByUserSessionArrayOutputWithContext(context.Background())
}

func (i GroupByUserSessionArray) ToGroupByUserSessionArrayOutputWithContext(ctx context.Context) GroupByUserSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupByUserSessionArrayOutput)
}

// Define user session identifier group by clauses.
type GroupByUserSessionOutput struct{ *pulumi.OutputState }

func (GroupByUserSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupByUserSession)(nil)).Elem()
}

func (o GroupByUserSessionOutput) ToGroupByUserSessionOutput() GroupByUserSessionOutput {
	return o
}

func (o GroupByUserSessionOutput) ToGroupByUserSessionOutputWithContext(ctx context.Context) GroupByUserSessionOutput {
	return o
}

// List of group by clause variables.
func (o GroupByUserSessionOutput) GroupByVariables() GroupByVariableArrayOutput {
	return o.ApplyT(func(v GroupByUserSession) []GroupByVariable { return v.GroupByVariables }).(GroupByVariableArrayOutput)
}

type GroupByUserSessionArrayOutput struct{ *pulumi.OutputState }

func (GroupByUserSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupByUserSession)(nil)).Elem()
}

func (o GroupByUserSessionArrayOutput) ToGroupByUserSessionArrayOutput() GroupByUserSessionArrayOutput {
	return o
}

func (o GroupByUserSessionArrayOutput) ToGroupByUserSessionArrayOutputWithContext(ctx context.Context) GroupByUserSessionArrayOutput {
	return o
}

func (o GroupByUserSessionArrayOutput) Index(i pulumi.IntInput) GroupByUserSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupByUserSession {
		return vs[0].([]GroupByUserSession)[vs[1].(int)]
	}).(GroupByUserSessionOutput)
}

// Define user session identifier group by clauses.
type GroupByUserSessionResponse struct {
	// List of group by clause variables.
	GroupByVariables []GroupByVariableResponse `pulumi:"groupByVariables"`
}

// Define user session identifier group by clauses.
type GroupByUserSessionResponseOutput struct{ *pulumi.OutputState }

func (GroupByUserSessionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupByUserSessionResponse)(nil)).Elem()
}

func (o GroupByUserSessionResponseOutput) ToGroupByUserSessionResponseOutput() GroupByUserSessionResponseOutput {
	return o
}

func (o GroupByUserSessionResponseOutput) ToGroupByUserSessionResponseOutputWithContext(ctx context.Context) GroupByUserSessionResponseOutput {
	return o
}

// List of group by clause variables.
func (o GroupByUserSessionResponseOutput) GroupByVariables() GroupByVariableResponseArrayOutput {
	return o.ApplyT(func(v GroupByUserSessionResponse) []GroupByVariableResponse { return v.GroupByVariables }).(GroupByVariableResponseArrayOutput)
}

type GroupByUserSessionResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupByUserSessionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupByUserSessionResponse)(nil)).Elem()
}

func (o GroupByUserSessionResponseArrayOutput) ToGroupByUserSessionResponseArrayOutput() GroupByUserSessionResponseArrayOutput {
	return o
}

func (o GroupByUserSessionResponseArrayOutput) ToGroupByUserSessionResponseArrayOutputWithContext(ctx context.Context) GroupByUserSessionResponseArrayOutput {
	return o
}

func (o GroupByUserSessionResponseArrayOutput) Index(i pulumi.IntInput) GroupByUserSessionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupByUserSessionResponse {
		return vs[0].([]GroupByUserSessionResponse)[vs[1].(int)]
	}).(GroupByUserSessionResponseOutput)
}

// Define user session group by clause variables.
type GroupByVariable struct {
	// User Session clause variable.
	VariableName string `pulumi:"variableName"`
}

// GroupByVariableInput is an input type that accepts GroupByVariableArgs and GroupByVariableOutput values.
// You can construct a concrete instance of `GroupByVariableInput` via:
//
//	GroupByVariableArgs{...}
type GroupByVariableInput interface {
	pulumi.Input

	ToGroupByVariableOutput() GroupByVariableOutput
	ToGroupByVariableOutputWithContext(context.Context) GroupByVariableOutput
}

// Define user session group by clause variables.
type GroupByVariableArgs struct {
	// User Session clause variable.
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (GroupByVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupByVariable)(nil)).Elem()
}

func (i GroupByVariableArgs) ToGroupByVariableOutput() GroupByVariableOutput {
	return i.ToGroupByVariableOutputWithContext(context.Background())
}

func (i GroupByVariableArgs) ToGroupByVariableOutputWithContext(ctx context.Context) GroupByVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupByVariableOutput)
}

// GroupByVariableArrayInput is an input type that accepts GroupByVariableArray and GroupByVariableArrayOutput values.
// You can construct a concrete instance of `GroupByVariableArrayInput` via:
//
//	GroupByVariableArray{ GroupByVariableArgs{...} }
type GroupByVariableArrayInput interface {
	pulumi.Input

	ToGroupByVariableArrayOutput() GroupByVariableArrayOutput
	ToGroupByVariableArrayOutputWithContext(context.Context) GroupByVariableArrayOutput
}

type GroupByVariableArray []GroupByVariableInput

func (GroupByVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupByVariable)(nil)).Elem()
}

func (i GroupByVariableArray) ToGroupByVariableArrayOutput() GroupByVariableArrayOutput {
	return i.ToGroupByVariableArrayOutputWithContext(context.Background())
}

func (i GroupByVariableArray) ToGroupByVariableArrayOutputWithContext(ctx context.Context) GroupByVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupByVariableArrayOutput)
}

// Define user session group by clause variables.
type GroupByVariableOutput struct{ *pulumi.OutputState }

func (GroupByVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupByVariable)(nil)).Elem()
}

func (o GroupByVariableOutput) ToGroupByVariableOutput() GroupByVariableOutput {
	return o
}

func (o GroupByVariableOutput) ToGroupByVariableOutputWithContext(ctx context.Context) GroupByVariableOutput {
	return o
}

// User Session clause variable.
func (o GroupByVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupByVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type GroupByVariableArrayOutput struct{ *pulumi.OutputState }

func (GroupByVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupByVariable)(nil)).Elem()
}

func (o GroupByVariableArrayOutput) ToGroupByVariableArrayOutput() GroupByVariableArrayOutput {
	return o
}

func (o GroupByVariableArrayOutput) ToGroupByVariableArrayOutputWithContext(ctx context.Context) GroupByVariableArrayOutput {
	return o
}

func (o GroupByVariableArrayOutput) Index(i pulumi.IntInput) GroupByVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupByVariable {
		return vs[0].([]GroupByVariable)[vs[1].(int)]
	}).(GroupByVariableOutput)
}

// Define user session group by clause variables.
type GroupByVariableResponse struct {
	// User Session clause variable.
	VariableName string `pulumi:"variableName"`
}

// Define user session group by clause variables.
type GroupByVariableResponseOutput struct{ *pulumi.OutputState }

func (GroupByVariableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupByVariableResponse)(nil)).Elem()
}

func (o GroupByVariableResponseOutput) ToGroupByVariableResponseOutput() GroupByVariableResponseOutput {
	return o
}

func (o GroupByVariableResponseOutput) ToGroupByVariableResponseOutputWithContext(ctx context.Context) GroupByVariableResponseOutput {
	return o
}

// User Session clause variable.
func (o GroupByVariableResponseOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupByVariableResponse) string { return v.VariableName }).(pulumi.StringOutput)
}

type GroupByVariableResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupByVariableResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupByVariableResponse)(nil)).Elem()
}

func (o GroupByVariableResponseArrayOutput) ToGroupByVariableResponseArrayOutput() GroupByVariableResponseArrayOutput {
	return o
}

func (o GroupByVariableResponseArrayOutput) ToGroupByVariableResponseArrayOutputWithContext(ctx context.Context) GroupByVariableResponseArrayOutput {
	return o
}

func (o GroupByVariableResponseArrayOutput) Index(i pulumi.IntInput) GroupByVariableResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupByVariableResponse {
		return vs[0].([]GroupByVariableResponse)[vs[1].(int)]
	}).(GroupByVariableResponseOutput)
}

// GroupMembers Item.
type GroupMembersItemResponse struct {
	// Resource Id.
	ResourceId *string `pulumi:"resourceId"`
}

// GroupMembers Item.
type GroupMembersItemResponseOutput struct{ *pulumi.OutputState }

func (GroupMembersItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMembersItemResponse)(nil)).Elem()
}

func (o GroupMembersItemResponseOutput) ToGroupMembersItemResponseOutput() GroupMembersItemResponseOutput {
	return o
}

func (o GroupMembersItemResponseOutput) ToGroupMembersItemResponseOutputWithContext(ctx context.Context) GroupMembersItemResponseOutput {
	return o
}

// Resource Id.
func (o GroupMembersItemResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMembersItemResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type GroupMembersItemResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupMembersItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMembersItemResponse)(nil)).Elem()
}

func (o GroupMembersItemResponseArrayOutput) ToGroupMembersItemResponseArrayOutput() GroupMembersItemResponseArrayOutput {
	return o
}

func (o GroupMembersItemResponseArrayOutput) ToGroupMembersItemResponseArrayOutputWithContext(ctx context.Context) GroupMembersItemResponseArrayOutput {
	return o
}

func (o GroupMembersItemResponseArrayOutput) Index(i pulumi.IntInput) GroupMembersItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMembersItemResponse {
		return vs[0].([]GroupMembersItemResponse)[vs[1].(int)]
	}).(GroupMembersItemResponseOutput)
}

// The HTTP header.
type HTTPHeader struct {
	// The name in HTTP header.
	Name *string `pulumi:"name"`
	// The value in HTTP header.
	Value *string `pulumi:"value"`
}

// HTTPHeaderInput is an input type that accepts HTTPHeaderArgs and HTTPHeaderOutput values.
// You can construct a concrete instance of `HTTPHeaderInput` via:
//
//	HTTPHeaderArgs{...}
type HTTPHeaderInput interface {
	pulumi.Input

	ToHTTPHeaderOutput() HTTPHeaderOutput
	ToHTTPHeaderOutputWithContext(context.Context) HTTPHeaderOutput
}

// The HTTP header.
type HTTPHeaderArgs struct {
	// The name in HTTP header.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value in HTTP header.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HTTPHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHeader)(nil)).Elem()
}

func (i HTTPHeaderArgs) ToHTTPHeaderOutput() HTTPHeaderOutput {
	return i.ToHTTPHeaderOutputWithContext(context.Background())
}

func (i HTTPHeaderArgs) ToHTTPHeaderOutputWithContext(ctx context.Context) HTTPHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPHeaderOutput)
}

// HTTPHeaderArrayInput is an input type that accepts HTTPHeaderArray and HTTPHeaderArrayOutput values.
// You can construct a concrete instance of `HTTPHeaderArrayInput` via:
//
//	HTTPHeaderArray{ HTTPHeaderArgs{...} }
type HTTPHeaderArrayInput interface {
	pulumi.Input

	ToHTTPHeaderArrayOutput() HTTPHeaderArrayOutput
	ToHTTPHeaderArrayOutputWithContext(context.Context) HTTPHeaderArrayOutput
}

type HTTPHeaderArray []HTTPHeaderInput

func (HTTPHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HTTPHeader)(nil)).Elem()
}

func (i HTTPHeaderArray) ToHTTPHeaderArrayOutput() HTTPHeaderArrayOutput {
	return i.ToHTTPHeaderArrayOutputWithContext(context.Background())
}

func (i HTTPHeaderArray) ToHTTPHeaderArrayOutputWithContext(ctx context.Context) HTTPHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPHeaderArrayOutput)
}

// The HTTP header.
type HTTPHeaderOutput struct{ *pulumi.OutputState }

func (HTTPHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHeader)(nil)).Elem()
}

func (o HTTPHeaderOutput) ToHTTPHeaderOutput() HTTPHeaderOutput {
	return o
}

func (o HTTPHeaderOutput) ToHTTPHeaderOutputWithContext(ctx context.Context) HTTPHeaderOutput {
	return o
}

// The name in HTTP header.
func (o HTTPHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value in HTTP header.
func (o HTTPHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HTTPHeaderArrayOutput struct{ *pulumi.OutputState }

func (HTTPHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HTTPHeader)(nil)).Elem()
}

func (o HTTPHeaderArrayOutput) ToHTTPHeaderArrayOutput() HTTPHeaderArrayOutput {
	return o
}

func (o HTTPHeaderArrayOutput) ToHTTPHeaderArrayOutputWithContext(ctx context.Context) HTTPHeaderArrayOutput {
	return o
}

func (o HTTPHeaderArrayOutput) Index(i pulumi.IntInput) HTTPHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HTTPHeader {
		return vs[0].([]HTTPHeader)[vs[1].(int)]
	}).(HTTPHeaderOutput)
}

// The HTTP header.
type HTTPHeaderResponse struct {
	// The name in HTTP header.
	Name *string `pulumi:"name"`
	// The value in HTTP header.
	Value *string `pulumi:"value"`
}

// The HTTP header.
type HTTPHeaderResponseOutput struct{ *pulumi.OutputState }

func (HTTPHeaderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHeaderResponse)(nil)).Elem()
}

func (o HTTPHeaderResponseOutput) ToHTTPHeaderResponseOutput() HTTPHeaderResponseOutput {
	return o
}

func (o HTTPHeaderResponseOutput) ToHTTPHeaderResponseOutputWithContext(ctx context.Context) HTTPHeaderResponseOutput {
	return o
}

// The name in HTTP header.
func (o HTTPHeaderResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeaderResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value in HTTP header.
func (o HTTPHeaderResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeaderResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HTTPHeaderResponseArrayOutput struct{ *pulumi.OutputState }

func (HTTPHeaderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HTTPHeaderResponse)(nil)).Elem()
}

func (o HTTPHeaderResponseArrayOutput) ToHTTPHeaderResponseArrayOutput() HTTPHeaderResponseArrayOutput {
	return o
}

func (o HTTPHeaderResponseArrayOutput) ToHTTPHeaderResponseArrayOutputWithContext(ctx context.Context) HTTPHeaderResponseArrayOutput {
	return o
}

func (o HTTPHeaderResponseArrayOutput) Index(i pulumi.IntInput) HTTPHeaderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HTTPHeaderResponse {
		return vs[0].([]HTTPHeaderResponse)[vs[1].(int)]
	}).(HTTPHeaderResponseOutput)
}

// An action that can manipulate an http header.
type HeaderAction struct {
	// Which type of manipulation to apply to the header.
	HeaderActionType string `pulumi:"headerActionType"`
	// The name of the header this action will apply to.
	HeaderName string `pulumi:"headerName"`
	// The value to update the given header name with. This value is not used if the actionType is Delete.
	Value *string `pulumi:"value"`
}

// HeaderActionInput is an input type that accepts HeaderActionArgs and HeaderActionOutput values.
// You can construct a concrete instance of `HeaderActionInput` via:
//
//	HeaderActionArgs{...}
type HeaderActionInput interface {
	pulumi.Input

	ToHeaderActionOutput() HeaderActionOutput
	ToHeaderActionOutputWithContext(context.Context) HeaderActionOutput
}

// An action that can manipulate an http header.
type HeaderActionArgs struct {
	// Which type of manipulation to apply to the header.
	HeaderActionType pulumi.StringInput `pulumi:"headerActionType"`
	// The name of the header this action will apply to.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// The value to update the given header name with. This value is not used if the actionType is Delete.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderAction)(nil)).Elem()
}

func (i HeaderActionArgs) ToHeaderActionOutput() HeaderActionOutput {
	return i.ToHeaderActionOutputWithContext(context.Background())
}

func (i HeaderActionArgs) ToHeaderActionOutputWithContext(ctx context.Context) HeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionOutput)
}

// HeaderActionArrayInput is an input type that accepts HeaderActionArray and HeaderActionArrayOutput values.
// You can construct a concrete instance of `HeaderActionArrayInput` via:
//
//	HeaderActionArray{ HeaderActionArgs{...} }
type HeaderActionArrayInput interface {
	pulumi.Input

	ToHeaderActionArrayOutput() HeaderActionArrayOutput
	ToHeaderActionArrayOutputWithContext(context.Context) HeaderActionArrayOutput
}

type HeaderActionArray []HeaderActionInput

func (HeaderActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderAction)(nil)).Elem()
}

func (i HeaderActionArray) ToHeaderActionArrayOutput() HeaderActionArrayOutput {
	return i.ToHeaderActionArrayOutputWithContext(context.Background())
}

func (i HeaderActionArray) ToHeaderActionArrayOutputWithContext(ctx context.Context) HeaderActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionArrayOutput)
}

// An action that can manipulate an http header.
type HeaderActionOutput struct{ *pulumi.OutputState }

func (HeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderAction)(nil)).Elem()
}

func (o HeaderActionOutput) ToHeaderActionOutput() HeaderActionOutput {
	return o
}

func (o HeaderActionOutput) ToHeaderActionOutputWithContext(ctx context.Context) HeaderActionOutput {
	return o
}

// Which type of manipulation to apply to the header.
func (o HeaderActionOutput) HeaderActionType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderAction) string { return v.HeaderActionType }).(pulumi.StringOutput)
}

// The name of the header this action will apply to.
func (o HeaderActionOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderAction) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The value to update the given header name with. This value is not used if the actionType is Delete.
func (o HeaderActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HeaderActionArrayOutput struct{ *pulumi.OutputState }

func (HeaderActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderAction)(nil)).Elem()
}

func (o HeaderActionArrayOutput) ToHeaderActionArrayOutput() HeaderActionArrayOutput {
	return o
}

func (o HeaderActionArrayOutput) ToHeaderActionArrayOutputWithContext(ctx context.Context) HeaderActionArrayOutput {
	return o
}

func (o HeaderActionArrayOutput) Index(i pulumi.IntInput) HeaderActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeaderAction {
		return vs[0].([]HeaderAction)[vs[1].(int)]
	}).(HeaderActionOutput)
}

// An action that can manipulate an http header.
type HeaderActionResponse struct {
	// Which type of manipulation to apply to the header.
	HeaderActionType string `pulumi:"headerActionType"`
	// The name of the header this action will apply to.
	HeaderName string `pulumi:"headerName"`
	// The value to update the given header name with. This value is not used if the actionType is Delete.
	Value *string `pulumi:"value"`
}

// An action that can manipulate an http header.
type HeaderActionResponseOutput struct{ *pulumi.OutputState }

func (HeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionResponse)(nil)).Elem()
}

func (o HeaderActionResponseOutput) ToHeaderActionResponseOutput() HeaderActionResponseOutput {
	return o
}

func (o HeaderActionResponseOutput) ToHeaderActionResponseOutputWithContext(ctx context.Context) HeaderActionResponseOutput {
	return o
}

// Which type of manipulation to apply to the header.
func (o HeaderActionResponseOutput) HeaderActionType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionResponse) string { return v.HeaderActionType }).(pulumi.StringOutput)
}

// The name of the header this action will apply to.
func (o HeaderActionResponseOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionResponse) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The value to update the given header name with. This value is not used if the actionType is Delete.
func (o HeaderActionResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HeaderActionResponseArrayOutput struct{ *pulumi.OutputState }

func (HeaderActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderActionResponse)(nil)).Elem()
}

func (o HeaderActionResponseArrayOutput) ToHeaderActionResponseArrayOutput() HeaderActionResponseArrayOutput {
	return o
}

func (o HeaderActionResponseArrayOutput) ToHeaderActionResponseArrayOutputWithContext(ctx context.Context) HeaderActionResponseArrayOutput {
	return o
}

func (o HeaderActionResponseArrayOutput) Index(i pulumi.IntInput) HeaderActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeaderActionResponse {
		return vs[0].([]HeaderActionResponse)[vs[1].(int)]
	}).(HeaderActionResponseOutput)
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModel struct {
	// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
	EnabledState *string `pulumi:"enabledState"`
	// Configures which HTTP method to use to probe the backends defined under backendPools.
	HealthProbeMethod *string `pulumi:"healthProbeMethod"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The number of seconds between health probes.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The path to use for the health probe. Default is /
	Path *string `pulumi:"path"`
	// Protocol scheme to use for this probe
	Protocol *string `pulumi:"protocol"`
}

// Defaults sets the appropriate defaults for HealthProbeSettingsModel
func (val *HealthProbeSettingsModel) Defaults() *HealthProbeSettingsModel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.HealthProbeMethod == nil {
		healthProbeMethod_ := "HEAD"
		tmp.HealthProbeMethod = &healthProbeMethod_
	}
	return &tmp
}

// HealthProbeSettingsModelInput is an input type that accepts HealthProbeSettingsModelArgs and HealthProbeSettingsModelOutput values.
// You can construct a concrete instance of `HealthProbeSettingsModelInput` via:
//
//	HealthProbeSettingsModelArgs{...}
type HealthProbeSettingsModelInput interface {
	pulumi.Input

	ToHealthProbeSettingsModelOutput() HealthProbeSettingsModelOutput
	ToHealthProbeSettingsModelOutputWithContext(context.Context) HealthProbeSettingsModelOutput
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelArgs struct {
	// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Configures which HTTP method to use to probe the backends defined under backendPools.
	HealthProbeMethod pulumi.StringPtrInput `pulumi:"healthProbeMethod"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The number of seconds between health probes.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The path to use for the health probe. Default is /
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Protocol scheme to use for this probe
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

// Defaults sets the appropriate defaults for HealthProbeSettingsModelArgs
func (val *HealthProbeSettingsModelArgs) Defaults() *HealthProbeSettingsModelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.HealthProbeMethod == nil {
		tmp.HealthProbeMethod = pulumi.StringPtr("HEAD")
	}
	return &tmp
}
func (HealthProbeSettingsModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeSettingsModel)(nil)).Elem()
}

func (i HealthProbeSettingsModelArgs) ToHealthProbeSettingsModelOutput() HealthProbeSettingsModelOutput {
	return i.ToHealthProbeSettingsModelOutputWithContext(context.Background())
}

func (i HealthProbeSettingsModelArgs) ToHealthProbeSettingsModelOutputWithContext(ctx context.Context) HealthProbeSettingsModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeSettingsModelOutput)
}

// HealthProbeSettingsModelArrayInput is an input type that accepts HealthProbeSettingsModelArray and HealthProbeSettingsModelArrayOutput values.
// You can construct a concrete instance of `HealthProbeSettingsModelArrayInput` via:
//
//	HealthProbeSettingsModelArray{ HealthProbeSettingsModelArgs{...} }
type HealthProbeSettingsModelArrayInput interface {
	pulumi.Input

	ToHealthProbeSettingsModelArrayOutput() HealthProbeSettingsModelArrayOutput
	ToHealthProbeSettingsModelArrayOutputWithContext(context.Context) HealthProbeSettingsModelArrayOutput
}

type HealthProbeSettingsModelArray []HealthProbeSettingsModelInput

func (HealthProbeSettingsModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthProbeSettingsModel)(nil)).Elem()
}

func (i HealthProbeSettingsModelArray) ToHealthProbeSettingsModelArrayOutput() HealthProbeSettingsModelArrayOutput {
	return i.ToHealthProbeSettingsModelArrayOutputWithContext(context.Background())
}

func (i HealthProbeSettingsModelArray) ToHealthProbeSettingsModelArrayOutputWithContext(ctx context.Context) HealthProbeSettingsModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeSettingsModelArrayOutput)
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeSettingsModel)(nil)).Elem()
}

func (o HealthProbeSettingsModelOutput) ToHealthProbeSettingsModelOutput() HealthProbeSettingsModelOutput {
	return o
}

func (o HealthProbeSettingsModelOutput) ToHealthProbeSettingsModelOutputWithContext(ctx context.Context) HealthProbeSettingsModelOutput {
	return o
}

// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
func (o HealthProbeSettingsModelOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Configures which HTTP method to use to probe the backends defined under backendPools.
func (o HealthProbeSettingsModelOutput) HealthProbeMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.HealthProbeMethod }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o HealthProbeSettingsModelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The number of seconds between health probes.
func (o HealthProbeSettingsModelOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Resource name.
func (o HealthProbeSettingsModelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The path to use for the health probe. Default is /
func (o HealthProbeSettingsModelOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Protocol scheme to use for this probe
func (o HealthProbeSettingsModelOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type HealthProbeSettingsModelArrayOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthProbeSettingsModel)(nil)).Elem()
}

func (o HealthProbeSettingsModelArrayOutput) ToHealthProbeSettingsModelArrayOutput() HealthProbeSettingsModelArrayOutput {
	return o
}

func (o HealthProbeSettingsModelArrayOutput) ToHealthProbeSettingsModelArrayOutputWithContext(ctx context.Context) HealthProbeSettingsModelArrayOutput {
	return o
}

func (o HealthProbeSettingsModelArrayOutput) Index(i pulumi.IntInput) HealthProbeSettingsModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthProbeSettingsModel {
		return vs[0].([]HealthProbeSettingsModel)[vs[1].(int)]
	}).(HealthProbeSettingsModelOutput)
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelResponse struct {
	// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
	EnabledState *string `pulumi:"enabledState"`
	// Configures which HTTP method to use to probe the backends defined under backendPools.
	HealthProbeMethod *string `pulumi:"healthProbeMethod"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The number of seconds between health probes.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The path to use for the health probe. Default is /
	Path *string `pulumi:"path"`
	// Protocol scheme to use for this probe
	Protocol *string `pulumi:"protocol"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for HealthProbeSettingsModelResponse
func (val *HealthProbeSettingsModelResponse) Defaults() *HealthProbeSettingsModelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.HealthProbeMethod == nil {
		healthProbeMethod_ := "HEAD"
		tmp.HealthProbeMethod = &healthProbeMethod_
	}
	return &tmp
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeSettingsModelResponse)(nil)).Elem()
}

func (o HealthProbeSettingsModelResponseOutput) ToHealthProbeSettingsModelResponseOutput() HealthProbeSettingsModelResponseOutput {
	return o
}

func (o HealthProbeSettingsModelResponseOutput) ToHealthProbeSettingsModelResponseOutputWithContext(ctx context.Context) HealthProbeSettingsModelResponseOutput {
	return o
}

// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
func (o HealthProbeSettingsModelResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Configures which HTTP method to use to probe the backends defined under backendPools.
func (o HealthProbeSettingsModelResponseOutput) HealthProbeMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.HealthProbeMethod }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o HealthProbeSettingsModelResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The number of seconds between health probes.
func (o HealthProbeSettingsModelResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Resource name.
func (o HealthProbeSettingsModelResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The path to use for the health probe. Default is /
func (o HealthProbeSettingsModelResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Protocol scheme to use for this probe
func (o HealthProbeSettingsModelResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o HealthProbeSettingsModelResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Resource type.
func (o HealthProbeSettingsModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HealthProbeSettingsModelResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthProbeSettingsModelResponse)(nil)).Elem()
}

func (o HealthProbeSettingsModelResponseArrayOutput) ToHealthProbeSettingsModelResponseArrayOutput() HealthProbeSettingsModelResponseArrayOutput {
	return o
}

func (o HealthProbeSettingsModelResponseArrayOutput) ToHealthProbeSettingsModelResponseArrayOutputWithContext(ctx context.Context) HealthProbeSettingsModelResponseArrayOutput {
	return o
}

func (o HealthProbeSettingsModelResponseArrayOutput) Index(i pulumi.IntInput) HealthProbeSettingsModelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthProbeSettingsModelResponse {
		return vs[0].([]HealthProbeSettingsModelResponse)[vs[1].(int)]
	}).(HealthProbeSettingsModelResponseOutput)
}

// Hub Item.
type Hub struct {
	// Resource Id.
	ResourceId *string `pulumi:"resourceId"`
	// Resource Type.
	ResourceType *string `pulumi:"resourceType"`
}

// HubInput is an input type that accepts HubArgs and HubOutput values.
// You can construct a concrete instance of `HubInput` via:
//
//	HubArgs{...}
type HubInput interface {
	pulumi.Input

	ToHubOutput() HubOutput
	ToHubOutputWithContext(context.Context) HubOutput
}

// Hub Item.
type HubArgs struct {
	// Resource Id.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Resource Type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (HubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Hub)(nil)).Elem()
}

func (i HubArgs) ToHubOutput() HubOutput {
	return i.ToHubOutputWithContext(context.Background())
}

func (i HubArgs) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubOutput)
}

// HubArrayInput is an input type that accepts HubArray and HubArrayOutput values.
// You can construct a concrete instance of `HubArrayInput` via:
//
//	HubArray{ HubArgs{...} }
type HubArrayInput interface {
	pulumi.Input

	ToHubArrayOutput() HubArrayOutput
	ToHubArrayOutputWithContext(context.Context) HubArrayOutput
}

type HubArray []HubInput

func (HubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Hub)(nil)).Elem()
}

func (i HubArray) ToHubArrayOutput() HubArrayOutput {
	return i.ToHubArrayOutputWithContext(context.Background())
}

func (i HubArray) ToHubArrayOutputWithContext(ctx context.Context) HubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubArrayOutput)
}

// Hub Item.
type HubOutput struct{ *pulumi.OutputState }

func (HubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Hub)(nil)).Elem()
}

func (o HubOutput) ToHubOutput() HubOutput {
	return o
}

func (o HubOutput) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return o
}

// Resource Id.
func (o HubOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Hub) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Resource Type.
func (o HubOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Hub) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type HubArrayOutput struct{ *pulumi.OutputState }

func (HubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Hub)(nil)).Elem()
}

func (o HubArrayOutput) ToHubArrayOutput() HubArrayOutput {
	return o
}

func (o HubArrayOutput) ToHubArrayOutputWithContext(ctx context.Context) HubArrayOutput {
	return o
}

func (o HubArrayOutput) Index(i pulumi.IntInput) HubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Hub {
		return vs[0].([]Hub)[vs[1].(int)]
	}).(HubOutput)
}

// IP addresses associated with azure firewall.
type HubIPAddresses struct {
	// Private IP Address associated with azure firewall.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Public IP addresses associated with azure firewall.
	PublicIPs *HubPublicIPAddresses `pulumi:"publicIPs"`
}

// HubIPAddressesInput is an input type that accepts HubIPAddressesArgs and HubIPAddressesOutput values.
// You can construct a concrete instance of `HubIPAddressesInput` via:
//
//	HubIPAddressesArgs{...}
type HubIPAddressesInput interface {
	pulumi.Input

	ToHubIPAddressesOutput() HubIPAddressesOutput
	ToHubIPAddressesOutputWithContext(context.Context) HubIPAddressesOutput
}

// IP addresses associated with azure firewall.
type HubIPAddressesArgs struct {
	// Private IP Address associated with azure firewall.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Public IP addresses associated with azure firewall.
	PublicIPs HubPublicIPAddressesPtrInput `pulumi:"publicIPs"`
}

func (HubIPAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubIPAddresses)(nil)).Elem()
}

func (i HubIPAddressesArgs) ToHubIPAddressesOutput() HubIPAddressesOutput {
	return i.ToHubIPAddressesOutputWithContext(context.Background())
}

func (i HubIPAddressesArgs) ToHubIPAddressesOutputWithContext(ctx context.Context) HubIPAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesOutput)
}

func (i HubIPAddressesArgs) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return i.ToHubIPAddressesPtrOutputWithContext(context.Background())
}

func (i HubIPAddressesArgs) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesOutput).ToHubIPAddressesPtrOutputWithContext(ctx)
}

// HubIPAddressesPtrInput is an input type that accepts HubIPAddressesArgs, HubIPAddressesPtr and HubIPAddressesPtrOutput values.
// You can construct a concrete instance of `HubIPAddressesPtrInput` via:
//
//	        HubIPAddressesArgs{...}
//
//	or:
//
//	        nil
type HubIPAddressesPtrInput interface {
	pulumi.Input

	ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput
	ToHubIPAddressesPtrOutputWithContext(context.Context) HubIPAddressesPtrOutput
}

type hubIPAddressesPtrType HubIPAddressesArgs

func HubIPAddressesPtr(v *HubIPAddressesArgs) HubIPAddressesPtrInput {
	return (*hubIPAddressesPtrType)(v)
}

func (*hubIPAddressesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubIPAddresses)(nil)).Elem()
}

func (i *hubIPAddressesPtrType) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return i.ToHubIPAddressesPtrOutputWithContext(context.Background())
}

func (i *hubIPAddressesPtrType) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesPtrOutput)
}

// IP addresses associated with azure firewall.
type HubIPAddressesOutput struct{ *pulumi.OutputState }

func (HubIPAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubIPAddresses)(nil)).Elem()
}

func (o HubIPAddressesOutput) ToHubIPAddressesOutput() HubIPAddressesOutput {
	return o
}

func (o HubIPAddressesOutput) ToHubIPAddressesOutputWithContext(ctx context.Context) HubIPAddressesOutput {
	return o
}

func (o HubIPAddressesOutput) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return o.ToHubIPAddressesPtrOutputWithContext(context.Background())
}

func (o HubIPAddressesOutput) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HubIPAddresses) *HubIPAddresses {
		return &v
	}).(HubIPAddressesPtrOutput)
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubIPAddresses) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesOutput) PublicIPs() HubPublicIPAddressesPtrOutput {
	return o.ApplyT(func(v HubIPAddresses) *HubPublicIPAddresses { return v.PublicIPs }).(HubPublicIPAddressesPtrOutput)
}

type HubIPAddressesPtrOutput struct{ *pulumi.OutputState }

func (HubIPAddressesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubIPAddresses)(nil)).Elem()
}

func (o HubIPAddressesPtrOutput) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return o
}

func (o HubIPAddressesPtrOutput) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return o
}

func (o HubIPAddressesPtrOutput) Elem() HubIPAddressesOutput {
	return o.ApplyT(func(v *HubIPAddresses) HubIPAddresses {
		if v != nil {
			return *v
		}
		var ret HubIPAddresses
		return ret
	}).(HubIPAddressesOutput)
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HubIPAddresses) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesPtrOutput) PublicIPs() HubPublicIPAddressesPtrOutput {
	return o.ApplyT(func(v *HubIPAddresses) *HubPublicIPAddresses {
		if v == nil {
			return nil
		}
		return v.PublicIPs
	}).(HubPublicIPAddressesPtrOutput)
}

// IP addresses associated with azure firewall.
type HubIPAddressesResponse struct {
	// Private IP Address associated with azure firewall.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Public IP addresses associated with azure firewall.
	PublicIPs *HubPublicIPAddressesResponse `pulumi:"publicIPs"`
}

// IP addresses associated with azure firewall.
type HubIPAddressesResponseOutput struct{ *pulumi.OutputState }

func (HubIPAddressesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubIPAddressesResponse)(nil)).Elem()
}

func (o HubIPAddressesResponseOutput) ToHubIPAddressesResponseOutput() HubIPAddressesResponseOutput {
	return o
}

func (o HubIPAddressesResponseOutput) ToHubIPAddressesResponseOutputWithContext(ctx context.Context) HubIPAddressesResponseOutput {
	return o
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubIPAddressesResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesResponseOutput) PublicIPs() HubPublicIPAddressesResponsePtrOutput {
	return o.ApplyT(func(v HubIPAddressesResponse) *HubPublicIPAddressesResponse { return v.PublicIPs }).(HubPublicIPAddressesResponsePtrOutput)
}

type HubIPAddressesResponsePtrOutput struct{ *pulumi.OutputState }

func (HubIPAddressesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubIPAddressesResponse)(nil)).Elem()
}

func (o HubIPAddressesResponsePtrOutput) ToHubIPAddressesResponsePtrOutput() HubIPAddressesResponsePtrOutput {
	return o
}

func (o HubIPAddressesResponsePtrOutput) ToHubIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubIPAddressesResponsePtrOutput {
	return o
}

func (o HubIPAddressesResponsePtrOutput) Elem() HubIPAddressesResponseOutput {
	return o.ApplyT(func(v *HubIPAddressesResponse) HubIPAddressesResponse {
		if v != nil {
			return *v
		}
		var ret HubIPAddressesResponse
		return ret
	}).(HubIPAddressesResponseOutput)
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HubIPAddressesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesResponsePtrOutput) PublicIPs() HubPublicIPAddressesResponsePtrOutput {
	return o.ApplyT(func(v *HubIPAddressesResponse) *HubPublicIPAddressesResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPs
	}).(HubPublicIPAddressesResponsePtrOutput)
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddresses struct {
	// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
	Addresses []AzureFirewallPublicIPAddress `pulumi:"addresses"`
	// The number of Public IP addresses associated with azure firewall.
	Count *int `pulumi:"count"`
}

// HubPublicIPAddressesInput is an input type that accepts HubPublicIPAddressesArgs and HubPublicIPAddressesOutput values.
// You can construct a concrete instance of `HubPublicIPAddressesInput` via:
//
//	HubPublicIPAddressesArgs{...}
type HubPublicIPAddressesInput interface {
	pulumi.Input

	ToHubPublicIPAddressesOutput() HubPublicIPAddressesOutput
	ToHubPublicIPAddressesOutputWithContext(context.Context) HubPublicIPAddressesOutput
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesArgs struct {
	// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
	Addresses AzureFirewallPublicIPAddressArrayInput `pulumi:"addresses"`
	// The number of Public IP addresses associated with azure firewall.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (HubPublicIPAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubPublicIPAddresses)(nil)).Elem()
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesOutput() HubPublicIPAddressesOutput {
	return i.ToHubPublicIPAddressesOutputWithContext(context.Background())
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesOutputWithContext(ctx context.Context) HubPublicIPAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesOutput)
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return i.ToHubPublicIPAddressesPtrOutputWithContext(context.Background())
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesOutput).ToHubPublicIPAddressesPtrOutputWithContext(ctx)
}

// HubPublicIPAddressesPtrInput is an input type that accepts HubPublicIPAddressesArgs, HubPublicIPAddressesPtr and HubPublicIPAddressesPtrOutput values.
// You can construct a concrete instance of `HubPublicIPAddressesPtrInput` via:
//
//	        HubPublicIPAddressesArgs{...}
//
//	or:
//
//	        nil
type HubPublicIPAddressesPtrInput interface {
	pulumi.Input

	ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput
	ToHubPublicIPAddressesPtrOutputWithContext(context.Context) HubPublicIPAddressesPtrOutput
}

type hubPublicIPAddressesPtrType HubPublicIPAddressesArgs

func HubPublicIPAddressesPtr(v *HubPublicIPAddressesArgs) HubPublicIPAddressesPtrInput {
	return (*hubPublicIPAddressesPtrType)(v)
}

func (*hubPublicIPAddressesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubPublicIPAddresses)(nil)).Elem()
}

func (i *hubPublicIPAddressesPtrType) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return i.ToHubPublicIPAddressesPtrOutputWithContext(context.Background())
}

func (i *hubPublicIPAddressesPtrType) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesPtrOutput)
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubPublicIPAddresses)(nil)).Elem()
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesOutput() HubPublicIPAddressesOutput {
	return o
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesOutputWithContext(ctx context.Context) HubPublicIPAddressesOutput {
	return o
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return o.ToHubPublicIPAddressesPtrOutputWithContext(context.Background())
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HubPublicIPAddresses) *HubPublicIPAddresses {
		return &v
	}).(HubPublicIPAddressesPtrOutput)
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesOutput) Addresses() AzureFirewallPublicIPAddressArrayOutput {
	return o.ApplyT(func(v HubPublicIPAddresses) []AzureFirewallPublicIPAddress { return v.Addresses }).(AzureFirewallPublicIPAddressArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HubPublicIPAddresses) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type HubPublicIPAddressesPtrOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubPublicIPAddresses)(nil)).Elem()
}

func (o HubPublicIPAddressesPtrOutput) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return o
}

func (o HubPublicIPAddressesPtrOutput) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return o
}

func (o HubPublicIPAddressesPtrOutput) Elem() HubPublicIPAddressesOutput {
	return o.ApplyT(func(v *HubPublicIPAddresses) HubPublicIPAddresses {
		if v != nil {
			return *v
		}
		var ret HubPublicIPAddresses
		return ret
	}).(HubPublicIPAddressesOutput)
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesPtrOutput) Addresses() AzureFirewallPublicIPAddressArrayOutput {
	return o.ApplyT(func(v *HubPublicIPAddresses) []AzureFirewallPublicIPAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(AzureFirewallPublicIPAddressArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HubPublicIPAddresses) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesResponse struct {
	// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
	Addresses []AzureFirewallPublicIPAddressResponse `pulumi:"addresses"`
	// The number of Public IP addresses associated with azure firewall.
	Count *int `pulumi:"count"`
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesResponseOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubPublicIPAddressesResponse)(nil)).Elem()
}

func (o HubPublicIPAddressesResponseOutput) ToHubPublicIPAddressesResponseOutput() HubPublicIPAddressesResponseOutput {
	return o
}

func (o HubPublicIPAddressesResponseOutput) ToHubPublicIPAddressesResponseOutputWithContext(ctx context.Context) HubPublicIPAddressesResponseOutput {
	return o
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesResponseOutput) Addresses() AzureFirewallPublicIPAddressResponseArrayOutput {
	return o.ApplyT(func(v HubPublicIPAddressesResponse) []AzureFirewallPublicIPAddressResponse { return v.Addresses }).(AzureFirewallPublicIPAddressResponseArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HubPublicIPAddressesResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type HubPublicIPAddressesResponsePtrOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubPublicIPAddressesResponse)(nil)).Elem()
}

func (o HubPublicIPAddressesResponsePtrOutput) ToHubPublicIPAddressesResponsePtrOutput() HubPublicIPAddressesResponsePtrOutput {
	return o
}

func (o HubPublicIPAddressesResponsePtrOutput) ToHubPublicIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubPublicIPAddressesResponsePtrOutput {
	return o
}

func (o HubPublicIPAddressesResponsePtrOutput) Elem() HubPublicIPAddressesResponseOutput {
	return o.ApplyT(func(v *HubPublicIPAddressesResponse) HubPublicIPAddressesResponse {
		if v != nil {
			return *v
		}
		var ret HubPublicIPAddressesResponse
		return ret
	}).(HubPublicIPAddressesResponseOutput)
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesResponsePtrOutput) Addresses() AzureFirewallPublicIPAddressResponseArrayOutput {
	return o.ApplyT(func(v *HubPublicIPAddressesResponse) []AzureFirewallPublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(AzureFirewallPublicIPAddressResponseArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HubPublicIPAddressesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Hub Item.
type HubResponse struct {
	// Resource Id.
	ResourceId *string `pulumi:"resourceId"`
	// Resource Type.
	ResourceType *string `pulumi:"resourceType"`
}

// Hub Item.
type HubResponseOutput struct{ *pulumi.OutputState }

func (HubResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubResponse)(nil)).Elem()
}

func (o HubResponseOutput) ToHubResponseOutput() HubResponseOutput {
	return o
}

func (o HubResponseOutput) ToHubResponseOutputWithContext(ctx context.Context) HubResponseOutput {
	return o
}

// Resource Id.
func (o HubResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Resource Type.
func (o HubResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type HubResponseArrayOutput struct{ *pulumi.OutputState }

func (HubResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubResponse)(nil)).Elem()
}

func (o HubResponseArrayOutput) ToHubResponseArrayOutput() HubResponseArrayOutput {
	return o
}

func (o HubResponseArrayOutput) ToHubResponseArrayOutputWithContext(ctx context.Context) HubResponseArrayOutput {
	return o
}

func (o HubResponseArrayOutput) Index(i pulumi.IntInput) HubResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubResponse {
		return vs[0].([]HubResponse)[vs[1].(int)]
	}).(HubResponseOutput)
}

// RouteTable route.
type HubRoute struct {
	// The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
	Name string `pulumi:"name"`
	// NextHop resource ID.
	NextHop string `pulumi:"nextHop"`
	// The type of next hop (eg: ResourceId).
	NextHopType string `pulumi:"nextHopType"`
}

// HubRouteInput is an input type that accepts HubRouteArgs and HubRouteOutput values.
// You can construct a concrete instance of `HubRouteInput` via:
//
//	HubRouteArgs{...}
type HubRouteInput interface {
	pulumi.Input

	ToHubRouteOutput() HubRouteOutput
	ToHubRouteOutputWithContext(context.Context) HubRouteOutput
}

// RouteTable route.
type HubRouteArgs struct {
	// The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType pulumi.StringInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
	Name pulumi.StringInput `pulumi:"name"`
	// NextHop resource ID.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The type of next hop (eg: ResourceId).
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (HubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRoute)(nil)).Elem()
}

func (i HubRouteArgs) ToHubRouteOutput() HubRouteOutput {
	return i.ToHubRouteOutputWithContext(context.Background())
}

func (i HubRouteArgs) ToHubRouteOutputWithContext(ctx context.Context) HubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRouteOutput)
}

// HubRouteArrayInput is an input type that accepts HubRouteArray and HubRouteArrayOutput values.
// You can construct a concrete instance of `HubRouteArrayInput` via:
//
//	HubRouteArray{ HubRouteArgs{...} }
type HubRouteArrayInput interface {
	pulumi.Input

	ToHubRouteArrayOutput() HubRouteArrayOutput
	ToHubRouteArrayOutputWithContext(context.Context) HubRouteArrayOutput
}

type HubRouteArray []HubRouteInput

func (HubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRoute)(nil)).Elem()
}

func (i HubRouteArray) ToHubRouteArrayOutput() HubRouteArrayOutput {
	return i.ToHubRouteArrayOutputWithContext(context.Background())
}

func (i HubRouteArray) ToHubRouteArrayOutputWithContext(ctx context.Context) HubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRouteArrayOutput)
}

// RouteTable route.
type HubRouteOutput struct{ *pulumi.OutputState }

func (HubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRoute)(nil)).Elem()
}

func (o HubRouteOutput) ToHubRouteOutput() HubRouteOutput {
	return o
}

func (o HubRouteOutput) ToHubRouteOutputWithContext(ctx context.Context) HubRouteOutput {
	return o
}

// The type of destinations (eg: CIDR, ResourceId, Service).
func (o HubRouteOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.DestinationType }).(pulumi.StringOutput)
}

// List of all destinations.
func (o HubRouteOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HubRoute) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
func (o HubRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.Name }).(pulumi.StringOutput)
}

// NextHop resource ID.
func (o HubRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

// The type of next hop (eg: ResourceId).
func (o HubRouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.NextHopType }).(pulumi.StringOutput)
}

type HubRouteArrayOutput struct{ *pulumi.OutputState }

func (HubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRoute)(nil)).Elem()
}

func (o HubRouteArrayOutput) ToHubRouteArrayOutput() HubRouteArrayOutput {
	return o
}

func (o HubRouteArrayOutput) ToHubRouteArrayOutputWithContext(ctx context.Context) HubRouteArrayOutput {
	return o
}

func (o HubRouteArrayOutput) Index(i pulumi.IntInput) HubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubRoute {
		return vs[0].([]HubRoute)[vs[1].(int)]
	}).(HubRouteOutput)
}

// RouteTable route.
type HubRouteResponse struct {
	// The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
	Name string `pulumi:"name"`
	// NextHop resource ID.
	NextHop string `pulumi:"nextHop"`
	// The type of next hop (eg: ResourceId).
	NextHopType string `pulumi:"nextHopType"`
}

// RouteTable route.
type HubRouteResponseOutput struct{ *pulumi.OutputState }

func (HubRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRouteResponse)(nil)).Elem()
}

func (o HubRouteResponseOutput) ToHubRouteResponseOutput() HubRouteResponseOutput {
	return o
}

func (o HubRouteResponseOutput) ToHubRouteResponseOutputWithContext(ctx context.Context) HubRouteResponseOutput {
	return o
}

// The type of destinations (eg: CIDR, ResourceId, Service).
func (o HubRouteResponseOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.DestinationType }).(pulumi.StringOutput)
}

// List of all destinations.
func (o HubRouteResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HubRouteResponse) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
func (o HubRouteResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.Name }).(pulumi.StringOutput)
}

// NextHop resource ID.
func (o HubRouteResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

// The type of next hop (eg: ResourceId).
func (o HubRouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

type HubRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (HubRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRouteResponse)(nil)).Elem()
}

func (o HubRouteResponseArrayOutput) ToHubRouteResponseArrayOutput() HubRouteResponseArrayOutput {
	return o
}

func (o HubRouteResponseArrayOutput) ToHubRouteResponseArrayOutputWithContext(ctx context.Context) HubRouteResponseArrayOutput {
	return o
}

func (o HubRouteResponseArrayOutput) Index(i pulumi.IntInput) HubRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubRouteResponse {
		return vs[0].([]HubRouteResponse)[vs[1].(int)]
	}).(HubRouteResponseOutput)
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddress struct {
	// The list of custom BGP peering addresses which belong to IP configuration.
	CustomBgpIpAddresses []string `pulumi:"customBgpIpAddresses"`
	// The ID of IP configuration which belongs to gateway.
	IpconfigurationId *string `pulumi:"ipconfigurationId"`
}

// IPConfigurationBgpPeeringAddressInput is an input type that accepts IPConfigurationBgpPeeringAddressArgs and IPConfigurationBgpPeeringAddressOutput values.
// You can construct a concrete instance of `IPConfigurationBgpPeeringAddressInput` via:
//
//	IPConfigurationBgpPeeringAddressArgs{...}
type IPConfigurationBgpPeeringAddressInput interface {
	pulumi.Input

	ToIPConfigurationBgpPeeringAddressOutput() IPConfigurationBgpPeeringAddressOutput
	ToIPConfigurationBgpPeeringAddressOutputWithContext(context.Context) IPConfigurationBgpPeeringAddressOutput
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressArgs struct {
	// The list of custom BGP peering addresses which belong to IP configuration.
	CustomBgpIpAddresses pulumi.StringArrayInput `pulumi:"customBgpIpAddresses"`
	// The ID of IP configuration which belongs to gateway.
	IpconfigurationId pulumi.StringPtrInput `pulumi:"ipconfigurationId"`
}

func (IPConfigurationBgpPeeringAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (i IPConfigurationBgpPeeringAddressArgs) ToIPConfigurationBgpPeeringAddressOutput() IPConfigurationBgpPeeringAddressOutput {
	return i.ToIPConfigurationBgpPeeringAddressOutputWithContext(context.Background())
}

func (i IPConfigurationBgpPeeringAddressArgs) ToIPConfigurationBgpPeeringAddressOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationBgpPeeringAddressOutput)
}

// IPConfigurationBgpPeeringAddressArrayInput is an input type that accepts IPConfigurationBgpPeeringAddressArray and IPConfigurationBgpPeeringAddressArrayOutput values.
// You can construct a concrete instance of `IPConfigurationBgpPeeringAddressArrayInput` via:
//
//	IPConfigurationBgpPeeringAddressArray{ IPConfigurationBgpPeeringAddressArgs{...} }
type IPConfigurationBgpPeeringAddressArrayInput interface {
	pulumi.Input

	ToIPConfigurationBgpPeeringAddressArrayOutput() IPConfigurationBgpPeeringAddressArrayOutput
	ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(context.Context) IPConfigurationBgpPeeringAddressArrayOutput
}

type IPConfigurationBgpPeeringAddressArray []IPConfigurationBgpPeeringAddressInput

func (IPConfigurationBgpPeeringAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (i IPConfigurationBgpPeeringAddressArray) ToIPConfigurationBgpPeeringAddressArrayOutput() IPConfigurationBgpPeeringAddressArrayOutput {
	return i.ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(context.Background())
}

func (i IPConfigurationBgpPeeringAddressArray) ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationBgpPeeringAddressArrayOutput)
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressOutput) ToIPConfigurationBgpPeeringAddressOutput() IPConfigurationBgpPeeringAddressOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressOutput) ToIPConfigurationBgpPeeringAddressOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressOutput {
	return o
}

// The list of custom BGP peering addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressOutput) CustomBgpIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddress) []string { return v.CustomBgpIpAddresses }).(pulumi.StringArrayOutput)
}

// The ID of IP configuration which belongs to gateway.
func (o IPConfigurationBgpPeeringAddressOutput) IpconfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddress) *string { return v.IpconfigurationId }).(pulumi.StringPtrOutput)
}

type IPConfigurationBgpPeeringAddressArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressArrayOutput) ToIPConfigurationBgpPeeringAddressArrayOutput() IPConfigurationBgpPeeringAddressArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressArrayOutput) ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressArrayOutput) Index(i pulumi.IntInput) IPConfigurationBgpPeeringAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationBgpPeeringAddress {
		return vs[0].([]IPConfigurationBgpPeeringAddress)[vs[1].(int)]
	}).(IPConfigurationBgpPeeringAddressOutput)
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressResponse struct {
	// The list of custom BGP peering addresses which belong to IP configuration.
	CustomBgpIpAddresses []string `pulumi:"customBgpIpAddresses"`
	// The list of default BGP peering addresses which belong to IP configuration.
	DefaultBgpIpAddresses []string `pulumi:"defaultBgpIpAddresses"`
	// The ID of IP configuration which belongs to gateway.
	IpconfigurationId *string `pulumi:"ipconfigurationId"`
	// The list of tunnel public IP addresses which belong to IP configuration.
	TunnelIpAddresses []string `pulumi:"tunnelIpAddresses"`
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationBgpPeeringAddressResponse)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressResponseOutput) ToIPConfigurationBgpPeeringAddressResponseOutput() IPConfigurationBgpPeeringAddressResponseOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressResponseOutput) ToIPConfigurationBgpPeeringAddressResponseOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressResponseOutput {
	return o
}

// The list of custom BGP peering addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressResponseOutput) CustomBgpIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) []string { return v.CustomBgpIpAddresses }).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressResponseOutput) DefaultBgpIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) []string { return v.DefaultBgpIpAddresses }).(pulumi.StringArrayOutput)
}

// The ID of IP configuration which belongs to gateway.
func (o IPConfigurationBgpPeeringAddressResponseOutput) IpconfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) *string { return v.IpconfigurationId }).(pulumi.StringPtrOutput)
}

// The list of tunnel public IP addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressResponseOutput) TunnelIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) []string { return v.TunnelIpAddresses }).(pulumi.StringArrayOutput)
}

type IPConfigurationBgpPeeringAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationBgpPeeringAddressResponse)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressResponseArrayOutput) ToIPConfigurationBgpPeeringAddressResponseArrayOutput() IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressResponseArrayOutput) ToIPConfigurationBgpPeeringAddressResponseArrayOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationBgpPeeringAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationBgpPeeringAddressResponse {
		return vs[0].([]IPConfigurationBgpPeeringAddressResponse)[vs[1].(int)]
	}).(IPConfigurationBgpPeeringAddressResponseOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfile struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetType `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for IPConfigurationProfile
func (val *IPConfigurationProfile) Defaults() *IPConfigurationProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// IPConfigurationProfileInput is an input type that accepts IPConfigurationProfileArgs and IPConfigurationProfileOutput values.
// You can construct a concrete instance of `IPConfigurationProfileInput` via:
//
//	IPConfigurationProfileArgs{...}
type IPConfigurationProfileInput interface {
	pulumi.Input

	ToIPConfigurationProfileOutput() IPConfigurationProfileOutput
	ToIPConfigurationProfileOutputWithContext(context.Context) IPConfigurationProfileOutput
}

// IP configuration profile child resource.
type IPConfigurationProfileArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for IPConfigurationProfileArgs
func (val *IPConfigurationProfileArgs) Defaults() *IPConfigurationProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (IPConfigurationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfile)(nil)).Elem()
}

func (i IPConfigurationProfileArgs) ToIPConfigurationProfileOutput() IPConfigurationProfileOutput {
	return i.ToIPConfigurationProfileOutputWithContext(context.Background())
}

func (i IPConfigurationProfileArgs) ToIPConfigurationProfileOutputWithContext(ctx context.Context) IPConfigurationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileOutput)
}

// IPConfigurationProfileArrayInput is an input type that accepts IPConfigurationProfileArray and IPConfigurationProfileArrayOutput values.
// You can construct a concrete instance of `IPConfigurationProfileArrayInput` via:
//
//	IPConfigurationProfileArray{ IPConfigurationProfileArgs{...} }
type IPConfigurationProfileArrayInput interface {
	pulumi.Input

	ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput
	ToIPConfigurationProfileArrayOutputWithContext(context.Context) IPConfigurationProfileArrayOutput
}

type IPConfigurationProfileArray []IPConfigurationProfileInput

func (IPConfigurationProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfile)(nil)).Elem()
}

func (i IPConfigurationProfileArray) ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput {
	return i.ToIPConfigurationProfileArrayOutputWithContext(context.Background())
}

func (i IPConfigurationProfileArray) ToIPConfigurationProfileArrayOutputWithContext(ctx context.Context) IPConfigurationProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileArrayOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfile)(nil)).Elem()
}

func (o IPConfigurationProfileOutput) ToIPConfigurationProfileOutput() IPConfigurationProfileOutput {
	return o
}

func (o IPConfigurationProfileOutput) ToIPConfigurationProfileOutputWithContext(ctx context.Context) IPConfigurationProfileOutput {
	return o
}

// Resource ID.
func (o IPConfigurationProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfileOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type IPConfigurationProfileArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfile)(nil)).Elem()
}

func (o IPConfigurationProfileArrayOutput) ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput {
	return o
}

func (o IPConfigurationProfileArrayOutput) ToIPConfigurationProfileArrayOutputWithContext(ctx context.Context) IPConfigurationProfileArrayOutput {
	return o
}

func (o IPConfigurationProfileArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfile {
		return vs[0].([]IPConfigurationProfile)[vs[1].(int)]
	}).(IPConfigurationProfileOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the IP configuration profile resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for IPConfigurationProfileResponse
func (val *IPConfigurationProfileResponse) Defaults() *IPConfigurationProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// IP configuration profile child resource.
type IPConfigurationProfileResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput {
	return o
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutputWithContext(ctx context.Context) IPConfigurationProfileResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationProfileResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration profile resource.
func (o IPConfigurationProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfileResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Sub Resource type.
func (o IPConfigurationProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IPConfigurationProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutputWithContext(ctx context.Context) IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfileResponse {
		return vs[0].([]IPConfigurationProfileResponse)[vs[1].(int)]
	}).(IPConfigurationProfileResponseOutput)
}

// IP configuration.
type IPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for IPConfigurationResponse
func (val *IPConfigurationResponse) Defaults() *IPConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateIPAllocationMethod == nil {
		privateIPAllocationMethod_ := "Dynamic"
		tmp.PrivateIPAllocationMethod = &privateIPAllocationMethod_
	}
	tmp.PublicIPAddress = tmp.PublicIPAddress.Defaults()

	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// IP configuration.
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) Elem() IPConfigurationResponseOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) IPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret IPConfigurationResponse
		return ret
	}).(IPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// IP configuration.
type InboundEndpointIPConfiguration struct {
	// Private IP address of the IP configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Private IP address allocation method.
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// The reference to the subnet bound to the IP configuration.
	Subnet SubResource `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for InboundEndpointIPConfiguration
func (val *InboundEndpointIPConfiguration) Defaults() *InboundEndpointIPConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateIpAllocationMethod == nil {
		privateIpAllocationMethod_ := "Dynamic"
		tmp.PrivateIpAllocationMethod = &privateIpAllocationMethod_
	}
	return &tmp
}

// InboundEndpointIPConfigurationInput is an input type that accepts InboundEndpointIPConfigurationArgs and InboundEndpointIPConfigurationOutput values.
// You can construct a concrete instance of `InboundEndpointIPConfigurationInput` via:
//
//	InboundEndpointIPConfigurationArgs{...}
type InboundEndpointIPConfigurationInput interface {
	pulumi.Input

	ToInboundEndpointIPConfigurationOutput() InboundEndpointIPConfigurationOutput
	ToInboundEndpointIPConfigurationOutputWithContext(context.Context) InboundEndpointIPConfigurationOutput
}

// IP configuration.
type InboundEndpointIPConfigurationArgs struct {
	// Private IP address of the IP configuration.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Private IP address allocation method.
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// The reference to the subnet bound to the IP configuration.
	Subnet SubResourceInput `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for InboundEndpointIPConfigurationArgs
func (val *InboundEndpointIPConfigurationArgs) Defaults() *InboundEndpointIPConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateIpAllocationMethod == nil {
		tmp.PrivateIpAllocationMethod = pulumi.StringPtr("Dynamic")
	}
	return &tmp
}
func (InboundEndpointIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundEndpointIPConfiguration)(nil)).Elem()
}

func (i InboundEndpointIPConfigurationArgs) ToInboundEndpointIPConfigurationOutput() InboundEndpointIPConfigurationOutput {
	return i.ToInboundEndpointIPConfigurationOutputWithContext(context.Background())
}

func (i InboundEndpointIPConfigurationArgs) ToInboundEndpointIPConfigurationOutputWithContext(ctx context.Context) InboundEndpointIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundEndpointIPConfigurationOutput)
}

// InboundEndpointIPConfigurationArrayInput is an input type that accepts InboundEndpointIPConfigurationArray and InboundEndpointIPConfigurationArrayOutput values.
// You can construct a concrete instance of `InboundEndpointIPConfigurationArrayInput` via:
//
//	InboundEndpointIPConfigurationArray{ InboundEndpointIPConfigurationArgs{...} }
type InboundEndpointIPConfigurationArrayInput interface {
	pulumi.Input

	ToInboundEndpointIPConfigurationArrayOutput() InboundEndpointIPConfigurationArrayOutput
	ToInboundEndpointIPConfigurationArrayOutputWithContext(context.Context) InboundEndpointIPConfigurationArrayOutput
}

type InboundEndpointIPConfigurationArray []InboundEndpointIPConfigurationInput

func (InboundEndpointIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundEndpointIPConfiguration)(nil)).Elem()
}

func (i InboundEndpointIPConfigurationArray) ToInboundEndpointIPConfigurationArrayOutput() InboundEndpointIPConfigurationArrayOutput {
	return i.ToInboundEndpointIPConfigurationArrayOutputWithContext(context.Background())
}

func (i InboundEndpointIPConfigurationArray) ToInboundEndpointIPConfigurationArrayOutputWithContext(ctx context.Context) InboundEndpointIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundEndpointIPConfigurationArrayOutput)
}

// IP configuration.
type InboundEndpointIPConfigurationOutput struct{ *pulumi.OutputState }

func (InboundEndpointIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundEndpointIPConfiguration)(nil)).Elem()
}

func (o InboundEndpointIPConfigurationOutput) ToInboundEndpointIPConfigurationOutput() InboundEndpointIPConfigurationOutput {
	return o
}

func (o InboundEndpointIPConfigurationOutput) ToInboundEndpointIPConfigurationOutputWithContext(ctx context.Context) InboundEndpointIPConfigurationOutput {
	return o
}

// Private IP address of the IP configuration.
func (o InboundEndpointIPConfigurationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundEndpointIPConfiguration) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Private IP address allocation method.
func (o InboundEndpointIPConfigurationOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundEndpointIPConfiguration) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the subnet bound to the IP configuration.
func (o InboundEndpointIPConfigurationOutput) Subnet() SubResourceOutput {
	return o.ApplyT(func(v InboundEndpointIPConfiguration) SubResource { return v.Subnet }).(SubResourceOutput)
}

type InboundEndpointIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (InboundEndpointIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundEndpointIPConfiguration)(nil)).Elem()
}

func (o InboundEndpointIPConfigurationArrayOutput) ToInboundEndpointIPConfigurationArrayOutput() InboundEndpointIPConfigurationArrayOutput {
	return o
}

func (o InboundEndpointIPConfigurationArrayOutput) ToInboundEndpointIPConfigurationArrayOutputWithContext(ctx context.Context) InboundEndpointIPConfigurationArrayOutput {
	return o
}

func (o InboundEndpointIPConfigurationArrayOutput) Index(i pulumi.IntInput) InboundEndpointIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundEndpointIPConfiguration {
		return vs[0].([]InboundEndpointIPConfiguration)[vs[1].(int)]
	}).(InboundEndpointIPConfigurationOutput)
}

// IP configuration.
type InboundEndpointIPConfigurationResponse struct {
	// Private IP address of the IP configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Private IP address allocation method.
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// The reference to the subnet bound to the IP configuration.
	Subnet SubResourceResponse `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for InboundEndpointIPConfigurationResponse
func (val *InboundEndpointIPConfigurationResponse) Defaults() *InboundEndpointIPConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateIpAllocationMethod == nil {
		privateIpAllocationMethod_ := "Dynamic"
		tmp.PrivateIpAllocationMethod = &privateIpAllocationMethod_
	}
	return &tmp
}

// IP configuration.
type InboundEndpointIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (InboundEndpointIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundEndpointIPConfigurationResponse)(nil)).Elem()
}

func (o InboundEndpointIPConfigurationResponseOutput) ToInboundEndpointIPConfigurationResponseOutput() InboundEndpointIPConfigurationResponseOutput {
	return o
}

func (o InboundEndpointIPConfigurationResponseOutput) ToInboundEndpointIPConfigurationResponseOutputWithContext(ctx context.Context) InboundEndpointIPConfigurationResponseOutput {
	return o
}

// Private IP address of the IP configuration.
func (o InboundEndpointIPConfigurationResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundEndpointIPConfigurationResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Private IP address allocation method.
func (o InboundEndpointIPConfigurationResponseOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundEndpointIPConfigurationResponse) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the subnet bound to the IP configuration.
func (o InboundEndpointIPConfigurationResponseOutput) Subnet() SubResourceResponseOutput {
	return o.ApplyT(func(v InboundEndpointIPConfigurationResponse) SubResourceResponse { return v.Subnet }).(SubResourceResponseOutput)
}

type InboundEndpointIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundEndpointIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundEndpointIPConfigurationResponse)(nil)).Elem()
}

func (o InboundEndpointIPConfigurationResponseArrayOutput) ToInboundEndpointIPConfigurationResponseArrayOutput() InboundEndpointIPConfigurationResponseArrayOutput {
	return o
}

func (o InboundEndpointIPConfigurationResponseArrayOutput) ToInboundEndpointIPConfigurationResponseArrayOutputWithContext(ctx context.Context) InboundEndpointIPConfigurationResponseArrayOutput {
	return o
}

func (o InboundEndpointIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) InboundEndpointIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundEndpointIPConfigurationResponse {
		return vs[0].([]InboundEndpointIPConfigurationResponse)[vs[1].(int)]
	}).(InboundEndpointIPConfigurationResponseOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPool struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the inbound NAT pool.
	Protocol string `pulumi:"protocol"`
}

// InboundNatPoolInput is an input type that accepts InboundNatPoolArgs and InboundNatPoolOutput values.
// You can construct a concrete instance of `InboundNatPoolInput` via:
//
//	InboundNatPoolArgs{...}
type InboundNatPoolInput interface {
	pulumi.Input

	ToInboundNatPoolOutput() InboundNatPoolOutput
	ToInboundNatPoolOutputWithContext(context.Context) InboundNatPoolOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the transport protocol used by the inbound NAT pool.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (InboundNatPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return i.ToInboundNatPoolOutputWithContext(context.Background())
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolOutput)
}

// InboundNatPoolArrayInput is an input type that accepts InboundNatPoolArray and InboundNatPoolArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolArrayInput` via:
//
//	InboundNatPoolArray{ InboundNatPoolArgs{...} }
type InboundNatPoolArrayInput interface {
	pulumi.Input

	ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput
	ToInboundNatPoolArrayOutputWithContext(context.Context) InboundNatPoolArrayOutput
}

type InboundNatPoolArray []InboundNatPoolInput

func (InboundNatPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return i.ToInboundNatPoolArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolOutput struct{ *pulumi.OutputState }

func (InboundNatPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return o
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatPool) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource ID.
func (o InboundNatPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
func (o InboundNatPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the inbound NAT pool.
func (o InboundNatPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPool) string { return v.Protocol }).(pulumi.StringOutput)
}

type InboundNatPoolArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) Index(i pulumi.IntInput) InboundNatPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPool {
		return vs[0].([]InboundNatPool)[vs[1].(int)]
	}).(InboundNatPoolOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponse struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the inbound NAT pool.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the inbound NAT pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return o
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolResponseOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolResponseOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolResponseOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource ID.
func (o InboundNatPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
func (o InboundNatPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the inbound NAT pool.
func (o InboundNatPoolResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the inbound NAT pool resource.
func (o InboundNatPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o InboundNatPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InboundNatPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) Index(i pulumi.IntInput) InboundNatPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPoolResponse {
		return vs[0].([]InboundNatPoolResponse)[vs[1].(int)]
	}).(InboundNatPoolResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleType struct {
	// A reference to backendAddressPool resource.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
	FrontendPortRangeEnd *int `pulumi:"frontendPortRangeEnd"`
	// The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
	FrontendPortRangeStart *int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol *string `pulumi:"protocol"`
}

// InboundNatRuleTypeInput is an input type that accepts InboundNatRuleTypeArgs and InboundNatRuleTypeOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeInput` via:
//
//	InboundNatRuleTypeArgs{...}
type InboundNatRuleTypeInput interface {
	pulumi.Input

	ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput
	ToInboundNatRuleTypeOutputWithContext(context.Context) InboundNatRuleTypeOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeArgs struct {
	// A reference to backendAddressPool resource.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
	FrontendPortRangeEnd pulumi.IntPtrInput `pulumi:"frontendPortRangeEnd"`
	// The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
	FrontendPortRangeStart pulumi.IntPtrInput `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InboundNatRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return i.ToInboundNatRuleTypeOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeOutput)
}

// InboundNatRuleTypeArrayInput is an input type that accepts InboundNatRuleTypeArray and InboundNatRuleTypeArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeArrayInput` via:
//
//	InboundNatRuleTypeArray{ InboundNatRuleTypeArgs{...} }
type InboundNatRuleTypeArrayInput interface {
	pulumi.Input

	ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput
	ToInboundNatRuleTypeArrayOutputWithContext(context.Context) InboundNatRuleTypeArrayOutput
}

type InboundNatRuleTypeArray []InboundNatRuleTypeInput

func (InboundNatRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return i.ToInboundNatRuleTypeArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return o
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return o
}

// A reference to backendAddressPool resource.
func (o InboundNatRuleTypeOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleTypeOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleTypeOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleTypeOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleTypeOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleTypeOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
func (o InboundNatRuleTypeOutput) FrontendPortRangeEnd() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.FrontendPortRangeEnd }).(pulumi.IntPtrOutput)
}

// The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
func (o InboundNatRuleTypeOutput) FrontendPortRangeStart() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.FrontendPortRangeStart }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
func (o InboundNatRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o InboundNatRuleTypeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InboundNatRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) Index(i pulumi.IntInput) InboundNatRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleType {
		return vs[0].([]InboundNatRuleType)[vs[1].(int)]
	}).(InboundNatRuleTypeOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponse struct {
	// A reference to backendAddressPool resource.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
	FrontendPortRangeEnd *int `pulumi:"frontendPortRangeEnd"`
	// The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
	FrontendPortRangeStart *int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the inbound NAT rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for InboundNatRuleResponse
func (val *InboundNatRuleResponse) Defaults() *InboundNatRuleResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BackendIPConfiguration = *tmp.BackendIPConfiguration.Defaults()

	return &tmp
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// A reference to backendAddressPool resource.
func (o InboundNatRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
func (o InboundNatRuleResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPortRangeEnd() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPortRangeEnd }).(pulumi.IntPtrOutput)
}

// The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPortRangeStart() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPortRangeStart }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
func (o InboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o InboundNatRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the inbound NAT rule resource.
func (o InboundNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o InboundNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// Interface endpoint resource.
type InterfaceEndpointResponse struct {
	// A reference to the service being brought into the virtual network.
	EndpointService *EndpointServiceResponse `pulumi:"endpointService"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Gets an array of references to the network interfaces created for this interface endpoint.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// A read-only property that identifies who created this interface endpoint.
	Owner string `pulumi:"owner"`
	// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for InterfaceEndpointResponse
func (val *InterfaceEndpointResponse) Defaults() *InterfaceEndpointResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// Interface endpoint resource.
type InterfaceEndpointResponseOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointResponse)(nil)).Elem()
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponseOutput() InterfaceEndpointResponseOutput {
	return o
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponseOutputWithContext(ctx context.Context) InterfaceEndpointResponseOutput {
	return o
}

// A reference to the service being brought into the virtual network.
func (o InterfaceEndpointResponseOutput) EndpointService() EndpointServiceResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *EndpointServiceResponse { return v.EndpointService }).(EndpointServiceResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o InterfaceEndpointResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
func (o InterfaceEndpointResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InterfaceEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o InterfaceEndpointResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o InterfaceEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets an array of references to the network interfaces created for this interface endpoint.
func (o InterfaceEndpointResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// A read-only property that identifies who created this interface endpoint.
func (o InterfaceEndpointResponseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Owner }).(pulumi.StringOutput)
}

// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InterfaceEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o InterfaceEndpointResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o InterfaceEndpointResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o InterfaceEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InterfaceEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceEndpointResponse)(nil)).Elem()
}

func (o InterfaceEndpointResponsePtrOutput) ToInterfaceEndpointResponsePtrOutput() InterfaceEndpointResponsePtrOutput {
	return o
}

func (o InterfaceEndpointResponsePtrOutput) ToInterfaceEndpointResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointResponsePtrOutput {
	return o
}

func (o InterfaceEndpointResponsePtrOutput) Elem() InterfaceEndpointResponseOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) InterfaceEndpointResponse {
		if v != nil {
			return *v
		}
		var ret InterfaceEndpointResponse
		return ret
	}).(InterfaceEndpointResponseOutput)
}

// A reference to the service being brought into the virtual network.
func (o InterfaceEndpointResponsePtrOutput) EndpointService() EndpointServiceResponsePtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *EndpointServiceResponse {
		if v == nil {
			return nil
		}
		return v.EndpointService
	}).(EndpointServiceResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o InterfaceEndpointResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
func (o InterfaceEndpointResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InterfaceEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o InterfaceEndpointResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o InterfaceEndpointResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interfaces created for this interface endpoint.
func (o InterfaceEndpointResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// A read-only property that identifies who created this interface endpoint.
func (o InterfaceEndpointResponsePtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InterfaceEndpointResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o InterfaceEndpointResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o InterfaceEndpointResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o InterfaceEndpointResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type InterfaceEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceEndpointResponse)(nil)).Elem()
}

func (o InterfaceEndpointResponseArrayOutput) ToInterfaceEndpointResponseArrayOutput() InterfaceEndpointResponseArrayOutput {
	return o
}

func (o InterfaceEndpointResponseArrayOutput) ToInterfaceEndpointResponseArrayOutputWithContext(ctx context.Context) InterfaceEndpointResponseArrayOutput {
	return o
}

func (o InterfaceEndpointResponseArrayOutput) Index(i pulumi.IntInput) InterfaceEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceEndpointResponse {
		return vs[0].([]InterfaceEndpointResponse)[vs[1].(int)]
	}).(InterfaceEndpointResponseOutput)
}

// Contains the IpTag associated with the object.
type IpTag struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `pulumi:"tag"`
}

// IpTagInput is an input type that accepts IpTagArgs and IpTagOutput values.
// You can construct a concrete instance of `IpTagInput` via:
//
//	IpTagArgs{...}
type IpTagInput interface {
	pulumi.Input

	ToIpTagOutput() IpTagOutput
	ToIpTagOutputWithContext(context.Context) IpTagOutput
}

// Contains the IpTag associated with the object.
type IpTagArgs struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (i IpTagArgs) ToIpTagOutput() IpTagOutput {
	return i.ToIpTagOutputWithContext(context.Background())
}

func (i IpTagArgs) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagOutput)
}

// IpTagArrayInput is an input type that accepts IpTagArray and IpTagArrayOutput values.
// You can construct a concrete instance of `IpTagArrayInput` via:
//
//	IpTagArray{ IpTagArgs{...} }
type IpTagArrayInput interface {
	pulumi.Input

	ToIpTagArrayOutput() IpTagArrayOutput
	ToIpTagArrayOutputWithContext(context.Context) IpTagArrayOutput
}

type IpTagArray []IpTagInput

func (IpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (i IpTagArray) ToIpTagArrayOutput() IpTagArrayOutput {
	return i.ToIpTagArrayOutputWithContext(context.Background())
}

func (i IpTagArray) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagArrayOutput)
}

// Contains the IpTag associated with the object.
type IpTagOutput struct{ *pulumi.OutputState }

func (IpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (o IpTagOutput) ToIpTagOutput() IpTagOutput {
	return o
}

func (o IpTagOutput) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return o
}

// The IP tag type. Example: FirstPartyUsage.
func (o IpTagOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// The value of the IP tag associated with the public IP. Example: SQL.
func (o IpTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagArrayOutput struct{ *pulumi.OutputState }

func (IpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (o IpTagArrayOutput) ToIpTagArrayOutput() IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) Index(i pulumi.IntInput) IpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTag {
		return vs[0].([]IpTag)[vs[1].(int)]
	}).(IpTagOutput)
}

// Contains the IpTag associated with the object.
type IpTagResponse struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `pulumi:"tag"`
}

// Contains the IpTag associated with the object.
type IpTagResponseOutput struct{ *pulumi.OutputState }

func (IpTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseOutput) ToIpTagResponseOutput() IpTagResponseOutput {
	return o
}

func (o IpTagResponseOutput) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return o
}

// The IP tag type. Example: FirstPartyUsage.
func (o IpTagResponseOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// The value of the IP tag associated with the public IP. Example: SQL.
func (o IpTagResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagResponseArrayOutput struct{ *pulumi.OutputState }

func (IpTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) Index(i pulumi.IntInput) IpTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTagResponse {
		return vs[0].([]IpTagResponse)[vs[1].(int)]
	}).(IpTagResponseOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicy struct {
	// The DH Group used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// IpsecPolicyInput is an input type that accepts IpsecPolicyArgs and IpsecPolicyOutput values.
// You can construct a concrete instance of `IpsecPolicyInput` via:
//
//	IpsecPolicyArgs{...}
type IpsecPolicyInput interface {
	pulumi.Input

	ToIpsecPolicyOutput() IpsecPolicyOutput
	ToIpsecPolicyOutputWithContext(context.Context) IpsecPolicyOutput
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyArgs struct {
	// The DH Group used in IKE Phase 1 for initial SA.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds pulumi.IntInput `pulumi:"saLifeTimeSeconds"`
}

func (IpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return i.ToIpsecPolicyOutputWithContext(context.Background())
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyOutput)
}

// IpsecPolicyArrayInput is an input type that accepts IpsecPolicyArray and IpsecPolicyArrayOutput values.
// You can construct a concrete instance of `IpsecPolicyArrayInput` via:
//
//	IpsecPolicyArray{ IpsecPolicyArgs{...} }
type IpsecPolicyArrayInput interface {
	pulumi.Input

	ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput
	ToIpsecPolicyArrayOutputWithContext(context.Context) IpsecPolicyArrayOutput
}

type IpsecPolicyArray []IpsecPolicyInput

func (IpsecPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return i.ToIpsecPolicyArrayOutputWithContext(context.Background())
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyArrayOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyOutput struct{ *pulumi.OutputState }

func (IpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return o
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return o
}

// The DH Group used in IKE Phase 1 for initial SA.
func (o IpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Group used in IKE Phase 2 for new child SA.
func (o IpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) Index(i pulumi.IntInput) IpsecPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicy {
		return vs[0].([]IpsecPolicy)[vs[1].(int)]
	}).(IpsecPolicyOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyResponse struct {
	// The DH Group used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyResponseOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput {
	return o
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutputWithContext(ctx context.Context) IpsecPolicyResponseOutput {
	return o
}

// The DH Group used in IKE Phase 1 for initial SA.
func (o IpsecPolicyResponseOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Group used in IKE Phase 2 for new child SA.
func (o IpsecPolicyResponseOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutputWithContext(ctx context.Context) IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) Index(i pulumi.IntInput) IpsecPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicyResponse {
		return vs[0].([]IpsecPolicyResponse)[vs[1].(int)]
	}).(IpsecPolicyResponseOutput)
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfig struct {
	// /125 IP address space to carve out customer addresses for global reach.
	AddressPrefix *string `pulumi:"addressPrefix"`
}

// Ipv6CircuitConnectionConfigInput is an input type that accepts Ipv6CircuitConnectionConfigArgs and Ipv6CircuitConnectionConfigOutput values.
// You can construct a concrete instance of `Ipv6CircuitConnectionConfigInput` via:
//
//	Ipv6CircuitConnectionConfigArgs{...}
type Ipv6CircuitConnectionConfigInput interface {
	pulumi.Input

	ToIpv6CircuitConnectionConfigOutput() Ipv6CircuitConnectionConfigOutput
	ToIpv6CircuitConnectionConfigOutputWithContext(context.Context) Ipv6CircuitConnectionConfigOutput
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigArgs struct {
	// /125 IP address space to carve out customer addresses for global reach.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
}

func (Ipv6CircuitConnectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigOutput() Ipv6CircuitConnectionConfigOutput {
	return i.ToIpv6CircuitConnectionConfigOutputWithContext(context.Background())
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigOutput)
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return i.ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Background())
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigOutput).ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx)
}

// Ipv6CircuitConnectionConfigPtrInput is an input type that accepts Ipv6CircuitConnectionConfigArgs, Ipv6CircuitConnectionConfigPtr and Ipv6CircuitConnectionConfigPtrOutput values.
// You can construct a concrete instance of `Ipv6CircuitConnectionConfigPtrInput` via:
//
//	        Ipv6CircuitConnectionConfigArgs{...}
//
//	or:
//
//	        nil
type Ipv6CircuitConnectionConfigPtrInput interface {
	pulumi.Input

	ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput
	ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Context) Ipv6CircuitConnectionConfigPtrOutput
}

type ipv6CircuitConnectionConfigPtrType Ipv6CircuitConnectionConfigArgs

func Ipv6CircuitConnectionConfigPtr(v *Ipv6CircuitConnectionConfigArgs) Ipv6CircuitConnectionConfigPtrInput {
	return (*ipv6CircuitConnectionConfigPtrType)(v)
}

func (*ipv6CircuitConnectionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (i *ipv6CircuitConnectionConfigPtrType) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return i.ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Background())
}

func (i *ipv6CircuitConnectionConfigPtrType) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigPtrOutput)
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigOutput() Ipv6CircuitConnectionConfigOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return o.ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Background())
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ipv6CircuitConnectionConfig) *Ipv6CircuitConnectionConfig {
		return &v
	}).(Ipv6CircuitConnectionConfigPtrOutput)
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfig) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

type Ipv6CircuitConnectionConfigPtrOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigPtrOutput) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigPtrOutput) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigPtrOutput) Elem() Ipv6CircuitConnectionConfigOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfig) Ipv6CircuitConnectionConfig {
		if v != nil {
			return *v
		}
		var ret Ipv6CircuitConnectionConfig
		return ret
	}).(Ipv6CircuitConnectionConfigOutput)
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigPtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfig) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigResponse struct {
	// /125 IP address space to carve out customer addresses for global reach.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigResponseOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6CircuitConnectionConfigResponse)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigResponseOutput) ToIpv6CircuitConnectionConfigResponseOutput() Ipv6CircuitConnectionConfigResponseOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigResponseOutput) ToIpv6CircuitConnectionConfigResponseOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponseOutput {
	return o
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfigResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o Ipv6CircuitConnectionConfigResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfigResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

type Ipv6CircuitConnectionConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6CircuitConnectionConfigResponse)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigResponsePtrOutput) ToIpv6CircuitConnectionConfigResponsePtrOutput() Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigResponsePtrOutput) ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigResponsePtrOutput) Elem() Ipv6CircuitConnectionConfigResponseOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfigResponse) Ipv6CircuitConnectionConfigResponse {
		if v != nil {
			return *v
		}
		var ret Ipv6CircuitConnectionConfigResponse
		return ret
	}).(Ipv6CircuitConnectionConfigResponseOutput)
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o Ipv6CircuitConnectionConfigResponsePtrOutput) CircuitConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CircuitConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfig struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResource `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering.
	State *string `pulumi:"state"`
}

// Ipv6ExpressRouteCircuitPeeringConfigInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs and Ipv6ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigInput` via:
//
//	Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
type Ipv6ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput
	ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigArgs struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter SubResourcePtrInput `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (Ipv6ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput).ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// Ipv6ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs, Ipv6ExpressRouteCircuitPeeringConfigPtr and Ipv6ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//	        Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
//
//	or:
//
//	        nil
type Ipv6ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
}

type ipv6ExpressRouteCircuitPeeringConfigPtrType Ipv6ExpressRouteCircuitPeeringConfigArgs

func Ipv6ExpressRouteCircuitPeeringConfigPtr(v *Ipv6ExpressRouteCircuitPeeringConfigArgs) Ipv6ExpressRouteCircuitPeeringConfigPtrInput {
	return (*ipv6ExpressRouteCircuitPeeringConfigPtrType)(v)
}

func (*ipv6ExpressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ipv6ExpressRouteCircuitPeeringConfig) *Ipv6ExpressRouteCircuitPeeringConfig {
		return &v
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) RouteFilter() SubResourcePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *SubResource { return v.RouteFilter }).(SubResourcePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) Ipv6ExpressRouteCircuitPeeringConfig {
		if v != nil {
			return *v
		}
		var ret Ipv6ExpressRouteCircuitPeeringConfig
		return ret
	}).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) RouteFilter() SubResourcePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *SubResource {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(SubResourcePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponse struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResourceResponse `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering.
	State *string `pulumi:"state"`
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) RouteFilter() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *SubResourceResponse { return v.RouteFilter }).(SubResourceResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) Ipv6ExpressRouteCircuitPeeringConfigResponse {
		if v != nil {
			return *v
		}
		var ret Ipv6ExpressRouteCircuitPeeringConfigResponse
		return ret
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) RouteFilter() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(SubResourceResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The Key Vault containing the SSL certificate
type KeyVaultCertificateSourceParametersResponseVault struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// The Key Vault containing the SSL certificate
type KeyVaultCertificateSourceParametersResponseVaultOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificateSourceParametersResponseVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCertificateSourceParametersResponseVault)(nil)).Elem()
}

func (o KeyVaultCertificateSourceParametersResponseVaultOutput) ToKeyVaultCertificateSourceParametersResponseVaultOutput() KeyVaultCertificateSourceParametersResponseVaultOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseVaultOutput) ToKeyVaultCertificateSourceParametersResponseVaultOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultOutput {
	return o
}

// Resource ID.
func (o KeyVaultCertificateSourceParametersResponseVaultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponseVault) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type KeyVaultCertificateSourceParametersResponseVaultPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificateSourceParametersResponseVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCertificateSourceParametersResponseVault)(nil)).Elem()
}

func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutput() KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) Elem() KeyVaultCertificateSourceParametersResponseVaultOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponseVault) KeyVaultCertificateSourceParametersResponseVault {
		if v != nil {
			return *v
		}
		var ret KeyVaultCertificateSourceParametersResponseVault
		return ret
	}).(KeyVaultCertificateSourceParametersResponseVaultOutput)
}

// Resource ID.
func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponseVault) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddress struct {
	// A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
	AdminState *string `pulumi:"adminState"`
	// IP Address belonging to the referenced virtual network.
	IpAddress *string `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration *SubResource `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name *string `pulumi:"name"`
	// Reference to an existing subnet.
	Subnet *SubResource `pulumi:"subnet"`
	// Reference to an existing virtual network.
	VirtualNetwork *SubResource `pulumi:"virtualNetwork"`
}

// LoadBalancerBackendAddressInput is an input type that accepts LoadBalancerBackendAddressArgs and LoadBalancerBackendAddressOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressInput` via:
//
//	LoadBalancerBackendAddressArgs{...}
type LoadBalancerBackendAddressInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressOutput() LoadBalancerBackendAddressOutput
	ToLoadBalancerBackendAddressOutputWithContext(context.Context) LoadBalancerBackendAddressOutput
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressArgs struct {
	// A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
	// IP Address belonging to the referenced virtual network.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration SubResourcePtrInput `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to an existing subnet.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
	// Reference to an existing virtual network.
	VirtualNetwork SubResourcePtrInput `pulumi:"virtualNetwork"`
}

func (LoadBalancerBackendAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddress)(nil)).Elem()
}

func (i LoadBalancerBackendAddressArgs) ToLoadBalancerBackendAddressOutput() LoadBalancerBackendAddressOutput {
	return i.ToLoadBalancerBackendAddressOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressArgs) ToLoadBalancerBackendAddressOutputWithContext(ctx context.Context) LoadBalancerBackendAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressOutput)
}

// LoadBalancerBackendAddressArrayInput is an input type that accepts LoadBalancerBackendAddressArray and LoadBalancerBackendAddressArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressArrayInput` via:
//
//	LoadBalancerBackendAddressArray{ LoadBalancerBackendAddressArgs{...} }
type LoadBalancerBackendAddressArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressArrayOutput() LoadBalancerBackendAddressArrayOutput
	ToLoadBalancerBackendAddressArrayOutputWithContext(context.Context) LoadBalancerBackendAddressArrayOutput
}

type LoadBalancerBackendAddressArray []LoadBalancerBackendAddressInput

func (LoadBalancerBackendAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddress)(nil)).Elem()
}

func (i LoadBalancerBackendAddressArray) ToLoadBalancerBackendAddressArrayOutput() LoadBalancerBackendAddressArrayOutput {
	return i.ToLoadBalancerBackendAddressArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressArray) ToLoadBalancerBackendAddressArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressArrayOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddress)(nil)).Elem()
}

func (o LoadBalancerBackendAddressOutput) ToLoadBalancerBackendAddressOutput() LoadBalancerBackendAddressOutput {
	return o
}

func (o LoadBalancerBackendAddressOutput) ToLoadBalancerBackendAddressOutputWithContext(ctx context.Context) LoadBalancerBackendAddressOutput {
	return o
}

// A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
func (o LoadBalancerBackendAddressOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// IP Address belonging to the referenced virtual network.
func (o LoadBalancerBackendAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Reference to the frontend ip address configuration defined in regional loadbalancer.
func (o LoadBalancerBackendAddressOutput) LoadBalancerFrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *SubResource { return v.LoadBalancerFrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Name of the backend address.
func (o LoadBalancerBackendAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to an existing subnet.
func (o LoadBalancerBackendAddressOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

// Reference to an existing virtual network.
func (o LoadBalancerBackendAddressOutput) VirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *SubResource { return v.VirtualNetwork }).(SubResourcePtrOutput)
}

type LoadBalancerBackendAddressArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddress)(nil)).Elem()
}

func (o LoadBalancerBackendAddressArrayOutput) ToLoadBalancerBackendAddressArrayOutput() LoadBalancerBackendAddressArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressArrayOutput) ToLoadBalancerBackendAddressArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddress {
		return vs[0].([]LoadBalancerBackendAddress)[vs[1].(int)]
	}).(LoadBalancerBackendAddressOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponse struct {
	// A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
	AdminState *string `pulumi:"adminState"`
	// Collection of inbound NAT rule port mappings.
	InboundNatRulesPortMapping []NatRulePortMappingResponse `pulumi:"inboundNatRulesPortMapping"`
	// IP Address belonging to the referenced virtual network.
	IpAddress *string `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration *SubResourceResponse `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name *string `pulumi:"name"`
	// Reference to IP address defined in network interfaces.
	NetworkInterfaceIPConfiguration SubResourceResponse `pulumi:"networkInterfaceIPConfiguration"`
	// Reference to an existing subnet.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Reference to an existing virtual network.
	VirtualNetwork *SubResourceResponse `pulumi:"virtualNetwork"`
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutput() LoadBalancerBackendAddressResponseOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseOutput {
	return o
}

// A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections.
func (o LoadBalancerBackendAddressResponseOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Collection of inbound NAT rule port mappings.
func (o LoadBalancerBackendAddressResponseOutput) InboundNatRulesPortMapping() NatRulePortMappingResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) []NatRulePortMappingResponse {
		return v.InboundNatRulesPortMapping
	}).(NatRulePortMappingResponseArrayOutput)
}

// IP Address belonging to the referenced virtual network.
func (o LoadBalancerBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Reference to the frontend ip address configuration defined in regional loadbalancer.
func (o LoadBalancerBackendAddressResponseOutput) LoadBalancerFrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse {
		return v.LoadBalancerFrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Name of the backend address.
func (o LoadBalancerBackendAddressResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to IP address defined in network interfaces.
func (o LoadBalancerBackendAddressResponseOutput) NetworkInterfaceIPConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) SubResourceResponse {
		return v.NetworkInterfaceIPConfiguration
	}).(SubResourceResponseOutput)
}

// Reference to an existing subnet.
func (o LoadBalancerBackendAddressResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Reference to an existing virtual network.
func (o LoadBalancerBackendAddressResponseOutput) VirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse { return v.VirtualNetwork }).(SubResourceResponsePtrOutput)
}

type LoadBalancerBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutput() LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressResponse {
		return vs[0].([]LoadBalancerBackendAddressResponse)[vs[1].(int)]
	}).(LoadBalancerBackendAddressResponseOutput)
}

// SKU of a load balancer.
type LoadBalancerSku struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
	// Tier of a load balancer SKU.
	Tier *string `pulumi:"tier"`
}

// LoadBalancerSkuInput is an input type that accepts LoadBalancerSkuArgs and LoadBalancerSkuOutput values.
// You can construct a concrete instance of `LoadBalancerSkuInput` via:
//
//	LoadBalancerSkuArgs{...}
type LoadBalancerSkuInput interface {
	pulumi.Input

	ToLoadBalancerSkuOutput() LoadBalancerSkuOutput
	ToLoadBalancerSkuOutputWithContext(context.Context) LoadBalancerSkuOutput
}

// SKU of a load balancer.
type LoadBalancerSkuArgs struct {
	// Name of a load balancer SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a load balancer SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (LoadBalancerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return i.ToLoadBalancerSkuOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput)
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput).ToLoadBalancerSkuPtrOutputWithContext(ctx)
}

// LoadBalancerSkuPtrInput is an input type that accepts LoadBalancerSkuArgs, LoadBalancerSkuPtr and LoadBalancerSkuPtrOutput values.
// You can construct a concrete instance of `LoadBalancerSkuPtrInput` via:
//
//	        LoadBalancerSkuArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerSkuPtrInput interface {
	pulumi.Input

	ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput
	ToLoadBalancerSkuPtrOutputWithContext(context.Context) LoadBalancerSkuPtrOutput
}

type loadBalancerSkuPtrType LoadBalancerSkuArgs

func LoadBalancerSkuPtr(v *LoadBalancerSkuArgs) LoadBalancerSkuPtrInput {
	return (*loadBalancerSkuPtrType)(v)
}

func (*loadBalancerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuPtrOutput)
}

// SKU of a load balancer.
type LoadBalancerSkuOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerSku) *LoadBalancerSku {
		return &v
	}).(LoadBalancerSkuPtrOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) Elem() LoadBalancerSkuOutput {
	return o.ApplyT(func(v *LoadBalancerSku) LoadBalancerSku {
		if v != nil {
			return *v
		}
		var ret LoadBalancerSku
		return ret
	}).(LoadBalancerSkuOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a load balancer.
type LoadBalancerSkuResponse struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
	// Tier of a load balancer SKU.
	Tier *string `pulumi:"tier"`
}

// SKU of a load balancer.
type LoadBalancerSkuResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput {
	return o
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutputWithContext(ctx context.Context) LoadBalancerSkuResponseOutput {
	return o
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) Elem() LoadBalancerSkuResponseOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) LoadBalancerSkuResponse {
		if v != nil {
			return *v
		}
		var ret LoadBalancerSkuResponse
		return ret
	}).(LoadBalancerSkuResponseOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRule struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// An array of references to pool of DIPs.
	BackendAddressPools []SubResource `pulumi:"backendAddressPools"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
	FrontendPort int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the load balancer probe used by the load balancing rule.
	Probe *SubResource `pulumi:"probe"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol string `pulumi:"protocol"`
}

// LoadBalancingRuleInput is an input type that accepts LoadBalancingRuleArgs and LoadBalancingRuleOutput values.
// You can construct a concrete instance of `LoadBalancingRuleInput` via:
//
//	LoadBalancingRuleArgs{...}
type LoadBalancingRuleInput interface {
	pulumi.Input

	ToLoadBalancingRuleOutput() LoadBalancingRuleOutput
	ToLoadBalancingRuleOutputWithContext(context.Context) LoadBalancingRuleOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// An array of references to pool of DIPs.
	BackendAddressPools SubResourceArrayInput `pulumi:"backendAddressPools"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat pulumi.BoolPtrInput `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the load balancer probe used by the load balancing rule.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (LoadBalancingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return i.ToLoadBalancingRuleOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleOutput)
}

// LoadBalancingRuleArrayInput is an input type that accepts LoadBalancingRuleArray and LoadBalancingRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleArrayInput` via:
//
//	LoadBalancingRuleArray{ LoadBalancingRuleArgs{...} }
type LoadBalancingRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput
	ToLoadBalancingRuleArrayOutputWithContext(context.Context) LoadBalancingRuleArrayOutput
}

type LoadBalancingRuleArray []LoadBalancingRuleInput

func (LoadBalancingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return i.ToLoadBalancingRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return o
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// An array of references to pool of DIPs.
func (o LoadBalancingRuleOutput) BackendAddressPools() SubResourceArrayOutput {
	return o.ApplyT(func(v LoadBalancingRule) []SubResource { return v.BackendAddressPools }).(SubResourceArrayOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRuleOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRule) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource ID.
func (o LoadBalancingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule.
func (o LoadBalancingRuleOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
func (o LoadBalancingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o LoadBalancingRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type LoadBalancingRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRule {
		return vs[0].([]LoadBalancingRule)[vs[1].(int)]
	}).(LoadBalancingRuleOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponse struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// An array of references to pool of DIPs.
	BackendAddressPools []SubResourceResponse `pulumi:"backendAddressPools"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
	FrontendPort int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the load balancer probe used by the load balancing rule.
	Probe *SubResourceResponse `pulumi:"probe"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the load balancing rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return o
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// An array of references to pool of DIPs.
func (o LoadBalancingRuleResponseOutput) BackendAddressPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) []SubResourceResponse { return v.BackendAddressPools }).(SubResourceResponseArrayOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRuleResponseOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleResponseOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource ID.
func (o LoadBalancingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule.
func (o LoadBalancingRuleResponseOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
func (o LoadBalancingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o LoadBalancingRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the load balancing rule resource.
func (o LoadBalancingRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o LoadBalancingRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LoadBalancingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRuleResponse {
		return vs[0].([]LoadBalancingRuleResponse)[vs[1].(int)]
	}).(LoadBalancingRuleResponseOutput)
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModel struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyMilliseconds *int `pulumi:"additionalLatencyMilliseconds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
}

// LoadBalancingSettingsModelInput is an input type that accepts LoadBalancingSettingsModelArgs and LoadBalancingSettingsModelOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsModelInput` via:
//
//	LoadBalancingSettingsModelArgs{...}
type LoadBalancingSettingsModelInput interface {
	pulumi.Input

	ToLoadBalancingSettingsModelOutput() LoadBalancingSettingsModelOutput
	ToLoadBalancingSettingsModelOutputWithContext(context.Context) LoadBalancingSettingsModelOutput
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelArgs struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyMilliseconds pulumi.IntPtrInput `pulumi:"additionalLatencyMilliseconds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of samples to consider for load balancing decisions
	SampleSize pulumi.IntPtrInput `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired pulumi.IntPtrInput `pulumi:"successfulSamplesRequired"`
}

func (LoadBalancingSettingsModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsModel)(nil)).Elem()
}

func (i LoadBalancingSettingsModelArgs) ToLoadBalancingSettingsModelOutput() LoadBalancingSettingsModelOutput {
	return i.ToLoadBalancingSettingsModelOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsModelArgs) ToLoadBalancingSettingsModelOutputWithContext(ctx context.Context) LoadBalancingSettingsModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsModelOutput)
}

// LoadBalancingSettingsModelArrayInput is an input type that accepts LoadBalancingSettingsModelArray and LoadBalancingSettingsModelArrayOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsModelArrayInput` via:
//
//	LoadBalancingSettingsModelArray{ LoadBalancingSettingsModelArgs{...} }
type LoadBalancingSettingsModelArrayInput interface {
	pulumi.Input

	ToLoadBalancingSettingsModelArrayOutput() LoadBalancingSettingsModelArrayOutput
	ToLoadBalancingSettingsModelArrayOutputWithContext(context.Context) LoadBalancingSettingsModelArrayOutput
}

type LoadBalancingSettingsModelArray []LoadBalancingSettingsModelInput

func (LoadBalancingSettingsModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingSettingsModel)(nil)).Elem()
}

func (i LoadBalancingSettingsModelArray) ToLoadBalancingSettingsModelArrayOutput() LoadBalancingSettingsModelArrayOutput {
	return i.ToLoadBalancingSettingsModelArrayOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsModelArray) ToLoadBalancingSettingsModelArrayOutputWithContext(ctx context.Context) LoadBalancingSettingsModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsModelArrayOutput)
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsModel)(nil)).Elem()
}

func (o LoadBalancingSettingsModelOutput) ToLoadBalancingSettingsModelOutput() LoadBalancingSettingsModelOutput {
	return o
}

func (o LoadBalancingSettingsModelOutput) ToLoadBalancingSettingsModelOutputWithContext(ctx context.Context) LoadBalancingSettingsModelOutput {
	return o
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsModelOutput) AdditionalLatencyMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *int { return v.AdditionalLatencyMilliseconds }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o LoadBalancingSettingsModelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LoadBalancingSettingsModelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsModelOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsModelOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

type LoadBalancingSettingsModelArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingSettingsModel)(nil)).Elem()
}

func (o LoadBalancingSettingsModelArrayOutput) ToLoadBalancingSettingsModelArrayOutput() LoadBalancingSettingsModelArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelArrayOutput) ToLoadBalancingSettingsModelArrayOutputWithContext(ctx context.Context) LoadBalancingSettingsModelArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelArrayOutput) Index(i pulumi.IntInput) LoadBalancingSettingsModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingSettingsModel {
		return vs[0].([]LoadBalancingSettingsModel)[vs[1].(int)]
	}).(LoadBalancingSettingsModelOutput)
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelResponse struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyMilliseconds *int `pulumi:"additionalLatencyMilliseconds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsModelResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsModelResponseOutput) ToLoadBalancingSettingsModelResponseOutput() LoadBalancingSettingsModelResponseOutput {
	return o
}

func (o LoadBalancingSettingsModelResponseOutput) ToLoadBalancingSettingsModelResponseOutputWithContext(ctx context.Context) LoadBalancingSettingsModelResponseOutput {
	return o
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsModelResponseOutput) AdditionalLatencyMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *int { return v.AdditionalLatencyMilliseconds }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o LoadBalancingSettingsModelResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LoadBalancingSettingsModelResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o LoadBalancingSettingsModelResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsModelResponseOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsModelResponseOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

// Resource type.
func (o LoadBalancingSettingsModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LoadBalancingSettingsModelResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingSettingsModelResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsModelResponseArrayOutput) ToLoadBalancingSettingsModelResponseArrayOutput() LoadBalancingSettingsModelResponseArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelResponseArrayOutput) ToLoadBalancingSettingsModelResponseArrayOutputWithContext(ctx context.Context) LoadBalancingSettingsModelResponseArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingSettingsModelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingSettingsModelResponse {
		return vs[0].([]LoadBalancingSettingsModelResponse)[vs[1].(int)]
	}).(LoadBalancingSettingsModelResponseOutput)
}

// A common class for general resource information.
type LocalNetworkGatewayType struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// FQDN of local network gateway.
	Fqdn *string `pulumi:"fqdn"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpace `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// LocalNetworkGatewayTypeInput is an input type that accepts LocalNetworkGatewayTypeArgs and LocalNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypeInput` via:
//
//	LocalNetworkGatewayTypeArgs{...}
type LocalNetworkGatewayTypeInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput
	ToLocalNetworkGatewayTypeOutputWithContext(context.Context) LocalNetworkGatewayTypeOutput
}

// A common class for general resource information.
type LocalNetworkGatewayTypeArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// FQDN of local network gateway.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpacePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LocalNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return i.ToLocalNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput)
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput).ToLocalNetworkGatewayTypePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayTypePtrInput is an input type that accepts LocalNetworkGatewayTypeArgs, LocalNetworkGatewayTypePtr and LocalNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypePtrInput` via:
//
//	        LocalNetworkGatewayTypeArgs{...}
//
//	or:
//
//	        nil
type LocalNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput
	ToLocalNetworkGatewayTypePtrOutputWithContext(context.Context) LocalNetworkGatewayTypePtrOutput
}

type localNetworkGatewayTypePtrType LocalNetworkGatewayTypeArgs

func LocalNetworkGatewayTypePtr(v *LocalNetworkGatewayTypeArgs) LocalNetworkGatewayTypePtrInput {
	return (*localNetworkGatewayTypePtrType)(v)
}

func (*localNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypePtrOutput)
}

// A common class for general resource information.
type LocalNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocalNetworkGatewayType) *LocalNetworkGatewayType {
		return &v
	}).(LocalNetworkGatewayTypePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayTypeOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypeOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypeOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *AddressSpace { return v.LocalNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LocalNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) Elem() LocalNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) LocalNetworkGatewayType {
		if v != nil {
			return *v
		}
		var ret LocalNetworkGatewayType
		return ret
	}).(LocalNetworkGatewayTypeOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayTypePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypePtrOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A common class for general resource information.
type LocalNetworkGatewayResponse struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// FQDN of local network gateway.
	Fqdn *string `pulumi:"fqdn"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpaceResponse `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the local network gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the local network gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// A common class for general resource information.
type LocalNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return o
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponseOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponseOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *AddressSpaceResponse { return v.LocalNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the local network gateway resource.
func (o LocalNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the local network gateway resource.
func (o LocalNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LocalNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) Elem() LocalNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) LocalNetworkGatewayResponse {
		if v != nil {
			return *v
		}
		var ret LocalNetworkGatewayResponse
		return ret
	}).(LocalNetworkGatewayResponseOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponsePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponsePtrOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the local network gateway resource.
func (o LocalNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the local network gateway resource.
func (o LocalNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusion struct {
	// The variable type to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// Selector value for which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ManagedRuleExclusionInput is an input type that accepts ManagedRuleExclusionArgs and ManagedRuleExclusionOutput values.
// You can construct a concrete instance of `ManagedRuleExclusionInput` via:
//
//	ManagedRuleExclusionArgs{...}
type ManagedRuleExclusionInput interface {
	pulumi.Input

	ToManagedRuleExclusionOutput() ManagedRuleExclusionOutput
	ToManagedRuleExclusionOutputWithContext(context.Context) ManagedRuleExclusionOutput
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionArgs struct {
	// The variable type to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Selector value for which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ManagedRuleExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleExclusion)(nil)).Elem()
}

func (i ManagedRuleExclusionArgs) ToManagedRuleExclusionOutput() ManagedRuleExclusionOutput {
	return i.ToManagedRuleExclusionOutputWithContext(context.Background())
}

func (i ManagedRuleExclusionArgs) ToManagedRuleExclusionOutputWithContext(ctx context.Context) ManagedRuleExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleExclusionOutput)
}

// ManagedRuleExclusionArrayInput is an input type that accepts ManagedRuleExclusionArray and ManagedRuleExclusionArrayOutput values.
// You can construct a concrete instance of `ManagedRuleExclusionArrayInput` via:
//
//	ManagedRuleExclusionArray{ ManagedRuleExclusionArgs{...} }
type ManagedRuleExclusionArrayInput interface {
	pulumi.Input

	ToManagedRuleExclusionArrayOutput() ManagedRuleExclusionArrayOutput
	ToManagedRuleExclusionArrayOutputWithContext(context.Context) ManagedRuleExclusionArrayOutput
}

type ManagedRuleExclusionArray []ManagedRuleExclusionInput

func (ManagedRuleExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleExclusion)(nil)).Elem()
}

func (i ManagedRuleExclusionArray) ToManagedRuleExclusionArrayOutput() ManagedRuleExclusionArrayOutput {
	return i.ToManagedRuleExclusionArrayOutputWithContext(context.Background())
}

func (i ManagedRuleExclusionArray) ToManagedRuleExclusionArrayOutputWithContext(ctx context.Context) ManagedRuleExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleExclusionArrayOutput)
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionOutput struct{ *pulumi.OutputState }

func (ManagedRuleExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleExclusion)(nil)).Elem()
}

func (o ManagedRuleExclusionOutput) ToManagedRuleExclusionOutput() ManagedRuleExclusionOutput {
	return o
}

func (o ManagedRuleExclusionOutput) ToManagedRuleExclusionOutputWithContext(ctx context.Context) ManagedRuleExclusionOutput {
	return o
}

// The variable type to be excluded.
func (o ManagedRuleExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Selector value for which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusion) string { return v.Selector }).(pulumi.StringOutput)
}

// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusion) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ManagedRuleExclusionArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleExclusion)(nil)).Elem()
}

func (o ManagedRuleExclusionArrayOutput) ToManagedRuleExclusionArrayOutput() ManagedRuleExclusionArrayOutput {
	return o
}

func (o ManagedRuleExclusionArrayOutput) ToManagedRuleExclusionArrayOutputWithContext(ctx context.Context) ManagedRuleExclusionArrayOutput {
	return o
}

func (o ManagedRuleExclusionArrayOutput) Index(i pulumi.IntInput) ManagedRuleExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleExclusion {
		return vs[0].([]ManagedRuleExclusion)[vs[1].(int)]
	}).(ManagedRuleExclusionOutput)
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionResponse struct {
	// The variable type to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// Selector value for which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleExclusionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleExclusionResponse)(nil)).Elem()
}

func (o ManagedRuleExclusionResponseOutput) ToManagedRuleExclusionResponseOutput() ManagedRuleExclusionResponseOutput {
	return o
}

func (o ManagedRuleExclusionResponseOutput) ToManagedRuleExclusionResponseOutputWithContext(ctx context.Context) ManagedRuleExclusionResponseOutput {
	return o
}

// The variable type to be excluded.
func (o ManagedRuleExclusionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Selector value for which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusionResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusionResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ManagedRuleExclusionResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleExclusionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleExclusionResponse)(nil)).Elem()
}

func (o ManagedRuleExclusionResponseArrayOutput) ToManagedRuleExclusionResponseArrayOutput() ManagedRuleExclusionResponseArrayOutput {
	return o
}

func (o ManagedRuleExclusionResponseArrayOutput) ToManagedRuleExclusionResponseArrayOutputWithContext(ctx context.Context) ManagedRuleExclusionResponseArrayOutput {
	return o
}

func (o ManagedRuleExclusionResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleExclusionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleExclusionResponse {
		return vs[0].([]ManagedRuleExclusionResponse)[vs[1].(int)]
	}).(ManagedRuleExclusionResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverride struct {
	// The managed rule group to override.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverride `pulumi:"rules"`
}

// ManagedRuleGroupOverrideInput is an input type that accepts ManagedRuleGroupOverrideArgs and ManagedRuleGroupOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInput` via:
//
//	ManagedRuleGroupOverrideArgs{...}
type ManagedRuleGroupOverrideInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput
	ToManagedRuleGroupOverrideOutputWithContext(context.Context) ManagedRuleGroupOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideArgs struct {
	// The managed rule group to override.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return i.ToManagedRuleGroupOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideOutput)
}

// ManagedRuleGroupOverrideArrayInput is an input type that accepts ManagedRuleGroupOverrideArray and ManagedRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideArrayInput` via:
//
//	ManagedRuleGroupOverrideArray{ ManagedRuleGroupOverrideArgs{...} }
type ManagedRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput
	ToManagedRuleGroupOverrideArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideArrayOutput
}

type ManagedRuleGroupOverrideArray []ManagedRuleGroupOverrideInput

func (ManagedRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return i.ToManagedRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return o
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return o
}

// The managed rule group to override.
func (o ManagedRuleGroupOverrideOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideOutput) Rules() ManagedRuleOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) []ManagedRuleOverride { return v.Rules }).(ManagedRuleOverrideArrayOutput)
}

type ManagedRuleGroupOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverride {
		return vs[0].([]ManagedRuleGroupOverride)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponse struct {
	// The managed rule group to override.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverrideResponse `pulumi:"rules"`
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return o
}

// The managed rule group to override.
func (o ManagedRuleGroupOverrideResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideResponseOutput) Rules() ManagedRuleOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) []ManagedRuleOverrideResponse { return v.Rules }).(ManagedRuleOverrideResponseArrayOutput)
}

type ManagedRuleGroupOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverrideResponse {
		return vs[0].([]ManagedRuleGroupOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverride struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
	// The state of the managed rule. Defaults to Disabled if not specified.
	State *string `pulumi:"state"`
}

// ManagedRuleOverrideInput is an input type that accepts ManagedRuleOverrideArgs and ManagedRuleOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInput` via:
//
//	ManagedRuleOverrideArgs{...}
type ManagedRuleOverrideInput interface {
	pulumi.Input

	ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput
	ToManagedRuleOverrideOutputWithContext(context.Context) ManagedRuleOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The state of the managed rule. Defaults to Disabled if not specified.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ManagedRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return i.ToManagedRuleOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideOutput)
}

// ManagedRuleOverrideArrayInput is an input type that accepts ManagedRuleOverrideArray and ManagedRuleOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideArrayInput` via:
//
//	ManagedRuleOverrideArray{ ManagedRuleOverrideArgs{...} }
type ManagedRuleOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput
	ToManagedRuleOverrideArrayOutputWithContext(context.Context) ManagedRuleOverrideArrayOutput
}

type ManagedRuleOverrideArray []ManagedRuleOverrideInput

func (ManagedRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return i.ToManagedRuleOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return o
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverride) string { return v.RuleId }).(pulumi.StringOutput)
}

// The state of the managed rule. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverride {
		return vs[0].([]ManagedRuleOverride)[vs[1].(int)]
	}).(ManagedRuleOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponse struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
	// The state of the managed rule. Defaults to Disabled if not specified.
	State *string `pulumi:"state"`
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return o
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

// The state of the managed rule. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedRuleOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverrideResponse {
		return vs[0].([]ManagedRuleOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleOverrideResponseOutput)
}

// Defines a managed rule set.
type ManagedRuleSet struct {
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetInput is an input type that accepts ManagedRuleSetArgs and ManagedRuleSetOutput values.
// You can construct a concrete instance of `ManagedRuleSetInput` via:
//
//	ManagedRuleSetArgs{...}
type ManagedRuleSetInput interface {
	pulumi.Input

	ToManagedRuleSetOutput() ManagedRuleSetOutput
	ToManagedRuleSetOutputWithContext(context.Context) ManagedRuleSetOutput
}

// Defines a managed rule set.
type ManagedRuleSetArgs struct {
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return i.ToManagedRuleSetOutputWithContext(context.Background())
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetOutput)
}

// ManagedRuleSetArrayInput is an input type that accepts ManagedRuleSetArray and ManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetArrayInput` via:
//
//	ManagedRuleSetArray{ ManagedRuleSetArgs{...} }
type ManagedRuleSetArrayInput interface {
	pulumi.Input

	ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput
	ToManagedRuleSetArrayOutputWithContext(context.Context) ManagedRuleSetArrayOutput
}

type ManagedRuleSetArray []ManagedRuleSetInput

func (ManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return i.ToManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return o
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return o
}

// Defines the rule group overrides to apply to the rule set.
func (o ManagedRuleSetOutput) RuleGroupOverrides() ManagedRuleGroupOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleSet) []ManagedRuleGroupOverride { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSet {
		return vs[0].([]ManagedRuleSet)[vs[1].(int)]
	}).(ManagedRuleSetOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetList struct {
	// List of rule sets.
	ManagedRuleSets []FrontDoorManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListInput is an input type that accepts ManagedRuleSetListArgs and ManagedRuleSetListOutput values.
// You can construct a concrete instance of `ManagedRuleSetListInput` via:
//
//	ManagedRuleSetListArgs{...}
type ManagedRuleSetListInput interface {
	pulumi.Input

	ToManagedRuleSetListOutput() ManagedRuleSetListOutput
	ToManagedRuleSetListOutputWithContext(context.Context) ManagedRuleSetListOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListArgs struct {
	// List of rule sets.
	ManagedRuleSets FrontDoorManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return i.ToManagedRuleSetListOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput)
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput).ToManagedRuleSetListPtrOutputWithContext(ctx)
}

// ManagedRuleSetListPtrInput is an input type that accepts ManagedRuleSetListArgs, ManagedRuleSetListPtr and ManagedRuleSetListPtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListPtrInput` via:
//
//	        ManagedRuleSetListArgs{...}
//
//	or:
//
//	        nil
type ManagedRuleSetListPtrInput interface {
	pulumi.Input

	ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput
	ToManagedRuleSetListPtrOutputWithContext(context.Context) ManagedRuleSetListPtrOutput
}

type managedRuleSetListPtrType ManagedRuleSetListArgs

func ManagedRuleSetListPtr(v *ManagedRuleSetListArgs) ManagedRuleSetListPtrInput {
	return (*managedRuleSetListPtrType)(v)
}

func (*managedRuleSetListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListPtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedRuleSetList) *ManagedRuleSetList {
		return &v
	}).(ManagedRuleSetListPtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListOutput) ManagedRuleSets() FrontDoorManagedRuleSetArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetList) []FrontDoorManagedRuleSet { return v.ManagedRuleSets }).(FrontDoorManagedRuleSetArrayOutput)
}

type ManagedRuleSetListPtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) Elem() ManagedRuleSetListOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) ManagedRuleSetList {
		if v != nil {
			return *v
		}
		var ret ManagedRuleSetList
		return ret
	}).(ManagedRuleSetListOutput)
}

// List of rule sets.
func (o ManagedRuleSetListPtrOutput) ManagedRuleSets() FrontDoorManagedRuleSetArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) []FrontDoorManagedRuleSet {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(FrontDoorManagedRuleSetArrayOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponse struct {
	// List of rule sets.
	ManagedRuleSets []FrontDoorManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return o
}

// List of rule sets.
func (o ManagedRuleSetListResponseOutput) ManagedRuleSets() FrontDoorManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) []FrontDoorManagedRuleSetResponse { return v.ManagedRuleSets }).(FrontDoorManagedRuleSetResponseArrayOutput)
}

type ManagedRuleSetListResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) Elem() ManagedRuleSetListResponseOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) ManagedRuleSetListResponse {
		if v != nil {
			return *v
		}
		var ret ManagedRuleSetListResponse
		return ret
	}).(ManagedRuleSetListResponseOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponsePtrOutput) ManagedRuleSets() FrontDoorManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) []FrontDoorManagedRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(FrontDoorManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponse struct {
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverrideResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// Defines a managed rule set.
type ManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return o
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return o
}

// Defines the rule group overrides to apply to the rule set.
func (o ManagedRuleSetResponseOutput) RuleGroupOverrides() ManagedRuleGroupOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) []ManagedRuleGroupOverrideResponse { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSetResponse {
		return vs[0].([]ManagedRuleSetResponse)[vs[1].(int)]
	}).(ManagedRuleSetResponseOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinition struct {
	// The Exclusions that are applied on the policy.
	Exclusions []OwaspCrsExclusionEntry `pulumi:"exclusions"`
	// The managed rule sets that are associated with the policy.
	ManagedRuleSets []ManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRulesDefinitionInput is an input type that accepts ManagedRulesDefinitionArgs and ManagedRulesDefinitionOutput values.
// You can construct a concrete instance of `ManagedRulesDefinitionInput` via:
//
//	ManagedRulesDefinitionArgs{...}
type ManagedRulesDefinitionInput interface {
	pulumi.Input

	ToManagedRulesDefinitionOutput() ManagedRulesDefinitionOutput
	ToManagedRulesDefinitionOutputWithContext(context.Context) ManagedRulesDefinitionOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionArgs struct {
	// The Exclusions that are applied on the policy.
	Exclusions OwaspCrsExclusionEntryArrayInput `pulumi:"exclusions"`
	// The managed rule sets that are associated with the policy.
	ManagedRuleSets ManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRulesDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRulesDefinition)(nil)).Elem()
}

func (i ManagedRulesDefinitionArgs) ToManagedRulesDefinitionOutput() ManagedRulesDefinitionOutput {
	return i.ToManagedRulesDefinitionOutputWithContext(context.Background())
}

func (i ManagedRulesDefinitionArgs) ToManagedRulesDefinitionOutputWithContext(ctx context.Context) ManagedRulesDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRulesDefinitionOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionOutput struct{ *pulumi.OutputState }

func (ManagedRulesDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRulesDefinition)(nil)).Elem()
}

func (o ManagedRulesDefinitionOutput) ToManagedRulesDefinitionOutput() ManagedRulesDefinitionOutput {
	return o
}

func (o ManagedRulesDefinitionOutput) ToManagedRulesDefinitionOutputWithContext(ctx context.Context) ManagedRulesDefinitionOutput {
	return o
}

// The Exclusions that are applied on the policy.
func (o ManagedRulesDefinitionOutput) Exclusions() OwaspCrsExclusionEntryArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinition) []OwaspCrsExclusionEntry { return v.Exclusions }).(OwaspCrsExclusionEntryArrayOutput)
}

// The managed rule sets that are associated with the policy.
func (o ManagedRulesDefinitionOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinition) []ManagedRuleSet { return v.ManagedRuleSets }).(ManagedRuleSetArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionResponse struct {
	// The Exclusions that are applied on the policy.
	Exclusions []OwaspCrsExclusionEntryResponse `pulumi:"exclusions"`
	// The managed rule sets that are associated with the policy.
	ManagedRuleSets []ManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ManagedRulesDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRulesDefinitionResponse)(nil)).Elem()
}

func (o ManagedRulesDefinitionResponseOutput) ToManagedRulesDefinitionResponseOutput() ManagedRulesDefinitionResponseOutput {
	return o
}

func (o ManagedRulesDefinitionResponseOutput) ToManagedRulesDefinitionResponseOutputWithContext(ctx context.Context) ManagedRulesDefinitionResponseOutput {
	return o
}

// The Exclusions that are applied on the policy.
func (o ManagedRulesDefinitionResponseOutput) Exclusions() OwaspCrsExclusionEntryResponseArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinitionResponse) []OwaspCrsExclusionEntryResponse { return v.Exclusions }).(OwaspCrsExclusionEntryResponseArrayOutput)
}

// The managed rule sets that are associated with the policy.
func (o ManagedRulesDefinitionResponseOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinitionResponse) []ManagedRuleSetResponse { return v.ManagedRuleSets }).(ManagedRuleSetResponseArrayOutput)
}

// Identity for the resource.
type ManagedServiceIdentity struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type *ResourceIdentityType `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Identity for the resource.
type ManagedServiceIdentityArgs struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Identity for the resource.
type ManagedServiceIdentityResponse struct {
	// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type *string `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]ManagedServiceIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentities struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// The client id of user assigned identity.
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedServiceIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// Define match conditions.
type MatchCondition struct {
	// Match value.
	MatchValues []string `pulumi:"matchValues"`
	// List of match variables.
	MatchVariables []MatchVariable `pulumi:"matchVariables"`
	// Whether this is negate condition or not.
	NegationConditon *bool `pulumi:"negationConditon"`
	// The operator to be matched.
	Operator string `pulumi:"operator"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionInput is an input type that accepts MatchConditionArgs and MatchConditionOutput values.
// You can construct a concrete instance of `MatchConditionInput` via:
//
//	MatchConditionArgs{...}
type MatchConditionInput interface {
	pulumi.Input

	ToMatchConditionOutput() MatchConditionOutput
	ToMatchConditionOutputWithContext(context.Context) MatchConditionOutput
}

// Define match conditions.
type MatchConditionArgs struct {
	// Match value.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// List of match variables.
	MatchVariables MatchVariableArrayInput `pulumi:"matchVariables"`
	// Whether this is negate condition or not.
	NegationConditon pulumi.BoolPtrInput `pulumi:"negationConditon"`
	// The operator to be matched.
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (i MatchConditionArgs) ToMatchConditionOutput() MatchConditionOutput {
	return i.ToMatchConditionOutputWithContext(context.Background())
}

func (i MatchConditionArgs) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionOutput)
}

// MatchConditionArrayInput is an input type that accepts MatchConditionArray and MatchConditionArrayOutput values.
// You can construct a concrete instance of `MatchConditionArrayInput` via:
//
//	MatchConditionArray{ MatchConditionArgs{...} }
type MatchConditionArrayInput interface {
	pulumi.Input

	ToMatchConditionArrayOutput() MatchConditionArrayOutput
	ToMatchConditionArrayOutputWithContext(context.Context) MatchConditionArrayOutput
}

type MatchConditionArray []MatchConditionInput

func (MatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (i MatchConditionArray) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return i.ToMatchConditionArrayOutputWithContext(context.Background())
}

func (i MatchConditionArray) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionArrayOutput)
}

// Define match conditions.
type MatchConditionOutput struct{ *pulumi.OutputState }

func (MatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (o MatchConditionOutput) ToMatchConditionOutput() MatchConditionOutput {
	return o
}

func (o MatchConditionOutput) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return o
}

// Match value.
func (o MatchConditionOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// List of match variables.
func (o MatchConditionOutput) MatchVariables() MatchVariableArrayOutput {
	return o.ApplyT(func(v MatchCondition) []MatchVariable { return v.MatchVariables }).(MatchVariableArrayOutput)
}

// Whether this is negate condition or not.
func (o MatchConditionOutput) NegationConditon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchCondition) *bool { return v.NegationConditon }).(pulumi.BoolPtrOutput)
}

// The operator to be matched.
func (o MatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms.
func (o MatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) Index(i pulumi.IntInput) MatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchCondition {
		return vs[0].([]MatchCondition)[vs[1].(int)]
	}).(MatchConditionOutput)
}

// Define match conditions.
type MatchConditionResponse struct {
	// Match value.
	MatchValues []string `pulumi:"matchValues"`
	// List of match variables.
	MatchVariables []MatchVariableResponse `pulumi:"matchVariables"`
	// Whether this is negate condition or not.
	NegationConditon *bool `pulumi:"negationConditon"`
	// The operator to be matched.
	Operator string `pulumi:"operator"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// Define match conditions.
type MatchConditionResponseOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return o
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return o
}

// Match value.
func (o MatchConditionResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// List of match variables.
func (o MatchConditionResponseOutput) MatchVariables() MatchVariableResponseArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []MatchVariableResponse { return v.MatchVariables }).(MatchVariableResponseArrayOutput)
}

// Whether this is negate condition or not.
func (o MatchConditionResponseOutput) NegationConditon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *bool { return v.NegationConditon }).(pulumi.BoolPtrOutput)
}

// The operator to be matched.
func (o MatchConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms.
func (o MatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) Index(i pulumi.IntInput) MatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchConditionResponse {
		return vs[0].([]MatchConditionResponse)[vs[1].(int)]
	}).(MatchConditionResponseOutput)
}

// Define match variables.
type MatchVariable struct {
	// The selector of match variable.
	Selector *string `pulumi:"selector"`
	// Match Variable.
	VariableName string `pulumi:"variableName"`
}

// MatchVariableInput is an input type that accepts MatchVariableArgs and MatchVariableOutput values.
// You can construct a concrete instance of `MatchVariableInput` via:
//
//	MatchVariableArgs{...}
type MatchVariableInput interface {
	pulumi.Input

	ToMatchVariableOutput() MatchVariableOutput
	ToMatchVariableOutputWithContext(context.Context) MatchVariableOutput
}

// Define match variables.
type MatchVariableArgs struct {
	// The selector of match variable.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// Match Variable.
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (MatchVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchVariable)(nil)).Elem()
}

func (i MatchVariableArgs) ToMatchVariableOutput() MatchVariableOutput {
	return i.ToMatchVariableOutputWithContext(context.Background())
}

func (i MatchVariableArgs) ToMatchVariableOutputWithContext(ctx context.Context) MatchVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchVariableOutput)
}

// MatchVariableArrayInput is an input type that accepts MatchVariableArray and MatchVariableArrayOutput values.
// You can construct a concrete instance of `MatchVariableArrayInput` via:
//
//	MatchVariableArray{ MatchVariableArgs{...} }
type MatchVariableArrayInput interface {
	pulumi.Input

	ToMatchVariableArrayOutput() MatchVariableArrayOutput
	ToMatchVariableArrayOutputWithContext(context.Context) MatchVariableArrayOutput
}

type MatchVariableArray []MatchVariableInput

func (MatchVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchVariable)(nil)).Elem()
}

func (i MatchVariableArray) ToMatchVariableArrayOutput() MatchVariableArrayOutput {
	return i.ToMatchVariableArrayOutputWithContext(context.Background())
}

func (i MatchVariableArray) ToMatchVariableArrayOutputWithContext(ctx context.Context) MatchVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchVariableArrayOutput)
}

// Define match variables.
type MatchVariableOutput struct{ *pulumi.OutputState }

func (MatchVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchVariable)(nil)).Elem()
}

func (o MatchVariableOutput) ToMatchVariableOutput() MatchVariableOutput {
	return o
}

func (o MatchVariableOutput) ToMatchVariableOutputWithContext(ctx context.Context) MatchVariableOutput {
	return o
}

// The selector of match variable.
func (o MatchVariableOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchVariable) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Match Variable.
func (o MatchVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v MatchVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type MatchVariableArrayOutput struct{ *pulumi.OutputState }

func (MatchVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchVariable)(nil)).Elem()
}

func (o MatchVariableArrayOutput) ToMatchVariableArrayOutput() MatchVariableArrayOutput {
	return o
}

func (o MatchVariableArrayOutput) ToMatchVariableArrayOutputWithContext(ctx context.Context) MatchVariableArrayOutput {
	return o
}

func (o MatchVariableArrayOutput) Index(i pulumi.IntInput) MatchVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchVariable {
		return vs[0].([]MatchVariable)[vs[1].(int)]
	}).(MatchVariableOutput)
}

// Define match variables.
type MatchVariableResponse struct {
	// The selector of match variable.
	Selector *string `pulumi:"selector"`
	// Match Variable.
	VariableName string `pulumi:"variableName"`
}

// Define match variables.
type MatchVariableResponseOutput struct{ *pulumi.OutputState }

func (MatchVariableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchVariableResponse)(nil)).Elem()
}

func (o MatchVariableResponseOutput) ToMatchVariableResponseOutput() MatchVariableResponseOutput {
	return o
}

func (o MatchVariableResponseOutput) ToMatchVariableResponseOutputWithContext(ctx context.Context) MatchVariableResponseOutput {
	return o
}

// The selector of match variable.
func (o MatchVariableResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchVariableResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Match Variable.
func (o MatchVariableResponseOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v MatchVariableResponse) string { return v.VariableName }).(pulumi.StringOutput)
}

type MatchVariableResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchVariableResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchVariableResponse)(nil)).Elem()
}

func (o MatchVariableResponseArrayOutput) ToMatchVariableResponseArrayOutput() MatchVariableResponseArrayOutput {
	return o
}

func (o MatchVariableResponseArrayOutput) ToMatchVariableResponseArrayOutputWithContext(ctx context.Context) MatchVariableResponseArrayOutput {
	return o
}

func (o MatchVariableResponseArrayOutput) Index(i pulumi.IntInput) MatchVariableResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchVariableResponse {
		return vs[0].([]MatchVariableResponse)[vs[1].(int)]
	}).(MatchVariableResponseOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfig struct {
	// List of custom headers.
	CustomHeaders []MonitorConfigCustomHeaders `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges []MonitorConfigExpectedStatusCodeRanges `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds *float64 `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path *string `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port *float64 `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus *string `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol *string `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures *float64 `pulumi:"toleratedNumberOfFailures"`
}

// MonitorConfigInput is an input type that accepts MonitorConfigArgs and MonitorConfigOutput values.
// You can construct a concrete instance of `MonitorConfigInput` via:
//
//	MonitorConfigArgs{...}
type MonitorConfigInput interface {
	pulumi.Input

	ToMonitorConfigOutput() MonitorConfigOutput
	ToMonitorConfigOutputWithContext(context.Context) MonitorConfigOutput
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigArgs struct {
	// List of custom headers.
	CustomHeaders MonitorConfigCustomHeadersArrayInput `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges MonitorConfigExpectedStatusCodeRangesArrayInput `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds pulumi.Float64PtrInput `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port pulumi.Float64PtrInput `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus pulumi.StringPtrInput `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds pulumi.Float64PtrInput `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures pulumi.Float64PtrInput `pulumi:"toleratedNumberOfFailures"`
}

func (MonitorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfig)(nil)).Elem()
}

func (i MonitorConfigArgs) ToMonitorConfigOutput() MonitorConfigOutput {
	return i.ToMonitorConfigOutputWithContext(context.Background())
}

func (i MonitorConfigArgs) ToMonitorConfigOutputWithContext(ctx context.Context) MonitorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigOutput)
}

func (i MonitorConfigArgs) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return i.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (i MonitorConfigArgs) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigOutput).ToMonitorConfigPtrOutputWithContext(ctx)
}

// MonitorConfigPtrInput is an input type that accepts MonitorConfigArgs, MonitorConfigPtr and MonitorConfigPtrOutput values.
// You can construct a concrete instance of `MonitorConfigPtrInput` via:
//
//	        MonitorConfigArgs{...}
//
//	or:
//
//	        nil
type MonitorConfigPtrInput interface {
	pulumi.Input

	ToMonitorConfigPtrOutput() MonitorConfigPtrOutput
	ToMonitorConfigPtrOutputWithContext(context.Context) MonitorConfigPtrOutput
}

type monitorConfigPtrType MonitorConfigArgs

func MonitorConfigPtr(v *MonitorConfigArgs) MonitorConfigPtrInput {
	return (*monitorConfigPtrType)(v)
}

func (*monitorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfig)(nil)).Elem()
}

func (i *monitorConfigPtrType) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return i.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (i *monitorConfigPtrType) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigPtrOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigOutput struct{ *pulumi.OutputState }

func (MonitorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfig)(nil)).Elem()
}

func (o MonitorConfigOutput) ToMonitorConfigOutput() MonitorConfigOutput {
	return o
}

func (o MonitorConfigOutput) ToMonitorConfigOutputWithContext(ctx context.Context) MonitorConfigOutput {
	return o
}

func (o MonitorConfigOutput) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return o.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (o MonitorConfigOutput) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorConfig) *MonitorConfig {
		return &v
	}).(MonitorConfigPtrOutput)
}

// List of custom headers.
func (o MonitorConfigOutput) CustomHeaders() MonitorConfigCustomHeadersArrayOutput {
	return o.ApplyT(func(v MonitorConfig) []MonitorConfigCustomHeaders { return v.CustomHeaders }).(MonitorConfigCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigOutput) ExpectedStatusCodeRanges() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v MonitorConfig) []MonitorConfigExpectedStatusCodeRanges { return v.ExpectedStatusCodeRanges }).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigOutput) IntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfig) *float64 { return v.IntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfig) *float64 { return v.Port }).(pulumi.Float64PtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.ProfileMonitorStatus }).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfig) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigOutput) ToleratedNumberOfFailures() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfig) *float64 { return v.ToleratedNumberOfFailures }).(pulumi.Float64PtrOutput)
}

type MonitorConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfig)(nil)).Elem()
}

func (o MonitorConfigPtrOutput) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return o
}

func (o MonitorConfigPtrOutput) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return o
}

func (o MonitorConfigPtrOutput) Elem() MonitorConfigOutput {
	return o.ApplyT(func(v *MonitorConfig) MonitorConfig {
		if v != nil {
			return *v
		}
		var ret MonitorConfig
		return ret
	}).(MonitorConfigOutput)
}

// List of custom headers.
func (o MonitorConfigPtrOutput) CustomHeaders() MonitorConfigCustomHeadersArrayOutput {
	return o.ApplyT(func(v *MonitorConfig) []MonitorConfigCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(MonitorConfigCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigPtrOutput) ExpectedStatusCodeRanges() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v *MonitorConfig) []MonitorConfigExpectedStatusCodeRanges {
		if v == nil {
			return nil
		}
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigPtrOutput) IntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.Float64PtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigPtrOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProfileMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigPtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigPtrOutput) ToleratedNumberOfFailures() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.ToleratedNumberOfFailures
	}).(pulumi.Float64PtrOutput)
}

// Custom header name and value.
type MonitorConfigCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// MonitorConfigCustomHeadersInput is an input type that accepts MonitorConfigCustomHeadersArgs and MonitorConfigCustomHeadersOutput values.
// You can construct a concrete instance of `MonitorConfigCustomHeadersInput` via:
//
//	MonitorConfigCustomHeadersArgs{...}
type MonitorConfigCustomHeadersInput interface {
	pulumi.Input

	ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput
	ToMonitorConfigCustomHeadersOutputWithContext(context.Context) MonitorConfigCustomHeadersOutput
}

// Custom header name and value.
type MonitorConfigCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MonitorConfigCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigCustomHeadersArgs) ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput {
	return i.ToMonitorConfigCustomHeadersOutputWithContext(context.Background())
}

func (i MonitorConfigCustomHeadersArgs) ToMonitorConfigCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigCustomHeadersOutput)
}

// MonitorConfigCustomHeadersArrayInput is an input type that accepts MonitorConfigCustomHeadersArray and MonitorConfigCustomHeadersArrayOutput values.
// You can construct a concrete instance of `MonitorConfigCustomHeadersArrayInput` via:
//
//	MonitorConfigCustomHeadersArray{ MonitorConfigCustomHeadersArgs{...} }
type MonitorConfigCustomHeadersArrayInput interface {
	pulumi.Input

	ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput
	ToMonitorConfigCustomHeadersArrayOutputWithContext(context.Context) MonitorConfigCustomHeadersArrayOutput
}

type MonitorConfigCustomHeadersArray []MonitorConfigCustomHeadersInput

func (MonitorConfigCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigCustomHeadersArray) ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput {
	return i.ToMonitorConfigCustomHeadersArrayOutputWithContext(context.Background())
}

func (i MonitorConfigCustomHeadersArray) ToMonitorConfigCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigCustomHeadersArrayOutput)
}

// Custom header name and value.
type MonitorConfigCustomHeadersOutput struct{ *pulumi.OutputState }

func (MonitorConfigCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigCustomHeadersOutput) ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput {
	return o
}

func (o MonitorConfigCustomHeadersOutput) ToMonitorConfigCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersOutput {
	return o
}

// Header name.
func (o MonitorConfigCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o MonitorConfigCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitorConfigCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigCustomHeadersArrayOutput) ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigCustomHeadersArrayOutput) ToMonitorConfigCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigCustomHeadersArrayOutput) Index(i pulumi.IntInput) MonitorConfigCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigCustomHeaders {
		return vs[0].([]MonitorConfigCustomHeaders)[vs[1].(int)]
	}).(MonitorConfigCustomHeadersOutput)
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRanges struct {
	// Max status code.
	Max *int `pulumi:"max"`
	// Min status code.
	Min *int `pulumi:"min"`
}

// MonitorConfigExpectedStatusCodeRangesInput is an input type that accepts MonitorConfigExpectedStatusCodeRangesArgs and MonitorConfigExpectedStatusCodeRangesOutput values.
// You can construct a concrete instance of `MonitorConfigExpectedStatusCodeRangesInput` via:
//
//	MonitorConfigExpectedStatusCodeRangesArgs{...}
type MonitorConfigExpectedStatusCodeRangesInput interface {
	pulumi.Input

	ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput
	ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(context.Context) MonitorConfigExpectedStatusCodeRangesOutput
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRangesArgs struct {
	// Max status code.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Min status code.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (MonitorConfigExpectedStatusCodeRangesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigExpectedStatusCodeRangesArgs) ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput {
	return i.ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(context.Background())
}

func (i MonitorConfigExpectedStatusCodeRangesArgs) ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigExpectedStatusCodeRangesOutput)
}

// MonitorConfigExpectedStatusCodeRangesArrayInput is an input type that accepts MonitorConfigExpectedStatusCodeRangesArray and MonitorConfigExpectedStatusCodeRangesArrayOutput values.
// You can construct a concrete instance of `MonitorConfigExpectedStatusCodeRangesArrayInput` via:
//
//	MonitorConfigExpectedStatusCodeRangesArray{ MonitorConfigExpectedStatusCodeRangesArgs{...} }
type MonitorConfigExpectedStatusCodeRangesArrayInput interface {
	pulumi.Input

	ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput
	ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput
}

type MonitorConfigExpectedStatusCodeRangesArray []MonitorConfigExpectedStatusCodeRangesInput

func (MonitorConfigExpectedStatusCodeRangesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigExpectedStatusCodeRangesArray) ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return i.ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(context.Background())
}

func (i MonitorConfigExpectedStatusCodeRangesArray) ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRangesOutput struct{ *pulumi.OutputState }

func (MonitorConfigExpectedStatusCodeRangesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigExpectedStatusCodeRangesOutput) ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesOutput) ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesOutput {
	return o
}

// Max status code.
func (o MonitorConfigExpectedStatusCodeRangesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigExpectedStatusCodeRanges) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Min status code.
func (o MonitorConfigExpectedStatusCodeRangesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigExpectedStatusCodeRanges) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MonitorConfigExpectedStatusCodeRangesArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigExpectedStatusCodeRangesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) Index(i pulumi.IntInput) MonitorConfigExpectedStatusCodeRangesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigExpectedStatusCodeRanges {
		return vs[0].([]MonitorConfigExpectedStatusCodeRanges)[vs[1].(int)]
	}).(MonitorConfigExpectedStatusCodeRangesOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponse struct {
	// List of custom headers.
	CustomHeaders []MonitorConfigResponseCustomHeaders `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges []MonitorConfigResponseExpectedStatusCodeRanges `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds *float64 `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path *string `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port *float64 `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus *string `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol *string `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures *float64 `pulumi:"toleratedNumberOfFailures"`
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponseOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponse)(nil)).Elem()
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponseOutput() MonitorConfigResponseOutput {
	return o
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponseOutputWithContext(ctx context.Context) MonitorConfigResponseOutput {
	return o
}

// List of custom headers.
func (o MonitorConfigResponseOutput) CustomHeaders() MonitorConfigResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v MonitorConfigResponse) []MonitorConfigResponseCustomHeaders { return v.CustomHeaders }).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigResponseOutput) ExpectedStatusCodeRanges() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v MonitorConfigResponse) []MonitorConfigResponseExpectedStatusCodeRanges {
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigResponseOutput) IntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *float64 { return v.IntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *float64 { return v.Port }).(pulumi.Float64PtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigResponseOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.ProfileMonitorStatus }).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigResponseOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigResponseOutput) ToleratedNumberOfFailures() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *float64 { return v.ToleratedNumberOfFailures }).(pulumi.Float64PtrOutput)
}

type MonitorConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfigResponse)(nil)).Elem()
}

func (o MonitorConfigResponsePtrOutput) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return o
}

func (o MonitorConfigResponsePtrOutput) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return o
}

func (o MonitorConfigResponsePtrOutput) Elem() MonitorConfigResponseOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) MonitorConfigResponse {
		if v != nil {
			return *v
		}
		var ret MonitorConfigResponse
		return ret
	}).(MonitorConfigResponseOutput)
}

// List of custom headers.
func (o MonitorConfigResponsePtrOutput) CustomHeaders() MonitorConfigResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) []MonitorConfigResponseCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigResponsePtrOutput) ExpectedStatusCodeRanges() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) []MonitorConfigResponseExpectedStatusCodeRanges {
		if v == nil {
			return nil
		}
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigResponsePtrOutput) IntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.Float64PtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigResponsePtrOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProfileMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigResponsePtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigResponsePtrOutput) ToleratedNumberOfFailures() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.ToleratedNumberOfFailures
	}).(pulumi.Float64PtrOutput)
}

// Custom header name and value.
type MonitorConfigResponseCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// Custom header name and value.
type MonitorConfigResponseCustomHeadersOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigResponseCustomHeadersOutput) ToMonitorConfigResponseCustomHeadersOutput() MonitorConfigResponseCustomHeadersOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersOutput) ToMonitorConfigResponseCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersOutput {
	return o
}

// Header name.
func (o MonitorConfigResponseCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o MonitorConfigResponseCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitorConfigResponseCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) ToMonitorConfigResponseCustomHeadersArrayOutput() MonitorConfigResponseCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) Index(i pulumi.IntInput) MonitorConfigResponseCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigResponseCustomHeaders {
		return vs[0].([]MonitorConfigResponseCustomHeaders)[vs[1].(int)]
	}).(MonitorConfigResponseCustomHeadersOutput)
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRanges struct {
	// Max status code.
	Max *int `pulumi:"max"`
	// Min status code.
	Min *int `pulumi:"min"`
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRangesOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseExpectedStatusCodeRangesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) ToMonitorConfigResponseExpectedStatusCodeRangesOutput() MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return o
}

// Max status code.
func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseExpectedStatusCodeRanges) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Min status code.
func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseExpectedStatusCodeRanges) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MonitorConfigResponseExpectedStatusCodeRangesArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutput() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) Index(i pulumi.IntInput) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigResponseExpectedStatusCodeRanges {
		return vs[0].([]MonitorConfigResponseExpectedStatusCodeRanges)[vs[1].(int)]
	}).(MonitorConfigResponseExpectedStatusCodeRangesOutput)
}

// An MX record.
type MxRecord struct {
	// The domain name of the mail host for this MX record.
	Exchange *string `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference *int `pulumi:"preference"`
}

// MxRecordInput is an input type that accepts MxRecordArgs and MxRecordOutput values.
// You can construct a concrete instance of `MxRecordInput` via:
//
//	MxRecordArgs{...}
type MxRecordInput interface {
	pulumi.Input

	ToMxRecordOutput() MxRecordOutput
	ToMxRecordOutputWithContext(context.Context) MxRecordOutput
}

// An MX record.
type MxRecordArgs struct {
	// The domain name of the mail host for this MX record.
	Exchange pulumi.StringPtrInput `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference pulumi.IntPtrInput `pulumi:"preference"`
}

func (MxRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecord)(nil)).Elem()
}

func (i MxRecordArgs) ToMxRecordOutput() MxRecordOutput {
	return i.ToMxRecordOutputWithContext(context.Background())
}

func (i MxRecordArgs) ToMxRecordOutputWithContext(ctx context.Context) MxRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordOutput)
}

// MxRecordArrayInput is an input type that accepts MxRecordArray and MxRecordArrayOutput values.
// You can construct a concrete instance of `MxRecordArrayInput` via:
//
//	MxRecordArray{ MxRecordArgs{...} }
type MxRecordArrayInput interface {
	pulumi.Input

	ToMxRecordArrayOutput() MxRecordArrayOutput
	ToMxRecordArrayOutputWithContext(context.Context) MxRecordArrayOutput
}

type MxRecordArray []MxRecordInput

func (MxRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecord)(nil)).Elem()
}

func (i MxRecordArray) ToMxRecordArrayOutput() MxRecordArrayOutput {
	return i.ToMxRecordArrayOutputWithContext(context.Background())
}

func (i MxRecordArray) ToMxRecordArrayOutputWithContext(ctx context.Context) MxRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordArrayOutput)
}

// An MX record.
type MxRecordOutput struct{ *pulumi.OutputState }

func (MxRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecord)(nil)).Elem()
}

func (o MxRecordOutput) ToMxRecordOutput() MxRecordOutput {
	return o
}

func (o MxRecordOutput) ToMxRecordOutputWithContext(ctx context.Context) MxRecordOutput {
	return o
}

// The domain name of the mail host for this MX record.
func (o MxRecordOutput) Exchange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MxRecord) *string { return v.Exchange }).(pulumi.StringPtrOutput)
}

// The preference value for this MX record.
func (o MxRecordOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MxRecord) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type MxRecordArrayOutput struct{ *pulumi.OutputState }

func (MxRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecord)(nil)).Elem()
}

func (o MxRecordArrayOutput) ToMxRecordArrayOutput() MxRecordArrayOutput {
	return o
}

func (o MxRecordArrayOutput) ToMxRecordArrayOutputWithContext(ctx context.Context) MxRecordArrayOutput {
	return o
}

func (o MxRecordArrayOutput) Index(i pulumi.IntInput) MxRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MxRecord {
		return vs[0].([]MxRecord)[vs[1].(int)]
	}).(MxRecordOutput)
}

// An MX record.
type MxRecordResponse struct {
	// The domain name of the mail host for this MX record.
	Exchange *string `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference *int `pulumi:"preference"`
}

// An MX record.
type MxRecordResponseOutput struct{ *pulumi.OutputState }

func (MxRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecordResponse)(nil)).Elem()
}

func (o MxRecordResponseOutput) ToMxRecordResponseOutput() MxRecordResponseOutput {
	return o
}

func (o MxRecordResponseOutput) ToMxRecordResponseOutputWithContext(ctx context.Context) MxRecordResponseOutput {
	return o
}

// The domain name of the mail host for this MX record.
func (o MxRecordResponseOutput) Exchange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MxRecordResponse) *string { return v.Exchange }).(pulumi.StringPtrOutput)
}

// The preference value for this MX record.
func (o MxRecordResponseOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MxRecordResponse) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type MxRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (MxRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecordResponse)(nil)).Elem()
}

func (o MxRecordResponseArrayOutput) ToMxRecordResponseArrayOutput() MxRecordResponseArrayOutput {
	return o
}

func (o MxRecordResponseArrayOutput) ToMxRecordResponseArrayOutputWithContext(ctx context.Context) MxRecordResponseArrayOutput {
	return o
}

func (o MxRecordResponseArrayOutput) Index(i pulumi.IntInput) MxRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MxRecordResponse {
		return vs[0].([]MxRecordResponse)[vs[1].(int)]
	}).(MxRecordResponseOutput)
}

// Nat Gateway resource.
type NatGatewayType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the nat gateway.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Resource location.
	Location *string `pulumi:"location"`
	// An array of public ip addresses associated with the nat gateway resource.
	PublicIpAddresses []SubResource `pulumi:"publicIpAddresses"`
	// An array of public ip prefixes associated with the nat gateway resource.
	PublicIpPrefixes []SubResource `pulumi:"publicIpPrefixes"`
	// The nat gateway SKU.
	Sku *NatGatewaySku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
	Zones []string `pulumi:"zones"`
}

// NatGatewayTypeInput is an input type that accepts NatGatewayTypeArgs and NatGatewayTypeOutput values.
// You can construct a concrete instance of `NatGatewayTypeInput` via:
//
//	NatGatewayTypeArgs{...}
type NatGatewayTypeInput interface {
	pulumi.Input

	ToNatGatewayTypeOutput() NatGatewayTypeOutput
	ToNatGatewayTypeOutputWithContext(context.Context) NatGatewayTypeOutput
}

// Nat Gateway resource.
type NatGatewayTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the nat gateway.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// An array of public ip addresses associated with the nat gateway resource.
	PublicIpAddresses SubResourceArrayInput `pulumi:"publicIpAddresses"`
	// An array of public ip prefixes associated with the nat gateway resource.
	PublicIpPrefixes SubResourceArrayInput `pulumi:"publicIpPrefixes"`
	// The nat gateway SKU.
	Sku NatGatewaySkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (NatGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewayType)(nil)).Elem()
}

func (i NatGatewayTypeArgs) ToNatGatewayTypeOutput() NatGatewayTypeOutput {
	return i.ToNatGatewayTypeOutputWithContext(context.Background())
}

func (i NatGatewayTypeArgs) ToNatGatewayTypeOutputWithContext(ctx context.Context) NatGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayTypeOutput)
}

func (i NatGatewayTypeArgs) ToNatGatewayTypePtrOutput() NatGatewayTypePtrOutput {
	return i.ToNatGatewayTypePtrOutputWithContext(context.Background())
}

func (i NatGatewayTypeArgs) ToNatGatewayTypePtrOutputWithContext(ctx context.Context) NatGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayTypeOutput).ToNatGatewayTypePtrOutputWithContext(ctx)
}

// NatGatewayTypePtrInput is an input type that accepts NatGatewayTypeArgs, NatGatewayTypePtr and NatGatewayTypePtrOutput values.
// You can construct a concrete instance of `NatGatewayTypePtrInput` via:
//
//	        NatGatewayTypeArgs{...}
//
//	or:
//
//	        nil
type NatGatewayTypePtrInput interface {
	pulumi.Input

	ToNatGatewayTypePtrOutput() NatGatewayTypePtrOutput
	ToNatGatewayTypePtrOutputWithContext(context.Context) NatGatewayTypePtrOutput
}

type natGatewayTypePtrType NatGatewayTypeArgs

func NatGatewayTypePtr(v *NatGatewayTypeArgs) NatGatewayTypePtrInput {
	return (*natGatewayTypePtrType)(v)
}

func (*natGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewayType)(nil)).Elem()
}

func (i *natGatewayTypePtrType) ToNatGatewayTypePtrOutput() NatGatewayTypePtrOutput {
	return i.ToNatGatewayTypePtrOutputWithContext(context.Background())
}

func (i *natGatewayTypePtrType) ToNatGatewayTypePtrOutputWithContext(ctx context.Context) NatGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayTypePtrOutput)
}

// Nat Gateway resource.
type NatGatewayTypeOutput struct{ *pulumi.OutputState }

func (NatGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewayType)(nil)).Elem()
}

func (o NatGatewayTypeOutput) ToNatGatewayTypeOutput() NatGatewayTypeOutput {
	return o
}

func (o NatGatewayTypeOutput) ToNatGatewayTypeOutputWithContext(ctx context.Context) NatGatewayTypeOutput {
	return o
}

func (o NatGatewayTypeOutput) ToNatGatewayTypePtrOutput() NatGatewayTypePtrOutput {
	return o.ToNatGatewayTypePtrOutputWithContext(context.Background())
}

func (o NatGatewayTypeOutput) ToNatGatewayTypePtrOutputWithContext(ctx context.Context) NatGatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatGatewayType) *NatGatewayType {
		return &v
	}).(NatGatewayTypePtrOutput)
}

// Resource ID.
func (o NatGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGatewayType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayTypeOutput) PublicIpAddresses() SubResourceArrayOutput {
	return o.ApplyT(func(v NatGatewayType) []SubResource { return v.PublicIpAddresses }).(SubResourceArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayTypeOutput) PublicIpPrefixes() SubResourceArrayOutput {
	return o.ApplyT(func(v NatGatewayType) []SubResource { return v.PublicIpPrefixes }).(SubResourceArrayOutput)
}

// The nat gateway SKU.
func (o NatGatewayTypeOutput) Sku() NatGatewaySkuPtrOutput {
	return o.ApplyT(func(v NatGatewayType) *NatGatewaySku { return v.Sku }).(NatGatewaySkuPtrOutput)
}

// Resource tags.
func (o NatGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NatGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayTypeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatGatewayType) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type NatGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (NatGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewayType)(nil)).Elem()
}

func (o NatGatewayTypePtrOutput) ToNatGatewayTypePtrOutput() NatGatewayTypePtrOutput {
	return o
}

func (o NatGatewayTypePtrOutput) ToNatGatewayTypePtrOutputWithContext(ctx context.Context) NatGatewayTypePtrOutput {
	return o
}

func (o NatGatewayTypePtrOutput) Elem() NatGatewayTypeOutput {
	return o.ApplyT(func(v *NatGatewayType) NatGatewayType {
		if v != nil {
			return *v
		}
		var ret NatGatewayType
		return ret
	}).(NatGatewayTypeOutput)
}

// Resource ID.
func (o NatGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayTypePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGatewayType) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayTypePtrOutput) PublicIpAddresses() SubResourceArrayOutput {
	return o.ApplyT(func(v *NatGatewayType) []SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIpAddresses
	}).(SubResourceArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayTypePtrOutput) PublicIpPrefixes() SubResourceArrayOutput {
	return o.ApplyT(func(v *NatGatewayType) []SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIpPrefixes
	}).(SubResourceArrayOutput)
}

// The nat gateway SKU.
func (o NatGatewayTypePtrOutput) Sku() NatGatewaySkuPtrOutput {
	return o.ApplyT(func(v *NatGatewayType) *NatGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(NatGatewaySkuPtrOutput)
}

// Resource tags.
func (o NatGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NatGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayTypePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatGatewayType) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Nat Gateway resource.
type NatGatewayResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the nat gateway.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the NAT gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// An array of public ip addresses associated with the nat gateway resource.
	PublicIpAddresses []SubResourceResponse `pulumi:"publicIpAddresses"`
	// An array of public ip prefixes associated with the nat gateway resource.
	PublicIpPrefixes []SubResourceResponse `pulumi:"publicIpPrefixes"`
	// The resource GUID property of the NAT gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The nat gateway SKU.
	Sku *NatGatewaySkuResponse `pulumi:"sku"`
	// An array of references to the subnets using this nat gateway resource.
	Subnets []SubResourceResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
	Zones []string `pulumi:"zones"`
}

// Nat Gateway resource.
type NatGatewayResponseOutput struct{ *pulumi.OutputState }

func (NatGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewayResponse)(nil)).Elem()
}

func (o NatGatewayResponseOutput) ToNatGatewayResponseOutput() NatGatewayResponseOutput {
	return o
}

func (o NatGatewayResponseOutput) ToNatGatewayResponseOutputWithContext(ctx context.Context) NatGatewayResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NatGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NatGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NatGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the NAT gateway resource.
func (o NatGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayResponseOutput) PublicIpAddresses() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []SubResourceResponse { return v.PublicIpAddresses }).(SubResourceResponseArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayResponseOutput) PublicIpPrefixes() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []SubResourceResponse { return v.PublicIpPrefixes }).(SubResourceResponseArrayOutput)
}

// The resource GUID property of the NAT gateway resource.
func (o NatGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The nat gateway SKU.
func (o NatGatewayResponseOutput) Sku() NatGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *NatGatewaySkuResponse { return v.Sku }).(NatGatewaySkuResponsePtrOutput)
}

// An array of references to the subnets using this nat gateway resource.
func (o NatGatewayResponseOutput) Subnets() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []SubResourceResponse { return v.Subnets }).(SubResourceResponseArrayOutput)
}

// Resource tags.
func (o NatGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NatGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NatGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type NatGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (NatGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewayResponse)(nil)).Elem()
}

func (o NatGatewayResponsePtrOutput) ToNatGatewayResponsePtrOutput() NatGatewayResponsePtrOutput {
	return o
}

func (o NatGatewayResponsePtrOutput) ToNatGatewayResponsePtrOutputWithContext(ctx context.Context) NatGatewayResponsePtrOutput {
	return o
}

func (o NatGatewayResponsePtrOutput) Elem() NatGatewayResponseOutput {
	return o.ApplyT(func(v *NatGatewayResponse) NatGatewayResponse {
		if v != nil {
			return *v
		}
		var ret NatGatewayResponse
		return ret
	}).(NatGatewayResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NatGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NatGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NatGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the NAT gateway resource.
func (o NatGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayResponsePtrOutput) PublicIpAddresses() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIpAddresses
	}).(SubResourceResponseArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayResponsePtrOutput) PublicIpPrefixes() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIpPrefixes
	}).(SubResourceResponseArrayOutput)
}

// The resource GUID property of the NAT gateway resource.
func (o NatGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The nat gateway SKU.
func (o NatGatewayResponsePtrOutput) Sku() NatGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *NatGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(NatGatewaySkuResponsePtrOutput)
}

// An array of references to the subnets using this nat gateway resource.
func (o NatGatewayResponsePtrOutput) Subnets() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubResourceResponseArrayOutput)
}

// Resource tags.
func (o NatGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NatGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NatGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of nat gateway.
type NatGatewaySku struct {
	// Name of Nat Gateway SKU.
	Name *string `pulumi:"name"`
}

// NatGatewaySkuInput is an input type that accepts NatGatewaySkuArgs and NatGatewaySkuOutput values.
// You can construct a concrete instance of `NatGatewaySkuInput` via:
//
//	NatGatewaySkuArgs{...}
type NatGatewaySkuInput interface {
	pulumi.Input

	ToNatGatewaySkuOutput() NatGatewaySkuOutput
	ToNatGatewaySkuOutputWithContext(context.Context) NatGatewaySkuOutput
}

// SKU of nat gateway.
type NatGatewaySkuArgs struct {
	// Name of Nat Gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NatGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySku)(nil)).Elem()
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuOutput() NatGatewaySkuOutput {
	return i.ToNatGatewaySkuOutputWithContext(context.Background())
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuOutputWithContext(ctx context.Context) NatGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuOutput)
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return i.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuOutput).ToNatGatewaySkuPtrOutputWithContext(ctx)
}

// NatGatewaySkuPtrInput is an input type that accepts NatGatewaySkuArgs, NatGatewaySkuPtr and NatGatewaySkuPtrOutput values.
// You can construct a concrete instance of `NatGatewaySkuPtrInput` via:
//
//	        NatGatewaySkuArgs{...}
//
//	or:
//
//	        nil
type NatGatewaySkuPtrInput interface {
	pulumi.Input

	ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput
	ToNatGatewaySkuPtrOutputWithContext(context.Context) NatGatewaySkuPtrOutput
}

type natGatewaySkuPtrType NatGatewaySkuArgs

func NatGatewaySkuPtr(v *NatGatewaySkuArgs) NatGatewaySkuPtrInput {
	return (*natGatewaySkuPtrType)(v)
}

func (*natGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySku)(nil)).Elem()
}

func (i *natGatewaySkuPtrType) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return i.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *natGatewaySkuPtrType) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuPtrOutput)
}

// SKU of nat gateway.
type NatGatewaySkuOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySku)(nil)).Elem()
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuOutput() NatGatewaySkuOutput {
	return o
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuOutputWithContext(ctx context.Context) NatGatewaySkuOutput {
	return o
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return o.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatGatewaySku) *NatGatewaySku {
		return &v
	}).(NatGatewaySkuPtrOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NatGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySku)(nil)).Elem()
}

func (o NatGatewaySkuPtrOutput) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return o
}

func (o NatGatewaySkuPtrOutput) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return o
}

func (o NatGatewaySkuPtrOutput) Elem() NatGatewaySkuOutput {
	return o.ApplyT(func(v *NatGatewaySku) NatGatewaySku {
		if v != nil {
			return *v
		}
		var ret NatGatewaySku
		return ret
	}).(NatGatewaySkuOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of nat gateway.
type NatGatewaySkuResponse struct {
	// Name of Nat Gateway SKU.
	Name *string `pulumi:"name"`
}

// SKU of nat gateway.
type NatGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySkuResponse)(nil)).Elem()
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponseOutput() NatGatewaySkuResponseOutput {
	return o
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponseOutputWithContext(ctx context.Context) NatGatewaySkuResponseOutput {
	return o
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NatGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySkuResponse)(nil)).Elem()
}

func (o NatGatewaySkuResponsePtrOutput) ToNatGatewaySkuResponsePtrOutput() NatGatewaySkuResponsePtrOutput {
	return o
}

func (o NatGatewaySkuResponsePtrOutput) ToNatGatewaySkuResponsePtrOutputWithContext(ctx context.Context) NatGatewaySkuResponsePtrOutput {
	return o
}

func (o NatGatewaySkuResponsePtrOutput) Elem() NatGatewaySkuResponseOutput {
	return o.ApplyT(func(v *NatGatewaySkuResponse) NatGatewaySkuResponse {
		if v != nil {
			return *v
		}
		var ret NatGatewaySkuResponse
		return ret
	}).(NatGatewaySkuResponseOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Rule of type nat.
type NatRuleType struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	// Expected value is 'NatRule'.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// NatRuleTypeInput is an input type that accepts NatRuleTypeArgs and NatRuleTypeOutput values.
// You can construct a concrete instance of `NatRuleTypeInput` via:
//
//	NatRuleTypeArgs{...}
type NatRuleTypeInput interface {
	pulumi.Input

	ToNatRuleTypeOutput() NatRuleTypeOutput
	ToNatRuleTypeOutputWithContext(context.Context) NatRuleTypeOutput
}

// Rule of type nat.
type NatRuleTypeArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Type.
	// Expected value is 'NatRule'.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn pulumi.StringPtrInput `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (NatRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleType)(nil)).Elem()
}

func (i NatRuleTypeArgs) ToNatRuleTypeOutput() NatRuleTypeOutput {
	return i.ToNatRuleTypeOutputWithContext(context.Background())
}

func (i NatRuleTypeArgs) ToNatRuleTypeOutputWithContext(ctx context.Context) NatRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleTypeOutput)
}

// Rule of type nat.
type NatRuleTypeOutput struct{ *pulumi.OutputState }

func (NatRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleType)(nil)).Elem()
}

func (o NatRuleTypeOutput) ToNatRuleTypeOutput() NatRuleTypeOutput {
	return o
}

func (o NatRuleTypeOutput) ToNatRuleTypeOutputWithContext(ctx context.Context) NatRuleTypeOutput {
	return o
}

// Description of the rule.
func (o NatRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleTypeOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleType) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleTypeOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleType) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NatRuleTypeOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleType) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NatRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
// Expected value is 'NatRule'.
func (o NatRuleTypeOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRuleType) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleTypeOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleType) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleTypeOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleType) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o NatRuleTypeOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleType) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o NatRuleTypeOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleType) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o NatRuleTypeOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleType) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// Rule condition of type nat.
type NatRuleCondition struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	// Expected value is 'NatRuleCondition'.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NatRuleConditionInput is an input type that accepts NatRuleConditionArgs and NatRuleConditionOutput values.
// You can construct a concrete instance of `NatRuleConditionInput` via:
//
//	NatRuleConditionArgs{...}
type NatRuleConditionInput interface {
	pulumi.Input

	ToNatRuleConditionOutput() NatRuleConditionOutput
	ToNatRuleConditionOutputWithContext(context.Context) NatRuleConditionOutput
}

// Rule condition of type nat.
type NatRuleConditionArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Condition Type.
	// Expected value is 'NatRuleCondition'.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NatRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleCondition)(nil)).Elem()
}

func (i NatRuleConditionArgs) ToNatRuleConditionOutput() NatRuleConditionOutput {
	return i.ToNatRuleConditionOutputWithContext(context.Background())
}

func (i NatRuleConditionArgs) ToNatRuleConditionOutputWithContext(ctx context.Context) NatRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleConditionOutput)
}

func (i NatRuleConditionArgs) ToNatRuleConditionPtrOutput() NatRuleConditionPtrOutput {
	return i.ToNatRuleConditionPtrOutputWithContext(context.Background())
}

func (i NatRuleConditionArgs) ToNatRuleConditionPtrOutputWithContext(ctx context.Context) NatRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleConditionOutput).ToNatRuleConditionPtrOutputWithContext(ctx)
}

// NatRuleConditionPtrInput is an input type that accepts NatRuleConditionArgs, NatRuleConditionPtr and NatRuleConditionPtrOutput values.
// You can construct a concrete instance of `NatRuleConditionPtrInput` via:
//
//	        NatRuleConditionArgs{...}
//
//	or:
//
//	        nil
type NatRuleConditionPtrInput interface {
	pulumi.Input

	ToNatRuleConditionPtrOutput() NatRuleConditionPtrOutput
	ToNatRuleConditionPtrOutputWithContext(context.Context) NatRuleConditionPtrOutput
}

type natRuleConditionPtrType NatRuleConditionArgs

func NatRuleConditionPtr(v *NatRuleConditionArgs) NatRuleConditionPtrInput {
	return (*natRuleConditionPtrType)(v)
}

func (*natRuleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatRuleCondition)(nil)).Elem()
}

func (i *natRuleConditionPtrType) ToNatRuleConditionPtrOutput() NatRuleConditionPtrOutput {
	return i.ToNatRuleConditionPtrOutputWithContext(context.Background())
}

func (i *natRuleConditionPtrType) ToNatRuleConditionPtrOutputWithContext(ctx context.Context) NatRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleConditionPtrOutput)
}

// Rule condition of type nat.
type NatRuleConditionOutput struct{ *pulumi.OutputState }

func (NatRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleCondition)(nil)).Elem()
}

func (o NatRuleConditionOutput) ToNatRuleConditionOutput() NatRuleConditionOutput {
	return o
}

func (o NatRuleConditionOutput) ToNatRuleConditionOutputWithContext(ctx context.Context) NatRuleConditionOutput {
	return o
}

func (o NatRuleConditionOutput) ToNatRuleConditionPtrOutput() NatRuleConditionPtrOutput {
	return o.ToNatRuleConditionPtrOutputWithContext(context.Background())
}

func (o NatRuleConditionOutput) ToNatRuleConditionPtrOutputWithContext(ctx context.Context) NatRuleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatRuleCondition) *NatRuleCondition {
		return &v
	}).(NatRuleConditionPtrOutput)
}

// Description of the rule condition.
func (o NatRuleConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleConditionOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleConditionOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NatRuleConditionOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NatRuleConditionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleCondition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NatRuleCondition'.
func (o NatRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleConditionOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleConditionOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type NatRuleConditionPtrOutput struct{ *pulumi.OutputState }

func (NatRuleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatRuleCondition)(nil)).Elem()
}

func (o NatRuleConditionPtrOutput) ToNatRuleConditionPtrOutput() NatRuleConditionPtrOutput {
	return o
}

func (o NatRuleConditionPtrOutput) ToNatRuleConditionPtrOutputWithContext(ctx context.Context) NatRuleConditionPtrOutput {
	return o
}

func (o NatRuleConditionPtrOutput) Elem() NatRuleConditionOutput {
	return o.ApplyT(func(v *NatRuleCondition) NatRuleCondition {
		if v != nil {
			return *v
		}
		var ret NatRuleCondition
		return ret
	}).(NatRuleConditionOutput)
}

// Description of the rule condition.
func (o NatRuleConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleConditionPtrOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleConditionPtrOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NatRuleConditionPtrOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.IpProtocols
	}).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NatRuleConditionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NatRuleCondition'.
func (o NatRuleConditionPtrOutput) RuleConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRuleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.RuleConditionType
	}).(pulumi.StringPtrOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleConditionPtrOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleConditionPtrOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

// Rule condition of type nat.
type NatRuleConditionResponse struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	// Expected value is 'NatRuleCondition'.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// Rule condition of type nat.
type NatRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (NatRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleConditionResponse)(nil)).Elem()
}

func (o NatRuleConditionResponseOutput) ToNatRuleConditionResponseOutput() NatRuleConditionResponseOutput {
	return o
}

func (o NatRuleConditionResponseOutput) ToNatRuleConditionResponseOutputWithContext(ctx context.Context) NatRuleConditionResponseOutput {
	return o
}

// Description of the rule condition.
func (o NatRuleConditionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleConditionResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleConditionResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NatRuleConditionResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NatRuleConditionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NatRuleCondition'.
func (o NatRuleConditionResponseOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleConditionResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleConditionResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type NatRuleConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (NatRuleConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatRuleConditionResponse)(nil)).Elem()
}

func (o NatRuleConditionResponsePtrOutput) ToNatRuleConditionResponsePtrOutput() NatRuleConditionResponsePtrOutput {
	return o
}

func (o NatRuleConditionResponsePtrOutput) ToNatRuleConditionResponsePtrOutputWithContext(ctx context.Context) NatRuleConditionResponsePtrOutput {
	return o
}

func (o NatRuleConditionResponsePtrOutput) Elem() NatRuleConditionResponseOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) NatRuleConditionResponse {
		if v != nil {
			return *v
		}
		var ret NatRuleConditionResponse
		return ret
	}).(NatRuleConditionResponseOutput)
}

// Description of the rule condition.
func (o NatRuleConditionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleConditionResponsePtrOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleConditionResponsePtrOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NatRuleConditionResponsePtrOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpProtocols
	}).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NatRuleConditionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NatRuleCondition'.
func (o NatRuleConditionResponsePtrOutput) RuleConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleConditionType
	}).(pulumi.StringPtrOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleConditionResponsePtrOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleConditionResponsePtrOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

// Individual port mappings for inbound NAT rule created for backend pool.
type NatRulePortMappingResponse struct {
	// Backend port.
	BackendPort *int `pulumi:"backendPort"`
	// Frontend port.
	FrontendPort *int `pulumi:"frontendPort"`
	// Name of inbound NAT rule.
	InboundNatRuleName *string `pulumi:"inboundNatRuleName"`
}

// Individual port mappings for inbound NAT rule created for backend pool.
type NatRulePortMappingResponseOutput struct{ *pulumi.OutputState }

func (NatRulePortMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRulePortMappingResponse)(nil)).Elem()
}

func (o NatRulePortMappingResponseOutput) ToNatRulePortMappingResponseOutput() NatRulePortMappingResponseOutput {
	return o
}

func (o NatRulePortMappingResponseOutput) ToNatRulePortMappingResponseOutputWithContext(ctx context.Context) NatRulePortMappingResponseOutput {
	return o
}

// Backend port.
func (o NatRulePortMappingResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatRulePortMappingResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Frontend port.
func (o NatRulePortMappingResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatRulePortMappingResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Name of inbound NAT rule.
func (o NatRulePortMappingResponseOutput) InboundNatRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRulePortMappingResponse) *string { return v.InboundNatRuleName }).(pulumi.StringPtrOutput)
}

type NatRulePortMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (NatRulePortMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NatRulePortMappingResponse)(nil)).Elem()
}

func (o NatRulePortMappingResponseArrayOutput) ToNatRulePortMappingResponseArrayOutput() NatRulePortMappingResponseArrayOutput {
	return o
}

func (o NatRulePortMappingResponseArrayOutput) ToNatRulePortMappingResponseArrayOutputWithContext(ctx context.Context) NatRulePortMappingResponseArrayOutput {
	return o
}

func (o NatRulePortMappingResponseArrayOutput) Index(i pulumi.IntInput) NatRulePortMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NatRulePortMappingResponse {
		return vs[0].([]NatRulePortMappingResponse)[vs[1].(int)]
	}).(NatRulePortMappingResponseOutput)
}

// Rule of type nat.
type NatRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	// Expected value is 'NatRule'.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// Rule of type nat.
type NatRuleResponseOutput struct{ *pulumi.OutputState }

func (NatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleResponse)(nil)).Elem()
}

func (o NatRuleResponseOutput) ToNatRuleResponseOutput() NatRuleResponseOutput {
	return o
}

func (o NatRuleResponseOutput) ToNatRuleResponseOutputWithContext(ctx context.Context) NatRuleResponseOutput {
	return o
}

// Description of the rule.
func (o NatRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NatRuleResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
// Expected value is 'NatRule'.
func (o NatRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o NatRuleResponseOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o NatRuleResponseOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o NatRuleResponseOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettings struct {
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
}

// NetworkInterfaceDnsSettingsInput is an input type that accepts NetworkInterfaceDnsSettingsArgs and NetworkInterfaceDnsSettingsOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsInput` via:
//
//	NetworkInterfaceDnsSettingsArgs{...}
type NetworkInterfaceDnsSettingsInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput
	ToNetworkInterfaceDnsSettingsOutputWithContext(context.Context) NetworkInterfaceDnsSettingsOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsArgs struct {
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
}

func (NetworkInterfaceDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return i.ToNetworkInterfaceDnsSettingsOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput)
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput).ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsPtrInput is an input type that accepts NetworkInterfaceDnsSettingsArgs, NetworkInterfaceDnsSettingsPtr and NetworkInterfaceDnsSettingsPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsPtrInput` via:
//
//	        NetworkInterfaceDnsSettingsArgs{...}
//
//	or:
//
//	        nil
type NetworkInterfaceDnsSettingsPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput
	ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsPtrOutput
}

type networkInterfaceDnsSettingsPtrType NetworkInterfaceDnsSettingsArgs

func NetworkInterfaceDnsSettingsPtr(v *NetworkInterfaceDnsSettingsArgs) NetworkInterfaceDnsSettingsPtrInput {
	return (*networkInterfaceDnsSettingsPtrType)(v)
}

func (*networkInterfaceDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceDnsSettings) *NetworkInterfaceDnsSettings {
		return &v
	}).(NetworkInterfaceDnsSettingsPtrOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) Elem() NetworkInterfaceDnsSettingsOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) NetworkInterfaceDnsSettings {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceDnsSettings
		return ret
	}).(NetworkInterfaceDnsSettingsOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn string `pulumi:"internalFqdn"`
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDomainNameSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalDomainNameSuffix }).(pulumi.StringOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalFqdn }).(pulumi.StringOutput)
}

type NetworkInterfaceDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) NetworkInterfaceDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceDnsSettingsResponse
		return ret
	}).(NetworkInterfaceDnsSettingsResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfiguration struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPool `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"applicationSecurityGroups"`
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResource `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPool `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleType `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetType `pulumi:"subnet"`
	// Resource type.
	Type *string `pulumi:"type"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapType `pulumi:"virtualNetworkTaps"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceIPConfiguration
func (val *NetworkInterfaceIPConfiguration) Defaults() *NetworkInterfaceIPConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// NetworkInterfaceIPConfigurationInput is an input type that accepts NetworkInterfaceIPConfigurationArgs and NetworkInterfaceIPConfigurationOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInput` via:
//
//	NetworkInterfaceIPConfigurationArgs{...}
type NetworkInterfaceIPConfigurationInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput
	ToNetworkInterfaceIPConfigurationOutputWithContext(context.Context) NetworkInterfaceIPConfigurationOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationArgs struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools ApplicationGatewayBackendAddressPoolArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"applicationSecurityGroups"`
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer SubResourcePtrInput `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleTypeArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps VirtualNetworkTapTypeArrayInput `pulumi:"virtualNetworkTaps"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceIPConfigurationArgs
func (val *NetworkInterfaceIPConfigurationArgs) Defaults() *NetworkInterfaceIPConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (NetworkInterfaceIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return i.ToNetworkInterfaceIPConfigurationOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput)
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput).ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationPtrInput is an input type that accepts NetworkInterfaceIPConfigurationArgs, NetworkInterfaceIPConfigurationPtr and NetworkInterfaceIPConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPtrInput` via:
//
//	        NetworkInterfaceIPConfigurationArgs{...}
//
//	or:
//
//	        nil
type NetworkInterfaceIPConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput
	ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPtrOutput
}

type networkInterfaceIPConfigurationPtrType NetworkInterfaceIPConfigurationArgs

func NetworkInterfaceIPConfigurationPtr(v *NetworkInterfaceIPConfigurationArgs) NetworkInterfaceIPConfigurationPtrInput {
	return (*networkInterfaceIPConfigurationPtrType)(v)
}

func (*networkInterfaceIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPtrOutput)
}

// NetworkInterfaceIPConfigurationArrayInput is an input type that accepts NetworkInterfaceIPConfigurationArray and NetworkInterfaceIPConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationArrayInput` via:
//
//	NetworkInterfaceIPConfigurationArray{ NetworkInterfaceIPConfigurationArgs{...} }
type NetworkInterfaceIPConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput
	ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationArrayOutput
}

type NetworkInterfaceIPConfigurationArray []NetworkInterfaceIPConfigurationInput

func (NetworkInterfaceIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceIPConfiguration) *NetworkInterfaceIPConfiguration {
		return &v
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []ApplicationGatewayBackendAddressPool {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationOutput) ApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []ApplicationSecurityGroupType {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The reference to gateway load balancer frontend IP.
func (o NetworkInterfaceIPConfigurationOutput) GatewayLoadBalancer() SubResourcePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *SubResource { return v.GatewayLoadBalancer }).(SubResourcePtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []BackendAddressPool { return v.LoadBalancerBackendAddressPools }).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerInboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []InboundNatRuleType { return v.LoadBalancerInboundNatRules }).(InboundNatRuleTypeArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

// Resource type.
func (o NetworkInterfaceIPConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationOutput) VirtualNetworkTaps() VirtualNetworkTapTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []VirtualNetworkTapType { return v.VirtualNetworkTaps }).(VirtualNetworkTapTypeArrayOutput)
}

type NetworkInterfaceIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) Elem() NetworkInterfaceIPConfigurationOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) NetworkInterfaceIPConfiguration {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceIPConfiguration
		return ret
	}).(NetworkInterfaceIPConfigurationOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []ApplicationGatewayBackendAddressPool {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationPtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []ApplicationSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The reference to gateway load balancer frontend IP.
func (o NetworkInterfaceIPConfigurationPtrOutput) GatewayLoadBalancer() SubResourcePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayLoadBalancer
	}).(SubResourcePtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []BackendAddressPool {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationPtrOutput) LoadBalancerInboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []InboundNatRuleType {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleTypeArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// Resource type.
func (o NetworkInterfaceIPConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationPtrOutput) VirtualNetworkTaps() VirtualNetworkTapTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []VirtualNetworkTapType {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapTypeArrayOutput)
}

type NetworkInterfaceIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfiguration {
		return vs[0].([]NetworkInterfaceIPConfiguration)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationOutput)
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse struct {
	// List of FQDNs for current private link connection.
	Fqdns []string `pulumi:"fqdns"`
	// The group ID for current private link connection.
	GroupId string `pulumi:"groupId"`
	// The required member name for current private link connection.
	RequiredMemberName string `pulumi:"requiredMemberName"`
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) RequiredMemberName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.RequiredMemberName
	}).(pulumi.StringOutput)
}

type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse
		return ret
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) RequiredMemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RequiredMemberName
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponse struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResourceResponse `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleResponse `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// PrivateLinkConnection properties for the network interface.
	PrivateLinkConnectionProperties NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse `pulumi:"privateLinkConnectionProperties"`
	// The provisioning state of the network interface IP configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource type.
	Type *string `pulumi:"type"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapResponse `pulumi:"virtualNetworkTaps"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceIPConfigurationResponse
func (val *NetworkInterfaceIPConfigurationResponse) Defaults() *NetworkInterfaceIPConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PublicIPAddress = tmp.PublicIPAddress.Defaults()

	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The reference to gateway load balancer frontend IP.
func (o NetworkInterfaceIPConfigurationResponseOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubResourceResponse { return v.GatewayLoadBalancer }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		return v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource type.
func (o NetworkInterfaceIPConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponseOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceIPConfigurationResponse
		return ret
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference to gateway load balancer frontend IP.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayLoadBalancer
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Resource type.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponse struct {
	// Auxiliary mode of Network Interface resource.
	AuxiliaryMode *string `pulumi:"auxiliaryMode"`
	// Auxiliary sku of Network Interface resource.
	AuxiliarySku *string `pulumi:"auxiliarySku"`
	// Indicates whether to disable tcp state tracking.
	DisableTcpStateTracking *bool `pulumi:"disableTcpStateTracking"`
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsResponse `pulumi:"dnsSettings"`
	// A reference to the dscp configuration to which the network interface is linked.
	DscpConfiguration SubResourceResponse `pulumi:"dscpConfiguration"`
	// If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the network interface.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// A list of references to linked BareMetal resources.
	HostedWorkloads []string `pulumi:"hostedWorkloads"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A reference to the interface endpoint to which the network interface is linked.
	InterfaceEndpoint *InterfaceEndpointResponse `pulumi:"interfaceEndpoint"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress string `pulumi:"macAddress"`
	// Migration phase of Network Interface resource.
	MigrationPhase *string `pulumi:"migrationPhase"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Type of Network Interface resource.
	NicType *string `pulumi:"nicType"`
	// Whether this is a primary network interface on a virtual machine.
	Primary bool `pulumi:"primary"`
	// A reference to the private endpoint to which the network interface is linked.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Privatelinkservice of the network interface resource.
	PrivateLinkService *PrivateLinkServiceResponse `pulumi:"privateLinkService"`
	// The provisioning state of the network interface resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"tapConfigurations"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference to a virtual machine.
	VirtualMachine SubResourceResponse `pulumi:"virtualMachine"`
	// Whether the virtual machine this nic is attached to supports encryption.
	VnetEncryptionSupported bool `pulumi:"vnetEncryptionSupported"`
	// WorkloadType of the NetworkInterface for BareMetal resources
	WorkloadType *string `pulumi:"workloadType"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceResponse
func (val *NetworkInterfaceResponse) Defaults() *NetworkInterfaceResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.InterfaceEndpoint = tmp.InterfaceEndpoint.Defaults()

	tmp.PrivateEndpoint = *tmp.PrivateEndpoint.Defaults()

	return &tmp
}

// A network interface in a resource group.
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// Auxiliary mode of Network Interface resource.
func (o NetworkInterfaceResponseOutput) AuxiliaryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.AuxiliaryMode }).(pulumi.StringPtrOutput)
}

// Auxiliary sku of Network Interface resource.
func (o NetworkInterfaceResponseOutput) AuxiliarySku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.AuxiliarySku }).(pulumi.StringPtrOutput)
}

// Indicates whether to disable tcp state tracking.
func (o NetworkInterfaceResponseOutput) DisableTcpStateTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.DisableTcpStateTracking }).(pulumi.BoolPtrOutput)
}

// The DNS settings in network interface.
func (o NetworkInterfaceResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceDnsSettingsResponse { return v.DnsSettings }).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// A reference to the dscp configuration to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) DscpConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.DscpConfiguration }).(SubResourceResponseOutput)
}

// If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking.
func (o NetworkInterfaceResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the network interface.
func (o NetworkInterfaceResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// A list of references to linked BareMetal resources.
func (o NetworkInterfaceResponseOutput) HostedWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []string { return v.HostedWorkloads }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o NetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A reference to the interface endpoint to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) InterfaceEndpoint() InterfaceEndpointResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *InterfaceEndpointResponse { return v.InterfaceEndpoint }).(InterfaceEndpointResponsePtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceIPConfigurationResponse { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o NetworkInterfaceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Migration phase of Network Interface resource.
func (o NetworkInterfaceResponseOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.MigrationPhase }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o NetworkInterfaceResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Type of Network Interface resource.
func (o NetworkInterfaceResponseOutput) NicType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.NicType }).(pulumi.StringPtrOutput)
}

// Whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceResponseOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) bool { return v.Primary }).(pulumi.BoolOutput)
}

// A reference to the private endpoint to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// Privatelinkservice of the network interface resource.
func (o NetworkInterfaceResponseOutput) PrivateLinkService() PrivateLinkServiceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *PrivateLinkServiceResponse { return v.PrivateLinkService }).(PrivateLinkServiceResponsePtrOutput)
}

// The provisioning state of the network interface resource.
func (o NetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o NetworkInterfaceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) TapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// Resource type.
func (o NetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to a virtual machine.
func (o NetworkInterfaceResponseOutput) VirtualMachine() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.VirtualMachine }).(SubResourceResponseOutput)
}

// Whether the virtual machine this nic is attached to supports encryption.
func (o NetworkInterfaceResponseOutput) VnetEncryptionSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) bool { return v.VnetEncryptionSupported }).(pulumi.BoolOutput)
}

// WorkloadType of the NetworkInterface for BareMetal resources
func (o NetworkInterfaceResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the network interface tap configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
	// The reference to the Virtual Network Tap resource.
	VirtualNetworkTap *VirtualNetworkTapResponse `pulumi:"virtualNetworkTap"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceTapConfigurationResponse
func (val *NetworkInterfaceTapConfigurationResponse) Defaults() *NetworkInterfaceTapConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.VirtualNetworkTap = tmp.VirtualNetworkTap.Defaults()

	return &tmp
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTapConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NetworkInterfaceTapConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface tap configuration resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o NetworkInterfaceTapConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) VirtualNetworkTap() VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *VirtualNetworkTapResponse {
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapResponsePtrOutput)
}

type NetworkInterfaceTapConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTapConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTapConfigurationResponse {
		return vs[0].([]NetworkInterfaceTapConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceTapConfigurationResponseOutput)
}

// Network Manager Deployment Status.
type NetworkManagerDeploymentStatusResponse struct {
	// Commit Time.
	CommitTime *string `pulumi:"commitTime"`
	// List of configuration ids.
	ConfigurationIds []string `pulumi:"configurationIds"`
	// Deployment Status.
	DeploymentStatus *string `pulumi:"deploymentStatus"`
	// Configuration Deployment Type.
	DeploymentType *string `pulumi:"deploymentType"`
	// Error Message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Region Name.
	Region *string `pulumi:"region"`
}

// Network Manager Deployment Status.
type NetworkManagerDeploymentStatusResponseOutput struct{ *pulumi.OutputState }

func (NetworkManagerDeploymentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerDeploymentStatusResponse)(nil)).Elem()
}

func (o NetworkManagerDeploymentStatusResponseOutput) ToNetworkManagerDeploymentStatusResponseOutput() NetworkManagerDeploymentStatusResponseOutput {
	return o
}

func (o NetworkManagerDeploymentStatusResponseOutput) ToNetworkManagerDeploymentStatusResponseOutputWithContext(ctx context.Context) NetworkManagerDeploymentStatusResponseOutput {
	return o
}

// Commit Time.
func (o NetworkManagerDeploymentStatusResponseOutput) CommitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkManagerDeploymentStatusResponse) *string { return v.CommitTime }).(pulumi.StringPtrOutput)
}

// List of configuration ids.
func (o NetworkManagerDeploymentStatusResponseOutput) ConfigurationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerDeploymentStatusResponse) []string { return v.ConfigurationIds }).(pulumi.StringArrayOutput)
}

// Deployment Status.
func (o NetworkManagerDeploymentStatusResponseOutput) DeploymentStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkManagerDeploymentStatusResponse) *string { return v.DeploymentStatus }).(pulumi.StringPtrOutput)
}

// Configuration Deployment Type.
func (o NetworkManagerDeploymentStatusResponseOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkManagerDeploymentStatusResponse) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

// Error Message.
func (o NetworkManagerDeploymentStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkManagerDeploymentStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Region Name.
func (o NetworkManagerDeploymentStatusResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkManagerDeploymentStatusResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type NetworkManagerDeploymentStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerDeploymentStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerDeploymentStatusResponse)(nil)).Elem()
}

func (o NetworkManagerDeploymentStatusResponseArrayOutput) ToNetworkManagerDeploymentStatusResponseArrayOutput() NetworkManagerDeploymentStatusResponseArrayOutput {
	return o
}

func (o NetworkManagerDeploymentStatusResponseArrayOutput) ToNetworkManagerDeploymentStatusResponseArrayOutputWithContext(ctx context.Context) NetworkManagerDeploymentStatusResponseArrayOutput {
	return o
}

func (o NetworkManagerDeploymentStatusResponseArrayOutput) Index(i pulumi.IntInput) NetworkManagerDeploymentStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerDeploymentStatusResponse {
		return vs[0].([]NetworkManagerDeploymentStatusResponse)[vs[1].(int)]
	}).(NetworkManagerDeploymentStatusResponseOutput)
}

// Scope of Network Manager.
type NetworkManagerPropertiesNetworkManagerScopes struct {
	// List of management groups.
	ManagementGroups []string `pulumi:"managementGroups"`
	// List of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// NetworkManagerPropertiesNetworkManagerScopesInput is an input type that accepts NetworkManagerPropertiesNetworkManagerScopesArgs and NetworkManagerPropertiesNetworkManagerScopesOutput values.
// You can construct a concrete instance of `NetworkManagerPropertiesNetworkManagerScopesInput` via:
//
//	NetworkManagerPropertiesNetworkManagerScopesArgs{...}
type NetworkManagerPropertiesNetworkManagerScopesInput interface {
	pulumi.Input

	ToNetworkManagerPropertiesNetworkManagerScopesOutput() NetworkManagerPropertiesNetworkManagerScopesOutput
	ToNetworkManagerPropertiesNetworkManagerScopesOutputWithContext(context.Context) NetworkManagerPropertiesNetworkManagerScopesOutput
}

// Scope of Network Manager.
type NetworkManagerPropertiesNetworkManagerScopesArgs struct {
	// List of management groups.
	ManagementGroups pulumi.StringArrayInput `pulumi:"managementGroups"`
	// List of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (NetworkManagerPropertiesNetworkManagerScopesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerPropertiesNetworkManagerScopes)(nil)).Elem()
}

func (i NetworkManagerPropertiesNetworkManagerScopesArgs) ToNetworkManagerPropertiesNetworkManagerScopesOutput() NetworkManagerPropertiesNetworkManagerScopesOutput {
	return i.ToNetworkManagerPropertiesNetworkManagerScopesOutputWithContext(context.Background())
}

func (i NetworkManagerPropertiesNetworkManagerScopesArgs) ToNetworkManagerPropertiesNetworkManagerScopesOutputWithContext(ctx context.Context) NetworkManagerPropertiesNetworkManagerScopesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerPropertiesNetworkManagerScopesOutput)
}

// Scope of Network Manager.
type NetworkManagerPropertiesNetworkManagerScopesOutput struct{ *pulumi.OutputState }

func (NetworkManagerPropertiesNetworkManagerScopesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerPropertiesNetworkManagerScopes)(nil)).Elem()
}

func (o NetworkManagerPropertiesNetworkManagerScopesOutput) ToNetworkManagerPropertiesNetworkManagerScopesOutput() NetworkManagerPropertiesNetworkManagerScopesOutput {
	return o
}

func (o NetworkManagerPropertiesNetworkManagerScopesOutput) ToNetworkManagerPropertiesNetworkManagerScopesOutputWithContext(ctx context.Context) NetworkManagerPropertiesNetworkManagerScopesOutput {
	return o
}

// List of management groups.
func (o NetworkManagerPropertiesNetworkManagerScopesOutput) ManagementGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerPropertiesNetworkManagerScopes) []string { return v.ManagementGroups }).(pulumi.StringArrayOutput)
}

// List of subscriptions.
func (o NetworkManagerPropertiesNetworkManagerScopesOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerPropertiesNetworkManagerScopes) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

// Scope of Network Manager.
type NetworkManagerPropertiesResponseNetworkManagerScopes struct {
	// List of cross tenant scopes.
	CrossTenantScopes []CrossTenantScopesResponse `pulumi:"crossTenantScopes"`
	// List of management groups.
	ManagementGroups []string `pulumi:"managementGroups"`
	// List of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// Scope of Network Manager.
type NetworkManagerPropertiesResponseNetworkManagerScopesOutput struct{ *pulumi.OutputState }

func (NetworkManagerPropertiesResponseNetworkManagerScopesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerPropertiesResponseNetworkManagerScopes)(nil)).Elem()
}

func (o NetworkManagerPropertiesResponseNetworkManagerScopesOutput) ToNetworkManagerPropertiesResponseNetworkManagerScopesOutput() NetworkManagerPropertiesResponseNetworkManagerScopesOutput {
	return o
}

func (o NetworkManagerPropertiesResponseNetworkManagerScopesOutput) ToNetworkManagerPropertiesResponseNetworkManagerScopesOutputWithContext(ctx context.Context) NetworkManagerPropertiesResponseNetworkManagerScopesOutput {
	return o
}

// List of cross tenant scopes.
func (o NetworkManagerPropertiesResponseNetworkManagerScopesOutput) CrossTenantScopes() CrossTenantScopesResponseArrayOutput {
	return o.ApplyT(func(v NetworkManagerPropertiesResponseNetworkManagerScopes) []CrossTenantScopesResponse {
		return v.CrossTenantScopes
	}).(CrossTenantScopesResponseArrayOutput)
}

// List of management groups.
func (o NetworkManagerPropertiesResponseNetworkManagerScopesOutput) ManagementGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerPropertiesResponseNetworkManagerScopes) []string { return v.ManagementGroups }).(pulumi.StringArrayOutput)
}

// List of subscriptions.
func (o NetworkManagerPropertiesResponseNetworkManagerScopesOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerPropertiesResponseNetworkManagerScopes) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

// Network manager security group item.
type NetworkManagerSecurityGroupItem struct {
	// Network manager group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
}

// NetworkManagerSecurityGroupItemInput is an input type that accepts NetworkManagerSecurityGroupItemArgs and NetworkManagerSecurityGroupItemOutput values.
// You can construct a concrete instance of `NetworkManagerSecurityGroupItemInput` via:
//
//	NetworkManagerSecurityGroupItemArgs{...}
type NetworkManagerSecurityGroupItemInput interface {
	pulumi.Input

	ToNetworkManagerSecurityGroupItemOutput() NetworkManagerSecurityGroupItemOutput
	ToNetworkManagerSecurityGroupItemOutputWithContext(context.Context) NetworkManagerSecurityGroupItemOutput
}

// Network manager security group item.
type NetworkManagerSecurityGroupItemArgs struct {
	// Network manager group Id.
	NetworkGroupId pulumi.StringInput `pulumi:"networkGroupId"`
}

func (NetworkManagerSecurityGroupItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerSecurityGroupItem)(nil)).Elem()
}

func (i NetworkManagerSecurityGroupItemArgs) ToNetworkManagerSecurityGroupItemOutput() NetworkManagerSecurityGroupItemOutput {
	return i.ToNetworkManagerSecurityGroupItemOutputWithContext(context.Background())
}

func (i NetworkManagerSecurityGroupItemArgs) ToNetworkManagerSecurityGroupItemOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerSecurityGroupItemOutput)
}

// NetworkManagerSecurityGroupItemArrayInput is an input type that accepts NetworkManagerSecurityGroupItemArray and NetworkManagerSecurityGroupItemArrayOutput values.
// You can construct a concrete instance of `NetworkManagerSecurityGroupItemArrayInput` via:
//
//	NetworkManagerSecurityGroupItemArray{ NetworkManagerSecurityGroupItemArgs{...} }
type NetworkManagerSecurityGroupItemArrayInput interface {
	pulumi.Input

	ToNetworkManagerSecurityGroupItemArrayOutput() NetworkManagerSecurityGroupItemArrayOutput
	ToNetworkManagerSecurityGroupItemArrayOutputWithContext(context.Context) NetworkManagerSecurityGroupItemArrayOutput
}

type NetworkManagerSecurityGroupItemArray []NetworkManagerSecurityGroupItemInput

func (NetworkManagerSecurityGroupItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerSecurityGroupItem)(nil)).Elem()
}

func (i NetworkManagerSecurityGroupItemArray) ToNetworkManagerSecurityGroupItemArrayOutput() NetworkManagerSecurityGroupItemArrayOutput {
	return i.ToNetworkManagerSecurityGroupItemArrayOutputWithContext(context.Background())
}

func (i NetworkManagerSecurityGroupItemArray) ToNetworkManagerSecurityGroupItemArrayOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerSecurityGroupItemArrayOutput)
}

// Network manager security group item.
type NetworkManagerSecurityGroupItemOutput struct{ *pulumi.OutputState }

func (NetworkManagerSecurityGroupItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerSecurityGroupItem)(nil)).Elem()
}

func (o NetworkManagerSecurityGroupItemOutput) ToNetworkManagerSecurityGroupItemOutput() NetworkManagerSecurityGroupItemOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemOutput) ToNetworkManagerSecurityGroupItemOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemOutput {
	return o
}

// Network manager group Id.
func (o NetworkManagerSecurityGroupItemOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerSecurityGroupItem) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

type NetworkManagerSecurityGroupItemArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerSecurityGroupItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerSecurityGroupItem)(nil)).Elem()
}

func (o NetworkManagerSecurityGroupItemArrayOutput) ToNetworkManagerSecurityGroupItemArrayOutput() NetworkManagerSecurityGroupItemArrayOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemArrayOutput) ToNetworkManagerSecurityGroupItemArrayOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemArrayOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemArrayOutput) Index(i pulumi.IntInput) NetworkManagerSecurityGroupItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerSecurityGroupItem {
		return vs[0].([]NetworkManagerSecurityGroupItem)[vs[1].(int)]
	}).(NetworkManagerSecurityGroupItemOutput)
}

// Network manager security group item.
type NetworkManagerSecurityGroupItemResponse struct {
	// Network manager group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
}

// Network manager security group item.
type NetworkManagerSecurityGroupItemResponseOutput struct{ *pulumi.OutputState }

func (NetworkManagerSecurityGroupItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerSecurityGroupItemResponse)(nil)).Elem()
}

func (o NetworkManagerSecurityGroupItemResponseOutput) ToNetworkManagerSecurityGroupItemResponseOutput() NetworkManagerSecurityGroupItemResponseOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemResponseOutput) ToNetworkManagerSecurityGroupItemResponseOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemResponseOutput {
	return o
}

// Network manager group Id.
func (o NetworkManagerSecurityGroupItemResponseOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerSecurityGroupItemResponse) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

type NetworkManagerSecurityGroupItemResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerSecurityGroupItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerSecurityGroupItemResponse)(nil)).Elem()
}

func (o NetworkManagerSecurityGroupItemResponseArrayOutput) ToNetworkManagerSecurityGroupItemResponseArrayOutput() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemResponseArrayOutput) ToNetworkManagerSecurityGroupItemResponseArrayOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemResponseArrayOutput) Index(i pulumi.IntInput) NetworkManagerSecurityGroupItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerSecurityGroupItemResponse {
		return vs[0].([]NetworkManagerSecurityGroupItemResponse)[vs[1].(int)]
	}).(NetworkManagerSecurityGroupItemResponseOutput)
}

// Rule of type network.
type NetworkRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	// Expected value is 'NetworkRule'.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NetworkRuleInput is an input type that accepts NetworkRuleArgs and NetworkRuleOutput values.
// You can construct a concrete instance of `NetworkRuleInput` via:
//
//	NetworkRuleArgs{...}
type NetworkRuleInput interface {
	pulumi.Input

	ToNetworkRuleOutput() NetworkRuleOutput
	ToNetworkRuleOutputWithContext(context.Context) NetworkRuleOutput
}

// Rule of type network.
type NetworkRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Type.
	// Expected value is 'NetworkRule'.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRule)(nil)).Elem()
}

func (i NetworkRuleArgs) ToNetworkRuleOutput() NetworkRuleOutput {
	return i.ToNetworkRuleOutputWithContext(context.Background())
}

func (i NetworkRuleArgs) ToNetworkRuleOutputWithContext(ctx context.Context) NetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleOutput)
}

// Rule of type network.
type NetworkRuleOutput struct{ *pulumi.OutputState }

func (NetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRule)(nil)).Elem()
}

func (o NetworkRuleOutput) ToNetworkRuleOutput() NetworkRuleOutput {
	return o
}

func (o NetworkRuleOutput) ToNetworkRuleOutputWithContext(ctx context.Context) NetworkRuleOutput {
	return o
}

// Description of the rule.
func (o NetworkRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o NetworkRuleOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NetworkRuleOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NetworkRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
// Expected value is 'NetworkRule'.
func (o NetworkRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// Rule condition of type network.
type NetworkRuleCondition struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	// Expected value is 'NetworkRuleCondition'.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NetworkRuleConditionInput is an input type that accepts NetworkRuleConditionArgs and NetworkRuleConditionOutput values.
// You can construct a concrete instance of `NetworkRuleConditionInput` via:
//
//	NetworkRuleConditionArgs{...}
type NetworkRuleConditionInput interface {
	pulumi.Input

	ToNetworkRuleConditionOutput() NetworkRuleConditionOutput
	ToNetworkRuleConditionOutputWithContext(context.Context) NetworkRuleConditionOutput
}

// Rule condition of type network.
type NetworkRuleConditionArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Condition Type.
	// Expected value is 'NetworkRuleCondition'.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NetworkRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleCondition)(nil)).Elem()
}

func (i NetworkRuleConditionArgs) ToNetworkRuleConditionOutput() NetworkRuleConditionOutput {
	return i.ToNetworkRuleConditionOutputWithContext(context.Background())
}

func (i NetworkRuleConditionArgs) ToNetworkRuleConditionOutputWithContext(ctx context.Context) NetworkRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleConditionOutput)
}

func (i NetworkRuleConditionArgs) ToNetworkRuleConditionPtrOutput() NetworkRuleConditionPtrOutput {
	return i.ToNetworkRuleConditionPtrOutputWithContext(context.Background())
}

func (i NetworkRuleConditionArgs) ToNetworkRuleConditionPtrOutputWithContext(ctx context.Context) NetworkRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleConditionOutput).ToNetworkRuleConditionPtrOutputWithContext(ctx)
}

// NetworkRuleConditionPtrInput is an input type that accepts NetworkRuleConditionArgs, NetworkRuleConditionPtr and NetworkRuleConditionPtrOutput values.
// You can construct a concrete instance of `NetworkRuleConditionPtrInput` via:
//
//	        NetworkRuleConditionArgs{...}
//
//	or:
//
//	        nil
type NetworkRuleConditionPtrInput interface {
	pulumi.Input

	ToNetworkRuleConditionPtrOutput() NetworkRuleConditionPtrOutput
	ToNetworkRuleConditionPtrOutputWithContext(context.Context) NetworkRuleConditionPtrOutput
}

type networkRuleConditionPtrType NetworkRuleConditionArgs

func NetworkRuleConditionPtr(v *NetworkRuleConditionArgs) NetworkRuleConditionPtrInput {
	return (*networkRuleConditionPtrType)(v)
}

func (*networkRuleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleCondition)(nil)).Elem()
}

func (i *networkRuleConditionPtrType) ToNetworkRuleConditionPtrOutput() NetworkRuleConditionPtrOutput {
	return i.ToNetworkRuleConditionPtrOutputWithContext(context.Background())
}

func (i *networkRuleConditionPtrType) ToNetworkRuleConditionPtrOutputWithContext(ctx context.Context) NetworkRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleConditionPtrOutput)
}

// Rule condition of type network.
type NetworkRuleConditionOutput struct{ *pulumi.OutputState }

func (NetworkRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleCondition)(nil)).Elem()
}

func (o NetworkRuleConditionOutput) ToNetworkRuleConditionOutput() NetworkRuleConditionOutput {
	return o
}

func (o NetworkRuleConditionOutput) ToNetworkRuleConditionOutputWithContext(ctx context.Context) NetworkRuleConditionOutput {
	return o
}

func (o NetworkRuleConditionOutput) ToNetworkRuleConditionPtrOutput() NetworkRuleConditionPtrOutput {
	return o.ToNetworkRuleConditionPtrOutputWithContext(context.Background())
}

func (o NetworkRuleConditionOutput) ToNetworkRuleConditionPtrOutputWithContext(ctx context.Context) NetworkRuleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkRuleCondition) *NetworkRuleCondition {
		return &v
	}).(NetworkRuleConditionPtrOutput)
}

// Description of the rule condition.
func (o NetworkRuleConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleConditionOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleConditionOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleConditionOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NetworkRuleConditionOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NetworkRuleConditionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleCondition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NetworkRuleCondition'.
func (o NetworkRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleConditionOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleConditionOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type NetworkRuleConditionPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleCondition)(nil)).Elem()
}

func (o NetworkRuleConditionPtrOutput) ToNetworkRuleConditionPtrOutput() NetworkRuleConditionPtrOutput {
	return o
}

func (o NetworkRuleConditionPtrOutput) ToNetworkRuleConditionPtrOutputWithContext(ctx context.Context) NetworkRuleConditionPtrOutput {
	return o
}

func (o NetworkRuleConditionPtrOutput) Elem() NetworkRuleConditionOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) NetworkRuleCondition {
		if v != nil {
			return *v
		}
		var ret NetworkRuleCondition
		return ret
	}).(NetworkRuleConditionOutput)
}

// Description of the rule condition.
func (o NetworkRuleConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleConditionPtrOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleConditionPtrOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.DestinationIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleConditionPtrOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NetworkRuleConditionPtrOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.IpProtocols
	}).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NetworkRuleConditionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NetworkRuleCondition'.
func (o NetworkRuleConditionPtrOutput) RuleConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.RuleConditionType
	}).(pulumi.StringPtrOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleConditionPtrOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleConditionPtrOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleCondition) []string {
		if v == nil {
			return nil
		}
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

// Rule condition of type network.
type NetworkRuleConditionResponse struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	// Expected value is 'NetworkRuleCondition'.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// Rule condition of type network.
type NetworkRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleConditionResponse)(nil)).Elem()
}

func (o NetworkRuleConditionResponseOutput) ToNetworkRuleConditionResponseOutput() NetworkRuleConditionResponseOutput {
	return o
}

func (o NetworkRuleConditionResponseOutput) ToNetworkRuleConditionResponseOutputWithContext(ctx context.Context) NetworkRuleConditionResponseOutput {
	return o
}

// Description of the rule condition.
func (o NetworkRuleConditionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleConditionResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleConditionResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleConditionResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NetworkRuleConditionResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NetworkRuleConditionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NetworkRuleCondition'.
func (o NetworkRuleConditionResponseOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleConditionResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleConditionResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type NetworkRuleConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleConditionResponse)(nil)).Elem()
}

func (o NetworkRuleConditionResponsePtrOutput) ToNetworkRuleConditionResponsePtrOutput() NetworkRuleConditionResponsePtrOutput {
	return o
}

func (o NetworkRuleConditionResponsePtrOutput) ToNetworkRuleConditionResponsePtrOutputWithContext(ctx context.Context) NetworkRuleConditionResponsePtrOutput {
	return o
}

func (o NetworkRuleConditionResponsePtrOutput) Elem() NetworkRuleConditionResponseOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) NetworkRuleConditionResponse {
		if v != nil {
			return *v
		}
		var ret NetworkRuleConditionResponse
		return ret
	}).(NetworkRuleConditionResponseOutput)
}

// Description of the rule condition.
func (o NetworkRuleConditionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleConditionResponsePtrOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleConditionResponsePtrOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleConditionResponsePtrOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NetworkRuleConditionResponsePtrOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpProtocols
	}).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NetworkRuleConditionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
// Expected value is 'NetworkRuleCondition'.
func (o NetworkRuleConditionResponsePtrOutput) RuleConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleConditionType
	}).(pulumi.StringPtrOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleConditionResponsePtrOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleConditionResponsePtrOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRuleConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

// Rule of type network.
type NetworkRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	// Expected value is 'NetworkRule'.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// Rule of type network.
type NetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleResponse)(nil)).Elem()
}

func (o NetworkRuleResponseOutput) ToNetworkRuleResponseOutput() NetworkRuleResponseOutput {
	return o
}

func (o NetworkRuleResponseOutput) ToNetworkRuleResponseOutputWithContext(ctx context.Context) NetworkRuleResponseOutput {
	return o
}

// Description of the rule.
func (o NetworkRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o NetworkRuleResponseOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NetworkRuleResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NetworkRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
// Expected value is 'NetworkRule'.
func (o NetworkRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupType struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleType `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
	FlushConnection *bool `pulumi:"flushConnection"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleType `pulumi:"securityRules"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupTypeInput is an input type that accepts NetworkSecurityGroupTypeArgs and NetworkSecurityGroupTypeOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypeInput` via:
//
//	NetworkSecurityGroupTypeArgs{...}
type NetworkSecurityGroupTypeInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput
	ToNetworkSecurityGroupTypeOutputWithContext(context.Context) NetworkSecurityGroupTypeOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleTypeArrayInput `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
	FlushConnection pulumi.BoolPtrInput `pulumi:"flushConnection"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleTypeArrayInput `pulumi:"securityRules"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return i.ToNetworkSecurityGroupTypeOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput)
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput).ToNetworkSecurityGroupTypePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupTypePtrInput is an input type that accepts NetworkSecurityGroupTypeArgs, NetworkSecurityGroupTypePtr and NetworkSecurityGroupTypePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypePtrInput` via:
//
//	        NetworkSecurityGroupTypeArgs{...}
//
//	or:
//
//	        nil
type NetworkSecurityGroupTypePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput
	ToNetworkSecurityGroupTypePtrOutputWithContext(context.Context) NetworkSecurityGroupTypePtrOutput
}

type networkSecurityGroupTypePtrType NetworkSecurityGroupTypeArgs

func NetworkSecurityGroupTypePtr(v *NetworkSecurityGroupTypeArgs) NetworkSecurityGroupTypePtrInput {
	return (*networkSecurityGroupTypePtrType)(v)
}

func (*networkSecurityGroupTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkSecurityGroupType) *NetworkSecurityGroupType {
		return &v
	}).(NetworkSecurityGroupTypePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupTypeOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SecurityRuleType { return v.DefaultSecurityRules }).(SecurityRuleTypeArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
func (o NetworkSecurityGroupTypeOutput) FlushConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *bool { return v.FlushConnection }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypeOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SecurityRuleType { return v.SecurityRules }).(SecurityRuleTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSecurityGroupTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) Elem() NetworkSecurityGroupTypeOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) NetworkSecurityGroupType {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroupType
		return ret
	}).(NetworkSecurityGroupTypeOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupTypePtrOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
func (o NetworkSecurityGroupTypePtrOutput) FlushConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *bool {
		if v == nil {
			return nil
		}
		return v.FlushConnection
	}).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypePtrOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleResponse `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A collection of references to flow log resources.
	FlowLogs []FlowLogResponse `pulumi:"flowLogs"`
	// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
	FlushConnection *bool `pulumi:"flushConnection"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the network security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return o
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponseOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.DefaultSecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponseOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []FlowLogResponse { return v.FlowLogs }).(FlowLogResponseArrayOutput)
}

// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
func (o NetworkSecurityGroupResponseOutput) FlushConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *bool { return v.FlushConnection }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponseOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.SecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) Elem() NetworkSecurityGroupResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) NetworkSecurityGroupResponse {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroupResponse
		return ret
	}).(NetworkSecurityGroupResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponsePtrOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponsePtrOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []FlowLogResponse {
		if v == nil {
			return nil
		}
		return v.FlowLogs
	}).(FlowLogResponseArrayOutput)
}

// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation.
func (o NetworkSecurityGroupResponsePtrOutput) FlushConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *bool {
		if v == nil {
			return nil
		}
		return v.FlushConnection
	}).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponsePtrOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// An NS record.
type NsRecord struct {
	// The name server name for this NS record.
	Nsdname *string `pulumi:"nsdname"`
}

// NsRecordInput is an input type that accepts NsRecordArgs and NsRecordOutput values.
// You can construct a concrete instance of `NsRecordInput` via:
//
//	NsRecordArgs{...}
type NsRecordInput interface {
	pulumi.Input

	ToNsRecordOutput() NsRecordOutput
	ToNsRecordOutputWithContext(context.Context) NsRecordOutput
}

// An NS record.
type NsRecordArgs struct {
	// The name server name for this NS record.
	Nsdname pulumi.StringPtrInput `pulumi:"nsdname"`
}

func (NsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsRecord)(nil)).Elem()
}

func (i NsRecordArgs) ToNsRecordOutput() NsRecordOutput {
	return i.ToNsRecordOutputWithContext(context.Background())
}

func (i NsRecordArgs) ToNsRecordOutputWithContext(ctx context.Context) NsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsRecordOutput)
}

// NsRecordArrayInput is an input type that accepts NsRecordArray and NsRecordArrayOutput values.
// You can construct a concrete instance of `NsRecordArrayInput` via:
//
//	NsRecordArray{ NsRecordArgs{...} }
type NsRecordArrayInput interface {
	pulumi.Input

	ToNsRecordArrayOutput() NsRecordArrayOutput
	ToNsRecordArrayOutputWithContext(context.Context) NsRecordArrayOutput
}

type NsRecordArray []NsRecordInput

func (NsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsRecord)(nil)).Elem()
}

func (i NsRecordArray) ToNsRecordArrayOutput() NsRecordArrayOutput {
	return i.ToNsRecordArrayOutputWithContext(context.Background())
}

func (i NsRecordArray) ToNsRecordArrayOutputWithContext(ctx context.Context) NsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsRecordArrayOutput)
}

// An NS record.
type NsRecordOutput struct{ *pulumi.OutputState }

func (NsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsRecord)(nil)).Elem()
}

func (o NsRecordOutput) ToNsRecordOutput() NsRecordOutput {
	return o
}

func (o NsRecordOutput) ToNsRecordOutputWithContext(ctx context.Context) NsRecordOutput {
	return o
}

// The name server name for this NS record.
func (o NsRecordOutput) Nsdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsRecord) *string { return v.Nsdname }).(pulumi.StringPtrOutput)
}

type NsRecordArrayOutput struct{ *pulumi.OutputState }

func (NsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsRecord)(nil)).Elem()
}

func (o NsRecordArrayOutput) ToNsRecordArrayOutput() NsRecordArrayOutput {
	return o
}

func (o NsRecordArrayOutput) ToNsRecordArrayOutputWithContext(ctx context.Context) NsRecordArrayOutput {
	return o
}

func (o NsRecordArrayOutput) Index(i pulumi.IntInput) NsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsRecord {
		return vs[0].([]NsRecord)[vs[1].(int)]
	}).(NsRecordOutput)
}

// An NS record.
type NsRecordResponse struct {
	// The name server name for this NS record.
	Nsdname *string `pulumi:"nsdname"`
}

// An NS record.
type NsRecordResponseOutput struct{ *pulumi.OutputState }

func (NsRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsRecordResponse)(nil)).Elem()
}

func (o NsRecordResponseOutput) ToNsRecordResponseOutput() NsRecordResponseOutput {
	return o
}

func (o NsRecordResponseOutput) ToNsRecordResponseOutputWithContext(ctx context.Context) NsRecordResponseOutput {
	return o
}

// The name server name for this NS record.
func (o NsRecordResponseOutput) Nsdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsRecordResponse) *string { return v.Nsdname }).(pulumi.StringPtrOutput)
}

type NsRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (NsRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsRecordResponse)(nil)).Elem()
}

func (o NsRecordResponseArrayOutput) ToNsRecordResponseArrayOutput() NsRecordResponseArrayOutput {
	return o
}

func (o NsRecordResponseArrayOutput) ToNsRecordResponseArrayOutputWithContext(ctx context.Context) NsRecordResponseArrayOutput {
	return o
}

func (o NsRecordResponseArrayOutput) Index(i pulumi.IntInput) NsRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsRecordResponse {
		return vs[0].([]NsRecordResponse)[vs[1].(int)]
	}).(NsRecordResponseOutput)
}

// Office365 breakout categories.
type O365BreakOutCategoryPolicies struct {
	// Flag to control allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control default category.
	Default *bool `pulumi:"default"`
	// Flag to control optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// O365BreakOutCategoryPoliciesInput is an input type that accepts O365BreakOutCategoryPoliciesArgs and O365BreakOutCategoryPoliciesOutput values.
// You can construct a concrete instance of `O365BreakOutCategoryPoliciesInput` via:
//
//	O365BreakOutCategoryPoliciesArgs{...}
type O365BreakOutCategoryPoliciesInput interface {
	pulumi.Input

	ToO365BreakOutCategoryPoliciesOutput() O365BreakOutCategoryPoliciesOutput
	ToO365BreakOutCategoryPoliciesOutputWithContext(context.Context) O365BreakOutCategoryPoliciesOutput
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesArgs struct {
	// Flag to control allow category.
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	// Flag to control default category.
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// Flag to control optimize category.
	Optimize pulumi.BoolPtrInput `pulumi:"optimize"`
}

func (O365BreakOutCategoryPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesOutput() O365BreakOutCategoryPoliciesOutput {
	return i.ToO365BreakOutCategoryPoliciesOutputWithContext(context.Background())
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesOutput)
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return i.ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesOutput).ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx)
}

// O365BreakOutCategoryPoliciesPtrInput is an input type that accepts O365BreakOutCategoryPoliciesArgs, O365BreakOutCategoryPoliciesPtr and O365BreakOutCategoryPoliciesPtrOutput values.
// You can construct a concrete instance of `O365BreakOutCategoryPoliciesPtrInput` via:
//
//	        O365BreakOutCategoryPoliciesArgs{...}
//
//	or:
//
//	        nil
type O365BreakOutCategoryPoliciesPtrInput interface {
	pulumi.Input

	ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput
	ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Context) O365BreakOutCategoryPoliciesPtrOutput
}

type o365breakOutCategoryPoliciesPtrType O365BreakOutCategoryPoliciesArgs

func O365BreakOutCategoryPoliciesPtr(v *O365BreakOutCategoryPoliciesArgs) O365BreakOutCategoryPoliciesPtrInput {
	return (*o365breakOutCategoryPoliciesPtrType)(v)
}

func (*o365breakOutCategoryPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (i *o365breakOutCategoryPoliciesPtrType) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return i.ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i *o365breakOutCategoryPoliciesPtrType) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesPtrOutput)
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesOutput() O365BreakOutCategoryPoliciesOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return o.ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v O365BreakOutCategoryPolicies) *O365BreakOutCategoryPolicies {
		return &v
	}).(O365BreakOutCategoryPoliciesPtrOutput)
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPolicies) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPolicies) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPolicies) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type O365BreakOutCategoryPoliciesPtrOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesPtrOutput) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesPtrOutput) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesPtrOutput) Elem() O365BreakOutCategoryPoliciesOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) O365BreakOutCategoryPolicies {
		if v != nil {
			return *v
		}
		var ret O365BreakOutCategoryPolicies
		return ret
	}).(O365BreakOutCategoryPoliciesOutput)
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesPtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesPtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesResponse struct {
	// Flag to control allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control default category.
	Default *bool `pulumi:"default"`
	// Flag to control optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesResponseOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesResponseOutput) ToO365BreakOutCategoryPoliciesResponseOutput() O365BreakOutCategoryPoliciesResponseOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesResponseOutput) ToO365BreakOutCategoryPoliciesResponseOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponseOutput {
	return o
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesResponseOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPoliciesResponse) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesResponseOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPoliciesResponse) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesResponseOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPoliciesResponse) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type O365BreakOutCategoryPoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesResponsePtrOutput) ToO365BreakOutCategoryPoliciesResponsePtrOutput() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesResponsePtrOutput) ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Elem() O365BreakOutCategoryPoliciesResponseOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) O365BreakOutCategoryPoliciesResponse {
		if v != nil {
			return *v
		}
		var ret O365BreakOutCategoryPoliciesResponse
		return ret
	}).(O365BreakOutCategoryPoliciesResponseOutput)
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// The Office365 breakout policy.
type O365PolicyProperties struct {
	// Office365 breakout categories.
	BreakOutCategories *O365BreakOutCategoryPolicies `pulumi:"breakOutCategories"`
}

// O365PolicyPropertiesInput is an input type that accepts O365PolicyPropertiesArgs and O365PolicyPropertiesOutput values.
// You can construct a concrete instance of `O365PolicyPropertiesInput` via:
//
//	O365PolicyPropertiesArgs{...}
type O365PolicyPropertiesInput interface {
	pulumi.Input

	ToO365PolicyPropertiesOutput() O365PolicyPropertiesOutput
	ToO365PolicyPropertiesOutputWithContext(context.Context) O365PolicyPropertiesOutput
}

// The Office365 breakout policy.
type O365PolicyPropertiesArgs struct {
	// Office365 breakout categories.
	BreakOutCategories O365BreakOutCategoryPoliciesPtrInput `pulumi:"breakOutCategories"`
}

func (O365PolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*O365PolicyProperties)(nil)).Elem()
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesOutput() O365PolicyPropertiesOutput {
	return i.ToO365PolicyPropertiesOutputWithContext(context.Background())
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesOutputWithContext(ctx context.Context) O365PolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesOutput)
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return i.ToO365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesOutput).ToO365PolicyPropertiesPtrOutputWithContext(ctx)
}

// O365PolicyPropertiesPtrInput is an input type that accepts O365PolicyPropertiesArgs, O365PolicyPropertiesPtr and O365PolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `O365PolicyPropertiesPtrInput` via:
//
//	        O365PolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type O365PolicyPropertiesPtrInput interface {
	pulumi.Input

	ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput
	ToO365PolicyPropertiesPtrOutputWithContext(context.Context) O365PolicyPropertiesPtrOutput
}

type o365policyPropertiesPtrType O365PolicyPropertiesArgs

func O365PolicyPropertiesPtr(v *O365PolicyPropertiesArgs) O365PolicyPropertiesPtrInput {
	return (*o365policyPropertiesPtrType)(v)
}

func (*o365policyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**O365PolicyProperties)(nil)).Elem()
}

func (i *o365policyPropertiesPtrType) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return i.ToO365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *o365policyPropertiesPtrType) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesPtrOutput)
}

// The Office365 breakout policy.
type O365PolicyPropertiesOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365PolicyProperties)(nil)).Elem()
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesOutput() O365PolicyPropertiesOutput {
	return o
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesOutputWithContext(ctx context.Context) O365PolicyPropertiesOutput {
	return o
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return o.ToO365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v O365PolicyProperties) *O365PolicyProperties {
		return &v
	}).(O365PolicyPropertiesPtrOutput)
}

// Office365 breakout categories.
func (o O365PolicyPropertiesOutput) BreakOutCategories() O365BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v O365PolicyProperties) *O365BreakOutCategoryPolicies { return v.BreakOutCategories }).(O365BreakOutCategoryPoliciesPtrOutput)
}

type O365PolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365PolicyProperties)(nil)).Elem()
}

func (o O365PolicyPropertiesPtrOutput) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return o
}

func (o O365PolicyPropertiesPtrOutput) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return o
}

func (o O365PolicyPropertiesPtrOutput) Elem() O365PolicyPropertiesOutput {
	return o.ApplyT(func(v *O365PolicyProperties) O365PolicyProperties {
		if v != nil {
			return *v
		}
		var ret O365PolicyProperties
		return ret
	}).(O365PolicyPropertiesOutput)
}

// Office365 breakout categories.
func (o O365PolicyPropertiesPtrOutput) BreakOutCategories() O365BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v *O365PolicyProperties) *O365BreakOutCategoryPolicies {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(O365BreakOutCategoryPoliciesPtrOutput)
}

// The Office365 breakout policy.
type O365PolicyPropertiesResponse struct {
	// Office365 breakout categories.
	BreakOutCategories *O365BreakOutCategoryPoliciesResponse `pulumi:"breakOutCategories"`
}

// The Office365 breakout policy.
type O365PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365PolicyPropertiesResponse)(nil)).Elem()
}

func (o O365PolicyPropertiesResponseOutput) ToO365PolicyPropertiesResponseOutput() O365PolicyPropertiesResponseOutput {
	return o
}

func (o O365PolicyPropertiesResponseOutput) ToO365PolicyPropertiesResponseOutputWithContext(ctx context.Context) O365PolicyPropertiesResponseOutput {
	return o
}

// Office365 breakout categories.
func (o O365PolicyPropertiesResponseOutput) BreakOutCategories() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v O365PolicyPropertiesResponse) *O365BreakOutCategoryPoliciesResponse {
		return v.BreakOutCategories
	}).(O365BreakOutCategoryPoliciesResponsePtrOutput)
}

type O365PolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365PolicyPropertiesResponse)(nil)).Elem()
}

func (o O365PolicyPropertiesResponsePtrOutput) ToO365PolicyPropertiesResponsePtrOutput() O365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o O365PolicyPropertiesResponsePtrOutput) ToO365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) O365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o O365PolicyPropertiesResponsePtrOutput) Elem() O365PolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *O365PolicyPropertiesResponse) O365PolicyPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret O365PolicyPropertiesResponse
		return ret
	}).(O365PolicyPropertiesResponseOutput)
}

// Office365 breakout categories.
func (o O365PolicyPropertiesResponsePtrOutput) BreakOutCategories() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v *O365PolicyPropertiesResponse) *O365BreakOutCategoryPoliciesResponse {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(O365BreakOutCategoryPoliciesResponsePtrOutput)
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyProperties struct {
	// Office 365 breakout categories.
	BreakOutCategories *BreakOutCategoryPolicies `pulumi:"breakOutCategories"`
}

// Office365PolicyPropertiesInput is an input type that accepts Office365PolicyPropertiesArgs and Office365PolicyPropertiesOutput values.
// You can construct a concrete instance of `Office365PolicyPropertiesInput` via:
//
//	Office365PolicyPropertiesArgs{...}
type Office365PolicyPropertiesInput interface {
	pulumi.Input

	ToOffice365PolicyPropertiesOutput() Office365PolicyPropertiesOutput
	ToOffice365PolicyPropertiesOutputWithContext(context.Context) Office365PolicyPropertiesOutput
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesArgs struct {
	// Office 365 breakout categories.
	BreakOutCategories BreakOutCategoryPoliciesPtrInput `pulumi:"breakOutCategories"`
}

func (Office365PolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365PolicyProperties)(nil)).Elem()
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesOutput() Office365PolicyPropertiesOutput {
	return i.ToOffice365PolicyPropertiesOutputWithContext(context.Background())
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesOutputWithContext(ctx context.Context) Office365PolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesOutput)
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return i.ToOffice365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesOutput).ToOffice365PolicyPropertiesPtrOutputWithContext(ctx)
}

// Office365PolicyPropertiesPtrInput is an input type that accepts Office365PolicyPropertiesArgs, Office365PolicyPropertiesPtr and Office365PolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `Office365PolicyPropertiesPtrInput` via:
//
//	        Office365PolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type Office365PolicyPropertiesPtrInput interface {
	pulumi.Input

	ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput
	ToOffice365PolicyPropertiesPtrOutputWithContext(context.Context) Office365PolicyPropertiesPtrOutput
}

type office365PolicyPropertiesPtrType Office365PolicyPropertiesArgs

func Office365PolicyPropertiesPtr(v *Office365PolicyPropertiesArgs) Office365PolicyPropertiesPtrInput {
	return (*office365PolicyPropertiesPtrType)(v)
}

func (*office365PolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Office365PolicyProperties)(nil)).Elem()
}

func (i *office365PolicyPropertiesPtrType) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return i.ToOffice365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *office365PolicyPropertiesPtrType) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365PolicyProperties)(nil)).Elem()
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesOutput() Office365PolicyPropertiesOutput {
	return o
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesOutputWithContext(ctx context.Context) Office365PolicyPropertiesOutput {
	return o
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return o.ToOffice365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Office365PolicyProperties) *Office365PolicyProperties {
		return &v
	}).(Office365PolicyPropertiesPtrOutput)
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesOutput) BreakOutCategories() BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v Office365PolicyProperties) *BreakOutCategoryPolicies { return v.BreakOutCategories }).(BreakOutCategoryPoliciesPtrOutput)
}

type Office365PolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Office365PolicyProperties)(nil)).Elem()
}

func (o Office365PolicyPropertiesPtrOutput) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return o
}

func (o Office365PolicyPropertiesPtrOutput) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return o
}

func (o Office365PolicyPropertiesPtrOutput) Elem() Office365PolicyPropertiesOutput {
	return o.ApplyT(func(v *Office365PolicyProperties) Office365PolicyProperties {
		if v != nil {
			return *v
		}
		var ret Office365PolicyProperties
		return ret
	}).(Office365PolicyPropertiesOutput)
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesPtrOutput) BreakOutCategories() BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v *Office365PolicyProperties) *BreakOutCategoryPolicies {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(BreakOutCategoryPoliciesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesResponse struct {
	// Office 365 breakout categories.
	BreakOutCategories *BreakOutCategoryPoliciesResponse `pulumi:"breakOutCategories"`
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365PolicyPropertiesResponse)(nil)).Elem()
}

func (o Office365PolicyPropertiesResponseOutput) ToOffice365PolicyPropertiesResponseOutput() Office365PolicyPropertiesResponseOutput {
	return o
}

func (o Office365PolicyPropertiesResponseOutput) ToOffice365PolicyPropertiesResponseOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponseOutput {
	return o
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesResponseOutput) BreakOutCategories() BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v Office365PolicyPropertiesResponse) *BreakOutCategoryPoliciesResponse {
		return v.BreakOutCategories
	}).(BreakOutCategoryPoliciesResponsePtrOutput)
}

type Office365PolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Office365PolicyPropertiesResponse)(nil)).Elem()
}

func (o Office365PolicyPropertiesResponsePtrOutput) ToOffice365PolicyPropertiesResponsePtrOutput() Office365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o Office365PolicyPropertiesResponsePtrOutput) ToOffice365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o Office365PolicyPropertiesResponsePtrOutput) Elem() Office365PolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *Office365PolicyPropertiesResponse) Office365PolicyPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret Office365PolicyPropertiesResponse
		return ret
	}).(Office365PolicyPropertiesResponseOutput)
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesResponsePtrOutput) BreakOutCategories() BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v *Office365PolicyPropertiesResponse) *BreakOutCategoryPoliciesResponse {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(BreakOutCategoryPoliciesResponsePtrOutput)
}

// Describes a column to sort
type OrderBy struct {
	// Describes the actual column name to sort by
	Field *string `pulumi:"field"`
	// Describes if results should be in ascending/descending order
	Order *string `pulumi:"order"`
}

// OrderByInput is an input type that accepts OrderByArgs and OrderByOutput values.
// You can construct a concrete instance of `OrderByInput` via:
//
//	OrderByArgs{...}
type OrderByInput interface {
	pulumi.Input

	ToOrderByOutput() OrderByOutput
	ToOrderByOutputWithContext(context.Context) OrderByOutput
}

// Describes a column to sort
type OrderByArgs struct {
	// Describes the actual column name to sort by
	Field pulumi.StringPtrInput `pulumi:"field"`
	// Describes if results should be in ascending/descending order
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (OrderByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderBy)(nil)).Elem()
}

func (i OrderByArgs) ToOrderByOutput() OrderByOutput {
	return i.ToOrderByOutputWithContext(context.Background())
}

func (i OrderByArgs) ToOrderByOutputWithContext(ctx context.Context) OrderByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderByOutput)
}

func (i OrderByArgs) ToOrderByPtrOutput() OrderByPtrOutput {
	return i.ToOrderByPtrOutputWithContext(context.Background())
}

func (i OrderByArgs) ToOrderByPtrOutputWithContext(ctx context.Context) OrderByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderByOutput).ToOrderByPtrOutputWithContext(ctx)
}

// OrderByPtrInput is an input type that accepts OrderByArgs, OrderByPtr and OrderByPtrOutput values.
// You can construct a concrete instance of `OrderByPtrInput` via:
//
//	        OrderByArgs{...}
//
//	or:
//
//	        nil
type OrderByPtrInput interface {
	pulumi.Input

	ToOrderByPtrOutput() OrderByPtrOutput
	ToOrderByPtrOutputWithContext(context.Context) OrderByPtrOutput
}

type orderByPtrType OrderByArgs

func OrderByPtr(v *OrderByArgs) OrderByPtrInput {
	return (*orderByPtrType)(v)
}

func (*orderByPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderBy)(nil)).Elem()
}

func (i *orderByPtrType) ToOrderByPtrOutput() OrderByPtrOutput {
	return i.ToOrderByPtrOutputWithContext(context.Background())
}

func (i *orderByPtrType) ToOrderByPtrOutputWithContext(ctx context.Context) OrderByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderByPtrOutput)
}

// Describes a column to sort
type OrderByOutput struct{ *pulumi.OutputState }

func (OrderByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderBy)(nil)).Elem()
}

func (o OrderByOutput) ToOrderByOutput() OrderByOutput {
	return o
}

func (o OrderByOutput) ToOrderByOutputWithContext(ctx context.Context) OrderByOutput {
	return o
}

func (o OrderByOutput) ToOrderByPtrOutput() OrderByPtrOutput {
	return o.ToOrderByPtrOutputWithContext(context.Background())
}

func (o OrderByOutput) ToOrderByPtrOutputWithContext(ctx context.Context) OrderByPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrderBy) *OrderBy {
		return &v
	}).(OrderByPtrOutput)
}

// Describes the actual column name to sort by
func (o OrderByOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderBy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// Describes if results should be in ascending/descending order
func (o OrderByOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderBy) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type OrderByPtrOutput struct{ *pulumi.OutputState }

func (OrderByPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderBy)(nil)).Elem()
}

func (o OrderByPtrOutput) ToOrderByPtrOutput() OrderByPtrOutput {
	return o
}

func (o OrderByPtrOutput) ToOrderByPtrOutputWithContext(ctx context.Context) OrderByPtrOutput {
	return o
}

func (o OrderByPtrOutput) Elem() OrderByOutput {
	return o.ApplyT(func(v *OrderBy) OrderBy {
		if v != nil {
			return *v
		}
		var ret OrderBy
		return ret
	}).(OrderByOutput)
}

// Describes the actual column name to sort by
func (o OrderByPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderBy) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

// Describes if results should be in ascending/descending order
func (o OrderByPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderBy) *string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringPtrOutput)
}

// Outbound rule of the load balancer.
type OutboundRule struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResource `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResource `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The protocol for the outbound rule in load balancer.
	Protocol string `pulumi:"protocol"`
}

// OutboundRuleInput is an input type that accepts OutboundRuleArgs and OutboundRuleOutput values.
// You can construct a concrete instance of `OutboundRuleInput` via:
//
//	OutboundRuleArgs{...}
type OutboundRuleInput interface {
	pulumi.Input

	ToOutboundRuleOutput() OutboundRuleOutput
	ToOutboundRuleOutputWithContext(context.Context) OutboundRuleOutput
}

// Outbound rule of the load balancer.
type OutboundRuleArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInput `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The protocol for the outbound rule in load balancer.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (OutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRule)(nil)).Elem()
}

func (i OutboundRuleArgs) ToOutboundRuleOutput() OutboundRuleOutput {
	return i.ToOutboundRuleOutputWithContext(context.Background())
}

func (i OutboundRuleArgs) ToOutboundRuleOutputWithContext(ctx context.Context) OutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleOutput)
}

// OutboundRuleArrayInput is an input type that accepts OutboundRuleArray and OutboundRuleArrayOutput values.
// You can construct a concrete instance of `OutboundRuleArrayInput` via:
//
//	OutboundRuleArray{ OutboundRuleArgs{...} }
type OutboundRuleArrayInput interface {
	pulumi.Input

	ToOutboundRuleArrayOutput() OutboundRuleArrayOutput
	ToOutboundRuleArrayOutputWithContext(context.Context) OutboundRuleArrayOutput
}

type OutboundRuleArray []OutboundRuleInput

func (OutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRule)(nil)).Elem()
}

func (i OutboundRuleArray) ToOutboundRuleArrayOutput() OutboundRuleArrayOutput {
	return i.ToOutboundRuleArrayOutputWithContext(context.Background())
}

func (i OutboundRuleArray) ToOutboundRuleArrayOutputWithContext(ctx context.Context) OutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleArrayOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleOutput struct{ *pulumi.OutputState }

func (OutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRule)(nil)).Elem()
}

func (o OutboundRuleOutput) ToOutboundRuleOutput() OutboundRuleOutput {
	return o
}

func (o OutboundRuleOutput) ToOutboundRuleOutputWithContext(ctx context.Context) OutboundRuleOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundRuleOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRule) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRuleOutput) BackendAddressPool() SubResourceOutput {
	return o.ApplyT(func(v OutboundRule) SubResource { return v.BackendAddressPool }).(SubResourceOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRuleOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutboundRule) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRuleOutput) FrontendIPConfigurations() SubResourceArrayOutput {
	return o.ApplyT(func(v OutboundRule) []SubResource { return v.FrontendIPConfigurations }).(SubResourceArrayOutput)
}

// Resource ID.
func (o OutboundRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection.
func (o OutboundRuleOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRule) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
func (o OutboundRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol for the outbound rule in load balancer.
func (o OutboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type OutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRule)(nil)).Elem()
}

func (o OutboundRuleArrayOutput) ToOutboundRuleArrayOutput() OutboundRuleArrayOutput {
	return o
}

func (o OutboundRuleArrayOutput) ToOutboundRuleArrayOutputWithContext(ctx context.Context) OutboundRuleArrayOutput {
	return o
}

func (o OutboundRuleArrayOutput) Index(i pulumi.IntInput) OutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRule {
		return vs[0].([]OutboundRule)[vs[1].(int)]
	}).(OutboundRuleOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleResponse struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponse `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResourceResponse `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The protocol for the outbound rule in load balancer.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the outbound rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Outbound rule of the load balancer.
type OutboundRuleResponseOutput struct{ *pulumi.OutputState }

func (OutboundRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleResponse)(nil)).Elem()
}

func (o OutboundRuleResponseOutput) ToOutboundRuleResponseOutput() OutboundRuleResponseOutput {
	return o
}

func (o OutboundRuleResponseOutput) ToOutboundRuleResponseOutputWithContext(ctx context.Context) OutboundRuleResponseOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundRuleResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRuleResponseOutput) BackendAddressPool() SubResourceResponseOutput {
	return o.ApplyT(func(v OutboundRuleResponse) SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponseOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRuleResponseOutput) FrontendIPConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v OutboundRuleResponse) []SubResourceResponse { return v.FrontendIPConfigurations }).(SubResourceResponseArrayOutput)
}

// Resource ID.
func (o OutboundRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection.
func (o OutboundRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
func (o OutboundRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol for the outbound rule in load balancer.
func (o OutboundRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the outbound rule resource.
func (o OutboundRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o OutboundRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type OutboundRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleResponse)(nil)).Elem()
}

func (o OutboundRuleResponseArrayOutput) ToOutboundRuleResponseArrayOutput() OutboundRuleResponseArrayOutput {
	return o
}

func (o OutboundRuleResponseArrayOutput) ToOutboundRuleResponseArrayOutputWithContext(ctx context.Context) OutboundRuleResponseArrayOutput {
	return o
}

func (o OutboundRuleResponseArrayOutput) Index(i pulumi.IntInput) OutboundRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRuleResponse {
		return vs[0].([]OutboundRuleResponse)[vs[1].(int)]
	}).(OutboundRuleResponseOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntry struct {
	// The managed rule sets that are associated with the exclusion.
	ExclusionManagedRuleSets []ExclusionManagedRuleSet `pulumi:"exclusionManagedRuleSets"`
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// OwaspCrsExclusionEntryInput is an input type that accepts OwaspCrsExclusionEntryArgs and OwaspCrsExclusionEntryOutput values.
// You can construct a concrete instance of `OwaspCrsExclusionEntryInput` via:
//
//	OwaspCrsExclusionEntryArgs{...}
type OwaspCrsExclusionEntryInput interface {
	pulumi.Input

	ToOwaspCrsExclusionEntryOutput() OwaspCrsExclusionEntryOutput
	ToOwaspCrsExclusionEntryOutputWithContext(context.Context) OwaspCrsExclusionEntryOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryArgs struct {
	// The managed rule sets that are associated with the exclusion.
	ExclusionManagedRuleSets ExclusionManagedRuleSetArrayInput `pulumi:"exclusionManagedRuleSets"`
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (OwaspCrsExclusionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OwaspCrsExclusionEntry)(nil)).Elem()
}

func (i OwaspCrsExclusionEntryArgs) ToOwaspCrsExclusionEntryOutput() OwaspCrsExclusionEntryOutput {
	return i.ToOwaspCrsExclusionEntryOutputWithContext(context.Background())
}

func (i OwaspCrsExclusionEntryArgs) ToOwaspCrsExclusionEntryOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwaspCrsExclusionEntryOutput)
}

// OwaspCrsExclusionEntryArrayInput is an input type that accepts OwaspCrsExclusionEntryArray and OwaspCrsExclusionEntryArrayOutput values.
// You can construct a concrete instance of `OwaspCrsExclusionEntryArrayInput` via:
//
//	OwaspCrsExclusionEntryArray{ OwaspCrsExclusionEntryArgs{...} }
type OwaspCrsExclusionEntryArrayInput interface {
	pulumi.Input

	ToOwaspCrsExclusionEntryArrayOutput() OwaspCrsExclusionEntryArrayOutput
	ToOwaspCrsExclusionEntryArrayOutputWithContext(context.Context) OwaspCrsExclusionEntryArrayOutput
}

type OwaspCrsExclusionEntryArray []OwaspCrsExclusionEntryInput

func (OwaspCrsExclusionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwaspCrsExclusionEntry)(nil)).Elem()
}

func (i OwaspCrsExclusionEntryArray) ToOwaspCrsExclusionEntryArrayOutput() OwaspCrsExclusionEntryArrayOutput {
	return i.ToOwaspCrsExclusionEntryArrayOutputWithContext(context.Background())
}

func (i OwaspCrsExclusionEntryArray) ToOwaspCrsExclusionEntryArrayOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwaspCrsExclusionEntryArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwaspCrsExclusionEntry)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryOutput) ToOwaspCrsExclusionEntryOutput() OwaspCrsExclusionEntryOutput {
	return o
}

func (o OwaspCrsExclusionEntryOutput) ToOwaspCrsExclusionEntryOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryOutput {
	return o
}

// The managed rule sets that are associated with the exclusion.
func (o OwaspCrsExclusionEntryOutput) ExclusionManagedRuleSets() ExclusionManagedRuleSetArrayOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntry) []ExclusionManagedRuleSet { return v.ExclusionManagedRuleSets }).(ExclusionManagedRuleSetArrayOutput)
}

// The variable to be excluded.
func (o OwaspCrsExclusionEntryOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntry) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntry) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntry) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type OwaspCrsExclusionEntryArrayOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwaspCrsExclusionEntry)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryArrayOutput) ToOwaspCrsExclusionEntryArrayOutput() OwaspCrsExclusionEntryArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryArrayOutput) ToOwaspCrsExclusionEntryArrayOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryArrayOutput) Index(i pulumi.IntInput) OwaspCrsExclusionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OwaspCrsExclusionEntry {
		return vs[0].([]OwaspCrsExclusionEntry)[vs[1].(int)]
	}).(OwaspCrsExclusionEntryOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryResponse struct {
	// The managed rule sets that are associated with the exclusion.
	ExclusionManagedRuleSets []ExclusionManagedRuleSetResponse `pulumi:"exclusionManagedRuleSets"`
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryResponseOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwaspCrsExclusionEntryResponse)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryResponseOutput) ToOwaspCrsExclusionEntryResponseOutput() OwaspCrsExclusionEntryResponseOutput {
	return o
}

func (o OwaspCrsExclusionEntryResponseOutput) ToOwaspCrsExclusionEntryResponseOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryResponseOutput {
	return o
}

// The managed rule sets that are associated with the exclusion.
func (o OwaspCrsExclusionEntryResponseOutput) ExclusionManagedRuleSets() ExclusionManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntryResponse) []ExclusionManagedRuleSetResponse {
		return v.ExclusionManagedRuleSets
	}).(ExclusionManagedRuleSetResponseArrayOutput)
}

// The variable to be excluded.
func (o OwaspCrsExclusionEntryResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntryResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntryResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntryResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type OwaspCrsExclusionEntryResponseArrayOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwaspCrsExclusionEntryResponse)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryResponseArrayOutput) ToOwaspCrsExclusionEntryResponseArrayOutput() OwaspCrsExclusionEntryResponseArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryResponseArrayOutput) ToOwaspCrsExclusionEntryResponseArrayOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryResponseArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryResponseArrayOutput) Index(i pulumi.IntInput) OwaspCrsExclusionEntryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OwaspCrsExclusionEntryResponse {
		return vs[0].([]OwaspCrsExclusionEntryResponse)[vs[1].(int)]
	}).(OwaspCrsExclusionEntryResponseOutput)
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfiguration struct {
	// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfiguration `pulumi:"routingConfiguration"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
}

// P2SConnectionConfigurationInput is an input type that accepts P2SConnectionConfigurationArgs and P2SConnectionConfigurationOutput values.
// You can construct a concrete instance of `P2SConnectionConfigurationInput` via:
//
//	P2SConnectionConfigurationArgs{...}
type P2SConnectionConfigurationInput interface {
	pulumi.Input

	ToP2SConnectionConfigurationOutput() P2SConnectionConfigurationOutput
	ToP2SConnectionConfigurationOutputWithContext(context.Context) P2SConnectionConfigurationOutput
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationArgs struct {
	// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationPtrInput `pulumi:"routingConfiguration"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
}

func (P2SConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SConnectionConfiguration)(nil)).Elem()
}

func (i P2SConnectionConfigurationArgs) ToP2SConnectionConfigurationOutput() P2SConnectionConfigurationOutput {
	return i.ToP2SConnectionConfigurationOutputWithContext(context.Background())
}

func (i P2SConnectionConfigurationArgs) ToP2SConnectionConfigurationOutputWithContext(ctx context.Context) P2SConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SConnectionConfigurationOutput)
}

// P2SConnectionConfigurationArrayInput is an input type that accepts P2SConnectionConfigurationArray and P2SConnectionConfigurationArrayOutput values.
// You can construct a concrete instance of `P2SConnectionConfigurationArrayInput` via:
//
//	P2SConnectionConfigurationArray{ P2SConnectionConfigurationArgs{...} }
type P2SConnectionConfigurationArrayInput interface {
	pulumi.Input

	ToP2SConnectionConfigurationArrayOutput() P2SConnectionConfigurationArrayOutput
	ToP2SConnectionConfigurationArrayOutputWithContext(context.Context) P2SConnectionConfigurationArrayOutput
}

type P2SConnectionConfigurationArray []P2SConnectionConfigurationInput

func (P2SConnectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SConnectionConfiguration)(nil)).Elem()
}

func (i P2SConnectionConfigurationArray) ToP2SConnectionConfigurationArrayOutput() P2SConnectionConfigurationArrayOutput {
	return i.ToP2SConnectionConfigurationArrayOutputWithContext(context.Background())
}

func (i P2SConnectionConfigurationArray) ToP2SConnectionConfigurationArrayOutputWithContext(ctx context.Context) P2SConnectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SConnectionConfigurationArrayOutput)
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SConnectionConfiguration)(nil)).Elem()
}

func (o P2SConnectionConfigurationOutput) ToP2SConnectionConfigurationOutput() P2SConnectionConfigurationOutput {
	return o
}

func (o P2SConnectionConfigurationOutput) ToP2SConnectionConfigurationOutputWithContext(ctx context.Context) P2SConnectionConfigurationOutput {
	return o
}

// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
func (o P2SConnectionConfigurationOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o P2SConnectionConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SConnectionConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o P2SConnectionConfigurationOutput) RoutingConfiguration() RoutingConfigurationPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *RoutingConfiguration { return v.RoutingConfiguration }).(RoutingConfigurationPtrOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o P2SConnectionConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

type P2SConnectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SConnectionConfiguration)(nil)).Elem()
}

func (o P2SConnectionConfigurationArrayOutput) ToP2SConnectionConfigurationArrayOutput() P2SConnectionConfigurationArrayOutput {
	return o
}

func (o P2SConnectionConfigurationArrayOutput) ToP2SConnectionConfigurationArrayOutputWithContext(ctx context.Context) P2SConnectionConfigurationArrayOutput {
	return o
}

func (o P2SConnectionConfigurationArrayOutput) Index(i pulumi.IntInput) P2SConnectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SConnectionConfiguration {
		return vs[0].([]P2SConnectionConfiguration)[vs[1].(int)]
	}).(P2SConnectionConfigurationOutput)
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationResponse struct {
	// List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.
	ConfigurationPolicyGroupAssociations []SubResourceResponse `pulumi:"configurationPolicyGroupAssociations"`
	// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.
	PreviousConfigurationPolicyGroupAssociations []VpnServerConfigurationPolicyGroupResponse `pulumi:"previousConfigurationPolicyGroupAssociations"`
	// The provisioning state of the P2SConnectionConfiguration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SConnectionConfigurationResponse)(nil)).Elem()
}

func (o P2SConnectionConfigurationResponseOutput) ToP2SConnectionConfigurationResponseOutput() P2SConnectionConfigurationResponseOutput {
	return o
}

func (o P2SConnectionConfigurationResponseOutput) ToP2SConnectionConfigurationResponseOutputWithContext(ctx context.Context) P2SConnectionConfigurationResponseOutput {
	return o
}

// List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.
func (o P2SConnectionConfigurationResponseOutput) ConfigurationPolicyGroupAssociations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) []SubResourceResponse {
		return v.ConfigurationPolicyGroupAssociations
	}).(SubResourceResponseArrayOutput)
}

// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
func (o P2SConnectionConfigurationResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SConnectionConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o P2SConnectionConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SConnectionConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.
func (o P2SConnectionConfigurationResponseOutput) PreviousConfigurationPolicyGroupAssociations() VpnServerConfigurationPolicyGroupResponseArrayOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) []VpnServerConfigurationPolicyGroupResponse {
		return v.PreviousConfigurationPolicyGroupAssociations
	}).(VpnServerConfigurationPolicyGroupResponseArrayOutput)
}

// The provisioning state of the P2SConnectionConfiguration resource.
func (o P2SConnectionConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o P2SConnectionConfigurationResponseOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *RoutingConfigurationResponse {
		return v.RoutingConfiguration
	}).(RoutingConfigurationResponsePtrOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o P2SConnectionConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

type P2SConnectionConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SConnectionConfigurationResponse)(nil)).Elem()
}

func (o P2SConnectionConfigurationResponseArrayOutput) ToP2SConnectionConfigurationResponseArrayOutput() P2SConnectionConfigurationResponseArrayOutput {
	return o
}

func (o P2SConnectionConfigurationResponseArrayOutput) ToP2SConnectionConfigurationResponseArrayOutputWithContext(ctx context.Context) P2SConnectionConfigurationResponseArrayOutput {
	return o
}

func (o P2SConnectionConfigurationResponseArrayOutput) Index(i pulumi.IntInput) P2SConnectionConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SConnectionConfigurationResponse {
		return vs[0].([]P2SConnectionConfigurationResponse)[vs[1].(int)]
	}).(P2SConnectionConfigurationResponseOutput)
}

// P2SVpnGateway Resource.
type P2SVpnGatewayResponse struct {
	// List of all customer specified DNS servers IP addresses.
	CustomDnsServers []string `pulumi:"customDnsServers"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
	IsRoutingPreferenceInternet *bool `pulumi:"isRoutingPreferenceInternet"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// List of all p2s connection configurations of the gateway.
	P2SConnectionConfigurations []P2SConnectionConfigurationResponse `pulumi:"p2SConnectionConfigurations"`
	// The provisioning state of the P2S VPN gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The VirtualHub to which the gateway belongs.
	VirtualHub *SubResourceResponse `pulumi:"virtualHub"`
	// All P2S VPN clients' connection health status.
	VpnClientConnectionHealth VpnClientConnectionHealthResponse `pulumi:"vpnClientConnectionHealth"`
	// The scale unit for this p2s vpn gateway.
	VpnGatewayScaleUnit *int `pulumi:"vpnGatewayScaleUnit"`
	// The VpnServerConfiguration to which the p2sVpnGateway is attached to.
	VpnServerConfiguration *SubResourceResponse `pulumi:"vpnServerConfiguration"`
}

// P2SVpnGateway Resource.
type P2SVpnGatewayResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnGatewayResponse)(nil)).Elem()
}

func (o P2SVpnGatewayResponseOutput) ToP2SVpnGatewayResponseOutput() P2SVpnGatewayResponseOutput {
	return o
}

func (o P2SVpnGatewayResponseOutput) ToP2SVpnGatewayResponseOutputWithContext(ctx context.Context) P2SVpnGatewayResponseOutput {
	return o
}

// List of all customer specified DNS servers IP addresses.
func (o P2SVpnGatewayResponseOutput) CustomDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) []string { return v.CustomDnsServers }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o P2SVpnGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
func (o P2SVpnGatewayResponseOutput) IsRoutingPreferenceInternet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *bool { return v.IsRoutingPreferenceInternet }).(pulumi.BoolPtrOutput)
}

// Resource location.
func (o P2SVpnGatewayResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o P2SVpnGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// List of all p2s connection configurations of the gateway.
func (o P2SVpnGatewayResponseOutput) P2SConnectionConfigurations() P2SConnectionConfigurationResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) []P2SConnectionConfigurationResponse {
		return v.P2SConnectionConfigurations
	}).(P2SConnectionConfigurationResponseArrayOutput)
}

// The provisioning state of the P2S VPN gateway resource.
func (o P2SVpnGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource tags.
func (o P2SVpnGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o P2SVpnGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The VirtualHub to which the gateway belongs.
func (o P2SVpnGatewayResponseOutput) VirtualHub() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *SubResourceResponse { return v.VirtualHub }).(SubResourceResponsePtrOutput)
}

// All P2S VPN clients' connection health status.
func (o P2SVpnGatewayResponseOutput) VpnClientConnectionHealth() VpnClientConnectionHealthResponseOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) VpnClientConnectionHealthResponse { return v.VpnClientConnectionHealth }).(VpnClientConnectionHealthResponseOutput)
}

// The scale unit for this p2s vpn gateway.
func (o P2SVpnGatewayResponseOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *int { return v.VpnGatewayScaleUnit }).(pulumi.IntPtrOutput)
}

// The VpnServerConfiguration to which the p2sVpnGateway is attached to.
func (o P2SVpnGatewayResponseOutput) VpnServerConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *SubResourceResponse { return v.VpnServerConfiguration }).(SubResourceResponsePtrOutput)
}

type P2SVpnGatewayResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnGatewayResponse)(nil)).Elem()
}

func (o P2SVpnGatewayResponseArrayOutput) ToP2SVpnGatewayResponseArrayOutput() P2SVpnGatewayResponseArrayOutput {
	return o
}

func (o P2SVpnGatewayResponseArrayOutput) ToP2SVpnGatewayResponseArrayOutputWithContext(ctx context.Context) P2SVpnGatewayResponseArrayOutput {
	return o
}

func (o P2SVpnGatewayResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnGatewayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnGatewayResponse {
		return vs[0].([]P2SVpnGatewayResponse)[vs[1].(int)]
	}).(P2SVpnGatewayResponseOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigRadiusClientRootCertificateInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateArgs and P2SVpnServerConfigRadiusClientRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateInput` via:
//
//	P2SVpnServerConfigRadiusClientRootCertificateArgs{...}
type P2SVpnServerConfigRadiusClientRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigRadiusClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArgs) ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArgs) ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateOutput)
}

// P2SVpnServerConfigRadiusClientRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateArray and P2SVpnServerConfigRadiusClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateArrayInput` via:
//
//	P2SVpnServerConfigRadiusClientRootCertificateArray{ P2SVpnServerConfigRadiusClientRootCertificateArgs{...} }
type P2SVpnServerConfigRadiusClientRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput
}

type P2SVpnServerConfigRadiusClientRootCertificateArray []P2SVpnServerConfigRadiusClientRootCertificateInput

func (P2SVpnServerConfigRadiusClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArray) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArray) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusClientRootCertificate {
		return vs[0].([]P2SVpnServerConfigRadiusClientRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusClientRootCertificateOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the radius client root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the radius client root certificate resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusClientRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigRadiusClientRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigRadiusServerRootCertificateInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateArgs and P2SVpnServerConfigRadiusServerRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateInput` via:
//
//	P2SVpnServerConfigRadiusServerRootCertificateArgs{...}
type P2SVpnServerConfigRadiusServerRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigRadiusServerRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArgs) ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArgs) ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateOutput)
}

// P2SVpnServerConfigRadiusServerRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateArray and P2SVpnServerConfigRadiusServerRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateArrayInput` via:
//
//	P2SVpnServerConfigRadiusServerRootCertificateArray{ P2SVpnServerConfigRadiusServerRootCertificateArgs{...} }
type P2SVpnServerConfigRadiusServerRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput
}

type P2SVpnServerConfigRadiusServerRootCertificateArray []P2SVpnServerConfigRadiusServerRootCertificateInput

func (P2SVpnServerConfigRadiusServerRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArray) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArray) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigRadiusServerRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusServerRootCertificate {
		return vs[0].([]P2SVpnServerConfigRadiusServerRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusServerRootCertificateOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the radius server root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the radius server root certificate resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusServerRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigRadiusServerRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigVpnClientRevokedCertificateInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateArgs and P2SVpnServerConfigVpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateInput` via:
//
//	P2SVpnServerConfigVpnClientRevokedCertificateArgs{...}
type P2SVpnServerConfigVpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigVpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateOutput)
}

// P2SVpnServerConfigVpnClientRevokedCertificateArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateArray and P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateArrayInput` via:
//
//	P2SVpnServerConfigVpnClientRevokedCertificateArray{ P2SVpnServerConfigVpnClientRevokedCertificateArgs{...} }
type P2SVpnServerConfigVpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput
}

type P2SVpnServerConfigVpnClientRevokedCertificateArray []P2SVpnServerConfigVpnClientRevokedCertificateInput

func (P2SVpnServerConfigVpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArray) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArray) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRevokedCertificate {
		return vs[0].([]P2SVpnServerConfigVpnClientRevokedCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRevokedCertificateOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRevokedCertificateResponse {
		return vs[0].([]P2SVpnServerConfigVpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigVpnClientRootCertificateInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateArgs and P2SVpnServerConfigVpnClientRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateInput` via:
//
//	P2SVpnServerConfigVpnClientRootCertificateArgs{...}
type P2SVpnServerConfigVpnClientRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput
	ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigVpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateArgs) ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateArgs) ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateOutput)
}

// P2SVpnServerConfigVpnClientRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateArray and P2SVpnServerConfigVpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateArrayInput` via:
//
//	P2SVpnServerConfigVpnClientRootCertificateArray{ P2SVpnServerConfigVpnClientRootCertificateArgs{...} }
type P2SVpnServerConfigVpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput
	ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput
}

type P2SVpnServerConfigVpnClientRootCertificateArray []P2SVpnServerConfigVpnClientRootCertificateInput

func (P2SVpnServerConfigVpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateArray) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateArray) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateOutput) ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateOutput) ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigVpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRootCertificate {
		return vs[0].([]P2SVpnServerConfigVpnClientRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRootCertificateOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutput() P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigVpnClientRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRootCertificateResponseOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilter struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// Defaults sets the appropriate defaults for PacketCaptureFilter
func (val *PacketCaptureFilter) Defaults() *PacketCaptureFilter {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "Any"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// PacketCaptureFilterInput is an input type that accepts PacketCaptureFilterArgs and PacketCaptureFilterOutput values.
// You can construct a concrete instance of `PacketCaptureFilterInput` via:
//
//	PacketCaptureFilterArgs{...}
type PacketCaptureFilterInput interface {
	pulumi.Input

	ToPacketCaptureFilterOutput() PacketCaptureFilterOutput
	ToPacketCaptureFilterOutputWithContext(context.Context) PacketCaptureFilterOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

// Defaults sets the appropriate defaults for PacketCaptureFilterArgs
func (val *PacketCaptureFilterArgs) Defaults() *PacketCaptureFilterArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		tmp.Protocol = pulumi.StringPtr("Any")
	}
	return &tmp
}
func (PacketCaptureFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return i.ToPacketCaptureFilterOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterOutput)
}

// PacketCaptureFilterArrayInput is an input type that accepts PacketCaptureFilterArray and PacketCaptureFilterArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterArrayInput` via:
//
//	PacketCaptureFilterArray{ PacketCaptureFilterArgs{...} }
type PacketCaptureFilterArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput
	ToPacketCaptureFilterArrayOutputWithContext(context.Context) PacketCaptureFilterArrayOutput
}

type PacketCaptureFilterArray []PacketCaptureFilterInput

func (PacketCaptureFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return i.ToPacketCaptureFilterArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return o
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilter {
		return vs[0].([]PacketCaptureFilter)[vs[1].(int)]
	}).(PacketCaptureFilterOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponse struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// Defaults sets the appropriate defaults for PacketCaptureFilterResponse
func (val *PacketCaptureFilterResponse) Defaults() *PacketCaptureFilterResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "Any"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return o
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilterResponse {
		return vs[0].([]PacketCaptureFilterResponse)[vs[1].(int)]
	}).(PacketCaptureFilterResponseOutput)
}

// A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
type PacketCaptureMachineScope struct {
	// List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
	Exclude []string `pulumi:"exclude"`
	// List of AzureVMSS instances to run packet capture on.
	Include []string `pulumi:"include"`
}

// PacketCaptureMachineScopeInput is an input type that accepts PacketCaptureMachineScopeArgs and PacketCaptureMachineScopeOutput values.
// You can construct a concrete instance of `PacketCaptureMachineScopeInput` via:
//
//	PacketCaptureMachineScopeArgs{...}
type PacketCaptureMachineScopeInput interface {
	pulumi.Input

	ToPacketCaptureMachineScopeOutput() PacketCaptureMachineScopeOutput
	ToPacketCaptureMachineScopeOutputWithContext(context.Context) PacketCaptureMachineScopeOutput
}

// A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
type PacketCaptureMachineScopeArgs struct {
	// List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
	Exclude pulumi.StringArrayInput `pulumi:"exclude"`
	// List of AzureVMSS instances to run packet capture on.
	Include pulumi.StringArrayInput `pulumi:"include"`
}

func (PacketCaptureMachineScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureMachineScope)(nil)).Elem()
}

func (i PacketCaptureMachineScopeArgs) ToPacketCaptureMachineScopeOutput() PacketCaptureMachineScopeOutput {
	return i.ToPacketCaptureMachineScopeOutputWithContext(context.Background())
}

func (i PacketCaptureMachineScopeArgs) ToPacketCaptureMachineScopeOutputWithContext(ctx context.Context) PacketCaptureMachineScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureMachineScopeOutput)
}

func (i PacketCaptureMachineScopeArgs) ToPacketCaptureMachineScopePtrOutput() PacketCaptureMachineScopePtrOutput {
	return i.ToPacketCaptureMachineScopePtrOutputWithContext(context.Background())
}

func (i PacketCaptureMachineScopeArgs) ToPacketCaptureMachineScopePtrOutputWithContext(ctx context.Context) PacketCaptureMachineScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureMachineScopeOutput).ToPacketCaptureMachineScopePtrOutputWithContext(ctx)
}

// PacketCaptureMachineScopePtrInput is an input type that accepts PacketCaptureMachineScopeArgs, PacketCaptureMachineScopePtr and PacketCaptureMachineScopePtrOutput values.
// You can construct a concrete instance of `PacketCaptureMachineScopePtrInput` via:
//
//	        PacketCaptureMachineScopeArgs{...}
//
//	or:
//
//	        nil
type PacketCaptureMachineScopePtrInput interface {
	pulumi.Input

	ToPacketCaptureMachineScopePtrOutput() PacketCaptureMachineScopePtrOutput
	ToPacketCaptureMachineScopePtrOutputWithContext(context.Context) PacketCaptureMachineScopePtrOutput
}

type packetCaptureMachineScopePtrType PacketCaptureMachineScopeArgs

func PacketCaptureMachineScopePtr(v *PacketCaptureMachineScopeArgs) PacketCaptureMachineScopePtrInput {
	return (*packetCaptureMachineScopePtrType)(v)
}

func (*packetCaptureMachineScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureMachineScope)(nil)).Elem()
}

func (i *packetCaptureMachineScopePtrType) ToPacketCaptureMachineScopePtrOutput() PacketCaptureMachineScopePtrOutput {
	return i.ToPacketCaptureMachineScopePtrOutputWithContext(context.Background())
}

func (i *packetCaptureMachineScopePtrType) ToPacketCaptureMachineScopePtrOutputWithContext(ctx context.Context) PacketCaptureMachineScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureMachineScopePtrOutput)
}

// A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
type PacketCaptureMachineScopeOutput struct{ *pulumi.OutputState }

func (PacketCaptureMachineScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureMachineScope)(nil)).Elem()
}

func (o PacketCaptureMachineScopeOutput) ToPacketCaptureMachineScopeOutput() PacketCaptureMachineScopeOutput {
	return o
}

func (o PacketCaptureMachineScopeOutput) ToPacketCaptureMachineScopeOutputWithContext(ctx context.Context) PacketCaptureMachineScopeOutput {
	return o
}

func (o PacketCaptureMachineScopeOutput) ToPacketCaptureMachineScopePtrOutput() PacketCaptureMachineScopePtrOutput {
	return o.ToPacketCaptureMachineScopePtrOutputWithContext(context.Background())
}

func (o PacketCaptureMachineScopeOutput) ToPacketCaptureMachineScopePtrOutputWithContext(ctx context.Context) PacketCaptureMachineScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PacketCaptureMachineScope) *PacketCaptureMachineScope {
		return &v
	}).(PacketCaptureMachineScopePtrOutput)
}

// List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
func (o PacketCaptureMachineScopeOutput) Exclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PacketCaptureMachineScope) []string { return v.Exclude }).(pulumi.StringArrayOutput)
}

// List of AzureVMSS instances to run packet capture on.
func (o PacketCaptureMachineScopeOutput) Include() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PacketCaptureMachineScope) []string { return v.Include }).(pulumi.StringArrayOutput)
}

type PacketCaptureMachineScopePtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureMachineScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureMachineScope)(nil)).Elem()
}

func (o PacketCaptureMachineScopePtrOutput) ToPacketCaptureMachineScopePtrOutput() PacketCaptureMachineScopePtrOutput {
	return o
}

func (o PacketCaptureMachineScopePtrOutput) ToPacketCaptureMachineScopePtrOutputWithContext(ctx context.Context) PacketCaptureMachineScopePtrOutput {
	return o
}

func (o PacketCaptureMachineScopePtrOutput) Elem() PacketCaptureMachineScopeOutput {
	return o.ApplyT(func(v *PacketCaptureMachineScope) PacketCaptureMachineScope {
		if v != nil {
			return *v
		}
		var ret PacketCaptureMachineScope
		return ret
	}).(PacketCaptureMachineScopeOutput)
}

// List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
func (o PacketCaptureMachineScopePtrOutput) Exclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PacketCaptureMachineScope) []string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringArrayOutput)
}

// List of AzureVMSS instances to run packet capture on.
func (o PacketCaptureMachineScopePtrOutput) Include() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PacketCaptureMachineScope) []string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringArrayOutput)
}

// A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
type PacketCaptureMachineScopeResponse struct {
	// List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
	Exclude []string `pulumi:"exclude"`
	// List of AzureVMSS instances to run packet capture on.
	Include []string `pulumi:"include"`
}

// A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS.
type PacketCaptureMachineScopeResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureMachineScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureMachineScopeResponse)(nil)).Elem()
}

func (o PacketCaptureMachineScopeResponseOutput) ToPacketCaptureMachineScopeResponseOutput() PacketCaptureMachineScopeResponseOutput {
	return o
}

func (o PacketCaptureMachineScopeResponseOutput) ToPacketCaptureMachineScopeResponseOutputWithContext(ctx context.Context) PacketCaptureMachineScopeResponseOutput {
	return o
}

// List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
func (o PacketCaptureMachineScopeResponseOutput) Exclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PacketCaptureMachineScopeResponse) []string { return v.Exclude }).(pulumi.StringArrayOutput)
}

// List of AzureVMSS instances to run packet capture on.
func (o PacketCaptureMachineScopeResponseOutput) Include() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PacketCaptureMachineScopeResponse) []string { return v.Include }).(pulumi.StringArrayOutput)
}

type PacketCaptureMachineScopeResponsePtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureMachineScopeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureMachineScopeResponse)(nil)).Elem()
}

func (o PacketCaptureMachineScopeResponsePtrOutput) ToPacketCaptureMachineScopeResponsePtrOutput() PacketCaptureMachineScopeResponsePtrOutput {
	return o
}

func (o PacketCaptureMachineScopeResponsePtrOutput) ToPacketCaptureMachineScopeResponsePtrOutputWithContext(ctx context.Context) PacketCaptureMachineScopeResponsePtrOutput {
	return o
}

func (o PacketCaptureMachineScopeResponsePtrOutput) Elem() PacketCaptureMachineScopeResponseOutput {
	return o.ApplyT(func(v *PacketCaptureMachineScopeResponse) PacketCaptureMachineScopeResponse {
		if v != nil {
			return *v
		}
		var ret PacketCaptureMachineScopeResponse
		return ret
	}).(PacketCaptureMachineScopeResponseOutput)
}

// List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture.
func (o PacketCaptureMachineScopeResponsePtrOutput) Exclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PacketCaptureMachineScopeResponse) []string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringArrayOutput)
}

// List of AzureVMSS instances to run packet capture on.
func (o PacketCaptureMachineScopeResponsePtrOutput) Include() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PacketCaptureMachineScopeResponse) []string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringArrayOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocation struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationInput is an input type that accepts PacketCaptureStorageLocationArgs and PacketCaptureStorageLocationOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationInput` via:
//
//	PacketCaptureStorageLocationArgs{...}
type PacketCaptureStorageLocationInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput
	ToPacketCaptureStorageLocationOutputWithContext(context.Context) PacketCaptureStorageLocationOutput
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return i.ToPacketCaptureStorageLocationOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return o
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationResponse struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return o
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponseOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponseOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponseOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

// Parameters for an Action.
type Parameter struct {
	// List of AS paths.
	AsPath []string `pulumi:"asPath"`
	// List of BGP communities.
	Community []string `pulumi:"community"`
	// List of route prefixes.
	RoutePrefix []string `pulumi:"routePrefix"`
}

// ParameterInput is an input type that accepts ParameterArgs and ParameterOutput values.
// You can construct a concrete instance of `ParameterInput` via:
//
//	ParameterArgs{...}
type ParameterInput interface {
	pulumi.Input

	ToParameterOutput() ParameterOutput
	ToParameterOutputWithContext(context.Context) ParameterOutput
}

// Parameters for an Action.
type ParameterArgs struct {
	// List of AS paths.
	AsPath pulumi.StringArrayInput `pulumi:"asPath"`
	// List of BGP communities.
	Community pulumi.StringArrayInput `pulumi:"community"`
	// List of route prefixes.
	RoutePrefix pulumi.StringArrayInput `pulumi:"routePrefix"`
}

func (ParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Parameter)(nil)).Elem()
}

func (i ParameterArgs) ToParameterOutput() ParameterOutput {
	return i.ToParameterOutputWithContext(context.Background())
}

func (i ParameterArgs) ToParameterOutputWithContext(ctx context.Context) ParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterOutput)
}

// ParameterArrayInput is an input type that accepts ParameterArray and ParameterArrayOutput values.
// You can construct a concrete instance of `ParameterArrayInput` via:
//
//	ParameterArray{ ParameterArgs{...} }
type ParameterArrayInput interface {
	pulumi.Input

	ToParameterArrayOutput() ParameterArrayOutput
	ToParameterArrayOutputWithContext(context.Context) ParameterArrayOutput
}

type ParameterArray []ParameterInput

func (ParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Parameter)(nil)).Elem()
}

func (i ParameterArray) ToParameterArrayOutput() ParameterArrayOutput {
	return i.ToParameterArrayOutputWithContext(context.Background())
}

func (i ParameterArray) ToParameterArrayOutputWithContext(ctx context.Context) ParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterArrayOutput)
}

// Parameters for an Action.
type ParameterOutput struct{ *pulumi.OutputState }

func (ParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Parameter)(nil)).Elem()
}

func (o ParameterOutput) ToParameterOutput() ParameterOutput {
	return o
}

func (o ParameterOutput) ToParameterOutputWithContext(ctx context.Context) ParameterOutput {
	return o
}

// List of AS paths.
func (o ParameterOutput) AsPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Parameter) []string { return v.AsPath }).(pulumi.StringArrayOutput)
}

// List of BGP communities.
func (o ParameterOutput) Community() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Parameter) []string { return v.Community }).(pulumi.StringArrayOutput)
}

// List of route prefixes.
func (o ParameterOutput) RoutePrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Parameter) []string { return v.RoutePrefix }).(pulumi.StringArrayOutput)
}

type ParameterArrayOutput struct{ *pulumi.OutputState }

func (ParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Parameter)(nil)).Elem()
}

func (o ParameterArrayOutput) ToParameterArrayOutput() ParameterArrayOutput {
	return o
}

func (o ParameterArrayOutput) ToParameterArrayOutputWithContext(ctx context.Context) ParameterArrayOutput {
	return o
}

func (o ParameterArrayOutput) Index(i pulumi.IntInput) ParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Parameter {
		return vs[0].([]Parameter)[vs[1].(int)]
	}).(ParameterOutput)
}

// Parameters for an Action.
type ParameterResponse struct {
	// List of AS paths.
	AsPath []string `pulumi:"asPath"`
	// List of BGP communities.
	Community []string `pulumi:"community"`
	// List of route prefixes.
	RoutePrefix []string `pulumi:"routePrefix"`
}

// Parameters for an Action.
type ParameterResponseOutput struct{ *pulumi.OutputState }

func (ParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterResponse)(nil)).Elem()
}

func (o ParameterResponseOutput) ToParameterResponseOutput() ParameterResponseOutput {
	return o
}

func (o ParameterResponseOutput) ToParameterResponseOutputWithContext(ctx context.Context) ParameterResponseOutput {
	return o
}

// List of AS paths.
func (o ParameterResponseOutput) AsPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterResponse) []string { return v.AsPath }).(pulumi.StringArrayOutput)
}

// List of BGP communities.
func (o ParameterResponseOutput) Community() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterResponse) []string { return v.Community }).(pulumi.StringArrayOutput)
}

// List of route prefixes.
func (o ParameterResponseOutput) RoutePrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterResponse) []string { return v.RoutePrefix }).(pulumi.StringArrayOutput)
}

type ParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterResponse)(nil)).Elem()
}

func (o ParameterResponseArrayOutput) ToParameterResponseArrayOutput() ParameterResponseArrayOutput {
	return o
}

func (o ParameterResponseArrayOutput) ToParameterResponseArrayOutputWithContext(ctx context.Context) ParameterResponseArrayOutput {
	return o
}

func (o ParameterResponseArrayOutput) Index(i pulumi.IntInput) ParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterResponse {
		return vs[0].([]ParameterResponse)[vs[1].(int)]
	}).(ParameterResponseOutput)
}

// Properties of the partner managed resource.
type PartnerManagedResourcePropertiesResponse struct {
	// The partner managed resource id.
	Id string `pulumi:"id"`
	// The partner managed ILB resource id
	InternalLoadBalancerId string `pulumi:"internalLoadBalancerId"`
	// The partner managed SLB resource id
	StandardLoadBalancerId string `pulumi:"standardLoadBalancerId"`
}

// Properties of the partner managed resource.
type PartnerManagedResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (PartnerManagedResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerManagedResourcePropertiesResponse)(nil)).Elem()
}

func (o PartnerManagedResourcePropertiesResponseOutput) ToPartnerManagedResourcePropertiesResponseOutput() PartnerManagedResourcePropertiesResponseOutput {
	return o
}

func (o PartnerManagedResourcePropertiesResponseOutput) ToPartnerManagedResourcePropertiesResponseOutputWithContext(ctx context.Context) PartnerManagedResourcePropertiesResponseOutput {
	return o
}

// The partner managed resource id.
func (o PartnerManagedResourcePropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PartnerManagedResourcePropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The partner managed ILB resource id
func (o PartnerManagedResourcePropertiesResponseOutput) InternalLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v PartnerManagedResourcePropertiesResponse) string { return v.InternalLoadBalancerId }).(pulumi.StringOutput)
}

// The partner managed SLB resource id
func (o PartnerManagedResourcePropertiesResponseOutput) StandardLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v PartnerManagedResourcePropertiesResponse) string { return v.StandardLoadBalancerId }).(pulumi.StringOutput)
}

type PartnerManagedResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PartnerManagedResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerManagedResourcePropertiesResponse)(nil)).Elem()
}

func (o PartnerManagedResourcePropertiesResponsePtrOutput) ToPartnerManagedResourcePropertiesResponsePtrOutput() PartnerManagedResourcePropertiesResponsePtrOutput {
	return o
}

func (o PartnerManagedResourcePropertiesResponsePtrOutput) ToPartnerManagedResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) PartnerManagedResourcePropertiesResponsePtrOutput {
	return o
}

func (o PartnerManagedResourcePropertiesResponsePtrOutput) Elem() PartnerManagedResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *PartnerManagedResourcePropertiesResponse) PartnerManagedResourcePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret PartnerManagedResourcePropertiesResponse
		return ret
	}).(PartnerManagedResourcePropertiesResponseOutput)
}

// The partner managed resource id.
func (o PartnerManagedResourcePropertiesResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PartnerManagedResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The partner managed ILB resource id
func (o PartnerManagedResourcePropertiesResponsePtrOutput) InternalLoadBalancerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PartnerManagedResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalLoadBalancerId
	}).(pulumi.StringPtrOutput)
}

// The partner managed SLB resource id
func (o PartnerManagedResourcePropertiesResponsePtrOutput) StandardLoadBalancerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PartnerManagedResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StandardLoadBalancerId
	}).(pulumi.StringPtrOutput)
}

// Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type PeerExpressRouteCircuitConnectionResponse struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The resource guid of the authorization used for the express route circuit connection.
	AuthResourceGuid *string `pulumi:"authResourceGuid"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
	// The name of the express route circuit connection resource.
	ConnectionName *string `pulumi:"connectionName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit.
	ExpressRouteCircuitPeering *SubResourceResponse `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResourceResponse `pulumi:"peerExpressRouteCircuitPeering"`
	// The provisioning state of the peer express route circuit connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type PeerExpressRouteCircuitConnectionResponseOutput struct{ *pulumi.OutputState }

func (PeerExpressRouteCircuitConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o PeerExpressRouteCircuitConnectionResponseOutput) ToPeerExpressRouteCircuitConnectionResponseOutput() PeerExpressRouteCircuitConnectionResponseOutput {
	return o
}

func (o PeerExpressRouteCircuitConnectionResponseOutput) ToPeerExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) PeerExpressRouteCircuitConnectionResponseOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o PeerExpressRouteCircuitConnectionResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The resource guid of the authorization used for the express route circuit connection.
func (o PeerExpressRouteCircuitConnectionResponseOutput) AuthResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.AuthResourceGuid }).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o PeerExpressRouteCircuitConnectionResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

// The name of the express route circuit connection resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) ConnectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.ConnectionName }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit.
func (o PeerExpressRouteCircuitConnectionResponseOutput) ExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.ExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o PeerExpressRouteCircuitConnectionResponseOutput) PeerExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the peer express route circuit connection resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PeerExpressRouteCircuitConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PeerExpressRouteCircuitConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o PeerExpressRouteCircuitConnectionResponseArrayOutput) ToPeerExpressRouteCircuitConnectionResponseArrayOutput() PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o PeerExpressRouteCircuitConnectionResponseArrayOutput) ToPeerExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o PeerExpressRouteCircuitConnectionResponseArrayOutput) Index(i pulumi.IntInput) PeerExpressRouteCircuitConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeerExpressRouteCircuitConnectionResponse {
		return vs[0].([]PeerExpressRouteCircuitConnectionResponse)[vs[1].(int)]
	}).(PeerExpressRouteCircuitConnectionResponseOutput)
}

type PerimeterBasedAccessRuleResponse struct {
	// NSP id in the ARM id format.
	Id string `pulumi:"id"`
	// Location of the NSP supplied.
	Location string `pulumi:"location"`
	// Resource guid of the NSP supplied.
	PerimeterGuid string `pulumi:"perimeterGuid"`
}

type PerimeterBasedAccessRuleResponseOutput struct{ *pulumi.OutputState }

func (PerimeterBasedAccessRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerimeterBasedAccessRuleResponse)(nil)).Elem()
}

func (o PerimeterBasedAccessRuleResponseOutput) ToPerimeterBasedAccessRuleResponseOutput() PerimeterBasedAccessRuleResponseOutput {
	return o
}

func (o PerimeterBasedAccessRuleResponseOutput) ToPerimeterBasedAccessRuleResponseOutputWithContext(ctx context.Context) PerimeterBasedAccessRuleResponseOutput {
	return o
}

// NSP id in the ARM id format.
func (o PerimeterBasedAccessRuleResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PerimeterBasedAccessRuleResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Location of the NSP supplied.
func (o PerimeterBasedAccessRuleResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PerimeterBasedAccessRuleResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource guid of the NSP supplied.
func (o PerimeterBasedAccessRuleResponseOutput) PerimeterGuid() pulumi.StringOutput {
	return o.ApplyT(func(v PerimeterBasedAccessRuleResponse) string { return v.PerimeterGuid }).(pulumi.StringOutput)
}

type PerimeterBasedAccessRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (PerimeterBasedAccessRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerimeterBasedAccessRuleResponse)(nil)).Elem()
}

func (o PerimeterBasedAccessRuleResponseArrayOutput) ToPerimeterBasedAccessRuleResponseArrayOutput() PerimeterBasedAccessRuleResponseArrayOutput {
	return o
}

func (o PerimeterBasedAccessRuleResponseArrayOutput) ToPerimeterBasedAccessRuleResponseArrayOutputWithContext(ctx context.Context) PerimeterBasedAccessRuleResponseArrayOutput {
	return o
}

func (o PerimeterBasedAccessRuleResponseArrayOutput) Index(i pulumi.IntInput) PerimeterBasedAccessRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PerimeterBasedAccessRuleResponse {
		return vs[0].([]PerimeterBasedAccessRuleResponse)[vs[1].(int)]
	}).(PerimeterBasedAccessRuleResponseOutput)
}

// Defines contents of a web application firewall global configuration.
type PolicySettings struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody *string `pulumi:"customBlockResponseBody"`
	// If the action type is block, customer can override the response status code.
	CustomBlockResponseStatusCode *int `pulumi:"customBlockResponseStatusCode"`
	// Whether allow WAF to enforce file upload limits.
	FileUploadEnforcement *bool `pulumi:"fileUploadEnforcement"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// To scrub sensitive log fields
	LogScrubbing *PolicySettingsLogScrubbing `pulumi:"logScrubbing"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// The mode of the policy.
	Mode *string `pulumi:"mode"`
	// Whether to allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// Whether allow WAF to enforce request body limits.
	RequestBodyEnforcement *bool `pulumi:"requestBodyEnforcement"`
	// Max inspection limit in KB for request body inspection for WAF.
	RequestBodyInspectLimitInKB *int `pulumi:"requestBodyInspectLimitInKB"`
	// The state of the policy.
	State *string `pulumi:"state"`
}

// Defaults sets the appropriate defaults for PolicySettings
func (val *PolicySettings) Defaults() *PolicySettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.FileUploadEnforcement == nil {
		fileUploadEnforcement_ := true
		tmp.FileUploadEnforcement = &fileUploadEnforcement_
	}
	if tmp.RequestBodyEnforcement == nil {
		requestBodyEnforcement_ := true
		tmp.RequestBodyEnforcement = &requestBodyEnforcement_
	}
	return &tmp
}

// PolicySettingsInput is an input type that accepts PolicySettingsArgs and PolicySettingsOutput values.
// You can construct a concrete instance of `PolicySettingsInput` via:
//
//	PolicySettingsArgs{...}
type PolicySettingsInput interface {
	pulumi.Input

	ToPolicySettingsOutput() PolicySettingsOutput
	ToPolicySettingsOutputWithContext(context.Context) PolicySettingsOutput
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody pulumi.StringPtrInput `pulumi:"customBlockResponseBody"`
	// If the action type is block, customer can override the response status code.
	CustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"customBlockResponseStatusCode"`
	// Whether allow WAF to enforce file upload limits.
	FileUploadEnforcement pulumi.BoolPtrInput `pulumi:"fileUploadEnforcement"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// To scrub sensitive log fields
	LogScrubbing PolicySettingsLogScrubbingPtrInput `pulumi:"logScrubbing"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// The mode of the policy.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Whether to allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// Whether allow WAF to enforce request body limits.
	RequestBodyEnforcement pulumi.BoolPtrInput `pulumi:"requestBodyEnforcement"`
	// Max inspection limit in KB for request body inspection for WAF.
	RequestBodyInspectLimitInKB pulumi.IntPtrInput `pulumi:"requestBodyInspectLimitInKB"`
	// The state of the policy.
	State pulumi.StringPtrInput `pulumi:"state"`
}

// Defaults sets the appropriate defaults for PolicySettingsArgs
func (val *PolicySettingsArgs) Defaults() *PolicySettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.FileUploadEnforcement == nil {
		tmp.FileUploadEnforcement = pulumi.BoolPtr(true)
	}
	if tmp.RequestBodyEnforcement == nil {
		tmp.RequestBodyEnforcement = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (PolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (i PolicySettingsArgs) ToPolicySettingsOutput() PolicySettingsOutput {
	return i.ToPolicySettingsOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput)
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput).ToPolicySettingsPtrOutputWithContext(ctx)
}

// PolicySettingsPtrInput is an input type that accepts PolicySettingsArgs, PolicySettingsPtr and PolicySettingsPtrOutput values.
// You can construct a concrete instance of `PolicySettingsPtrInput` via:
//
//	        PolicySettingsArgs{...}
//
//	or:
//
//	        nil
type PolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicySettingsPtrOutput() PolicySettingsPtrOutput
	ToPolicySettingsPtrOutputWithContext(context.Context) PolicySettingsPtrOutput
}

type policySettingsPtrType PolicySettingsArgs

func PolicySettingsPtr(v *PolicySettingsArgs) PolicySettingsPtrInput {
	return (*policySettingsPtrType)(v)
}

func (*policySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsPtrOutput)
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsOutput struct{ *pulumi.OutputState }

func (PolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (o PolicySettingsOutput) ToPolicySettingsOutput() PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicySettings) *PolicySettings {
		return &v
	}).(PolicySettingsPtrOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.CustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o PolicySettingsOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.CustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// Whether allow WAF to enforce file upload limits.
func (o PolicySettingsOutput) FileUploadEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettings) *bool { return v.FileUploadEnforcement }).(pulumi.BoolPtrOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// To scrub sensitive log fields
func (o PolicySettingsOutput) LogScrubbing() PolicySettingsLogScrubbingPtrOutput {
	return o.ApplyT(func(v PolicySettings) *PolicySettingsLogScrubbing { return v.LogScrubbing }).(PolicySettingsLogScrubbingPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettings) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// Whether allow WAF to enforce request body limits.
func (o PolicySettingsOutput) RequestBodyEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettings) *bool { return v.RequestBodyEnforcement }).(pulumi.BoolPtrOutput)
}

// Max inspection limit in KB for request body inspection for WAF.
func (o PolicySettingsOutput) RequestBodyInspectLimitInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.RequestBodyInspectLimitInKB }).(pulumi.IntPtrOutput)
}

// The state of the policy.
func (o PolicySettingsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.State }).(pulumi.StringPtrOutput)
}

type PolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) Elem() PolicySettingsOutput {
	return o.ApplyT(func(v *PolicySettings) PolicySettings {
		if v != nil {
			return *v
		}
		var ret PolicySettings
		return ret
	}).(PolicySettingsOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsPtrOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o PolicySettingsPtrOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to enforce file upload limits.
func (o PolicySettingsPtrOutput) FileUploadEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *bool {
		if v == nil {
			return nil
		}
		return v.FileUploadEnforcement
	}).(pulumi.BoolPtrOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsPtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// To scrub sensitive log fields
func (o PolicySettingsPtrOutput) LogScrubbing() PolicySettingsLogScrubbingPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *PolicySettingsLogScrubbing {
		if v == nil {
			return nil
		}
		return v.LogScrubbing
	}).(PolicySettingsLogScrubbingPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsPtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// Whether allow WAF to enforce request body limits.
func (o PolicySettingsPtrOutput) RequestBodyEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyEnforcement
	}).(pulumi.BoolPtrOutput)
}

// Max inspection limit in KB for request body inspection for WAF.
func (o PolicySettingsPtrOutput) RequestBodyInspectLimitInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.RequestBodyInspectLimitInKB
	}).(pulumi.IntPtrOutput)
}

// The state of the policy.
func (o PolicySettingsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// To scrub sensitive log fields
type PolicySettingsLogScrubbing struct {
	// The rules that are applied to the logs for scrubbing.
	ScrubbingRules []WebApplicationFirewallScrubbingRules `pulumi:"scrubbingRules"`
	// State of the log scrubbing config. Default value is Enabled.
	State *string `pulumi:"state"`
}

// PolicySettingsLogScrubbingInput is an input type that accepts PolicySettingsLogScrubbingArgs and PolicySettingsLogScrubbingOutput values.
// You can construct a concrete instance of `PolicySettingsLogScrubbingInput` via:
//
//	PolicySettingsLogScrubbingArgs{...}
type PolicySettingsLogScrubbingInput interface {
	pulumi.Input

	ToPolicySettingsLogScrubbingOutput() PolicySettingsLogScrubbingOutput
	ToPolicySettingsLogScrubbingOutputWithContext(context.Context) PolicySettingsLogScrubbingOutput
}

// To scrub sensitive log fields
type PolicySettingsLogScrubbingArgs struct {
	// The rules that are applied to the logs for scrubbing.
	ScrubbingRules WebApplicationFirewallScrubbingRulesArrayInput `pulumi:"scrubbingRules"`
	// State of the log scrubbing config. Default value is Enabled.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (PolicySettingsLogScrubbingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsLogScrubbing)(nil)).Elem()
}

func (i PolicySettingsLogScrubbingArgs) ToPolicySettingsLogScrubbingOutput() PolicySettingsLogScrubbingOutput {
	return i.ToPolicySettingsLogScrubbingOutputWithContext(context.Background())
}

func (i PolicySettingsLogScrubbingArgs) ToPolicySettingsLogScrubbingOutputWithContext(ctx context.Context) PolicySettingsLogScrubbingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsLogScrubbingOutput)
}

func (i PolicySettingsLogScrubbingArgs) ToPolicySettingsLogScrubbingPtrOutput() PolicySettingsLogScrubbingPtrOutput {
	return i.ToPolicySettingsLogScrubbingPtrOutputWithContext(context.Background())
}

func (i PolicySettingsLogScrubbingArgs) ToPolicySettingsLogScrubbingPtrOutputWithContext(ctx context.Context) PolicySettingsLogScrubbingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsLogScrubbingOutput).ToPolicySettingsLogScrubbingPtrOutputWithContext(ctx)
}

// PolicySettingsLogScrubbingPtrInput is an input type that accepts PolicySettingsLogScrubbingArgs, PolicySettingsLogScrubbingPtr and PolicySettingsLogScrubbingPtrOutput values.
// You can construct a concrete instance of `PolicySettingsLogScrubbingPtrInput` via:
//
//	        PolicySettingsLogScrubbingArgs{...}
//
//	or:
//
//	        nil
type PolicySettingsLogScrubbingPtrInput interface {
	pulumi.Input

	ToPolicySettingsLogScrubbingPtrOutput() PolicySettingsLogScrubbingPtrOutput
	ToPolicySettingsLogScrubbingPtrOutputWithContext(context.Context) PolicySettingsLogScrubbingPtrOutput
}

type policySettingsLogScrubbingPtrType PolicySettingsLogScrubbingArgs

func PolicySettingsLogScrubbingPtr(v *PolicySettingsLogScrubbingArgs) PolicySettingsLogScrubbingPtrInput {
	return (*policySettingsLogScrubbingPtrType)(v)
}

func (*policySettingsLogScrubbingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsLogScrubbing)(nil)).Elem()
}

func (i *policySettingsLogScrubbingPtrType) ToPolicySettingsLogScrubbingPtrOutput() PolicySettingsLogScrubbingPtrOutput {
	return i.ToPolicySettingsLogScrubbingPtrOutputWithContext(context.Background())
}

func (i *policySettingsLogScrubbingPtrType) ToPolicySettingsLogScrubbingPtrOutputWithContext(ctx context.Context) PolicySettingsLogScrubbingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsLogScrubbingPtrOutput)
}

// To scrub sensitive log fields
type PolicySettingsLogScrubbingOutput struct{ *pulumi.OutputState }

func (PolicySettingsLogScrubbingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsLogScrubbing)(nil)).Elem()
}

func (o PolicySettingsLogScrubbingOutput) ToPolicySettingsLogScrubbingOutput() PolicySettingsLogScrubbingOutput {
	return o
}

func (o PolicySettingsLogScrubbingOutput) ToPolicySettingsLogScrubbingOutputWithContext(ctx context.Context) PolicySettingsLogScrubbingOutput {
	return o
}

func (o PolicySettingsLogScrubbingOutput) ToPolicySettingsLogScrubbingPtrOutput() PolicySettingsLogScrubbingPtrOutput {
	return o.ToPolicySettingsLogScrubbingPtrOutputWithContext(context.Background())
}

func (o PolicySettingsLogScrubbingOutput) ToPolicySettingsLogScrubbingPtrOutputWithContext(ctx context.Context) PolicySettingsLogScrubbingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicySettingsLogScrubbing) *PolicySettingsLogScrubbing {
		return &v
	}).(PolicySettingsLogScrubbingPtrOutput)
}

// The rules that are applied to the logs for scrubbing.
func (o PolicySettingsLogScrubbingOutput) ScrubbingRules() WebApplicationFirewallScrubbingRulesArrayOutput {
	return o.ApplyT(func(v PolicySettingsLogScrubbing) []WebApplicationFirewallScrubbingRules { return v.ScrubbingRules }).(WebApplicationFirewallScrubbingRulesArrayOutput)
}

// State of the log scrubbing config. Default value is Enabled.
func (o PolicySettingsLogScrubbingOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsLogScrubbing) *string { return v.State }).(pulumi.StringPtrOutput)
}

type PolicySettingsLogScrubbingPtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsLogScrubbingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsLogScrubbing)(nil)).Elem()
}

func (o PolicySettingsLogScrubbingPtrOutput) ToPolicySettingsLogScrubbingPtrOutput() PolicySettingsLogScrubbingPtrOutput {
	return o
}

func (o PolicySettingsLogScrubbingPtrOutput) ToPolicySettingsLogScrubbingPtrOutputWithContext(ctx context.Context) PolicySettingsLogScrubbingPtrOutput {
	return o
}

func (o PolicySettingsLogScrubbingPtrOutput) Elem() PolicySettingsLogScrubbingOutput {
	return o.ApplyT(func(v *PolicySettingsLogScrubbing) PolicySettingsLogScrubbing {
		if v != nil {
			return *v
		}
		var ret PolicySettingsLogScrubbing
		return ret
	}).(PolicySettingsLogScrubbingOutput)
}

// The rules that are applied to the logs for scrubbing.
func (o PolicySettingsLogScrubbingPtrOutput) ScrubbingRules() WebApplicationFirewallScrubbingRulesArrayOutput {
	return o.ApplyT(func(v *PolicySettingsLogScrubbing) []WebApplicationFirewallScrubbingRules {
		if v == nil {
			return nil
		}
		return v.ScrubbingRules
	}).(WebApplicationFirewallScrubbingRulesArrayOutput)
}

// State of the log scrubbing config. Default value is Enabled.
func (o PolicySettingsLogScrubbingPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsLogScrubbing) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsResponse struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody *string `pulumi:"customBlockResponseBody"`
	// If the action type is block, customer can override the response status code.
	CustomBlockResponseStatusCode *int `pulumi:"customBlockResponseStatusCode"`
	// Whether allow WAF to enforce file upload limits.
	FileUploadEnforcement *bool `pulumi:"fileUploadEnforcement"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// To scrub sensitive log fields
	LogScrubbing *PolicySettingsResponseLogScrubbing `pulumi:"logScrubbing"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// The mode of the policy.
	Mode *string `pulumi:"mode"`
	// Whether to allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// Whether allow WAF to enforce request body limits.
	RequestBodyEnforcement *bool `pulumi:"requestBodyEnforcement"`
	// Max inspection limit in KB for request body inspection for WAF.
	RequestBodyInspectLimitInKB *int `pulumi:"requestBodyInspectLimitInKB"`
	// The state of the policy.
	State *string `pulumi:"state"`
}

// Defaults sets the appropriate defaults for PolicySettingsResponse
func (val *PolicySettingsResponse) Defaults() *PolicySettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.FileUploadEnforcement == nil {
		fileUploadEnforcement_ := true
		tmp.FileUploadEnforcement = &fileUploadEnforcement_
	}
	if tmp.RequestBodyEnforcement == nil {
		requestBodyEnforcement_ := true
		tmp.RequestBodyEnforcement = &requestBodyEnforcement_
	}
	return &tmp
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsResponseOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return o
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponseOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.CustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o PolicySettingsResponseOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.CustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// Whether allow WAF to enforce file upload limits.
func (o PolicySettingsResponseOutput) FileUploadEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *bool { return v.FileUploadEnforcement }).(pulumi.BoolPtrOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsResponseOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// To scrub sensitive log fields
func (o PolicySettingsResponseOutput) LogScrubbing() PolicySettingsResponseLogScrubbingPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *PolicySettingsResponseLogScrubbing { return v.LogScrubbing }).(PolicySettingsResponseLogScrubbingPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsResponseOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsResponseOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// Whether allow WAF to enforce request body limits.
func (o PolicySettingsResponseOutput) RequestBodyEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *bool { return v.RequestBodyEnforcement }).(pulumi.BoolPtrOutput)
}

// Max inspection limit in KB for request body inspection for WAF.
func (o PolicySettingsResponseOutput) RequestBodyInspectLimitInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.RequestBodyInspectLimitInKB }).(pulumi.IntPtrOutput)
}

// The state of the policy.
func (o PolicySettingsResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type PolicySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) Elem() PolicySettingsResponseOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) PolicySettingsResponse {
		if v != nil {
			return *v
		}
		var ret PolicySettingsResponse
		return ret
	}).(PolicySettingsResponseOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponsePtrOutput) CustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, customer can override the response status code.
func (o PolicySettingsResponsePtrOutput) CustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to enforce file upload limits.
func (o PolicySettingsResponsePtrOutput) FileUploadEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.FileUploadEnforcement
	}).(pulumi.BoolPtrOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsResponsePtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// To scrub sensitive log fields
func (o PolicySettingsResponsePtrOutput) LogScrubbing() PolicySettingsResponseLogScrubbingPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *PolicySettingsResponseLogScrubbing {
		if v == nil {
			return nil
		}
		return v.LogScrubbing
	}).(PolicySettingsResponseLogScrubbingPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsResponsePtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsResponsePtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// Whether allow WAF to enforce request body limits.
func (o PolicySettingsResponsePtrOutput) RequestBodyEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyEnforcement
	}).(pulumi.BoolPtrOutput)
}

// Max inspection limit in KB for request body inspection for WAF.
func (o PolicySettingsResponsePtrOutput) RequestBodyInspectLimitInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RequestBodyInspectLimitInKB
	}).(pulumi.IntPtrOutput)
}

// The state of the policy.
func (o PolicySettingsResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// To scrub sensitive log fields
type PolicySettingsResponseLogScrubbing struct {
	// The rules that are applied to the logs for scrubbing.
	ScrubbingRules []WebApplicationFirewallScrubbingRulesResponse `pulumi:"scrubbingRules"`
	// State of the log scrubbing config. Default value is Enabled.
	State *string `pulumi:"state"`
}

// To scrub sensitive log fields
type PolicySettingsResponseLogScrubbingOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseLogScrubbingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponseLogScrubbing)(nil)).Elem()
}

func (o PolicySettingsResponseLogScrubbingOutput) ToPolicySettingsResponseLogScrubbingOutput() PolicySettingsResponseLogScrubbingOutput {
	return o
}

func (o PolicySettingsResponseLogScrubbingOutput) ToPolicySettingsResponseLogScrubbingOutputWithContext(ctx context.Context) PolicySettingsResponseLogScrubbingOutput {
	return o
}

// The rules that are applied to the logs for scrubbing.
func (o PolicySettingsResponseLogScrubbingOutput) ScrubbingRules() WebApplicationFirewallScrubbingRulesResponseArrayOutput {
	return o.ApplyT(func(v PolicySettingsResponseLogScrubbing) []WebApplicationFirewallScrubbingRulesResponse {
		return v.ScrubbingRules
	}).(WebApplicationFirewallScrubbingRulesResponseArrayOutput)
}

// State of the log scrubbing config. Default value is Enabled.
func (o PolicySettingsResponseLogScrubbingOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponseLogScrubbing) *string { return v.State }).(pulumi.StringPtrOutput)
}

type PolicySettingsResponseLogScrubbingPtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseLogScrubbingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponseLogScrubbing)(nil)).Elem()
}

func (o PolicySettingsResponseLogScrubbingPtrOutput) ToPolicySettingsResponseLogScrubbingPtrOutput() PolicySettingsResponseLogScrubbingPtrOutput {
	return o
}

func (o PolicySettingsResponseLogScrubbingPtrOutput) ToPolicySettingsResponseLogScrubbingPtrOutputWithContext(ctx context.Context) PolicySettingsResponseLogScrubbingPtrOutput {
	return o
}

func (o PolicySettingsResponseLogScrubbingPtrOutput) Elem() PolicySettingsResponseLogScrubbingOutput {
	return o.ApplyT(func(v *PolicySettingsResponseLogScrubbing) PolicySettingsResponseLogScrubbing {
		if v != nil {
			return *v
		}
		var ret PolicySettingsResponseLogScrubbing
		return ret
	}).(PolicySettingsResponseLogScrubbingOutput)
}

// The rules that are applied to the logs for scrubbing.
func (o PolicySettingsResponseLogScrubbingPtrOutput) ScrubbingRules() WebApplicationFirewallScrubbingRulesResponseArrayOutput {
	return o.ApplyT(func(v *PolicySettingsResponseLogScrubbing) []WebApplicationFirewallScrubbingRulesResponse {
		if v == nil {
			return nil
		}
		return v.ScrubbingRules
	}).(WebApplicationFirewallScrubbingRulesResponseArrayOutput)
}

// State of the log scrubbing config. Default value is Enabled.
func (o PolicySettingsResponseLogScrubbingPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponseLogScrubbing) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfig struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
}

// PrivateDnsZoneConfigInput is an input type that accepts PrivateDnsZoneConfigArgs and PrivateDnsZoneConfigOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigInput` via:
//
//	PrivateDnsZoneConfigArgs{...}
type PrivateDnsZoneConfigInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput
	ToPrivateDnsZoneConfigOutputWithContext(context.Context) PrivateDnsZoneConfigOutput
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigArgs struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId pulumi.StringPtrInput `pulumi:"privateDnsZoneId"`
}

func (PrivateDnsZoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfig)(nil)).Elem()
}

func (i PrivateDnsZoneConfigArgs) ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput {
	return i.ToPrivateDnsZoneConfigOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigArgs) ToPrivateDnsZoneConfigOutputWithContext(ctx context.Context) PrivateDnsZoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigOutput)
}

// PrivateDnsZoneConfigArrayInput is an input type that accepts PrivateDnsZoneConfigArray and PrivateDnsZoneConfigArrayOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigArrayInput` via:
//
//	PrivateDnsZoneConfigArray{ PrivateDnsZoneConfigArgs{...} }
type PrivateDnsZoneConfigArrayInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput
	ToPrivateDnsZoneConfigArrayOutputWithContext(context.Context) PrivateDnsZoneConfigArrayOutput
}

type PrivateDnsZoneConfigArray []PrivateDnsZoneConfigInput

func (PrivateDnsZoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfig)(nil)).Elem()
}

func (i PrivateDnsZoneConfigArray) ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput {
	return i.ToPrivateDnsZoneConfigArrayOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigArray) ToPrivateDnsZoneConfigArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigArrayOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfig)(nil)).Elem()
}

func (o PrivateDnsZoneConfigOutput) ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput {
	return o
}

func (o PrivateDnsZoneConfigOutput) ToPrivateDnsZoneConfigOutputWithContext(ctx context.Context) PrivateDnsZoneConfigOutput {
	return o
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateDnsZoneConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id of the private dns zone.
func (o PrivateDnsZoneConfigOutput) PrivateDnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfig) *string { return v.PrivateDnsZoneId }).(pulumi.StringPtrOutput)
}

type PrivateDnsZoneConfigArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfig)(nil)).Elem()
}

func (o PrivateDnsZoneConfigArrayOutput) ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigArrayOutput) ToPrivateDnsZoneConfigArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigArrayOutput) Index(i pulumi.IntInput) PrivateDnsZoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateDnsZoneConfig {
		return vs[0].([]PrivateDnsZoneConfig)[vs[1].(int)]
	}).(PrivateDnsZoneConfigOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigResponse struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
	// A collection of information regarding a recordSet, holding information to identify private resources.
	RecordSets []RecordSetResponse `pulumi:"recordSets"`
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigResponseOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (o PrivateDnsZoneConfigResponseOutput) ToPrivateDnsZoneConfigResponseOutput() PrivateDnsZoneConfigResponseOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseOutput) ToPrivateDnsZoneConfigResponseOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseOutput {
	return o
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateDnsZoneConfigResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id of the private dns zone.
func (o PrivateDnsZoneConfigResponseOutput) PrivateDnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) *string { return v.PrivateDnsZoneId }).(pulumi.StringPtrOutput)
}

// A collection of information regarding a recordSet, holding information to identify private resources.
func (o PrivateDnsZoneConfigResponseOutput) RecordSets() RecordSetResponseArrayOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) []RecordSetResponse { return v.RecordSets }).(RecordSetResponseArrayOutput)
}

type PrivateDnsZoneConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (o PrivateDnsZoneConfigResponseArrayOutput) ToPrivateDnsZoneConfigResponseArrayOutput() PrivateDnsZoneConfigResponseArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseArrayOutput) ToPrivateDnsZoneConfigResponseArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseArrayOutput) Index(i pulumi.IntInput) PrivateDnsZoneConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateDnsZoneConfigResponse {
		return vs[0].([]PrivateDnsZoneConfigResponse)[vs[1].(int)]
	}).(PrivateDnsZoneConfigResponseOutput)
}

// PrivateEndpointConnection resource.
type PrivateEndpointConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The consumer link id.
	LinkIdentifier string `pulumi:"linkIdentifier"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// The location of the private endpoint.
	PrivateEndpointLocation string `pulumi:"privateEndpointLocation"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionResponse
func (val *PrivateEndpointConnectionResponse) Defaults() *PrivateEndpointConnectionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PrivateEndpoint = *tmp.PrivateEndpoint.Defaults()

	return &tmp
}

// PrivateEndpointConnection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The consumer link id.
func (o PrivateEndpointConnectionResponseOutput) LinkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.LinkIdentifier }).(pulumi.StringOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// The location of the private endpoint.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpointLocation() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.PrivateEndpointLocation }).(pulumi.StringOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource type.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// An IP Configuration of the private endpoint.
type PrivateEndpointIPConfiguration struct {
	// The ID of a group obtained from the remote resource that this private endpoint should connect to.
	GroupId *string `pulumi:"groupId"`
	// The member name of a group obtained from the remote resource that this private endpoint should connect to.
	MemberName *string `pulumi:"memberName"`
	// The name of the resource that is unique within a resource group.
	Name *string `pulumi:"name"`
	// A private ip address obtained from the private endpoint's subnet.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
}

// PrivateEndpointIPConfigurationInput is an input type that accepts PrivateEndpointIPConfigurationArgs and PrivateEndpointIPConfigurationOutput values.
// You can construct a concrete instance of `PrivateEndpointIPConfigurationInput` via:
//
//	PrivateEndpointIPConfigurationArgs{...}
type PrivateEndpointIPConfigurationInput interface {
	pulumi.Input

	ToPrivateEndpointIPConfigurationOutput() PrivateEndpointIPConfigurationOutput
	ToPrivateEndpointIPConfigurationOutputWithContext(context.Context) PrivateEndpointIPConfigurationOutput
}

// An IP Configuration of the private endpoint.
type PrivateEndpointIPConfigurationArgs struct {
	// The ID of a group obtained from the remote resource that this private endpoint should connect to.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The member name of a group obtained from the remote resource that this private endpoint should connect to.
	MemberName pulumi.StringPtrInput `pulumi:"memberName"`
	// The name of the resource that is unique within a resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A private ip address obtained from the private endpoint's subnet.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
}

func (PrivateEndpointIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointIPConfiguration)(nil)).Elem()
}

func (i PrivateEndpointIPConfigurationArgs) ToPrivateEndpointIPConfigurationOutput() PrivateEndpointIPConfigurationOutput {
	return i.ToPrivateEndpointIPConfigurationOutputWithContext(context.Background())
}

func (i PrivateEndpointIPConfigurationArgs) ToPrivateEndpointIPConfigurationOutputWithContext(ctx context.Context) PrivateEndpointIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointIPConfigurationOutput)
}

// PrivateEndpointIPConfigurationArrayInput is an input type that accepts PrivateEndpointIPConfigurationArray and PrivateEndpointIPConfigurationArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointIPConfigurationArrayInput` via:
//
//	PrivateEndpointIPConfigurationArray{ PrivateEndpointIPConfigurationArgs{...} }
type PrivateEndpointIPConfigurationArrayInput interface {
	pulumi.Input

	ToPrivateEndpointIPConfigurationArrayOutput() PrivateEndpointIPConfigurationArrayOutput
	ToPrivateEndpointIPConfigurationArrayOutputWithContext(context.Context) PrivateEndpointIPConfigurationArrayOutput
}

type PrivateEndpointIPConfigurationArray []PrivateEndpointIPConfigurationInput

func (PrivateEndpointIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointIPConfiguration)(nil)).Elem()
}

func (i PrivateEndpointIPConfigurationArray) ToPrivateEndpointIPConfigurationArrayOutput() PrivateEndpointIPConfigurationArrayOutput {
	return i.ToPrivateEndpointIPConfigurationArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointIPConfigurationArray) ToPrivateEndpointIPConfigurationArrayOutputWithContext(ctx context.Context) PrivateEndpointIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointIPConfigurationArrayOutput)
}

// An IP Configuration of the private endpoint.
type PrivateEndpointIPConfigurationOutput struct{ *pulumi.OutputState }

func (PrivateEndpointIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointIPConfiguration)(nil)).Elem()
}

func (o PrivateEndpointIPConfigurationOutput) ToPrivateEndpointIPConfigurationOutput() PrivateEndpointIPConfigurationOutput {
	return o
}

func (o PrivateEndpointIPConfigurationOutput) ToPrivateEndpointIPConfigurationOutputWithContext(ctx context.Context) PrivateEndpointIPConfigurationOutput {
	return o
}

// The ID of a group obtained from the remote resource that this private endpoint should connect to.
func (o PrivateEndpointIPConfigurationOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfiguration) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The member name of a group obtained from the remote resource that this private endpoint should connect to.
func (o PrivateEndpointIPConfigurationOutput) MemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfiguration) *string { return v.MemberName }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group.
func (o PrivateEndpointIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A private ip address obtained from the private endpoint's subnet.
func (o PrivateEndpointIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

type PrivateEndpointIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointIPConfiguration)(nil)).Elem()
}

func (o PrivateEndpointIPConfigurationArrayOutput) ToPrivateEndpointIPConfigurationArrayOutput() PrivateEndpointIPConfigurationArrayOutput {
	return o
}

func (o PrivateEndpointIPConfigurationArrayOutput) ToPrivateEndpointIPConfigurationArrayOutputWithContext(ctx context.Context) PrivateEndpointIPConfigurationArrayOutput {
	return o
}

func (o PrivateEndpointIPConfigurationArrayOutput) Index(i pulumi.IntInput) PrivateEndpointIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointIPConfiguration {
		return vs[0].([]PrivateEndpointIPConfiguration)[vs[1].(int)]
	}).(PrivateEndpointIPConfigurationOutput)
}

// An IP Configuration of the private endpoint.
type PrivateEndpointIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The ID of a group obtained from the remote resource that this private endpoint should connect to.
	GroupId *string `pulumi:"groupId"`
	// The member name of a group obtained from the remote resource that this private endpoint should connect to.
	MemberName *string `pulumi:"memberName"`
	// The name of the resource that is unique within a resource group.
	Name *string `pulumi:"name"`
	// A private ip address obtained from the private endpoint's subnet.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The resource type.
	Type string `pulumi:"type"`
}

// An IP Configuration of the private endpoint.
type PrivateEndpointIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointIPConfigurationResponse)(nil)).Elem()
}

func (o PrivateEndpointIPConfigurationResponseOutput) ToPrivateEndpointIPConfigurationResponseOutput() PrivateEndpointIPConfigurationResponseOutput {
	return o
}

func (o PrivateEndpointIPConfigurationResponseOutput) ToPrivateEndpointIPConfigurationResponseOutputWithContext(ctx context.Context) PrivateEndpointIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID of a group obtained from the remote resource that this private endpoint should connect to.
func (o PrivateEndpointIPConfigurationResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfigurationResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The member name of a group obtained from the remote resource that this private endpoint should connect to.
func (o PrivateEndpointIPConfigurationResponseOutput) MemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfigurationResponse) *string { return v.MemberName }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group.
func (o PrivateEndpointIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A private ip address obtained from the private endpoint's subnet.
func (o PrivateEndpointIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The resource type.
func (o PrivateEndpointIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointIPConfigurationResponse)(nil)).Elem()
}

func (o PrivateEndpointIPConfigurationResponseArrayOutput) ToPrivateEndpointIPConfigurationResponseArrayOutput() PrivateEndpointIPConfigurationResponseArrayOutput {
	return o
}

func (o PrivateEndpointIPConfigurationResponseArrayOutput) ToPrivateEndpointIPConfigurationResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointIPConfigurationResponseArrayOutput {
	return o
}

func (o PrivateEndpointIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointIPConfigurationResponse {
		return vs[0].([]PrivateEndpointIPConfigurationResponse)[vs[1].(int)]
	}).(PrivateEndpointIPConfigurationResponseOutput)
}

// Private endpoint resource.
type PrivateEndpointResponse struct {
	// Application security groups in which the private endpoint IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"applicationSecurityGroups"`
	// An array of custom dns configurations.
	CustomDnsConfigs []CustomDnsConfigPropertiesFormatResponse `pulumi:"customDnsConfigs"`
	// The custom name of the network interface attached to the private endpoint.
	CustomNetworkInterfaceName *string `pulumi:"customNetworkInterfaceName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the load balancer.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.
	IpConfigurations []PrivateEndpointIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
	ManualPrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"manualPrivateLinkServiceConnections"`
	// Resource name.
	Name string `pulumi:"name"`
	// An array of references to the network interfaces created for this private endpoint.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// A grouping of information about the connection to the remote resource.
	PrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"privateLinkServiceConnections"`
	// The provisioning state of the private endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PrivateEndpointResponse
func (val *PrivateEndpointResponse) Defaults() *PrivateEndpointResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// Private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// Application security groups in which the private endpoint IP configuration is included.
func (o PrivateEndpointResponseOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []ApplicationSecurityGroupResponse { return v.ApplicationSecurityGroups }).(ApplicationSecurityGroupResponseArrayOutput)
}

// An array of custom dns configurations.
func (o PrivateEndpointResponseOutput) CustomDnsConfigs() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []CustomDnsConfigPropertiesFormatResponse { return v.CustomDnsConfigs }).(CustomDnsConfigPropertiesFormatResponseArrayOutput)
}

// The custom name of the network interface attached to the private endpoint.
func (o PrivateEndpointResponseOutput) CustomNetworkInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.CustomNetworkInterfaceName }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the load balancer.
func (o PrivateEndpointResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints.
func (o PrivateEndpointResponseOutput) IpConfigurations() PrivateEndpointIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateEndpointIPConfigurationResponse { return v.IpConfigurations }).(PrivateEndpointIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o PrivateEndpointResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
func (o PrivateEndpointResponseOutput) ManualPrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.ManualPrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// Resource name.
func (o PrivateEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// An array of references to the network interfaces created for this private endpoint.
func (o PrivateEndpointResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// A grouping of information about the connection to the remote resource.
func (o PrivateEndpointResponseOutput) PrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.PrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// The provisioning state of the private endpoint resource.
func (o PrivateEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o PrivateEndpointResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o PrivateEndpointResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutput() PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointResponse {
		return vs[0].([]PrivateEndpointResponse)[vs[1].(int)]
	}).(PrivateEndpointResponseOutput)
}

// Private link service resource.
type PrivateLinkServiceType struct {
	// The auto-approval list of the private link service.
	AutoApproval *PrivateLinkServicePropertiesAutoApproval `pulumi:"autoApproval"`
	// Whether the private link service is enabled for proxy protocol or not.
	EnableProxyProtocol *bool `pulumi:"enableProxyProtocol"`
	// The extended location of the load balancer.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// The list of Fqdn.
	Fqdns []string `pulumi:"fqdns"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of private link service IP configurations.
	IpConfigurations []PrivateLinkServiceIpConfiguration `pulumi:"ipConfigurations"`
	// An array of references to the load balancer IP configurations.
	LoadBalancerFrontendIpConfigurations []FrontendIPConfiguration `pulumi:"loadBalancerFrontendIpConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The visibility list of the private link service.
	Visibility *PrivateLinkServicePropertiesVisibility `pulumi:"visibility"`
}

// PrivateLinkServiceTypeInput is an input type that accepts PrivateLinkServiceTypeArgs and PrivateLinkServiceTypeOutput values.
// You can construct a concrete instance of `PrivateLinkServiceTypeInput` via:
//
//	PrivateLinkServiceTypeArgs{...}
type PrivateLinkServiceTypeInput interface {
	pulumi.Input

	ToPrivateLinkServiceTypeOutput() PrivateLinkServiceTypeOutput
	ToPrivateLinkServiceTypeOutputWithContext(context.Context) PrivateLinkServiceTypeOutput
}

// Private link service resource.
type PrivateLinkServiceTypeArgs struct {
	// The auto-approval list of the private link service.
	AutoApproval PrivateLinkServicePropertiesAutoApprovalPtrInput `pulumi:"autoApproval"`
	// Whether the private link service is enabled for proxy protocol or not.
	EnableProxyProtocol pulumi.BoolPtrInput `pulumi:"enableProxyProtocol"`
	// The extended location of the load balancer.
	ExtendedLocation ExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// The list of Fqdn.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of private link service IP configurations.
	IpConfigurations PrivateLinkServiceIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// An array of references to the load balancer IP configurations.
	LoadBalancerFrontendIpConfigurations FrontendIPConfigurationArrayInput `pulumi:"loadBalancerFrontendIpConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The visibility list of the private link service.
	Visibility PrivateLinkServicePropertiesVisibilityPtrInput `pulumi:"visibility"`
}

func (PrivateLinkServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceType)(nil)).Elem()
}

func (i PrivateLinkServiceTypeArgs) ToPrivateLinkServiceTypeOutput() PrivateLinkServiceTypeOutput {
	return i.ToPrivateLinkServiceTypeOutputWithContext(context.Background())
}

func (i PrivateLinkServiceTypeArgs) ToPrivateLinkServiceTypeOutputWithContext(ctx context.Context) PrivateLinkServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceTypeOutput)
}

func (i PrivateLinkServiceTypeArgs) ToPrivateLinkServiceTypePtrOutput() PrivateLinkServiceTypePtrOutput {
	return i.ToPrivateLinkServiceTypePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceTypeArgs) ToPrivateLinkServiceTypePtrOutputWithContext(ctx context.Context) PrivateLinkServiceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceTypeOutput).ToPrivateLinkServiceTypePtrOutputWithContext(ctx)
}

// PrivateLinkServiceTypePtrInput is an input type that accepts PrivateLinkServiceTypeArgs, PrivateLinkServiceTypePtr and PrivateLinkServiceTypePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceTypePtrInput` via:
//
//	        PrivateLinkServiceTypeArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceTypePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceTypePtrOutput() PrivateLinkServiceTypePtrOutput
	ToPrivateLinkServiceTypePtrOutputWithContext(context.Context) PrivateLinkServiceTypePtrOutput
}

type privateLinkServiceTypePtrType PrivateLinkServiceTypeArgs

func PrivateLinkServiceTypePtr(v *PrivateLinkServiceTypeArgs) PrivateLinkServiceTypePtrInput {
	return (*privateLinkServiceTypePtrType)(v)
}

func (*privateLinkServiceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceType)(nil)).Elem()
}

func (i *privateLinkServiceTypePtrType) ToPrivateLinkServiceTypePtrOutput() PrivateLinkServiceTypePtrOutput {
	return i.ToPrivateLinkServiceTypePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceTypePtrType) ToPrivateLinkServiceTypePtrOutputWithContext(ctx context.Context) PrivateLinkServiceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceTypePtrOutput)
}

// Private link service resource.
type PrivateLinkServiceTypeOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceType)(nil)).Elem()
}

func (o PrivateLinkServiceTypeOutput) ToPrivateLinkServiceTypeOutput() PrivateLinkServiceTypeOutput {
	return o
}

func (o PrivateLinkServiceTypeOutput) ToPrivateLinkServiceTypeOutputWithContext(ctx context.Context) PrivateLinkServiceTypeOutput {
	return o
}

func (o PrivateLinkServiceTypeOutput) ToPrivateLinkServiceTypePtrOutput() PrivateLinkServiceTypePtrOutput {
	return o.ToPrivateLinkServiceTypePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceTypeOutput) ToPrivateLinkServiceTypePtrOutputWithContext(ctx context.Context) PrivateLinkServiceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceType) *PrivateLinkServiceType {
		return &v
	}).(PrivateLinkServiceTypePtrOutput)
}

// The auto-approval list of the private link service.
func (o PrivateLinkServiceTypeOutput) AutoApproval() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) *PrivateLinkServicePropertiesAutoApproval { return v.AutoApproval }).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// Whether the private link service is enabled for proxy protocol or not.
func (o PrivateLinkServiceTypeOutput) EnableProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) *bool { return v.EnableProxyProtocol }).(pulumi.BoolPtrOutput)
}

// The extended location of the load balancer.
func (o PrivateLinkServiceTypeOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) *ExtendedLocation { return v.ExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The list of Fqdn.
func (o PrivateLinkServiceTypeOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of private link service IP configurations.
func (o PrivateLinkServiceTypeOutput) IpConfigurations() PrivateLinkServiceIpConfigurationArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) []PrivateLinkServiceIpConfiguration { return v.IpConfigurations }).(PrivateLinkServiceIpConfigurationArrayOutput)
}

// An array of references to the load balancer IP configurations.
func (o PrivateLinkServiceTypeOutput) LoadBalancerFrontendIpConfigurations() FrontendIPConfigurationArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) []FrontendIPConfiguration {
		return v.LoadBalancerFrontendIpConfigurations
	}).(FrontendIPConfigurationArrayOutput)
}

// Resource location.
func (o PrivateLinkServiceTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PrivateLinkServiceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The visibility list of the private link service.
func (o PrivateLinkServiceTypeOutput) Visibility() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceType) *PrivateLinkServicePropertiesVisibility { return v.Visibility }).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

type PrivateLinkServiceTypePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceType)(nil)).Elem()
}

func (o PrivateLinkServiceTypePtrOutput) ToPrivateLinkServiceTypePtrOutput() PrivateLinkServiceTypePtrOutput {
	return o
}

func (o PrivateLinkServiceTypePtrOutput) ToPrivateLinkServiceTypePtrOutputWithContext(ctx context.Context) PrivateLinkServiceTypePtrOutput {
	return o
}

func (o PrivateLinkServiceTypePtrOutput) Elem() PrivateLinkServiceTypeOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) PrivateLinkServiceType {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceType
		return ret
	}).(PrivateLinkServiceTypeOutput)
}

// The auto-approval list of the private link service.
func (o PrivateLinkServiceTypePtrOutput) AutoApproval() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) *PrivateLinkServicePropertiesAutoApproval {
		if v == nil {
			return nil
		}
		return v.AutoApproval
	}).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// Whether the private link service is enabled for proxy protocol or not.
func (o PrivateLinkServiceTypePtrOutput) EnableProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProxyProtocol
	}).(pulumi.BoolPtrOutput)
}

// The extended location of the load balancer.
func (o PrivateLinkServiceTypePtrOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// The list of Fqdn.
func (o PrivateLinkServiceTypePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of private link service IP configurations.
func (o PrivateLinkServiceTypePtrOutput) IpConfigurations() PrivateLinkServiceIpConfigurationArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) []PrivateLinkServiceIpConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(PrivateLinkServiceIpConfigurationArrayOutput)
}

// An array of references to the load balancer IP configurations.
func (o PrivateLinkServiceTypePtrOutput) LoadBalancerFrontendIpConfigurations() FrontendIPConfigurationArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) []FrontendIPConfiguration {
		if v == nil {
			return nil
		}
		return v.LoadBalancerFrontendIpConfigurations
	}).(FrontendIPConfigurationArrayOutput)
}

// Resource location.
func (o PrivateLinkServiceTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PrivateLinkServiceTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The visibility list of the private link service.
func (o PrivateLinkServiceTypePtrOutput) Visibility() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceType) *PrivateLinkServicePropertiesVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnection struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds []string `pulumi:"groupIds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
}

// PrivateLinkServiceConnectionInput is an input type that accepts PrivateLinkServiceConnectionArgs and PrivateLinkServiceConnectionOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionInput` via:
//
//	PrivateLinkServiceConnectionArgs{...}
type PrivateLinkServiceConnectionInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput
	ToPrivateLinkServiceConnectionOutputWithContext(context.Context) PrivateLinkServiceConnectionOutput
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionArgs struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId pulumi.StringPtrInput `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
}

func (PrivateLinkServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput {
	return i.ToPrivateLinkServiceConnectionOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionOutput)
}

// PrivateLinkServiceConnectionArrayInput is an input type that accepts PrivateLinkServiceConnectionArray and PrivateLinkServiceConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionArrayInput` via:
//
//	PrivateLinkServiceConnectionArray{ PrivateLinkServiceConnectionArgs{...} }
type PrivateLinkServiceConnectionArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput
	ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Context) PrivateLinkServiceConnectionArrayOutput
}

type PrivateLinkServiceConnectionArray []PrivateLinkServiceConnectionInput

func (PrivateLinkServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput {
	return i.ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionArrayOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnection)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionOutput) ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput {
	return o
}

func (o PrivateLinkServiceConnectionOutput) ToPrivateLinkServiceConnectionOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionOutput {
	return o
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
func (o PrivateLinkServiceConnectionOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateLinkServiceConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A collection of read-only information about the state of the connection to the remote resource.
func (o PrivateLinkServiceConnectionOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceConnectionOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnection)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionArrayOutput) ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionArrayOutput) ToPrivateLinkServiceConnectionArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnection {
		return vs[0].([]PrivateLinkServiceConnection)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds []string `pulumi:"groupIds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// The provisioning state of the private link service connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
	// The resource type.
	Type string `pulumi:"type"`
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutput() PrivateLinkServiceConnectionResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
func (o PrivateLinkServiceConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateLinkServiceConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A collection of read-only information about the state of the connection to the remote resource.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private link service connection resource.
func (o PrivateLinkServiceConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// The resource type.
func (o PrivateLinkServiceConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateLinkServiceConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutput() PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnectionResponse {
		return vs[0].([]PrivateLinkServiceConnectionResponse)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ARecordOutput{})
	pulumi.RegisterOutputType(ARecordArrayOutput{})
	pulumi.RegisterOutputType(ARecordResponseOutput{})
	pulumi.RegisterOutputType(ARecordResponseArrayOutput{})
	pulumi.RegisterOutputType(AaaaRecordOutput{})
	pulumi.RegisterOutputType(AaaaRecordArrayOutput{})
	pulumi.RegisterOutputType(AaaaRecordResponseOutput{})
	pulumi.RegisterOutputType(AaaaRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersPtrOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersResponseOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ActionOutput{})
	pulumi.RegisterOutputType(ActionArrayOutput{})
	pulumi.RegisterOutputType(ActionResponseOutput{})
	pulumi.RegisterOutputType(ActionResponseArrayOutput{})
	pulumi.RegisterOutputType(ActiveConnectivityConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ActiveConnectivityConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ActiveDefaultSecurityAdminRuleResponseOutput{})
	pulumi.RegisterOutputType(ActiveDefaultSecurityUserRuleResponseOutput{})
	pulumi.RegisterOutputType(ActiveSecurityAdminRuleResponseOutput{})
	pulumi.RegisterOutputType(ActiveSecurityUserRuleResponseOutput{})
	pulumi.RegisterOutputType(AddressPrefixItemOutput{})
	pulumi.RegisterOutputType(AddressPrefixItemArrayOutput{})
	pulumi.RegisterOutputType(AddressPrefixItemResponseOutput{})
	pulumi.RegisterOutputType(AddressPrefixItemResponseArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceOutput{})
	pulumi.RegisterOutputType(AddressSpacePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponseOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHealthHttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHealthHttpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHealthServerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHealthServerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendSettingsOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendSettingsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGlobalConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGlobalConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGlobalConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGlobalConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayListenerOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayListenerArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayListenerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionPolicyResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionTargetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionTargetArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionTargetResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayLoadDistributionTargetResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRoutingRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationRuleOutput{})
	pulumi.RegisterOutputType(ApplicationRuleConditionOutput{})
	pulumi.RegisterOutputType(ApplicationRuleConditionPtrOutput{})
	pulumi.RegisterOutputType(ApplicationRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationRuleConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIpGroupsResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallIpGroupsResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendOutput{})
	pulumi.RegisterOutputType(BackendArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendPoolOutput{})
	pulumi.RegisterOutputType(BackendPoolArrayOutput{})
	pulumi.RegisterOutputType(BackendPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsPtrOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsResponseOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendResponseOutput{})
	pulumi.RegisterOutputType(BackendResponseArrayOutput{})
	pulumi.RegisterOutputType(BastionActiveSessionResponseOutput{})
	pulumi.RegisterOutputType(BastionActiveSessionResponseArrayOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkArrayOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkResponseOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerStatusResponseOutput{})
	pulumi.RegisterOutputType(BgpPeerStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpSettingsOutput{})
	pulumi.RegisterOutputType(BgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesPtrOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesResponseOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(CaaRecordOutput{})
	pulumi.RegisterOutputType(CaaRecordArrayOutput{})
	pulumi.RegisterOutputType(CaaRecordResponseOutput{})
	pulumi.RegisterOutputType(CaaRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(CacheConfigurationOutput{})
	pulumi.RegisterOutputType(CacheConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CacheConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CacheConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(CnameRecordOutput{})
	pulumi.RegisterOutputType(CnameRecordPtrOutput{})
	pulumi.RegisterOutputType(CnameRecordResponseOutput{})
	pulumi.RegisterOutputType(CnameRecordResponsePtrOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputTypeOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourcePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectivityGroupItemOutput{})
	pulumi.RegisterOutputType(ConnectivityGroupItemArrayOutput{})
	pulumi.RegisterOutputType(ConnectivityGroupItemResponseOutput{})
	pulumi.RegisterOutputType(ConnectivityGroupItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerResponseOutput{})
	pulumi.RegisterOutputType(ContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(CriterionOutput{})
	pulumi.RegisterOutputType(CriterionArrayOutput{})
	pulumi.RegisterOutputType(CriterionResponseOutput{})
	pulumi.RegisterOutputType(CriterionResponseArrayOutput{})
	pulumi.RegisterOutputType(CrossTenantScopesResponseOutput{})
	pulumi.RegisterOutputType(CrossTenantScopesResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomHttpsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleOutput{})
	pulumi.RegisterOutputType(CustomRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleListOutput{})
	pulumi.RegisterOutputType(CustomRuleListPtrOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DdosSettingsOutput{})
	pulumi.RegisterOutputType(DdosSettingsPtrOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponseOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DelegationOutput{})
	pulumi.RegisterOutputType(DelegationArrayOutput{})
	pulumi.RegisterOutputType(DelegationPropertiesOutput{})
	pulumi.RegisterOutputType(DelegationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DelegationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DelegationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DelegationResponseOutput{})
	pulumi.RegisterOutputType(DelegationResponseArrayOutput{})
	pulumi.RegisterOutputType(DevicePropertiesOutput{})
	pulumi.RegisterOutputType(DevicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsOutput{})
	pulumi.RegisterOutputType(DhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponseOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(DnsConfigOutput{})
	pulumi.RegisterOutputType(DnsConfigPtrOutput{})
	pulumi.RegisterOutputType(DnsConfigResponseOutput{})
	pulumi.RegisterOutputType(DnsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(DnsResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(DnsResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(DnsSettingsOutput{})
	pulumi.RegisterOutputType(DnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(DnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(DnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EffectiveConnectivityConfigurationResponseOutput{})
	pulumi.RegisterOutputType(EffectiveConnectivityConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(EffectiveDefaultSecurityAdminRuleResponseOutput{})
	pulumi.RegisterOutputType(EffectiveSecurityAdminRuleResponseOutput{})
	pulumi.RegisterOutputType(EffectiveVirtualNetworkResponseOutput{})
	pulumi.RegisterOutputType(EffectiveVirtualNetworkResponseArrayOutput{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(EndpointTypeArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesCustomHeadersOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseCustomHeadersOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseSubnetsOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseSubnetsArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesSubnetsOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesSubnetsArrayOutput{})
	pulumi.RegisterOutputType(EndpointResponseOutput{})
	pulumi.RegisterOutputType(EndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(EndpointServiceOutput{})
	pulumi.RegisterOutputType(EndpointServicePtrOutput{})
	pulumi.RegisterOutputType(EndpointServiceResponseOutput{})
	pulumi.RegisterOutputType(EndpointServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleArrayOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleGroupOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleGroupResponseOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleResponseOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleSetOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ExclusionManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ExperimentEndpointOutput{})
	pulumi.RegisterOutputType(ExperimentEndpointPtrOutput{})
	pulumi.RegisterOutputType(ExperimentEndpointResponseOutput{})
	pulumi.RegisterOutputType(ExperimentEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(ExplicitProxyOutput{})
	pulumi.RegisterOutputType(ExplicitProxyPtrOutput{})
	pulumi.RegisterOutputType(ExplicitProxyResponseOutput{})
	pulumi.RegisterOutputType(ExplicitProxyResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesBoundsOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesBoundsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseBoundsOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(FilterItemsOutput{})
	pulumi.RegisterOutputType(FilterItemsArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyHttpHeaderToInsertOutput{})
	pulumi.RegisterOutputType(FirewallPolicyHttpHeaderToInsertArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyHttpHeaderToInsertResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyHttpHeaderToInsertResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsResourcesOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsResourcesPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsResourcesResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsResourcesResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsWorkspaceOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsWorkspaceResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyLogAnalyticsWorkspaceResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySNATOutput{})
	pulumi.RegisterOutputType(FirewallPolicySNATPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicySNATResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicySNATResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicySQLOutput{})
	pulumi.RegisterOutputType(FirewallPolicySQLPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicySQLResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicySQLResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersPtrOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponseOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowLogResponseOutput{})
	pulumi.RegisterOutputType(FlowLogResponseArrayOutput{})
	pulumi.RegisterOutputType(ForwardingConfigurationOutput{})
	pulumi.RegisterOutputType(ForwardingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ForwardingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ForwardingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleGroupOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleOverrideOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleOverrideResponseOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleSetOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(FrontDoorManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorMatchConditionOutput{})
	pulumi.RegisterOutputType(FrontDoorMatchConditionArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorMatchConditionResponseOutput{})
	pulumi.RegisterOutputType(FrontDoorMatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontDoorPolicySettingsOutput{})
	pulumi.RegisterOutputType(FrontDoorPolicySettingsPtrOutput{})
	pulumi.RegisterOutputType(FrontDoorPolicySettingsResponseOutput{})
	pulumi.RegisterOutputType(FrontDoorPolicySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendEndpointOutput{})
	pulumi.RegisterOutputType(FrontendEndpointArrayOutput{})
	pulumi.RegisterOutputType(FrontendEndpointLinkResponseOutput{})
	pulumi.RegisterOutputType(FrontendEndpointLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontendEndpointResponseOutput{})
	pulumi.RegisterOutputType(FrontendEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayCustomBgpIpAddressIpConfigurationOutput{})
	pulumi.RegisterOutputType(GatewayCustomBgpIpAddressIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GatewayCustomBgpIpAddressIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayLoadBalancerTunnelInterfaceOutput{})
	pulumi.RegisterOutputType(GatewayLoadBalancerTunnelInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GatewayLoadBalancerTunnelInterfaceResponseOutput{})
	pulumi.RegisterOutputType(GatewayLoadBalancerTunnelInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteResponseOutput{})
	pulumi.RegisterOutputType(GatewayRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(GroupByUserSessionOutput{})
	pulumi.RegisterOutputType(GroupByUserSessionArrayOutput{})
	pulumi.RegisterOutputType(GroupByUserSessionResponseOutput{})
	pulumi.RegisterOutputType(GroupByUserSessionResponseArrayOutput{})
	pulumi.RegisterOutputType(GroupByVariableOutput{})
	pulumi.RegisterOutputType(GroupByVariableArrayOutput{})
	pulumi.RegisterOutputType(GroupByVariableResponseOutput{})
	pulumi.RegisterOutputType(GroupByVariableResponseArrayOutput{})
	pulumi.RegisterOutputType(GroupMembersItemResponseOutput{})
	pulumi.RegisterOutputType(GroupMembersItemResponseArrayOutput{})
	pulumi.RegisterOutputType(HTTPHeaderOutput{})
	pulumi.RegisterOutputType(HTTPHeaderArrayOutput{})
	pulumi.RegisterOutputType(HTTPHeaderResponseOutput{})
	pulumi.RegisterOutputType(HTTPHeaderResponseArrayOutput{})
	pulumi.RegisterOutputType(HeaderActionOutput{})
	pulumi.RegisterOutputType(HeaderActionArrayOutput{})
	pulumi.RegisterOutputType(HeaderActionResponseOutput{})
	pulumi.RegisterOutputType(HeaderActionResponseArrayOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelArrayOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelResponseArrayOutput{})
	pulumi.RegisterOutputType(HubOutput{})
	pulumi.RegisterOutputType(HubArrayOutput{})
	pulumi.RegisterOutputType(HubIPAddressesOutput{})
	pulumi.RegisterOutputType(HubIPAddressesPtrOutput{})
	pulumi.RegisterOutputType(HubIPAddressesResponseOutput{})
	pulumi.RegisterOutputType(HubIPAddressesResponsePtrOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesPtrOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesResponseOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesResponsePtrOutput{})
	pulumi.RegisterOutputType(HubResponseOutput{})
	pulumi.RegisterOutputType(HubResponseArrayOutput{})
	pulumi.RegisterOutputType(HubRouteOutput{})
	pulumi.RegisterOutputType(HubRouteArrayOutput{})
	pulumi.RegisterOutputType(HubRouteResponseOutput{})
	pulumi.RegisterOutputType(HubRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundEndpointIPConfigurationOutput{})
	pulumi.RegisterOutputType(InboundEndpointIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(InboundEndpointIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(InboundEndpointIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolOutput{})
	pulumi.RegisterOutputType(InboundNatPoolArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointResponseOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(IpTagOutput{})
	pulumi.RegisterOutputType(IpTagArrayOutput{})
	pulumi.RegisterOutputType(IpTagResponseOutput{})
	pulumi.RegisterOutputType(IpTagResponseArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyOutput{})
	pulumi.RegisterOutputType(IpsecPolicyArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigPtrOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigResponseOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificateSourceParametersResponseVaultOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificateSourceParametersResponseVaultPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelResponseArrayOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleExclusionOutput{})
	pulumi.RegisterOutputType(ManagedRuleExclusionArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleExclusionResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleExclusionResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListPtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRulesDefinitionOutput{})
	pulumi.RegisterOutputType(ManagedRulesDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(MatchConditionOutput{})
	pulumi.RegisterOutputType(MatchConditionArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(MatchVariableOutput{})
	pulumi.RegisterOutputType(MatchVariableArrayOutput{})
	pulumi.RegisterOutputType(MatchVariableResponseOutput{})
	pulumi.RegisterOutputType(MatchVariableResponseArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigOutput{})
	pulumi.RegisterOutputType(MonitorConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigCustomHeadersOutput{})
	pulumi.RegisterOutputType(MonitorConfigCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigExpectedStatusCodeRangesOutput{})
	pulumi.RegisterOutputType(MonitorConfigExpectedStatusCodeRangesArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseCustomHeadersOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseExpectedStatusCodeRangesOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput{})
	pulumi.RegisterOutputType(MxRecordOutput{})
	pulumi.RegisterOutputType(MxRecordArrayOutput{})
	pulumi.RegisterOutputType(MxRecordResponseOutput{})
	pulumi.RegisterOutputType(MxRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(NatGatewayTypeOutput{})
	pulumi.RegisterOutputType(NatGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(NatGatewayResponseOutput{})
	pulumi.RegisterOutputType(NatGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(NatRuleTypeOutput{})
	pulumi.RegisterOutputType(NatRuleConditionOutput{})
	pulumi.RegisterOutputType(NatRuleConditionPtrOutput{})
	pulumi.RegisterOutputType(NatRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(NatRuleConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(NatRulePortMappingResponseOutput{})
	pulumi.RegisterOutputType(NatRulePortMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(NatRuleResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerDeploymentStatusResponseOutput{})
	pulumi.RegisterOutputType(NetworkManagerDeploymentStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerPropertiesNetworkManagerScopesOutput{})
	pulumi.RegisterOutputType(NetworkManagerPropertiesResponseNetworkManagerScopesOutput{})
	pulumi.RegisterOutputType(NetworkManagerSecurityGroupItemOutput{})
	pulumi.RegisterOutputType(NetworkManagerSecurityGroupItemArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerSecurityGroupItemResponseOutput{})
	pulumi.RegisterOutputType(NetworkManagerSecurityGroupItemResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkRuleOutput{})
	pulumi.RegisterOutputType(NetworkRuleConditionOutput{})
	pulumi.RegisterOutputType(NetworkRuleConditionPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(NsRecordOutput{})
	pulumi.RegisterOutputType(NsRecordArrayOutput{})
	pulumi.RegisterOutputType(NsRecordResponseOutput{})
	pulumi.RegisterOutputType(NsRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesPtrOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesResponseOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OrderByOutput{})
	pulumi.RegisterOutputType(OrderByPtrOutput{})
	pulumi.RegisterOutputType(OutboundRuleOutput{})
	pulumi.RegisterOutputType(OutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(OutboundRuleResponseOutput{})
	pulumi.RegisterOutputType(OutboundRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryArrayOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryResponseOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureMachineScopeOutput{})
	pulumi.RegisterOutputType(PacketCaptureMachineScopePtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureMachineScopeResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureMachineScopeResponsePtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponseOutput{})
	pulumi.RegisterOutputType(ParameterOutput{})
	pulumi.RegisterOutputType(ParameterArrayOutput{})
	pulumi.RegisterOutputType(ParameterResponseOutput{})
	pulumi.RegisterOutputType(ParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(PartnerManagedResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(PartnerManagedResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PeerExpressRouteCircuitConnectionResponseOutput{})
	pulumi.RegisterOutputType(PeerExpressRouteCircuitConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PerimeterBasedAccessRuleResponseOutput{})
	pulumi.RegisterOutputType(PerimeterBasedAccessRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicySettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsLogScrubbingOutput{})
	pulumi.RegisterOutputType(PolicySettingsLogScrubbingPtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseLogScrubbingOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseLogScrubbingPtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigArrayOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigResponseOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointIPConfigurationOutput{})
	pulumi.RegisterOutputType(PrivateEndpointIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceTypeOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseArrayOutput{})
}
