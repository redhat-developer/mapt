// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a DNS security rule.
// Azure REST API version: 2023-07-01-preview.
type DnsSecurityRule struct {
	pulumi.CustomResourceState

	// The action to take on DNS requests that match the DNS security rule.
	Action DnsSecurityRuleActionResponseOutput `pulumi:"action"`
	// DNS resolver policy domains lists that the DNS security rule applies to.
	DnsResolverDomainLists SubResourceResponseArrayOutput `pulumi:"dnsResolverDomainLists"`
	// The state of DNS security rule.
	DnsSecurityRuleState pulumi.StringPtrOutput `pulumi:"dnsSecurityRuleState"`
	// ETag of the DNS security rule.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The priority of the DNS security rule.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The current provisioning state of the DNS security rule. This is a read-only property and any attempt to set this value will be ignored.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDnsSecurityRule registers a new resource with the given unique name, arguments, and options.
func NewDnsSecurityRule(ctx *pulumi.Context,
	name string, args *DnsSecurityRuleArgs, opts ...pulumi.ResourceOption) (*DnsSecurityRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.DnsResolverDomainLists == nil {
		return nil, errors.New("invalid value for required argument 'DnsResolverDomainLists'")
	}
	if args.DnsResolverPolicyName == nil {
		return nil, errors.New("invalid value for required argument 'DnsResolverPolicyName'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20230701preview:DnsSecurityRule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DnsSecurityRule
	err := ctx.RegisterResource("azure-native:network:DnsSecurityRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsSecurityRule gets an existing DnsSecurityRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsSecurityRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsSecurityRuleState, opts ...pulumi.ResourceOption) (*DnsSecurityRule, error) {
	var resource DnsSecurityRule
	err := ctx.ReadResource("azure-native:network:DnsSecurityRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsSecurityRule resources.
type dnsSecurityRuleState struct {
}

type DnsSecurityRuleState struct {
}

func (DnsSecurityRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsSecurityRuleState)(nil)).Elem()
}

type dnsSecurityRuleArgs struct {
	// The action to take on DNS requests that match the DNS security rule.
	Action DnsSecurityRuleAction `pulumi:"action"`
	// DNS resolver policy domains lists that the DNS security rule applies to.
	DnsResolverDomainLists []SubResource `pulumi:"dnsResolverDomainLists"`
	// The name of the DNS resolver policy.
	DnsResolverPolicyName string `pulumi:"dnsResolverPolicyName"`
	// The name of the DNS security rule.
	DnsSecurityRuleName *string `pulumi:"dnsSecurityRuleName"`
	// The state of DNS security rule.
	DnsSecurityRuleState *string `pulumi:"dnsSecurityRuleState"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The priority of the DNS security rule.
	Priority int `pulumi:"priority"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DnsSecurityRule resource.
type DnsSecurityRuleArgs struct {
	// The action to take on DNS requests that match the DNS security rule.
	Action DnsSecurityRuleActionInput
	// DNS resolver policy domains lists that the DNS security rule applies to.
	DnsResolverDomainLists SubResourceArrayInput
	// The name of the DNS resolver policy.
	DnsResolverPolicyName pulumi.StringInput
	// The name of the DNS security rule.
	DnsSecurityRuleName pulumi.StringPtrInput
	// The state of DNS security rule.
	DnsSecurityRuleState pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The priority of the DNS security rule.
	Priority pulumi.IntInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (DnsSecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsSecurityRuleArgs)(nil)).Elem()
}

type DnsSecurityRuleInput interface {
	pulumi.Input

	ToDnsSecurityRuleOutput() DnsSecurityRuleOutput
	ToDnsSecurityRuleOutputWithContext(ctx context.Context) DnsSecurityRuleOutput
}

func (*DnsSecurityRule) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSecurityRule)(nil)).Elem()
}

func (i *DnsSecurityRule) ToDnsSecurityRuleOutput() DnsSecurityRuleOutput {
	return i.ToDnsSecurityRuleOutputWithContext(context.Background())
}

func (i *DnsSecurityRule) ToDnsSecurityRuleOutputWithContext(ctx context.Context) DnsSecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSecurityRuleOutput)
}

type DnsSecurityRuleOutput struct{ *pulumi.OutputState }

func (DnsSecurityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSecurityRule)(nil)).Elem()
}

func (o DnsSecurityRuleOutput) ToDnsSecurityRuleOutput() DnsSecurityRuleOutput {
	return o
}

func (o DnsSecurityRuleOutput) ToDnsSecurityRuleOutputWithContext(ctx context.Context) DnsSecurityRuleOutput {
	return o
}

// The action to take on DNS requests that match the DNS security rule.
func (o DnsSecurityRuleOutput) Action() DnsSecurityRuleActionResponseOutput {
	return o.ApplyT(func(v *DnsSecurityRule) DnsSecurityRuleActionResponseOutput { return v.Action }).(DnsSecurityRuleActionResponseOutput)
}

// DNS resolver policy domains lists that the DNS security rule applies to.
func (o DnsSecurityRuleOutput) DnsResolverDomainLists() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *DnsSecurityRule) SubResourceResponseArrayOutput { return v.DnsResolverDomainLists }).(SubResourceResponseArrayOutput)
}

// The state of DNS security rule.
func (o DnsSecurityRuleOutput) DnsSecurityRuleState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.StringPtrOutput { return v.DnsSecurityRuleState }).(pulumi.StringPtrOutput)
}

// ETag of the DNS security rule.
func (o DnsSecurityRuleOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o DnsSecurityRuleOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o DnsSecurityRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The priority of the DNS security rule.
func (o DnsSecurityRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The current provisioning state of the DNS security rule. This is a read-only property and any attempt to set this value will be ignored.
func (o DnsSecurityRuleOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DnsSecurityRuleOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DnsSecurityRule) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o DnsSecurityRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DnsSecurityRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsSecurityRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DnsSecurityRuleOutput{})
}
