// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a draft Firewall Policy.
// Azure REST API version: 2023-11-01.
func LookupFirewallPolicyDraft(ctx *pulumi.Context, args *LookupFirewallPolicyDraftArgs, opts ...pulumi.InvokeOption) (*LookupFirewallPolicyDraftResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupFirewallPolicyDraftResult
	err := ctx.Invoke("azure-native:network:getFirewallPolicyDraft", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFirewallPolicyDraftArgs struct {
	// The name of the Firewall Policy.
	FirewallPolicyName string `pulumi:"firewallPolicyName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// FirewallPolicy Resource.
type LookupFirewallPolicyDraftResult struct {
	// The parent firewall policy from which rules are inherited.
	BasePolicy *SubResourceResponse `pulumi:"basePolicy"`
	// DNS Proxy Settings definition.
	DnsSettings *DnsSettingsResponse `pulumi:"dnsSettings"`
	// Explicit Proxy Settings definition.
	ExplicitProxy *ExplicitProxyResponse `pulumi:"explicitProxy"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Insights on Firewall Policy.
	Insights *FirewallPolicyInsightsResponse `pulumi:"insights"`
	// The configuration for Intrusion detection.
	IntrusionDetection *FirewallPolicyIntrusionDetectionResponse `pulumi:"intrusionDetection"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The private IP addresses/IP ranges to which traffic will not be SNAT.
	Snat *FirewallPolicySNATResponse `pulumi:"snat"`
	// SQL Settings definition.
	Sql *FirewallPolicySQLResponse `pulumi:"sql"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The operation mode for Threat Intelligence.
	ThreatIntelMode *string `pulumi:"threatIntelMode"`
	// ThreatIntel Whitelist for Firewall Policy.
	ThreatIntelWhitelist *FirewallPolicyThreatIntelWhitelistResponse `pulumi:"threatIntelWhitelist"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupFirewallPolicyDraftOutput(ctx *pulumi.Context, args LookupFirewallPolicyDraftOutputArgs, opts ...pulumi.InvokeOption) LookupFirewallPolicyDraftResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFirewallPolicyDraftResult, error) {
			args := v.(LookupFirewallPolicyDraftArgs)
			r, err := LookupFirewallPolicyDraft(ctx, &args, opts...)
			var s LookupFirewallPolicyDraftResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFirewallPolicyDraftResultOutput)
}

type LookupFirewallPolicyDraftOutputArgs struct {
	// The name of the Firewall Policy.
	FirewallPolicyName pulumi.StringInput `pulumi:"firewallPolicyName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFirewallPolicyDraftOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallPolicyDraftArgs)(nil)).Elem()
}

// FirewallPolicy Resource.
type LookupFirewallPolicyDraftResultOutput struct{ *pulumi.OutputState }

func (LookupFirewallPolicyDraftResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallPolicyDraftResult)(nil)).Elem()
}

func (o LookupFirewallPolicyDraftResultOutput) ToLookupFirewallPolicyDraftResultOutput() LookupFirewallPolicyDraftResultOutput {
	return o
}

func (o LookupFirewallPolicyDraftResultOutput) ToLookupFirewallPolicyDraftResultOutputWithContext(ctx context.Context) LookupFirewallPolicyDraftResultOutput {
	return o
}

// The parent firewall policy from which rules are inherited.
func (o LookupFirewallPolicyDraftResultOutput) BasePolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *SubResourceResponse { return v.BasePolicy }).(SubResourceResponsePtrOutput)
}

// DNS Proxy Settings definition.
func (o LookupFirewallPolicyDraftResultOutput) DnsSettings() DnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *DnsSettingsResponse { return v.DnsSettings }).(DnsSettingsResponsePtrOutput)
}

// Explicit Proxy Settings definition.
func (o LookupFirewallPolicyDraftResultOutput) ExplicitProxy() ExplicitProxyResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *ExplicitProxyResponse { return v.ExplicitProxy }).(ExplicitProxyResponsePtrOutput)
}

// Resource ID.
func (o LookupFirewallPolicyDraftResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Insights on Firewall Policy.
func (o LookupFirewallPolicyDraftResultOutput) Insights() FirewallPolicyInsightsResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *FirewallPolicyInsightsResponse { return v.Insights }).(FirewallPolicyInsightsResponsePtrOutput)
}

// The configuration for Intrusion detection.
func (o LookupFirewallPolicyDraftResultOutput) IntrusionDetection() FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *FirewallPolicyIntrusionDetectionResponse {
		return v.IntrusionDetection
	}).(FirewallPolicyIntrusionDetectionResponsePtrOutput)
}

// Resource location.
func (o LookupFirewallPolicyDraftResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LookupFirewallPolicyDraftResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) string { return v.Name }).(pulumi.StringOutput)
}

// The private IP addresses/IP ranges to which traffic will not be SNAT.
func (o LookupFirewallPolicyDraftResultOutput) Snat() FirewallPolicySNATResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *FirewallPolicySNATResponse { return v.Snat }).(FirewallPolicySNATResponsePtrOutput)
}

// SQL Settings definition.
func (o LookupFirewallPolicyDraftResultOutput) Sql() FirewallPolicySQLResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *FirewallPolicySQLResponse { return v.Sql }).(FirewallPolicySQLResponsePtrOutput)
}

// Resource tags.
func (o LookupFirewallPolicyDraftResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The operation mode for Threat Intelligence.
func (o LookupFirewallPolicyDraftResultOutput) ThreatIntelMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *string { return v.ThreatIntelMode }).(pulumi.StringPtrOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
func (o LookupFirewallPolicyDraftResultOutput) ThreatIntelWhitelist() FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) *FirewallPolicyThreatIntelWhitelistResponse {
		return v.ThreatIntelWhitelist
	}).(FirewallPolicyThreatIntelWhitelistResponsePtrOutput)
}

// Resource type.
func (o LookupFirewallPolicyDraftResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallPolicyDraftResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirewallPolicyDraftResultOutput{})
}
