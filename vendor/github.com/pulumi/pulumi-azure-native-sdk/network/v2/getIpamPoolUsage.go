// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IpamPool usage information.
//
// Uses Azure REST API version 2024-01-01-preview.
//
// Other available API versions: 2024-05-01.
func GetIpamPoolUsage(ctx *pulumi.Context, args *GetIpamPoolUsageArgs, opts ...pulumi.InvokeOption) (*GetIpamPoolUsageResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetIpamPoolUsageResult
	err := ctx.Invoke("azure-native:network:getIpamPoolUsage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetIpamPoolUsageArgs struct {
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// Pool resource name.
	PoolName string `pulumi:"poolName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// IpamPool usage information.
type GetIpamPoolUsageResult struct {
	// List of IP address prefixes of the resource.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// List of assigned IP address prefixes.
	AllocatedAddressPrefixes []string `pulumi:"allocatedAddressPrefixes"`
	// List of available IP address prefixes.
	AvailableAddressPrefixes []string `pulumi:"availableAddressPrefixes"`
	// List of IpamPool that are children of this IpamPool.
	ChildPools []ResourceBasicsResponse `pulumi:"childPools"`
	// Total number of assigned IP addresses in the IpamPool.
	NumberOfAllocatedIPAddresses string `pulumi:"numberOfAllocatedIPAddresses"`
	// Total number of available IP addresses in the IpamPool.
	NumberOfAvailableIPAddresses string `pulumi:"numberOfAvailableIPAddresses"`
	// Total number of reserved IP addresses in the IpamPool.
	NumberOfReservedIPAddresses string `pulumi:"numberOfReservedIPAddresses"`
	// List of reserved IP address prefixes. These IP addresses could be reclaimed if not assigned in the given time.
	ReservedAddressPrefixes []string `pulumi:"reservedAddressPrefixes"`
	// Total number of IP addresses managed in the IpamPool.
	TotalNumberOfIPAddresses string `pulumi:"totalNumberOfIPAddresses"`
}

func GetIpamPoolUsageOutput(ctx *pulumi.Context, args GetIpamPoolUsageOutputArgs, opts ...pulumi.InvokeOption) GetIpamPoolUsageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpamPoolUsageResultOutput, error) {
			args := v.(GetIpamPoolUsageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getIpamPoolUsage", args, GetIpamPoolUsageResultOutput{}, options).(GetIpamPoolUsageResultOutput), nil
		}).(GetIpamPoolUsageResultOutput)
}

type GetIpamPoolUsageOutputArgs struct {
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// Pool resource name.
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetIpamPoolUsageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamPoolUsageArgs)(nil)).Elem()
}

// IpamPool usage information.
type GetIpamPoolUsageResultOutput struct{ *pulumi.OutputState }

func (GetIpamPoolUsageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamPoolUsageResult)(nil)).Elem()
}

func (o GetIpamPoolUsageResultOutput) ToGetIpamPoolUsageResultOutput() GetIpamPoolUsageResultOutput {
	return o
}

func (o GetIpamPoolUsageResultOutput) ToGetIpamPoolUsageResultOutputWithContext(ctx context.Context) GetIpamPoolUsageResultOutput {
	return o
}

// List of IP address prefixes of the resource.
func (o GetIpamPoolUsageResultOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// List of assigned IP address prefixes.
func (o GetIpamPoolUsageResultOutput) AllocatedAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) []string { return v.AllocatedAddressPrefixes }).(pulumi.StringArrayOutput)
}

// List of available IP address prefixes.
func (o GetIpamPoolUsageResultOutput) AvailableAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) []string { return v.AvailableAddressPrefixes }).(pulumi.StringArrayOutput)
}

// List of IpamPool that are children of this IpamPool.
func (o GetIpamPoolUsageResultOutput) ChildPools() ResourceBasicsResponseArrayOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) []ResourceBasicsResponse { return v.ChildPools }).(ResourceBasicsResponseArrayOutput)
}

// Total number of assigned IP addresses in the IpamPool.
func (o GetIpamPoolUsageResultOutput) NumberOfAllocatedIPAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) string { return v.NumberOfAllocatedIPAddresses }).(pulumi.StringOutput)
}

// Total number of available IP addresses in the IpamPool.
func (o GetIpamPoolUsageResultOutput) NumberOfAvailableIPAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) string { return v.NumberOfAvailableIPAddresses }).(pulumi.StringOutput)
}

// Total number of reserved IP addresses in the IpamPool.
func (o GetIpamPoolUsageResultOutput) NumberOfReservedIPAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) string { return v.NumberOfReservedIPAddresses }).(pulumi.StringOutput)
}

// List of reserved IP address prefixes. These IP addresses could be reclaimed if not assigned in the given time.
func (o GetIpamPoolUsageResultOutput) ReservedAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) []string { return v.ReservedAddressPrefixes }).(pulumi.StringArrayOutput)
}

// Total number of IP addresses managed in the IpamPool.
func (o GetIpamPoolUsageResultOutput) TotalNumberOfIPAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamPoolUsageResult) string { return v.TotalNumberOfIPAddresses }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpamPoolUsageResultOutput{})
}
