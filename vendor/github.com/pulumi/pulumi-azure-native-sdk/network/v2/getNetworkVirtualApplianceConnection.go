// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the details of specified NVA connection.
//
// Uses Azure REST API version 2023-06-01.
//
// Other available API versions: 2023-09-01, 2023-11-01, 2024-01-01, 2024-03-01, 2024-05-01.
func LookupNetworkVirtualApplianceConnection(ctx *pulumi.Context, args *LookupNetworkVirtualApplianceConnectionArgs, opts ...pulumi.InvokeOption) (*LookupNetworkVirtualApplianceConnectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkVirtualApplianceConnectionResult
	err := ctx.Invoke("azure-native:network:getNetworkVirtualApplianceConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNetworkVirtualApplianceConnectionArgs struct {
	// The name of the NVA connection.
	ConnectionName string `pulumi:"connectionName"`
	// The name of the Network Virtual Appliance.
	NetworkVirtualApplianceName string `pulumi:"networkVirtualApplianceName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// NetworkVirtualApplianceConnection resource.
type LookupNetworkVirtualApplianceConnectionResult struct {
	// Network Virtual Appliance ASN.
	Asn *float64 `pulumi:"asn"`
	// List of bgpPeerAddresses for the NVA instances
	BgpPeerAddress []string `pulumi:"bgpPeerAddress"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the NetworkVirtualApplianceConnection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// Unique identifier for the connection.
	TunnelIdentifier *float64 `pulumi:"tunnelIdentifier"`
}

func LookupNetworkVirtualApplianceConnectionOutput(ctx *pulumi.Context, args LookupNetworkVirtualApplianceConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkVirtualApplianceConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkVirtualApplianceConnectionResultOutput, error) {
			args := v.(LookupNetworkVirtualApplianceConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getNetworkVirtualApplianceConnection", args, LookupNetworkVirtualApplianceConnectionResultOutput{}, options).(LookupNetworkVirtualApplianceConnectionResultOutput), nil
		}).(LookupNetworkVirtualApplianceConnectionResultOutput)
}

type LookupNetworkVirtualApplianceConnectionOutputArgs struct {
	// The name of the NVA connection.
	ConnectionName pulumi.StringInput `pulumi:"connectionName"`
	// The name of the Network Virtual Appliance.
	NetworkVirtualApplianceName pulumi.StringInput `pulumi:"networkVirtualApplianceName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNetworkVirtualApplianceConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkVirtualApplianceConnectionArgs)(nil)).Elem()
}

// NetworkVirtualApplianceConnection resource.
type LookupNetworkVirtualApplianceConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkVirtualApplianceConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkVirtualApplianceConnectionResult)(nil)).Elem()
}

func (o LookupNetworkVirtualApplianceConnectionResultOutput) ToLookupNetworkVirtualApplianceConnectionResultOutput() LookupNetworkVirtualApplianceConnectionResultOutput {
	return o
}

func (o LookupNetworkVirtualApplianceConnectionResultOutput) ToLookupNetworkVirtualApplianceConnectionResultOutputWithContext(ctx context.Context) LookupNetworkVirtualApplianceConnectionResultOutput {
	return o
}

// Network Virtual Appliance ASN.
func (o LookupNetworkVirtualApplianceConnectionResultOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// List of bgpPeerAddresses for the NVA instances
func (o LookupNetworkVirtualApplianceConnectionResultOutput) BgpPeerAddress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) []string { return v.BgpPeerAddress }).(pulumi.StringArrayOutput)
}

// Enable internet security.
func (o LookupNetworkVirtualApplianceConnectionResultOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o LookupNetworkVirtualApplianceConnectionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupNetworkVirtualApplianceConnectionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the NetworkVirtualApplianceConnection resource.
func (o LookupNetworkVirtualApplianceConnectionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o LookupNetworkVirtualApplianceConnectionResultOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) *RoutingConfigurationResponse {
		return v.RoutingConfiguration
	}).(RoutingConfigurationResponsePtrOutput)
}

// Unique identifier for the connection.
func (o LookupNetworkVirtualApplianceConnectionResultOutput) TunnelIdentifier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupNetworkVirtualApplianceConnectionResult) *float64 { return v.TunnelIdentifier }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkVirtualApplianceConnectionResultOutput{})
}
