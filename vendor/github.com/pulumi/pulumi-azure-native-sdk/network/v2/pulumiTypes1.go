// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of private link service ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for PrivateLinkServiceIpConfiguration
func (val *PrivateLinkServiceIpConfiguration) Defaults() *PrivateLinkServiceIpConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// PrivateLinkServiceIpConfigurationInput is an input type that accepts PrivateLinkServiceIpConfigurationArgs and PrivateLinkServiceIpConfigurationOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationInput` via:
//
//	PrivateLinkServiceIpConfigurationArgs{...}
type PrivateLinkServiceIpConfigurationInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput
	ToPrivateLinkServiceIpConfigurationOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationOutput
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of private link service ip configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for PrivateLinkServiceIpConfigurationArgs
func (val *PrivateLinkServiceIpConfigurationArgs) Defaults() *PrivateLinkServiceIpConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PrivateLinkServiceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationArgs) ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput {
	return i.ToPrivateLinkServiceIpConfigurationOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationArgs) ToPrivateLinkServiceIpConfigurationOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationOutput)
}

// PrivateLinkServiceIpConfigurationArrayInput is an input type that accepts PrivateLinkServiceIpConfigurationArray and PrivateLinkServiceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationArrayInput` via:
//
//	PrivateLinkServiceIpConfigurationArray{ PrivateLinkServiceIpConfigurationArgs{...} }
type PrivateLinkServiceIpConfigurationArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput
	ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationArrayOutput
}

type PrivateLinkServiceIpConfigurationArray []PrivateLinkServiceIpConfigurationInput

func (PrivateLinkServiceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationArray) ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput {
	return i.ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationArray) ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationArrayOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationOutput) ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationOutput) ToPrivateLinkServiceIpConfigurationOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationOutput {
	return o
}

// Resource ID.
func (o PrivateLinkServiceIpConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of private link service ip configuration.
func (o PrivateLinkServiceIpConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o PrivateLinkServiceIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the subnet resource.
func (o PrivateLinkServiceIpConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type PrivateLinkServiceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceIpConfiguration {
		return vs[0].([]PrivateLinkServiceIpConfiguration)[vs[1].(int)]
	}).(PrivateLinkServiceIpConfigurationOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of private link service ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the private link service IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// The resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PrivateLinkServiceIpConfigurationResponse
func (val *PrivateLinkServiceIpConfigurationResponse) Defaults() *PrivateLinkServiceIpConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationResponseOutput) ToPrivateLinkServiceIpConfigurationResponseOutput() PrivateLinkServiceIpConfigurationResponseOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseOutput) ToPrivateLinkServiceIpConfigurationResponseOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of private link service ip configuration.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private link service IP configuration resource.
func (o PrivateLinkServiceIpConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the subnet resource.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// The resource type.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateLinkServiceIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) ToPrivateLinkServiceIpConfigurationResponseArrayOutput() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) ToPrivateLinkServiceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceIpConfigurationResponse {
		return vs[0].([]PrivateLinkServiceIpConfigurationResponse)[vs[1].(int)]
	}).(PrivateLinkServiceIpConfigurationResponseOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApproval struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesAutoApprovalInput is an input type that accepts PrivateLinkServicePropertiesAutoApprovalArgs and PrivateLinkServicePropertiesAutoApprovalOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesAutoApprovalInput` via:
//
//	PrivateLinkServicePropertiesAutoApprovalArgs{...}
type PrivateLinkServicePropertiesAutoApprovalInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput
	ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(context.Context) PrivateLinkServicePropertiesAutoApprovalOutput
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApprovalArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesAutoApprovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalOutput)
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalOutput).ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesAutoApprovalPtrInput is an input type that accepts PrivateLinkServicePropertiesAutoApprovalArgs, PrivateLinkServicePropertiesAutoApprovalPtr and PrivateLinkServicePropertiesAutoApprovalPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesAutoApprovalPtrInput` via:
//
//	        PrivateLinkServicePropertiesAutoApprovalArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServicePropertiesAutoApprovalPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput
	ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput
}

type privateLinkServicePropertiesAutoApprovalPtrType PrivateLinkServicePropertiesAutoApprovalArgs

func PrivateLinkServicePropertiesAutoApprovalPtr(v *PrivateLinkServicePropertiesAutoApprovalArgs) PrivateLinkServicePropertiesAutoApprovalPtrInput {
	return (*privateLinkServicePropertiesAutoApprovalPtrType)(v)
}

func (*privateLinkServicePropertiesAutoApprovalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (i *privateLinkServicePropertiesAutoApprovalPtrType) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesAutoApprovalPtrType) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApprovalOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesAutoApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServicePropertiesAutoApproval) *PrivateLinkServicePropertiesAutoApproval {
		return &v
	}).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesAutoApprovalOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesAutoApproval) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesAutoApprovalPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesAutoApprovalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) Elem() PrivateLinkServicePropertiesAutoApprovalOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesAutoApproval) PrivateLinkServicePropertiesAutoApproval {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesAutoApproval
		return ret
	}).(PrivateLinkServicePropertiesAutoApprovalOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesAutoApproval) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesResponseAutoApproval struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesResponseAutoApprovalOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseAutoApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalOutput() PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseAutoApproval) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutput() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) Elem() PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseAutoApproval) PrivateLinkServicePropertiesResponseAutoApproval {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesResponseAutoApproval
		return ret
	}).(PrivateLinkServicePropertiesResponseAutoApprovalOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseAutoApproval) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesResponseVisibility struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesResponseVisibilityOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityOutput() PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseVisibilityOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseVisibility) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesResponseVisibilityPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutput() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) Elem() PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseVisibility) PrivateLinkServicePropertiesResponseVisibility {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesResponseVisibility
		return ret
	}).(PrivateLinkServicePropertiesResponseVisibilityOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseVisibility) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibility struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesVisibilityInput is an input type that accepts PrivateLinkServicePropertiesVisibilityArgs and PrivateLinkServicePropertiesVisibilityOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesVisibilityInput` via:
//
//	PrivateLinkServicePropertiesVisibilityArgs{...}
type PrivateLinkServicePropertiesVisibilityInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput
	ToPrivateLinkServicePropertiesVisibilityOutputWithContext(context.Context) PrivateLinkServicePropertiesVisibilityOutput
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibilityArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesVisibilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityOutput)
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityOutput).ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesVisibilityPtrInput is an input type that accepts PrivateLinkServicePropertiesVisibilityArgs, PrivateLinkServicePropertiesVisibilityPtr and PrivateLinkServicePropertiesVisibilityPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesVisibilityPtrInput` via:
//
//	        PrivateLinkServicePropertiesVisibilityArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServicePropertiesVisibilityPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput
	ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput
}

type privateLinkServicePropertiesVisibilityPtrType PrivateLinkServicePropertiesVisibilityArgs

func PrivateLinkServicePropertiesVisibilityPtr(v *PrivateLinkServicePropertiesVisibilityArgs) PrivateLinkServicePropertiesVisibilityPtrInput {
	return (*privateLinkServicePropertiesVisibilityPtrType)(v)
}

func (*privateLinkServicePropertiesVisibilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (i *privateLinkServicePropertiesVisibilityPtrType) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesVisibilityPtrType) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibilityOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServicePropertiesVisibility) *PrivateLinkServicePropertiesVisibility {
		return &v
	}).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesVisibilityOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesVisibility) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesVisibilityPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) Elem() PrivateLinkServicePropertiesVisibilityOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesVisibility) PrivateLinkServicePropertiesVisibility {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesVisibility
		return ret
	}).(PrivateLinkServicePropertiesVisibilityOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesVisibilityPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesVisibility) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// Private link service resource.
type PrivateLinkServiceResponse struct {
	// The alias of the private link service.
	Alias string `pulumi:"alias"`
	// The auto-approval list of the private link service.
	AutoApproval *PrivateLinkServicePropertiesResponseAutoApproval `pulumi:"autoApproval"`
	// Whether the private link service is enabled for proxy protocol or not.
	EnableProxyProtocol *bool `pulumi:"enableProxyProtocol"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the load balancer.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The list of Fqdn.
	Fqdns []string `pulumi:"fqdns"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of private link service IP configurations.
	IpConfigurations []PrivateLinkServiceIpConfigurationResponse `pulumi:"ipConfigurations"`
	// An array of references to the load balancer IP configurations.
	LoadBalancerFrontendIpConfigurations []FrontendIPConfigurationResponse `pulumi:"loadBalancerFrontendIpConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// An array of references to the network interfaces created for this private link service.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// An array of list about connections to the private endpoint.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// The provisioning state of the private link service resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The visibility list of the private link service.
	Visibility *PrivateLinkServicePropertiesResponseVisibility `pulumi:"visibility"`
}

// Private link service resource.
type PrivateLinkServiceResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceResponse)(nil)).Elem()
}

func (o PrivateLinkServiceResponseOutput) ToPrivateLinkServiceResponseOutput() PrivateLinkServiceResponseOutput {
	return o
}

func (o PrivateLinkServiceResponseOutput) ToPrivateLinkServiceResponseOutputWithContext(ctx context.Context) PrivateLinkServiceResponseOutput {
	return o
}

// The alias of the private link service.
func (o PrivateLinkServiceResponseOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Alias }).(pulumi.StringOutput)
}

// The auto-approval list of the private link service.
func (o PrivateLinkServiceResponseOutput) AutoApproval() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseAutoApproval {
		return v.AutoApproval
	}).(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput)
}

// Whether the private link service is enabled for proxy protocol or not.
func (o PrivateLinkServiceResponseOutput) EnableProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *bool { return v.EnableProxyProtocol }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the load balancer.
func (o PrivateLinkServiceResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The list of Fqdn.
func (o PrivateLinkServiceResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of private link service IP configurations.
func (o PrivateLinkServiceResponseOutput) IpConfigurations() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []PrivateLinkServiceIpConfigurationResponse {
		return v.IpConfigurations
	}).(PrivateLinkServiceIpConfigurationResponseArrayOutput)
}

// An array of references to the load balancer IP configurations.
func (o PrivateLinkServiceResponseOutput) LoadBalancerFrontendIpConfigurations() FrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []FrontendIPConfigurationResponse {
		return v.LoadBalancerFrontendIpConfigurations
	}).(FrontendIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o PrivateLinkServiceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PrivateLinkServiceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// An array of references to the network interfaces created for this private link service.
func (o PrivateLinkServiceResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// An array of list about connections to the private endpoint.
func (o PrivateLinkServiceResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The provisioning state of the private link service resource.
func (o PrivateLinkServiceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource tags.
func (o PrivateLinkServiceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateLinkServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The visibility list of the private link service.
func (o PrivateLinkServiceResponseOutput) Visibility() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseVisibility {
		return v.Visibility
	}).(PrivateLinkServicePropertiesResponseVisibilityPtrOutput)
}

type PrivateLinkServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceResponse)(nil)).Elem()
}

func (o PrivateLinkServiceResponsePtrOutput) ToPrivateLinkServiceResponsePtrOutput() PrivateLinkServiceResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceResponsePtrOutput) ToPrivateLinkServiceResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceResponsePtrOutput) Elem() PrivateLinkServiceResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) PrivateLinkServiceResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceResponse
		return ret
	}).(PrivateLinkServiceResponseOutput)
}

// The alias of the private link service.
func (o PrivateLinkServiceResponsePtrOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Alias
	}).(pulumi.StringPtrOutput)
}

// The auto-approval list of the private link service.
func (o PrivateLinkServiceResponsePtrOutput) AutoApproval() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseAutoApproval {
		if v == nil {
			return nil
		}
		return v.AutoApproval
	}).(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput)
}

// Whether the private link service is enabled for proxy protocol or not.
func (o PrivateLinkServiceResponsePtrOutput) EnableProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProxyProtocol
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of the load balancer.
func (o PrivateLinkServiceResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The list of Fqdn.
func (o PrivateLinkServiceResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of private link service IP configurations.
func (o PrivateLinkServiceResponsePtrOutput) IpConfigurations() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []PrivateLinkServiceIpConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(PrivateLinkServiceIpConfigurationResponseArrayOutput)
}

// An array of references to the load balancer IP configurations.
func (o PrivateLinkServiceResponsePtrOutput) LoadBalancerFrontendIpConfigurations() FrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerFrontendIpConfigurations
	}).(FrontendIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o PrivateLinkServiceResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PrivateLinkServiceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// An array of references to the network interfaces created for this private link service.
func (o PrivateLinkServiceResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// An array of list about connections to the private endpoint.
func (o PrivateLinkServiceResponsePtrOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []PrivateEndpointConnectionResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The provisioning state of the private link service resource.
func (o PrivateLinkServiceResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PrivateLinkServiceResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateLinkServiceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The visibility list of the private link service.
func (o PrivateLinkServiceResponsePtrOutput) Visibility() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(PrivateLinkServicePropertiesResponseVisibilityPtrOutput)
}

// A load balancer probe.
type Probe struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.
	ProbeThreshold *int `pulumi:"probeThreshold"`
	// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbeInput is an input type that accepts ProbeArgs and ProbeOutput values.
// You can construct a concrete instance of `ProbeInput` via:
//
//	ProbeArgs{...}
type ProbeInput interface {
	pulumi.Input

	ToProbeOutput() ProbeOutput
	ToProbeOutputWithContext(context.Context) ProbeOutput
}

// A load balancer probe.
type ProbeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.
	ProbeThreshold pulumi.IntPtrInput `pulumi:"probeThreshold"`
	// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (i ProbeArgs) ToProbeOutput() ProbeOutput {
	return i.ToProbeOutputWithContext(context.Background())
}

func (i ProbeArgs) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeOutput)
}

// ProbeArrayInput is an input type that accepts ProbeArray and ProbeArrayOutput values.
// You can construct a concrete instance of `ProbeArrayInput` via:
//
//	ProbeArray{ ProbeArgs{...} }
type ProbeArrayInput interface {
	pulumi.Input

	ToProbeArrayOutput() ProbeArrayOutput
	ToProbeArrayOutputWithContext(context.Context) ProbeArrayOutput
}

type ProbeArray []ProbeInput

func (ProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (i ProbeArray) ToProbeArrayOutput() ProbeArrayOutput {
	return i.ToProbeArrayOutputWithContext(context.Background())
}

func (i ProbeArray) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeArrayOutput)
}

// A load balancer probe.
type ProbeOutput struct{ *pulumi.OutputState }

func (ProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (o ProbeOutput) ToProbeOutput() ProbeOutput {
	return o
}

func (o ProbeOutput) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return o
}

// Resource ID.
func (o ProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
func (o ProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Probe) int { return v.Port }).(pulumi.IntOutput)
}

// The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.
func (o ProbeOutput) ProbeThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.ProbeThreshold }).(pulumi.IntPtrOutput)
}

// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v Probe) string { return v.Protocol }).(pulumi.StringOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbeArrayOutput struct{ *pulumi.OutputState }

func (ProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (o ProbeArrayOutput) ToProbeArrayOutput() ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) Index(i pulumi.IntInput) ProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Probe {
		return vs[0].([]Probe)[vs[1].(int)]
	}).(ProbeOutput)
}

// A load balancer probe.
type ProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.
	ProbeThreshold *int `pulumi:"probeThreshold"`
	// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the probe resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// A load balancer probe.
type ProbeResponseOutput struct{ *pulumi.OutputState }

func (ProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseOutput) ToProbeResponseOutput() ProbeResponseOutput {
	return o
}

func (o ProbeResponseOutput) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbeResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ProbeResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
func (o ProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeResponseOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ProbeResponse) int { return v.Port }).(pulumi.IntOutput)
}

// The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.
func (o ProbeResponseOutput) ProbeThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.ProbeThreshold }).(pulumi.IntPtrOutput)
}

// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the probe resource.
func (o ProbeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeResponseOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ProbeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) Index(i pulumi.IntInput) ProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProbeResponse {
		return vs[0].([]ProbeResponse)[vs[1].(int)]
	}).(ProbeResponseOutput)
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTable struct {
	// The list of resource ids of all the RouteTables.
	Ids []SubResource `pulumi:"ids"`
	// The list of labels.
	Labels []string `pulumi:"labels"`
}

// PropagatedRouteTableInput is an input type that accepts PropagatedRouteTableArgs and PropagatedRouteTableOutput values.
// You can construct a concrete instance of `PropagatedRouteTableInput` via:
//
//	PropagatedRouteTableArgs{...}
type PropagatedRouteTableInput interface {
	pulumi.Input

	ToPropagatedRouteTableOutput() PropagatedRouteTableOutput
	ToPropagatedRouteTableOutputWithContext(context.Context) PropagatedRouteTableOutput
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableArgs struct {
	// The list of resource ids of all the RouteTables.
	Ids SubResourceArrayInput `pulumi:"ids"`
	// The list of labels.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
}

func (PropagatedRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropagatedRouteTable)(nil)).Elem()
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTableOutput() PropagatedRouteTableOutput {
	return i.ToPropagatedRouteTableOutputWithContext(context.Background())
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTableOutputWithContext(ctx context.Context) PropagatedRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTableOutput)
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return i.ToPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTableOutput).ToPropagatedRouteTablePtrOutputWithContext(ctx)
}

// PropagatedRouteTablePtrInput is an input type that accepts PropagatedRouteTableArgs, PropagatedRouteTablePtr and PropagatedRouteTablePtrOutput values.
// You can construct a concrete instance of `PropagatedRouteTablePtrInput` via:
//
//	        PropagatedRouteTableArgs{...}
//
//	or:
//
//	        nil
type PropagatedRouteTablePtrInput interface {
	pulumi.Input

	ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput
	ToPropagatedRouteTablePtrOutputWithContext(context.Context) PropagatedRouteTablePtrOutput
}

type propagatedRouteTablePtrType PropagatedRouteTableArgs

func PropagatedRouteTablePtr(v *PropagatedRouteTableArgs) PropagatedRouteTablePtrInput {
	return (*propagatedRouteTablePtrType)(v)
}

func (*propagatedRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropagatedRouteTable)(nil)).Elem()
}

func (i *propagatedRouteTablePtrType) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return i.ToPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i *propagatedRouteTablePtrType) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTablePtrOutput)
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropagatedRouteTable)(nil)).Elem()
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTableOutput() PropagatedRouteTableOutput {
	return o
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTableOutputWithContext(ctx context.Context) PropagatedRouteTableOutput {
	return o
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return o.ToPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropagatedRouteTable) *PropagatedRouteTable {
		return &v
	}).(PropagatedRouteTablePtrOutput)
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTableOutput) Ids() SubResourceArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTable) []SubResource { return v.Ids }).(SubResourceArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTableOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTable) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

type PropagatedRouteTablePtrOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropagatedRouteTable)(nil)).Elem()
}

func (o PropagatedRouteTablePtrOutput) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return o
}

func (o PropagatedRouteTablePtrOutput) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return o
}

func (o PropagatedRouteTablePtrOutput) Elem() PropagatedRouteTableOutput {
	return o.ApplyT(func(v *PropagatedRouteTable) PropagatedRouteTable {
		if v != nil {
			return *v
		}
		var ret PropagatedRouteTable
		return ret
	}).(PropagatedRouteTableOutput)
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTablePtrOutput) Ids() SubResourceArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTable) []SubResource {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(SubResourceArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTablePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableResponse struct {
	// The list of resource ids of all the RouteTables.
	Ids []SubResourceResponse `pulumi:"ids"`
	// The list of labels.
	Labels []string `pulumi:"labels"`
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableResponseOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropagatedRouteTableResponse)(nil)).Elem()
}

func (o PropagatedRouteTableResponseOutput) ToPropagatedRouteTableResponseOutput() PropagatedRouteTableResponseOutput {
	return o
}

func (o PropagatedRouteTableResponseOutput) ToPropagatedRouteTableResponseOutputWithContext(ctx context.Context) PropagatedRouteTableResponseOutput {
	return o
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTableResponseOutput) Ids() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTableResponse) []SubResourceResponse { return v.Ids }).(SubResourceResponseArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTableResponseOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTableResponse) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

type PropagatedRouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropagatedRouteTableResponse)(nil)).Elem()
}

func (o PropagatedRouteTableResponsePtrOutput) ToPropagatedRouteTableResponsePtrOutput() PropagatedRouteTableResponsePtrOutput {
	return o
}

func (o PropagatedRouteTableResponsePtrOutput) ToPropagatedRouteTableResponsePtrOutputWithContext(ctx context.Context) PropagatedRouteTableResponsePtrOutput {
	return o
}

func (o PropagatedRouteTableResponsePtrOutput) Elem() PropagatedRouteTableResponseOutput {
	return o.ApplyT(func(v *PropagatedRouteTableResponse) PropagatedRouteTableResponse {
		if v != nil {
			return *v
		}
		var ret PropagatedRouteTableResponse
		return ret
	}).(PropagatedRouteTableResponseOutput)
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTableResponsePtrOutput) Ids() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTableResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(SubResourceResponseArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTableResponsePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTableResponse) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// A PTR record.
type PtrRecord struct {
	// The PTR target domain name for this PTR record.
	Ptrdname *string `pulumi:"ptrdname"`
}

// PtrRecordInput is an input type that accepts PtrRecordArgs and PtrRecordOutput values.
// You can construct a concrete instance of `PtrRecordInput` via:
//
//	PtrRecordArgs{...}
type PtrRecordInput interface {
	pulumi.Input

	ToPtrRecordOutput() PtrRecordOutput
	ToPtrRecordOutputWithContext(context.Context) PtrRecordOutput
}

// A PTR record.
type PtrRecordArgs struct {
	// The PTR target domain name for this PTR record.
	Ptrdname pulumi.StringPtrInput `pulumi:"ptrdname"`
}

func (PtrRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecord)(nil)).Elem()
}

func (i PtrRecordArgs) ToPtrRecordOutput() PtrRecordOutput {
	return i.ToPtrRecordOutputWithContext(context.Background())
}

func (i PtrRecordArgs) ToPtrRecordOutputWithContext(ctx context.Context) PtrRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordOutput)
}

// PtrRecordArrayInput is an input type that accepts PtrRecordArray and PtrRecordArrayOutput values.
// You can construct a concrete instance of `PtrRecordArrayInput` via:
//
//	PtrRecordArray{ PtrRecordArgs{...} }
type PtrRecordArrayInput interface {
	pulumi.Input

	ToPtrRecordArrayOutput() PtrRecordArrayOutput
	ToPtrRecordArrayOutputWithContext(context.Context) PtrRecordArrayOutput
}

type PtrRecordArray []PtrRecordInput

func (PtrRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecord)(nil)).Elem()
}

func (i PtrRecordArray) ToPtrRecordArrayOutput() PtrRecordArrayOutput {
	return i.ToPtrRecordArrayOutputWithContext(context.Background())
}

func (i PtrRecordArray) ToPtrRecordArrayOutputWithContext(ctx context.Context) PtrRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordArrayOutput)
}

// A PTR record.
type PtrRecordOutput struct{ *pulumi.OutputState }

func (PtrRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecord)(nil)).Elem()
}

func (o PtrRecordOutput) ToPtrRecordOutput() PtrRecordOutput {
	return o
}

func (o PtrRecordOutput) ToPtrRecordOutputWithContext(ctx context.Context) PtrRecordOutput {
	return o
}

// The PTR target domain name for this PTR record.
func (o PtrRecordOutput) Ptrdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtrRecord) *string { return v.Ptrdname }).(pulumi.StringPtrOutput)
}

type PtrRecordArrayOutput struct{ *pulumi.OutputState }

func (PtrRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecord)(nil)).Elem()
}

func (o PtrRecordArrayOutput) ToPtrRecordArrayOutput() PtrRecordArrayOutput {
	return o
}

func (o PtrRecordArrayOutput) ToPtrRecordArrayOutputWithContext(ctx context.Context) PtrRecordArrayOutput {
	return o
}

func (o PtrRecordArrayOutput) Index(i pulumi.IntInput) PtrRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PtrRecord {
		return vs[0].([]PtrRecord)[vs[1].(int)]
	}).(PtrRecordOutput)
}

// A PTR record.
type PtrRecordResponse struct {
	// The PTR target domain name for this PTR record.
	Ptrdname *string `pulumi:"ptrdname"`
}

// A PTR record.
type PtrRecordResponseOutput struct{ *pulumi.OutputState }

func (PtrRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecordResponse)(nil)).Elem()
}

func (o PtrRecordResponseOutput) ToPtrRecordResponseOutput() PtrRecordResponseOutput {
	return o
}

func (o PtrRecordResponseOutput) ToPtrRecordResponseOutputWithContext(ctx context.Context) PtrRecordResponseOutput {
	return o
}

// The PTR target domain name for this PTR record.
func (o PtrRecordResponseOutput) Ptrdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtrRecordResponse) *string { return v.Ptrdname }).(pulumi.StringPtrOutput)
}

type PtrRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (PtrRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecordResponse)(nil)).Elem()
}

func (o PtrRecordResponseArrayOutput) ToPtrRecordResponseArrayOutput() PtrRecordResponseArrayOutput {
	return o
}

func (o PtrRecordResponseArrayOutput) ToPtrRecordResponseArrayOutputWithContext(ctx context.Context) PtrRecordResponseArrayOutput {
	return o
}

func (o PtrRecordResponseArrayOutput) Index(i pulumi.IntInput) PtrRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PtrRecordResponse {
		return vs[0].([]PtrRecordResponse)[vs[1].(int)]
	}).(PtrRecordResponseOutput)
}

// Public IP address resource.
type PublicIPAddressType struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettings `pulumi:"ddosSettings"`
	// Specify what happens to the public IP address when the VM using it is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings `pulumi:"dnsSettings"`
	// The extended location of the public ip address.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags []IpTag `pulumi:"ipTags"`
	// The linked public IP address of the public IP address resource.
	LinkedPublicIPAddress *PublicIPAddressType `pulumi:"linkedPublicIPAddress"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Migration phase of Public IP Address.
	MigrationPhase *string `pulumi:"migrationPhase"`
	// The NatGateway for the Public IP address.
	NatGateway *NatGatewayType `pulumi:"natGateway"`
	// The public IP address version.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The service public IP address of the public IP address resource.
	ServicePublicIPAddress *PublicIPAddressType `pulumi:"servicePublicIPAddress"`
	// The public IP address SKU.
	Sku *PublicIPAddressSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressTypeInput is an input type that accepts PublicIPAddressTypeArgs and PublicIPAddressTypeOutput values.
// You can construct a concrete instance of `PublicIPAddressTypeInput` via:
//
//	PublicIPAddressTypeArgs{...}
type PublicIPAddressTypeInput interface {
	pulumi.Input

	ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput
	ToPublicIPAddressTypeOutputWithContext(context.Context) PublicIPAddressTypeOutput
}

// Public IP address resource.
type PublicIPAddressTypeArgs struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings DdosSettingsPtrInput `pulumi:"ddosSettings"`
	// Specify what happens to the public IP address when the VM using it is deleted
	DeleteOption pulumi.StringPtrInput `pulumi:"deleteOption"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// The extended location of the public ip address.
	ExtendedLocation ExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags IpTagArrayInput `pulumi:"ipTags"`
	// The linked public IP address of the public IP address resource.
	LinkedPublicIPAddress PublicIPAddressTypePtrInput `pulumi:"linkedPublicIPAddress"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Migration phase of Public IP Address.
	MigrationPhase pulumi.StringPtrInput `pulumi:"migrationPhase"`
	// The NatGateway for the Public IP address.
	NatGateway NatGatewayTypePtrInput `pulumi:"natGateway"`
	// The public IP address version.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The service public IP address of the public IP address resource.
	ServicePublicIPAddress PublicIPAddressTypePtrInput `pulumi:"servicePublicIPAddress"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return i.ToPublicIPAddressTypeOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput)
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput).ToPublicIPAddressTypePtrOutputWithContext(ctx)
}

// PublicIPAddressTypePtrInput is an input type that accepts PublicIPAddressTypeArgs, PublicIPAddressTypePtr and PublicIPAddressTypePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressTypePtrInput` via:
//
//	        PublicIPAddressTypeArgs{...}
//
//	or:
//
//	        nil
type PublicIPAddressTypePtrInput interface {
	pulumi.Input

	ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput
	ToPublicIPAddressTypePtrOutputWithContext(context.Context) PublicIPAddressTypePtrOutput
}

type publicIPAddressTypePtrType PublicIPAddressTypeArgs

func PublicIPAddressTypePtr(v *PublicIPAddressTypeArgs) PublicIPAddressTypePtrInput {
	return (*publicIPAddressTypePtrType)(v)
}

func (*publicIPAddressTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypePtrOutput)
}

// Public IP address resource.
type PublicIPAddressTypeOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressType) *PublicIPAddressType {
		return &v
	}).(PublicIPAddressTypePtrOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressTypeOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *DdosSettings { return v.DdosSettings }).(DdosSettingsPtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressTypeOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypeOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressDnsSettings { return v.DnsSettings }).(PublicIPAddressDnsSettingsPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressTypeOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *ExtendedLocation { return v.ExtendedLocation }).(ExtendedLocationPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressTypeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressTypeOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v PublicIPAddressType) []IpTag { return v.IpTags }).(IpTagArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressTypeOutput) LinkedPublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressType { return v.LinkedPublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// Resource location.
func (o PublicIPAddressTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressTypeOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.MigrationPhase }).(pulumi.StringPtrOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressTypeOutput) NatGateway() NatGatewayTypePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *NatGatewayType { return v.NatGateway }).(NatGatewayTypePtrOutput)
}

// The public IP address version.
func (o PublicIPAddressTypeOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressTypeOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressTypeOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressTypeOutput) ServicePublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressType { return v.ServicePublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypeOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressSku { return v.Sku }).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressType) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressTypePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) Elem() PublicIPAddressTypeOutput {
	return o.ApplyT(func(v *PublicIPAddressType) PublicIPAddressType {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressType
		return ret
	}).(PublicIPAddressTypeOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *DdosSettings {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsPtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressTypePtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressTypePtrOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressTypePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressType) []IpTag {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressTypePtrOutput) LinkedPublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.LinkedPublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// Resource location.
func (o PublicIPAddressTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressTypePtrOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.MigrationPhase
	}).(pulumi.StringPtrOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressTypePtrOutput) NatGateway() NatGatewayTypePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *NatGatewayType {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(NatGatewayTypePtrOutput)
}

// The public IP address version.
func (o PublicIPAddressTypePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressTypePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressTypePtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressTypePtrOutput) ServicePublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.ServicePublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypePtrOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressType) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettings struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
	DomainNameLabelScope *PublicIpAddressDnsSettingsDomainNameLabelScope `pulumi:"domainNameLabelScope"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsInput is an input type that accepts PublicIPAddressDnsSettingsArgs and PublicIPAddressDnsSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInput` via:
//
//	PublicIPAddressDnsSettingsArgs{...}
type PublicIPAddressDnsSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput
	ToPublicIPAddressDnsSettingsOutputWithContext(context.Context) PublicIPAddressDnsSettingsOutput
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsArgs struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
	DomainNameLabelScope PublicIpAddressDnsSettingsDomainNameLabelScopePtrInput `pulumi:"domainNameLabelScope"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return i.ToPublicIPAddressDnsSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput)
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput).ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsPtrInput is an input type that accepts PublicIPAddressDnsSettingsArgs, PublicIPAddressDnsSettingsPtr and PublicIPAddressDnsSettingsPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsPtrInput` via:
//
//	        PublicIPAddressDnsSettingsArgs{...}
//
//	or:
//
//	        nil
type PublicIPAddressDnsSettingsPtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput
	ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsPtrOutput
}

type publicIPAddressDnsSettingsPtrType PublicIPAddressDnsSettingsArgs

func PublicIPAddressDnsSettingsPtr(v *PublicIPAddressDnsSettingsArgs) PublicIPAddressDnsSettingsPtrInput {
	return (*publicIPAddressDnsSettingsPtrType)(v)
}

func (*publicIPAddressDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressDnsSettings) *PublicIPAddressDnsSettings {
		return &v
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
func (o PublicIPAddressDnsSettingsOutput) DomainNameLabelScope() PublicIpAddressDnsSettingsDomainNameLabelScopePtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *PublicIpAddressDnsSettingsDomainNameLabelScope {
		return v.DomainNameLabelScope
	}).(PublicIpAddressDnsSettingsDomainNameLabelScopePtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) Elem() PublicIPAddressDnsSettingsOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) PublicIPAddressDnsSettings {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressDnsSettings
		return ret
	}).(PublicIPAddressDnsSettingsOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
func (o PublicIPAddressDnsSettingsPtrOutput) DomainNameLabelScope() PublicIpAddressDnsSettingsDomainNameLabelScopePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *PublicIpAddressDnsSettingsDomainNameLabelScope {
		if v == nil {
			return nil
		}
		return v.DomainNameLabelScope
	}).(PublicIpAddressDnsSettingsDomainNameLabelScopePtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsPtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponse struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
	DomainNameLabelScope *string `pulumi:"domainNameLabelScope"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return o
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabelScope }).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) Elem() PublicIPAddressDnsSettingsResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) PublicIPAddressDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressDnsSettingsResponse
		return ret
	}).(PublicIPAddressDnsSettingsResponseOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabelScope
	}).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponse struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettingsResponse `pulumi:"ddosSettings"`
	// Specify what happens to the public IP address when the VM using it is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsResponse `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the public ip address.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponse `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags []IpTagResponse `pulumi:"ipTags"`
	// The linked public IP address of the public IP address resource.
	LinkedPublicIPAddress *PublicIPAddressResponse `pulumi:"linkedPublicIPAddress"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Migration phase of Public IP Address.
	MigrationPhase *string `pulumi:"migrationPhase"`
	// Resource name.
	Name string `pulumi:"name"`
	// The NatGateway for the Public IP address.
	NatGateway *NatGatewayResponse `pulumi:"natGateway"`
	// The provisioning state of the public IP address resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The public IP address version.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP address resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The service public IP address of the public IP address resource.
	ServicePublicIPAddress *PublicIPAddressResponse `pulumi:"servicePublicIPAddress"`
	// The public IP address SKU.
	Sku *PublicIPAddressSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for PublicIPAddressResponse
func (val *PublicIPAddressResponse) Defaults() *PublicIPAddressResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.IpConfiguration = *tmp.IpConfiguration.Defaults()

	tmp.LinkedPublicIPAddress = tmp.LinkedPublicIPAddress.Defaults()

	tmp.ServicePublicIPAddress = tmp.ServicePublicIPAddress.Defaults()

	return &tmp
}

// Public IP address resource.
type PublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return o
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponseOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *DdosSettingsResponse { return v.DdosSettings }).(DdosSettingsResponsePtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressResponseOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponseOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse { return v.DnsSettings }).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpConfiguration() IPConfigurationResponseOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) IPConfigurationResponse { return v.IpConfiguration }).(IPConfigurationResponseOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []IpTagResponse { return v.IpTags }).(IpTagResponseArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressResponseOutput) LinkedPublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse { return v.LinkedPublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressResponseOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.MigrationPhase }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressResponseOutput) NatGateway() NatGatewayResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *NatGatewayResponse { return v.NatGateway }).(NatGatewayResponsePtrOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The public IP address version.
func (o PublicIPAddressResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressResponseOutput) ServicePublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse { return v.ServicePublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponseOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressSkuResponse { return v.Sku }).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) Elem() PublicIPAddressResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) PublicIPAddressResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressResponse
		return ret
	}).(PublicIPAddressResponseOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *DdosSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsResponsePtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressResponsePtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.IpConfiguration
	}).(IPConfigurationResponsePtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []IpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagResponseArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) LinkedPublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.LinkedPublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressResponsePtrOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.MigrationPhase
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressResponsePtrOutput) NatGateway() NatGatewayResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *NatGatewayResponse {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(NatGatewayResponsePtrOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ServicePublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.ServicePublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponsePtrOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of a public IP address.
type PublicIPAddressSku struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier *string `pulumi:"tier"`
}

// PublicIPAddressSkuInput is an input type that accepts PublicIPAddressSkuArgs and PublicIPAddressSkuOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuInput` via:
//
//	PublicIPAddressSkuArgs{...}
type PublicIPAddressSkuInput interface {
	pulumi.Input

	ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput
	ToPublicIPAddressSkuOutputWithContext(context.Context) PublicIPAddressSkuOutput
}

// SKU of a public IP address.
type PublicIPAddressSkuArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPAddressSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return i.ToPublicIPAddressSkuOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput)
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput).ToPublicIPAddressSkuPtrOutputWithContext(ctx)
}

// PublicIPAddressSkuPtrInput is an input type that accepts PublicIPAddressSkuArgs, PublicIPAddressSkuPtr and PublicIPAddressSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuPtrInput` via:
//
//	        PublicIPAddressSkuArgs{...}
//
//	or:
//
//	        nil
type PublicIPAddressSkuPtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput
	ToPublicIPAddressSkuPtrOutputWithContext(context.Context) PublicIPAddressSkuPtrOutput
}

type publicIPAddressSkuPtrType PublicIPAddressSkuArgs

func PublicIPAddressSkuPtr(v *PublicIPAddressSkuArgs) PublicIPAddressSkuPtrInput {
	return (*publicIPAddressSkuPtrType)(v)
}

func (*publicIPAddressSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuPtrOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressSku) *PublicIPAddressSku {
		return &v
	}).(PublicIPAddressSkuPtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) Elem() PublicIPAddressSkuOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) PublicIPAddressSku {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSku
		return ret
	}).(PublicIPAddressSkuOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuResponse struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier *string `pulumi:"tier"`
}

// SKU of a public IP address.
type PublicIPAddressSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return o
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) Elem() PublicIPAddressSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) PublicIPAddressSkuResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSkuResponse
		return ret
	}).(PublicIPAddressSkuResponseOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP prefix.
type PublicIPPrefixSku struct {
	// Name of a public IP prefix SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP prefix SKU.
	Tier *string `pulumi:"tier"`
}

// PublicIPPrefixSkuInput is an input type that accepts PublicIPPrefixSkuArgs and PublicIPPrefixSkuOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuInput` via:
//
//	PublicIPPrefixSkuArgs{...}
type PublicIPPrefixSkuInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput
	ToPublicIPPrefixSkuOutputWithContext(context.Context) PublicIPPrefixSkuOutput
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuArgs struct {
	// Name of a public IP prefix SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a public IP prefix SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPPrefixSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSku)(nil)).Elem()
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput {
	return i.ToPublicIPPrefixSkuOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuOutputWithContext(ctx context.Context) PublicIPPrefixSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuOutput)
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return i.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuOutput).ToPublicIPPrefixSkuPtrOutputWithContext(ctx)
}

// PublicIPPrefixSkuPtrInput is an input type that accepts PublicIPPrefixSkuArgs, PublicIPPrefixSkuPtr and PublicIPPrefixSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuPtrInput` via:
//
//	        PublicIPPrefixSkuArgs{...}
//
//	or:
//
//	        nil
type PublicIPPrefixSkuPtrInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput
	ToPublicIPPrefixSkuPtrOutputWithContext(context.Context) PublicIPPrefixSkuPtrOutput
}

type publicIPPrefixSkuPtrType PublicIPPrefixSkuArgs

func PublicIPPrefixSkuPtr(v *PublicIPPrefixSkuArgs) PublicIPPrefixSkuPtrInput {
	return (*publicIPPrefixSkuPtrType)(v)
}

func (*publicIPPrefixSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSku)(nil)).Elem()
}

func (i *publicIPPrefixSkuPtrType) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return i.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPPrefixSkuPtrType) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuPtrOutput)
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSku)(nil)).Elem()
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput {
	return o
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuOutputWithContext(ctx context.Context) PublicIPPrefixSkuOutput {
	return o
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return o.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPPrefixSku) *PublicIPPrefixSku {
		return &v
	}).(PublicIPPrefixSkuPtrOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSku)(nil)).Elem()
}

func (o PublicIPPrefixSkuPtrOutput) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return o
}

func (o PublicIPPrefixSkuPtrOutput) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return o
}

func (o PublicIPPrefixSkuPtrOutput) Elem() PublicIPPrefixSkuOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) PublicIPPrefixSku {
		if v != nil {
			return *v
		}
		var ret PublicIPPrefixSku
		return ret
	}).(PublicIPPrefixSkuOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuResponse struct {
	// Name of a public IP prefix SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP prefix SKU.
	Tier *string `pulumi:"tier"`
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponseOutput() PublicIPPrefixSkuResponseOutput {
	return o
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponseOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponseOutput {
	return o
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (o PublicIPPrefixSkuResponsePtrOutput) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return o
}

func (o PublicIPPrefixSkuResponsePtrOutput) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return o
}

func (o PublicIPPrefixSkuResponsePtrOutput) Elem() PublicIPPrefixSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) PublicIPPrefixSkuResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPPrefixSkuResponse
		return ret
	}).(PublicIPPrefixSkuResponseOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.
type QosDefinition struct {
	// Destination IP ranges.
	DestinationIpRanges []QosIpRange `pulumi:"destinationIpRanges"`
	// Destination port ranges.
	DestinationPortRanges []QosPortRange `pulumi:"destinationPortRanges"`
	// List of markings to be used in the configuration.
	Markings []int `pulumi:"markings"`
	// RNM supported protocol types.
	Protocol *string `pulumi:"protocol"`
	// Source IP ranges.
	SourceIpRanges []QosIpRange `pulumi:"sourceIpRanges"`
	// Sources port ranges.
	SourcePortRanges []QosPortRange `pulumi:"sourcePortRanges"`
}

// QosDefinitionInput is an input type that accepts QosDefinitionArgs and QosDefinitionOutput values.
// You can construct a concrete instance of `QosDefinitionInput` via:
//
//	QosDefinitionArgs{...}
type QosDefinitionInput interface {
	pulumi.Input

	ToQosDefinitionOutput() QosDefinitionOutput
	ToQosDefinitionOutputWithContext(context.Context) QosDefinitionOutput
}

// Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.
type QosDefinitionArgs struct {
	// Destination IP ranges.
	DestinationIpRanges QosIpRangeArrayInput `pulumi:"destinationIpRanges"`
	// Destination port ranges.
	DestinationPortRanges QosPortRangeArrayInput `pulumi:"destinationPortRanges"`
	// List of markings to be used in the configuration.
	Markings pulumi.IntArrayInput `pulumi:"markings"`
	// RNM supported protocol types.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Source IP ranges.
	SourceIpRanges QosIpRangeArrayInput `pulumi:"sourceIpRanges"`
	// Sources port ranges.
	SourcePortRanges QosPortRangeArrayInput `pulumi:"sourcePortRanges"`
}

func (QosDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosDefinition)(nil)).Elem()
}

func (i QosDefinitionArgs) ToQosDefinitionOutput() QosDefinitionOutput {
	return i.ToQosDefinitionOutputWithContext(context.Background())
}

func (i QosDefinitionArgs) ToQosDefinitionOutputWithContext(ctx context.Context) QosDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosDefinitionOutput)
}

// QosDefinitionArrayInput is an input type that accepts QosDefinitionArray and QosDefinitionArrayOutput values.
// You can construct a concrete instance of `QosDefinitionArrayInput` via:
//
//	QosDefinitionArray{ QosDefinitionArgs{...} }
type QosDefinitionArrayInput interface {
	pulumi.Input

	ToQosDefinitionArrayOutput() QosDefinitionArrayOutput
	ToQosDefinitionArrayOutputWithContext(context.Context) QosDefinitionArrayOutput
}

type QosDefinitionArray []QosDefinitionInput

func (QosDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosDefinition)(nil)).Elem()
}

func (i QosDefinitionArray) ToQosDefinitionArrayOutput() QosDefinitionArrayOutput {
	return i.ToQosDefinitionArrayOutputWithContext(context.Background())
}

func (i QosDefinitionArray) ToQosDefinitionArrayOutputWithContext(ctx context.Context) QosDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosDefinitionArrayOutput)
}

// Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.
type QosDefinitionOutput struct{ *pulumi.OutputState }

func (QosDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosDefinition)(nil)).Elem()
}

func (o QosDefinitionOutput) ToQosDefinitionOutput() QosDefinitionOutput {
	return o
}

func (o QosDefinitionOutput) ToQosDefinitionOutputWithContext(ctx context.Context) QosDefinitionOutput {
	return o
}

// Destination IP ranges.
func (o QosDefinitionOutput) DestinationIpRanges() QosIpRangeArrayOutput {
	return o.ApplyT(func(v QosDefinition) []QosIpRange { return v.DestinationIpRanges }).(QosIpRangeArrayOutput)
}

// Destination port ranges.
func (o QosDefinitionOutput) DestinationPortRanges() QosPortRangeArrayOutput {
	return o.ApplyT(func(v QosDefinition) []QosPortRange { return v.DestinationPortRanges }).(QosPortRangeArrayOutput)
}

// List of markings to be used in the configuration.
func (o QosDefinitionOutput) Markings() pulumi.IntArrayOutput {
	return o.ApplyT(func(v QosDefinition) []int { return v.Markings }).(pulumi.IntArrayOutput)
}

// RNM supported protocol types.
func (o QosDefinitionOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosDefinition) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Source IP ranges.
func (o QosDefinitionOutput) SourceIpRanges() QosIpRangeArrayOutput {
	return o.ApplyT(func(v QosDefinition) []QosIpRange { return v.SourceIpRanges }).(QosIpRangeArrayOutput)
}

// Sources port ranges.
func (o QosDefinitionOutput) SourcePortRanges() QosPortRangeArrayOutput {
	return o.ApplyT(func(v QosDefinition) []QosPortRange { return v.SourcePortRanges }).(QosPortRangeArrayOutput)
}

type QosDefinitionArrayOutput struct{ *pulumi.OutputState }

func (QosDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosDefinition)(nil)).Elem()
}

func (o QosDefinitionArrayOutput) ToQosDefinitionArrayOutput() QosDefinitionArrayOutput {
	return o
}

func (o QosDefinitionArrayOutput) ToQosDefinitionArrayOutputWithContext(ctx context.Context) QosDefinitionArrayOutput {
	return o
}

func (o QosDefinitionArrayOutput) Index(i pulumi.IntInput) QosDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosDefinition {
		return vs[0].([]QosDefinition)[vs[1].(int)]
	}).(QosDefinitionOutput)
}

// Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.
type QosDefinitionResponse struct {
	// Destination IP ranges.
	DestinationIpRanges []QosIpRangeResponse `pulumi:"destinationIpRanges"`
	// Destination port ranges.
	DestinationPortRanges []QosPortRangeResponse `pulumi:"destinationPortRanges"`
	// List of markings to be used in the configuration.
	Markings []int `pulumi:"markings"`
	// RNM supported protocol types.
	Protocol *string `pulumi:"protocol"`
	// Source IP ranges.
	SourceIpRanges []QosIpRangeResponse `pulumi:"sourceIpRanges"`
	// Sources port ranges.
	SourcePortRanges []QosPortRangeResponse `pulumi:"sourcePortRanges"`
}

// Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking.
type QosDefinitionResponseOutput struct{ *pulumi.OutputState }

func (QosDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosDefinitionResponse)(nil)).Elem()
}

func (o QosDefinitionResponseOutput) ToQosDefinitionResponseOutput() QosDefinitionResponseOutput {
	return o
}

func (o QosDefinitionResponseOutput) ToQosDefinitionResponseOutputWithContext(ctx context.Context) QosDefinitionResponseOutput {
	return o
}

// Destination IP ranges.
func (o QosDefinitionResponseOutput) DestinationIpRanges() QosIpRangeResponseArrayOutput {
	return o.ApplyT(func(v QosDefinitionResponse) []QosIpRangeResponse { return v.DestinationIpRanges }).(QosIpRangeResponseArrayOutput)
}

// Destination port ranges.
func (o QosDefinitionResponseOutput) DestinationPortRanges() QosPortRangeResponseArrayOutput {
	return o.ApplyT(func(v QosDefinitionResponse) []QosPortRangeResponse { return v.DestinationPortRanges }).(QosPortRangeResponseArrayOutput)
}

// List of markings to be used in the configuration.
func (o QosDefinitionResponseOutput) Markings() pulumi.IntArrayOutput {
	return o.ApplyT(func(v QosDefinitionResponse) []int { return v.Markings }).(pulumi.IntArrayOutput)
}

// RNM supported protocol types.
func (o QosDefinitionResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosDefinitionResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Source IP ranges.
func (o QosDefinitionResponseOutput) SourceIpRanges() QosIpRangeResponseArrayOutput {
	return o.ApplyT(func(v QosDefinitionResponse) []QosIpRangeResponse { return v.SourceIpRanges }).(QosIpRangeResponseArrayOutput)
}

// Sources port ranges.
func (o QosDefinitionResponseOutput) SourcePortRanges() QosPortRangeResponseArrayOutput {
	return o.ApplyT(func(v QosDefinitionResponse) []QosPortRangeResponse { return v.SourcePortRanges }).(QosPortRangeResponseArrayOutput)
}

type QosDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (QosDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosDefinitionResponse)(nil)).Elem()
}

func (o QosDefinitionResponseArrayOutput) ToQosDefinitionResponseArrayOutput() QosDefinitionResponseArrayOutput {
	return o
}

func (o QosDefinitionResponseArrayOutput) ToQosDefinitionResponseArrayOutputWithContext(ctx context.Context) QosDefinitionResponseArrayOutput {
	return o
}

func (o QosDefinitionResponseArrayOutput) Index(i pulumi.IntInput) QosDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosDefinitionResponse {
		return vs[0].([]QosDefinitionResponse)[vs[1].(int)]
	}).(QosDefinitionResponseOutput)
}

// Qos Traffic Profiler IP Range properties.
type QosIpRange struct {
	// End IP Address.
	EndIP *string `pulumi:"endIP"`
	// Start IP Address.
	StartIP *string `pulumi:"startIP"`
}

// QosIpRangeInput is an input type that accepts QosIpRangeArgs and QosIpRangeOutput values.
// You can construct a concrete instance of `QosIpRangeInput` via:
//
//	QosIpRangeArgs{...}
type QosIpRangeInput interface {
	pulumi.Input

	ToQosIpRangeOutput() QosIpRangeOutput
	ToQosIpRangeOutputWithContext(context.Context) QosIpRangeOutput
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeArgs struct {
	// End IP Address.
	EndIP pulumi.StringPtrInput `pulumi:"endIP"`
	// Start IP Address.
	StartIP pulumi.StringPtrInput `pulumi:"startIP"`
}

func (QosIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosIpRange)(nil)).Elem()
}

func (i QosIpRangeArgs) ToQosIpRangeOutput() QosIpRangeOutput {
	return i.ToQosIpRangeOutputWithContext(context.Background())
}

func (i QosIpRangeArgs) ToQosIpRangeOutputWithContext(ctx context.Context) QosIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosIpRangeOutput)
}

// QosIpRangeArrayInput is an input type that accepts QosIpRangeArray and QosIpRangeArrayOutput values.
// You can construct a concrete instance of `QosIpRangeArrayInput` via:
//
//	QosIpRangeArray{ QosIpRangeArgs{...} }
type QosIpRangeArrayInput interface {
	pulumi.Input

	ToQosIpRangeArrayOutput() QosIpRangeArrayOutput
	ToQosIpRangeArrayOutputWithContext(context.Context) QosIpRangeArrayOutput
}

type QosIpRangeArray []QosIpRangeInput

func (QosIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosIpRange)(nil)).Elem()
}

func (i QosIpRangeArray) ToQosIpRangeArrayOutput() QosIpRangeArrayOutput {
	return i.ToQosIpRangeArrayOutputWithContext(context.Background())
}

func (i QosIpRangeArray) ToQosIpRangeArrayOutputWithContext(ctx context.Context) QosIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosIpRangeArrayOutput)
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeOutput struct{ *pulumi.OutputState }

func (QosIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosIpRange)(nil)).Elem()
}

func (o QosIpRangeOutput) ToQosIpRangeOutput() QosIpRangeOutput {
	return o
}

func (o QosIpRangeOutput) ToQosIpRangeOutputWithContext(ctx context.Context) QosIpRangeOutput {
	return o
}

// End IP Address.
func (o QosIpRangeOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRange) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Start IP Address.
func (o QosIpRangeOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRange) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type QosIpRangeArrayOutput struct{ *pulumi.OutputState }

func (QosIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosIpRange)(nil)).Elem()
}

func (o QosIpRangeArrayOutput) ToQosIpRangeArrayOutput() QosIpRangeArrayOutput {
	return o
}

func (o QosIpRangeArrayOutput) ToQosIpRangeArrayOutputWithContext(ctx context.Context) QosIpRangeArrayOutput {
	return o
}

func (o QosIpRangeArrayOutput) Index(i pulumi.IntInput) QosIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosIpRange {
		return vs[0].([]QosIpRange)[vs[1].(int)]
	}).(QosIpRangeOutput)
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeResponse struct {
	// End IP Address.
	EndIP *string `pulumi:"endIP"`
	// Start IP Address.
	StartIP *string `pulumi:"startIP"`
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeResponseOutput struct{ *pulumi.OutputState }

func (QosIpRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosIpRangeResponse)(nil)).Elem()
}

func (o QosIpRangeResponseOutput) ToQosIpRangeResponseOutput() QosIpRangeResponseOutput {
	return o
}

func (o QosIpRangeResponseOutput) ToQosIpRangeResponseOutputWithContext(ctx context.Context) QosIpRangeResponseOutput {
	return o
}

// End IP Address.
func (o QosIpRangeResponseOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRangeResponse) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Start IP Address.
func (o QosIpRangeResponseOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRangeResponse) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type QosIpRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (QosIpRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosIpRangeResponse)(nil)).Elem()
}

func (o QosIpRangeResponseArrayOutput) ToQosIpRangeResponseArrayOutput() QosIpRangeResponseArrayOutput {
	return o
}

func (o QosIpRangeResponseArrayOutput) ToQosIpRangeResponseArrayOutputWithContext(ctx context.Context) QosIpRangeResponseArrayOutput {
	return o
}

func (o QosIpRangeResponseArrayOutput) Index(i pulumi.IntInput) QosIpRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosIpRangeResponse {
		return vs[0].([]QosIpRangeResponse)[vs[1].(int)]
	}).(QosIpRangeResponseOutput)
}

// Qos Traffic Profiler Port range properties.
type QosPortRange struct {
	// Qos Port Range end.
	End *int `pulumi:"end"`
	// Qos Port Range start.
	Start *int `pulumi:"start"`
}

// QosPortRangeInput is an input type that accepts QosPortRangeArgs and QosPortRangeOutput values.
// You can construct a concrete instance of `QosPortRangeInput` via:
//
//	QosPortRangeArgs{...}
type QosPortRangeInput interface {
	pulumi.Input

	ToQosPortRangeOutput() QosPortRangeOutput
	ToQosPortRangeOutputWithContext(context.Context) QosPortRangeOutput
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeArgs struct {
	// Qos Port Range end.
	End pulumi.IntPtrInput `pulumi:"end"`
	// Qos Port Range start.
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (QosPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPortRange)(nil)).Elem()
}

func (i QosPortRangeArgs) ToQosPortRangeOutput() QosPortRangeOutput {
	return i.ToQosPortRangeOutputWithContext(context.Background())
}

func (i QosPortRangeArgs) ToQosPortRangeOutputWithContext(ctx context.Context) QosPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPortRangeOutput)
}

// QosPortRangeArrayInput is an input type that accepts QosPortRangeArray and QosPortRangeArrayOutput values.
// You can construct a concrete instance of `QosPortRangeArrayInput` via:
//
//	QosPortRangeArray{ QosPortRangeArgs{...} }
type QosPortRangeArrayInput interface {
	pulumi.Input

	ToQosPortRangeArrayOutput() QosPortRangeArrayOutput
	ToQosPortRangeArrayOutputWithContext(context.Context) QosPortRangeArrayOutput
}

type QosPortRangeArray []QosPortRangeInput

func (QosPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosPortRange)(nil)).Elem()
}

func (i QosPortRangeArray) ToQosPortRangeArrayOutput() QosPortRangeArrayOutput {
	return i.ToQosPortRangeArrayOutputWithContext(context.Background())
}

func (i QosPortRangeArray) ToQosPortRangeArrayOutputWithContext(ctx context.Context) QosPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPortRangeArrayOutput)
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeOutput struct{ *pulumi.OutputState }

func (QosPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPortRange)(nil)).Elem()
}

func (o QosPortRangeOutput) ToQosPortRangeOutput() QosPortRangeOutput {
	return o
}

func (o QosPortRangeOutput) ToQosPortRangeOutputWithContext(ctx context.Context) QosPortRangeOutput {
	return o
}

// Qos Port Range end.
func (o QosPortRangeOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRange) *int { return v.End }).(pulumi.IntPtrOutput)
}

// Qos Port Range start.
func (o QosPortRangeOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRange) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type QosPortRangeArrayOutput struct{ *pulumi.OutputState }

func (QosPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosPortRange)(nil)).Elem()
}

func (o QosPortRangeArrayOutput) ToQosPortRangeArrayOutput() QosPortRangeArrayOutput {
	return o
}

func (o QosPortRangeArrayOutput) ToQosPortRangeArrayOutputWithContext(ctx context.Context) QosPortRangeArrayOutput {
	return o
}

func (o QosPortRangeArrayOutput) Index(i pulumi.IntInput) QosPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosPortRange {
		return vs[0].([]QosPortRange)[vs[1].(int)]
	}).(QosPortRangeOutput)
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeResponse struct {
	// Qos Port Range end.
	End *int `pulumi:"end"`
	// Qos Port Range start.
	Start *int `pulumi:"start"`
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeResponseOutput struct{ *pulumi.OutputState }

func (QosPortRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPortRangeResponse)(nil)).Elem()
}

func (o QosPortRangeResponseOutput) ToQosPortRangeResponseOutput() QosPortRangeResponseOutput {
	return o
}

func (o QosPortRangeResponseOutput) ToQosPortRangeResponseOutputWithContext(ctx context.Context) QosPortRangeResponseOutput {
	return o
}

// Qos Port Range end.
func (o QosPortRangeResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRangeResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

// Qos Port Range start.
func (o QosPortRangeResponseOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRangeResponse) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type QosPortRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (QosPortRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosPortRangeResponse)(nil)).Elem()
}

func (o QosPortRangeResponseArrayOutput) ToQosPortRangeResponseArrayOutput() QosPortRangeResponseArrayOutput {
	return o
}

func (o QosPortRangeResponseArrayOutput) ToQosPortRangeResponseArrayOutputWithContext(ctx context.Context) QosPortRangeResponseArrayOutput {
	return o
}

func (o QosPortRangeResponseArrayOutput) Index(i pulumi.IntInput) QosPortRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosPortRangeResponse {
		return vs[0].([]QosPortRangeResponse)[vs[1].(int)]
	}).(QosPortRangeResponseOutput)
}

// Radius Server Settings.
type RadiusServer struct {
	// The address of this radius server.
	RadiusServerAddress string `pulumi:"radiusServerAddress"`
	// The initial score assigned to this radius server.
	RadiusServerScore *float64 `pulumi:"radiusServerScore"`
	// The secret used for this radius server.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
}

// RadiusServerInput is an input type that accepts RadiusServerArgs and RadiusServerOutput values.
// You can construct a concrete instance of `RadiusServerInput` via:
//
//	RadiusServerArgs{...}
type RadiusServerInput interface {
	pulumi.Input

	ToRadiusServerOutput() RadiusServerOutput
	ToRadiusServerOutputWithContext(context.Context) RadiusServerOutput
}

// Radius Server Settings.
type RadiusServerArgs struct {
	// The address of this radius server.
	RadiusServerAddress pulumi.StringInput `pulumi:"radiusServerAddress"`
	// The initial score assigned to this radius server.
	RadiusServerScore pulumi.Float64PtrInput `pulumi:"radiusServerScore"`
	// The secret used for this radius server.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
}

func (RadiusServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RadiusServer)(nil)).Elem()
}

func (i RadiusServerArgs) ToRadiusServerOutput() RadiusServerOutput {
	return i.ToRadiusServerOutputWithContext(context.Background())
}

func (i RadiusServerArgs) ToRadiusServerOutputWithContext(ctx context.Context) RadiusServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerOutput)
}

// RadiusServerArrayInput is an input type that accepts RadiusServerArray and RadiusServerArrayOutput values.
// You can construct a concrete instance of `RadiusServerArrayInput` via:
//
//	RadiusServerArray{ RadiusServerArgs{...} }
type RadiusServerArrayInput interface {
	pulumi.Input

	ToRadiusServerArrayOutput() RadiusServerArrayOutput
	ToRadiusServerArrayOutputWithContext(context.Context) RadiusServerArrayOutput
}

type RadiusServerArray []RadiusServerInput

func (RadiusServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RadiusServer)(nil)).Elem()
}

func (i RadiusServerArray) ToRadiusServerArrayOutput() RadiusServerArrayOutput {
	return i.ToRadiusServerArrayOutputWithContext(context.Background())
}

func (i RadiusServerArray) ToRadiusServerArrayOutputWithContext(ctx context.Context) RadiusServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerArrayOutput)
}

// Radius Server Settings.
type RadiusServerOutput struct{ *pulumi.OutputState }

func (RadiusServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RadiusServer)(nil)).Elem()
}

func (o RadiusServerOutput) ToRadiusServerOutput() RadiusServerOutput {
	return o
}

func (o RadiusServerOutput) ToRadiusServerOutputWithContext(ctx context.Context) RadiusServerOutput {
	return o
}

// The address of this radius server.
func (o RadiusServerOutput) RadiusServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RadiusServer) string { return v.RadiusServerAddress }).(pulumi.StringOutput)
}

// The initial score assigned to this radius server.
func (o RadiusServerOutput) RadiusServerScore() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RadiusServer) *float64 { return v.RadiusServerScore }).(pulumi.Float64PtrOutput)
}

// The secret used for this radius server.
func (o RadiusServerOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RadiusServer) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

type RadiusServerArrayOutput struct{ *pulumi.OutputState }

func (RadiusServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RadiusServer)(nil)).Elem()
}

func (o RadiusServerArrayOutput) ToRadiusServerArrayOutput() RadiusServerArrayOutput {
	return o
}

func (o RadiusServerArrayOutput) ToRadiusServerArrayOutputWithContext(ctx context.Context) RadiusServerArrayOutput {
	return o
}

func (o RadiusServerArrayOutput) Index(i pulumi.IntInput) RadiusServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RadiusServer {
		return vs[0].([]RadiusServer)[vs[1].(int)]
	}).(RadiusServerOutput)
}

// Radius Server Settings.
type RadiusServerResponse struct {
	// The address of this radius server.
	RadiusServerAddress string `pulumi:"radiusServerAddress"`
	// The initial score assigned to this radius server.
	RadiusServerScore *float64 `pulumi:"radiusServerScore"`
	// The secret used for this radius server.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
}

// Radius Server Settings.
type RadiusServerResponseOutput struct{ *pulumi.OutputState }

func (RadiusServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RadiusServerResponse)(nil)).Elem()
}

func (o RadiusServerResponseOutput) ToRadiusServerResponseOutput() RadiusServerResponseOutput {
	return o
}

func (o RadiusServerResponseOutput) ToRadiusServerResponseOutputWithContext(ctx context.Context) RadiusServerResponseOutput {
	return o
}

// The address of this radius server.
func (o RadiusServerResponseOutput) RadiusServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RadiusServerResponse) string { return v.RadiusServerAddress }).(pulumi.StringOutput)
}

// The initial score assigned to this radius server.
func (o RadiusServerResponseOutput) RadiusServerScore() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RadiusServerResponse) *float64 { return v.RadiusServerScore }).(pulumi.Float64PtrOutput)
}

// The secret used for this radius server.
func (o RadiusServerResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RadiusServerResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

type RadiusServerResponseArrayOutput struct{ *pulumi.OutputState }

func (RadiusServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RadiusServerResponse)(nil)).Elem()
}

func (o RadiusServerResponseArrayOutput) ToRadiusServerResponseArrayOutput() RadiusServerResponseArrayOutput {
	return o
}

func (o RadiusServerResponseArrayOutput) ToRadiusServerResponseArrayOutputWithContext(ctx context.Context) RadiusServerResponseArrayOutput {
	return o
}

func (o RadiusServerResponseArrayOutput) Index(i pulumi.IntInput) RadiusServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RadiusServerResponse {
		return vs[0].([]RadiusServerResponse)[vs[1].(int)]
	}).(RadiusServerResponseOutput)
}

// A collective group of information about the record set information.
type RecordSetResponse struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// The private ip address of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The provisioning state of the recordset.
	ProvisioningState string `pulumi:"provisioningState"`
	// Recordset name.
	RecordSetName *string `pulumi:"recordSetName"`
	// Resource record type.
	RecordType *string `pulumi:"recordType"`
	// Recordset time to live.
	Ttl *int `pulumi:"ttl"`
}

// A collective group of information about the record set information.
type RecordSetResponseOutput struct{ *pulumi.OutputState }

func (RecordSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetResponse)(nil)).Elem()
}

func (o RecordSetResponseOutput) ToRecordSetResponseOutput() RecordSetResponseOutput {
	return o
}

func (o RecordSetResponseOutput) ToRecordSetResponseOutputWithContext(ctx context.Context) RecordSetResponseOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o RecordSetResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The private ip address of the private endpoint.
func (o RecordSetResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordSetResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The provisioning state of the recordset.
func (o RecordSetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Recordset name.
func (o RecordSetResponseOutput) RecordSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.RecordSetName }).(pulumi.StringPtrOutput)
}

// Resource record type.
func (o RecordSetResponseOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// Recordset time to live.
func (o RecordSetResponseOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type RecordSetResponseArrayOutput struct{ *pulumi.OutputState }

func (RecordSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordSetResponse)(nil)).Elem()
}

func (o RecordSetResponseArrayOutput) ToRecordSetResponseArrayOutput() RecordSetResponseArrayOutput {
	return o
}

func (o RecordSetResponseArrayOutput) ToRecordSetResponseArrayOutputWithContext(ctx context.Context) RecordSetResponseArrayOutput {
	return o
}

func (o RecordSetResponseArrayOutput) Index(i pulumi.IntInput) RecordSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordSetResponse {
		return vs[0].([]RecordSetResponse)[vs[1].(int)]
	}).(RecordSetResponseOutput)
}

// Describes Redirect Route.
type RedirectConfiguration struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHost *string `pulumi:"customHost"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
	OdataType string `pulumi:"odataType"`
	// The protocol of the destination to where the traffic is redirected
	RedirectProtocol *string `pulumi:"redirectProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType *string `pulumi:"redirectType"`
}

// RedirectConfigurationInput is an input type that accepts RedirectConfigurationArgs and RedirectConfigurationOutput values.
// You can construct a concrete instance of `RedirectConfigurationInput` via:
//
//	RedirectConfigurationArgs{...}
type RedirectConfigurationInput interface {
	pulumi.Input

	ToRedirectConfigurationOutput() RedirectConfigurationOutput
	ToRedirectConfigurationOutputWithContext(context.Context) RedirectConfigurationOutput
}

// Describes Redirect Route.
type RedirectConfigurationArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHost pulumi.StringPtrInput `pulumi:"customHost"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// The protocol of the destination to where the traffic is redirected
	RedirectProtocol pulumi.StringPtrInput `pulumi:"redirectProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
}

func (RedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfiguration)(nil)).Elem()
}

func (i RedirectConfigurationArgs) ToRedirectConfigurationOutput() RedirectConfigurationOutput {
	return i.ToRedirectConfigurationOutputWithContext(context.Background())
}

func (i RedirectConfigurationArgs) ToRedirectConfigurationOutputWithContext(ctx context.Context) RedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectConfigurationOutput)
}

func (i RedirectConfigurationArgs) ToRedirectConfigurationPtrOutput() RedirectConfigurationPtrOutput {
	return i.ToRedirectConfigurationPtrOutputWithContext(context.Background())
}

func (i RedirectConfigurationArgs) ToRedirectConfigurationPtrOutputWithContext(ctx context.Context) RedirectConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectConfigurationOutput).ToRedirectConfigurationPtrOutputWithContext(ctx)
}

// RedirectConfigurationPtrInput is an input type that accepts RedirectConfigurationArgs, RedirectConfigurationPtr and RedirectConfigurationPtrOutput values.
// You can construct a concrete instance of `RedirectConfigurationPtrInput` via:
//
//	        RedirectConfigurationArgs{...}
//
//	or:
//
//	        nil
type RedirectConfigurationPtrInput interface {
	pulumi.Input

	ToRedirectConfigurationPtrOutput() RedirectConfigurationPtrOutput
	ToRedirectConfigurationPtrOutputWithContext(context.Context) RedirectConfigurationPtrOutput
}

type redirectConfigurationPtrType RedirectConfigurationArgs

func RedirectConfigurationPtr(v *RedirectConfigurationArgs) RedirectConfigurationPtrInput {
	return (*redirectConfigurationPtrType)(v)
}

func (*redirectConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectConfiguration)(nil)).Elem()
}

func (i *redirectConfigurationPtrType) ToRedirectConfigurationPtrOutput() RedirectConfigurationPtrOutput {
	return i.ToRedirectConfigurationPtrOutputWithContext(context.Background())
}

func (i *redirectConfigurationPtrType) ToRedirectConfigurationPtrOutputWithContext(ctx context.Context) RedirectConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectConfigurationPtrOutput)
}

// Describes Redirect Route.
type RedirectConfigurationOutput struct{ *pulumi.OutputState }

func (RedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfiguration)(nil)).Elem()
}

func (o RedirectConfigurationOutput) ToRedirectConfigurationOutput() RedirectConfigurationOutput {
	return o
}

func (o RedirectConfigurationOutput) ToRedirectConfigurationOutputWithContext(ctx context.Context) RedirectConfigurationOutput {
	return o
}

func (o RedirectConfigurationOutput) ToRedirectConfigurationPtrOutput() RedirectConfigurationPtrOutput {
	return o.ToRedirectConfigurationPtrOutputWithContext(context.Background())
}

func (o RedirectConfigurationOutput) ToRedirectConfigurationPtrOutputWithContext(ctx context.Context) RedirectConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedirectConfiguration) *RedirectConfiguration {
		return &v
	}).(RedirectConfigurationPtrOutput)
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o RedirectConfigurationOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o RedirectConfigurationOutput) CustomHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomHost }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o RedirectConfigurationOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
func (o RedirectConfigurationOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
func (o RedirectConfigurationOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectConfiguration) string { return v.OdataType }).(pulumi.StringOutput)
}

// The protocol of the destination to where the traffic is redirected
func (o RedirectConfigurationOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.RedirectProtocol }).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o RedirectConfigurationOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

type RedirectConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RedirectConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectConfiguration)(nil)).Elem()
}

func (o RedirectConfigurationPtrOutput) ToRedirectConfigurationPtrOutput() RedirectConfigurationPtrOutput {
	return o
}

func (o RedirectConfigurationPtrOutput) ToRedirectConfigurationPtrOutputWithContext(ctx context.Context) RedirectConfigurationPtrOutput {
	return o
}

func (o RedirectConfigurationPtrOutput) Elem() RedirectConfigurationOutput {
	return o.ApplyT(func(v *RedirectConfiguration) RedirectConfiguration {
		if v != nil {
			return *v
		}
		var ret RedirectConfiguration
		return ret
	}).(RedirectConfigurationOutput)
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o RedirectConfigurationPtrOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomFragment
	}).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o RedirectConfigurationPtrOutput) CustomHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomHost
	}).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o RedirectConfigurationPtrOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomPath
	}).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
func (o RedirectConfigurationPtrOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomQueryString
	}).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
func (o RedirectConfigurationPtrOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.OdataType
	}).(pulumi.StringPtrOutput)
}

// The protocol of the destination to where the traffic is redirected
func (o RedirectConfigurationPtrOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RedirectProtocol
	}).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o RedirectConfigurationPtrOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RedirectType
	}).(pulumi.StringPtrOutput)
}

// Describes Redirect Route.
type RedirectConfigurationResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHost *string `pulumi:"customHost"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
	OdataType string `pulumi:"odataType"`
	// The protocol of the destination to where the traffic is redirected
	RedirectProtocol *string `pulumi:"redirectProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType *string `pulumi:"redirectType"`
}

// Describes Redirect Route.
type RedirectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RedirectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfigurationResponse)(nil)).Elem()
}

func (o RedirectConfigurationResponseOutput) ToRedirectConfigurationResponseOutput() RedirectConfigurationResponseOutput {
	return o
}

func (o RedirectConfigurationResponseOutput) ToRedirectConfigurationResponseOutputWithContext(ctx context.Context) RedirectConfigurationResponseOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o RedirectConfigurationResponseOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o RedirectConfigurationResponseOutput) CustomHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomHost }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o RedirectConfigurationResponseOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
func (o RedirectConfigurationResponseOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
func (o RedirectConfigurationResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// The protocol of the destination to where the traffic is redirected
func (o RedirectConfigurationResponseOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.RedirectProtocol }).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o RedirectConfigurationResponseOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

type RedirectConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RedirectConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectConfigurationResponse)(nil)).Elem()
}

func (o RedirectConfigurationResponsePtrOutput) ToRedirectConfigurationResponsePtrOutput() RedirectConfigurationResponsePtrOutput {
	return o
}

func (o RedirectConfigurationResponsePtrOutput) ToRedirectConfigurationResponsePtrOutputWithContext(ctx context.Context) RedirectConfigurationResponsePtrOutput {
	return o
}

func (o RedirectConfigurationResponsePtrOutput) Elem() RedirectConfigurationResponseOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) RedirectConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret RedirectConfigurationResponse
		return ret
	}).(RedirectConfigurationResponseOutput)
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o RedirectConfigurationResponsePtrOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomFragment
	}).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o RedirectConfigurationResponsePtrOutput) CustomHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomHost
	}).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o RedirectConfigurationResponsePtrOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomPath
	}).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
func (o RedirectConfigurationResponsePtrOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomQueryString
	}).(pulumi.StringPtrOutput)
}

// Expected value is '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'.
func (o RedirectConfigurationResponsePtrOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OdataType
	}).(pulumi.StringPtrOutput)
}

// The protocol of the destination to where the traffic is redirected
func (o RedirectConfigurationResponsePtrOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectProtocol
	}).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o RedirectConfigurationResponsePtrOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectType
	}).(pulumi.StringPtrOutput)
}

// Reference to a public IP address.
type ReferencedPublicIpAddressResponse struct {
	// The PublicIPAddress Reference.
	Id *string `pulumi:"id"`
}

// Reference to a public IP address.
type ReferencedPublicIpAddressResponseOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseOutput {
	return o
}

// The PublicIPAddress Reference.
func (o ReferencedPublicIpAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferencedPublicIpAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ReferencedPublicIpAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) Index(i pulumi.IntInput) ReferencedPublicIpAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferencedPublicIpAddressResponse {
		return vs[0].([]ReferencedPublicIpAddressResponse)[vs[1].(int)]
	}).(ReferencedPublicIpAddressResponseOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ResourceNavigationLinkInput is an input type that accepts ResourceNavigationLinkArgs and ResourceNavigationLinkOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkInput` via:
//
//	ResourceNavigationLinkArgs{...}
type ResourceNavigationLinkInput interface {
	pulumi.Input

	ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput
	ToResourceNavigationLinkOutputWithContext(context.Context) ResourceNavigationLinkOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ResourceNavigationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return i.ToResourceNavigationLinkOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLinkArrayInput is an input type that accepts ResourceNavigationLinkArray and ResourceNavigationLinkArrayOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkArrayInput` via:
//
//	ResourceNavigationLinkArray{ ResourceNavigationLinkArgs{...} }
type ResourceNavigationLinkArrayInput interface {
	pulumi.Input

	ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput
	ToResourceNavigationLinkArrayOutputWithContext(context.Context) ResourceNavigationLinkArrayOutput
}

type ResourceNavigationLinkArray []ResourceNavigationLinkInput

func (ResourceNavigationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return i.ToResourceNavigationLinkArrayOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkArrayOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return o
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return o
}

// Resource ID.
func (o ResourceNavigationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ResourceNavigationLinkArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLink {
		return vs[0].([]ResourceNavigationLink)[vs[1].(int)]
	}).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the resource navigation link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return o
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ResourceNavigationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ResourceNavigationLinkResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Link to the external resource.
func (o ResourceNavigationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource navigation link resource.
func (o ResourceNavigationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ResourceNavigationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceNavigationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLinkResponse {
		return vs[0].([]ResourceNavigationLinkResponse)[vs[1].(int)]
	}).(ResourceNavigationLinkResponseOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParameters struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParameters
func (val *RetentionPolicyParameters) Defaults() *RetentionPolicyParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		days_ := 0
		tmp.Days = &days_
	}
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// RetentionPolicyParametersInput is an input type that accepts RetentionPolicyParametersArgs and RetentionPolicyParametersOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersInput` via:
//
//	RetentionPolicyParametersArgs{...}
type RetentionPolicyParametersInput interface {
	pulumi.Input

	ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput
	ToRetentionPolicyParametersOutputWithContext(context.Context) RetentionPolicyParametersOutput
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersArgs struct {
	// Number of days to retain flow log records.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParametersArgs
func (val *RetentionPolicyParametersArgs) Defaults() *RetentionPolicyParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		tmp.Days = pulumi.IntPtr(0)
	}
	if tmp.Enabled == nil {
		tmp.Enabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RetentionPolicyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParameters)(nil)).Elem()
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput {
	return i.ToRetentionPolicyParametersOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersOutputWithContext(ctx context.Context) RetentionPolicyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersOutput)
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return i.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersOutput).ToRetentionPolicyParametersPtrOutputWithContext(ctx)
}

// RetentionPolicyParametersPtrInput is an input type that accepts RetentionPolicyParametersArgs, RetentionPolicyParametersPtr and RetentionPolicyParametersPtrOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersPtrInput` via:
//
//	        RetentionPolicyParametersArgs{...}
//
//	or:
//
//	        nil
type RetentionPolicyParametersPtrInput interface {
	pulumi.Input

	ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput
	ToRetentionPolicyParametersPtrOutputWithContext(context.Context) RetentionPolicyParametersPtrOutput
}

type retentionPolicyParametersPtrType RetentionPolicyParametersArgs

func RetentionPolicyParametersPtr(v *RetentionPolicyParametersArgs) RetentionPolicyParametersPtrInput {
	return (*retentionPolicyParametersPtrType)(v)
}

func (*retentionPolicyParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParameters)(nil)).Elem()
}

func (i *retentionPolicyParametersPtrType) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return i.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (i *retentionPolicyParametersPtrType) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersPtrOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParameters)(nil)).Elem()
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput {
	return o
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersOutputWithContext(ctx context.Context) RetentionPolicyParametersOutput {
	return o
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return o.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetentionPolicyParameters) *RetentionPolicyParameters {
		return &v
	}).(RetentionPolicyParametersPtrOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParameters) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParameters) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersPtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParameters)(nil)).Elem()
}

func (o RetentionPolicyParametersPtrOutput) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return o
}

func (o RetentionPolicyParametersPtrOutput) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return o
}

func (o RetentionPolicyParametersPtrOutput) Elem() RetentionPolicyParametersOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) RetentionPolicyParameters {
		if v != nil {
			return *v
		}
		var ret RetentionPolicyParameters
		return ret
	}).(RetentionPolicyParametersOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponse struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParametersResponse
func (val *RetentionPolicyParametersResponse) Defaults() *RetentionPolicyParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		days_ := 0
		tmp.Days = &days_
	}
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutput() RetentionPolicyParametersResponseOutput {
	return o
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutputWithContext(ctx context.Context) RetentionPolicyParametersResponseOutput {
	return o
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) Elem() RetentionPolicyParametersResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) RetentionPolicyParametersResponse {
		if v != nil {
			return *v
		}
		var ret RetentionPolicyParametersResponse
		return ret
	}).(RetentionPolicyParametersResponseOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Route resource.
type RouteType struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
	HasBgpOverride *bool `pulumi:"hasBgpOverride"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// RouteTypeInput is an input type that accepts RouteTypeArgs and RouteTypeOutput values.
// You can construct a concrete instance of `RouteTypeInput` via:
//
//	RouteTypeArgs{...}
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

// Route resource.
type RouteTypeArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
	HasBgpOverride pulumi.BoolPtrInput `pulumi:"hasBgpOverride"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (i RouteTypeArgs) ToRouteTypeOutput() RouteTypeOutput {
	return i.ToRouteTypeOutputWithContext(context.Background())
}

func (i RouteTypeArgs) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeOutput)
}

// RouteTypeArrayInput is an input type that accepts RouteTypeArray and RouteTypeArrayOutput values.
// You can construct a concrete instance of `RouteTypeArrayInput` via:
//
//	RouteTypeArray{ RouteTypeArgs{...} }
type RouteTypeArrayInput interface {
	pulumi.Input

	ToRouteTypeArrayOutput() RouteTypeArrayOutput
	ToRouteTypeArrayOutputWithContext(context.Context) RouteTypeArrayOutput
}

type RouteTypeArray []RouteTypeInput

func (RouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (i RouteTypeArray) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return i.ToRouteTypeArrayOutputWithContext(context.Background())
}

func (i RouteTypeArray) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeArrayOutput)
}

// Route resource.
type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
func (o RouteTypeOutput) HasBgpOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteType) *bool { return v.HasBgpOverride }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteTypeOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteTypeOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteType) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o RouteTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RouteTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) Index(i pulumi.IntInput) RouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteType {
		return vs[0].([]RouteType)[vs[1].(int)]
	}).(RouteTypeOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleType struct {
	// The access type of the rule.
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities []string `pulumi:"communities"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The rule type of the rule.
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRuleTypeInput is an input type that accepts RouteFilterRuleTypeArgs and RouteFilterRuleTypeOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeInput` via:
//
//	RouteFilterRuleTypeArgs{...}
type RouteFilterRuleTypeInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput
	ToRouteFilterRuleTypeOutputWithContext(context.Context) RouteFilterRuleTypeOutput
}

// Route Filter Rule Resource.
type RouteFilterRuleTypeArgs struct {
	// The access type of the rule.
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The rule type of the rule.
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return i.ToRouteFilterRuleTypeOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeOutput)
}

// RouteFilterRuleTypeArrayInput is an input type that accepts RouteFilterRuleTypeArray and RouteFilterRuleTypeArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeArrayInput` via:
//
//	RouteFilterRuleTypeArray{ RouteFilterRuleTypeArgs{...} }
type RouteFilterRuleTypeArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput
	ToRouteFilterRuleTypeArrayOutputWithContext(context.Context) RouteFilterRuleTypeArrayOutput
}

type RouteFilterRuleTypeArray []RouteFilterRuleTypeInput

func (RouteFilterRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return i.ToRouteFilterRuleTypeArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeArrayOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return o
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return o
}

// The access type of the rule.
func (o RouteFilterRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRuleTypeOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleType) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o RouteFilterRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule type of the rule.
func (o RouteFilterRuleTypeOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleType {
		return vs[0].([]RouteFilterRuleType)[vs[1].(int)]
	}).(RouteFilterRuleTypeOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleResponse struct {
	// The access type of the rule.
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities []string `pulumi:"communities"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the route filter rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The rule type of the rule.
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// Route Filter Rule Resource.
type RouteFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return o
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return o
}

// The access type of the rule.
func (o RouteFilterRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRuleResponseOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteFilterRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteFilterRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the route filter rule resource.
func (o RouteFilterRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The rule type of the rule.
func (o RouteFilterRuleResponseOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleResponse {
		return vs[0].([]RouteFilterRuleResponse)[vs[1].(int)]
	}).(RouteFilterRuleResponseOutput)
}

// A RouteMap Rule.
type RouteMapRule struct {
	// List of actions which will be applied on a match.
	Actions []Action `pulumi:"actions"`
	// List of matching criterion which will be applied to traffic.
	MatchCriteria []Criterion `pulumi:"matchCriteria"`
	// The unique name for the rule.
	Name *string `pulumi:"name"`
	// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
	NextStepIfMatched *string `pulumi:"nextStepIfMatched"`
}

// RouteMapRuleInput is an input type that accepts RouteMapRuleArgs and RouteMapRuleOutput values.
// You can construct a concrete instance of `RouteMapRuleInput` via:
//
//	RouteMapRuleArgs{...}
type RouteMapRuleInput interface {
	pulumi.Input

	ToRouteMapRuleOutput() RouteMapRuleOutput
	ToRouteMapRuleOutputWithContext(context.Context) RouteMapRuleOutput
}

// A RouteMap Rule.
type RouteMapRuleArgs struct {
	// List of actions which will be applied on a match.
	Actions ActionArrayInput `pulumi:"actions"`
	// List of matching criterion which will be applied to traffic.
	MatchCriteria CriterionArrayInput `pulumi:"matchCriteria"`
	// The unique name for the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
	NextStepIfMatched pulumi.StringPtrInput `pulumi:"nextStepIfMatched"`
}

func (RouteMapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRule)(nil)).Elem()
}

func (i RouteMapRuleArgs) ToRouteMapRuleOutput() RouteMapRuleOutput {
	return i.ToRouteMapRuleOutputWithContext(context.Background())
}

func (i RouteMapRuleArgs) ToRouteMapRuleOutputWithContext(ctx context.Context) RouteMapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleOutput)
}

// RouteMapRuleArrayInput is an input type that accepts RouteMapRuleArray and RouteMapRuleArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleArrayInput` via:
//
//	RouteMapRuleArray{ RouteMapRuleArgs{...} }
type RouteMapRuleArrayInput interface {
	pulumi.Input

	ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput
	ToRouteMapRuleArrayOutputWithContext(context.Context) RouteMapRuleArrayOutput
}

type RouteMapRuleArray []RouteMapRuleInput

func (RouteMapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRule)(nil)).Elem()
}

func (i RouteMapRuleArray) ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput {
	return i.ToRouteMapRuleArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleArray) ToRouteMapRuleArrayOutputWithContext(ctx context.Context) RouteMapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleArrayOutput)
}

// A RouteMap Rule.
type RouteMapRuleOutput struct{ *pulumi.OutputState }

func (RouteMapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRule)(nil)).Elem()
}

func (o RouteMapRuleOutput) ToRouteMapRuleOutput() RouteMapRuleOutput {
	return o
}

func (o RouteMapRuleOutput) ToRouteMapRuleOutputWithContext(ctx context.Context) RouteMapRuleOutput {
	return o
}

// List of actions which will be applied on a match.
func (o RouteMapRuleOutput) Actions() ActionArrayOutput {
	return o.ApplyT(func(v RouteMapRule) []Action { return v.Actions }).(ActionArrayOutput)
}

// List of matching criterion which will be applied to traffic.
func (o RouteMapRuleOutput) MatchCriteria() CriterionArrayOutput {
	return o.ApplyT(func(v RouteMapRule) []Criterion { return v.MatchCriteria }).(CriterionArrayOutput)
}

// The unique name for the rule.
func (o RouteMapRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
func (o RouteMapRuleOutput) NextStepIfMatched() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRule) *string { return v.NextStepIfMatched }).(pulumi.StringPtrOutput)
}

type RouteMapRuleArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRule)(nil)).Elem()
}

func (o RouteMapRuleArrayOutput) ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput {
	return o
}

func (o RouteMapRuleArrayOutput) ToRouteMapRuleArrayOutputWithContext(ctx context.Context) RouteMapRuleArrayOutput {
	return o
}

func (o RouteMapRuleArrayOutput) Index(i pulumi.IntInput) RouteMapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRule {
		return vs[0].([]RouteMapRule)[vs[1].(int)]
	}).(RouteMapRuleOutput)
}

// A RouteMap Rule.
type RouteMapRuleResponse struct {
	// List of actions which will be applied on a match.
	Actions []ActionResponse `pulumi:"actions"`
	// List of matching criterion which will be applied to traffic.
	MatchCriteria []CriterionResponse `pulumi:"matchCriteria"`
	// The unique name for the rule.
	Name *string `pulumi:"name"`
	// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
	NextStepIfMatched *string `pulumi:"nextStepIfMatched"`
}

// A RouteMap Rule.
type RouteMapRuleResponseOutput struct{ *pulumi.OutputState }

func (RouteMapRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleResponse)(nil)).Elem()
}

func (o RouteMapRuleResponseOutput) ToRouteMapRuleResponseOutput() RouteMapRuleResponseOutput {
	return o
}

func (o RouteMapRuleResponseOutput) ToRouteMapRuleResponseOutputWithContext(ctx context.Context) RouteMapRuleResponseOutput {
	return o
}

// List of actions which will be applied on a match.
func (o RouteMapRuleResponseOutput) Actions() ActionResponseArrayOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) []ActionResponse { return v.Actions }).(ActionResponseArrayOutput)
}

// List of matching criterion which will be applied to traffic.
func (o RouteMapRuleResponseOutput) MatchCriteria() CriterionResponseArrayOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) []CriterionResponse { return v.MatchCriteria }).(CriterionResponseArrayOutput)
}

// The unique name for the rule.
func (o RouteMapRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'.
func (o RouteMapRuleResponseOutput) NextStepIfMatched() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRuleResponse) *string { return v.NextStepIfMatched }).(pulumi.StringPtrOutput)
}

type RouteMapRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleResponse)(nil)).Elem()
}

func (o RouteMapRuleResponseArrayOutput) ToRouteMapRuleResponseArrayOutput() RouteMapRuleResponseArrayOutput {
	return o
}

func (o RouteMapRuleResponseArrayOutput) ToRouteMapRuleResponseArrayOutputWithContext(ctx context.Context) RouteMapRuleResponseArrayOutput {
	return o
}

func (o RouteMapRuleResponseArrayOutput) Index(i pulumi.IntInput) RouteMapRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRuleResponse {
		return vs[0].([]RouteMapRuleResponse)[vs[1].(int)]
	}).(RouteMapRuleResponseOutput)
}

// Route resource.
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
	HasBgpOverride *bool `pulumi:"hasBgpOverride"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the route resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Route resource.
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
func (o RouteResponseOutput) HasBgpOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteResponse) *bool { return v.HasBgpOverride }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the route resource.
func (o RouteResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource.
func (o RouteResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTableType struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteType `pulumi:"routes"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableTypeInput is an input type that accepts RouteTableTypeArgs and RouteTableTypeOutput values.
// You can construct a concrete instance of `RouteTableTypeInput` via:
//
//	RouteTableTypeArgs{...}
type RouteTableTypeInput interface {
	pulumi.Input

	ToRouteTableTypeOutput() RouteTableTypeOutput
	ToRouteTableTypeOutputWithContext(context.Context) RouteTableTypeOutput
}

// Route table resource.
type RouteTableTypeArgs struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteTypeArrayInput `pulumi:"routes"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return i.ToRouteTableTypeOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput)
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput).ToRouteTableTypePtrOutputWithContext(ctx)
}

// RouteTableTypePtrInput is an input type that accepts RouteTableTypeArgs, RouteTableTypePtr and RouteTableTypePtrOutput values.
// You can construct a concrete instance of `RouteTableTypePtrInput` via:
//
//	        RouteTableTypeArgs{...}
//
//	or:
//
//	        nil
type RouteTableTypePtrInput interface {
	pulumi.Input

	ToRouteTableTypePtrOutput() RouteTableTypePtrOutput
	ToRouteTableTypePtrOutputWithContext(context.Context) RouteTableTypePtrOutput
}

type routeTableTypePtrType RouteTableTypeArgs

func RouteTableTypePtr(v *RouteTableTypeArgs) RouteTableTypePtrInput {
	return (*routeTableTypePtrType)(v)
}

func (*routeTableTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypePtrOutput)
}

// Route table resource.
type RouteTableTypeOutput struct{ *pulumi.OutputState }

func (RouteTableTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTableType) *RouteTableType {
		return &v
	}).(RouteTableTypePtrOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypeOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableType) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypeOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v RouteTableType) []RouteType { return v.Routes }).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTableTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTableTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) Elem() RouteTableTypeOutput {
	return o.ApplyT(func(v *RouteTableType) RouteTableType {
		if v != nil {
			return *v
		}
		var ret RouteTableType
		return ret
	}).(RouteTableTypeOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypePtrOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v *RouteTableType) []RouteType {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the route table resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the route table.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponseOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the route table.
func (o RouteTableResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse {
		if v != nil {
			return *v
		}
		var ret RouteTableResponse
		return ret
	}).(RouteTableResponseOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponsePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the route table.
func (o RouteTableResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfiguration struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable *SubResource `pulumi:"associatedRouteTable"`
	// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
	InboundRouteMap *SubResource `pulumi:"inboundRouteMap"`
	// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
	OutboundRouteMap *SubResource `pulumi:"outboundRouteMap"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables *PropagatedRouteTable `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes *VnetRoute `pulumi:"vnetRoutes"`
}

// RoutingConfigurationInput is an input type that accepts RoutingConfigurationArgs and RoutingConfigurationOutput values.
// You can construct a concrete instance of `RoutingConfigurationInput` via:
//
//	RoutingConfigurationArgs{...}
type RoutingConfigurationInput interface {
	pulumi.Input

	ToRoutingConfigurationOutput() RoutingConfigurationOutput
	ToRoutingConfigurationOutputWithContext(context.Context) RoutingConfigurationOutput
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationArgs struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable SubResourcePtrInput `pulumi:"associatedRouteTable"`
	// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
	InboundRouteMap SubResourcePtrInput `pulumi:"inboundRouteMap"`
	// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
	OutboundRouteMap SubResourcePtrInput `pulumi:"outboundRouteMap"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables PropagatedRouteTablePtrInput `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes VnetRoutePtrInput `pulumi:"vnetRoutes"`
}

func (RoutingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfiguration)(nil)).Elem()
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationOutput() RoutingConfigurationOutput {
	return i.ToRoutingConfigurationOutputWithContext(context.Background())
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationOutputWithContext(ctx context.Context) RoutingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationOutput)
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return i.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationOutput).ToRoutingConfigurationPtrOutputWithContext(ctx)
}

// RoutingConfigurationPtrInput is an input type that accepts RoutingConfigurationArgs, RoutingConfigurationPtr and RoutingConfigurationPtrOutput values.
// You can construct a concrete instance of `RoutingConfigurationPtrInput` via:
//
//	        RoutingConfigurationArgs{...}
//
//	or:
//
//	        nil
type RoutingConfigurationPtrInput interface {
	pulumi.Input

	ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput
	ToRoutingConfigurationPtrOutputWithContext(context.Context) RoutingConfigurationPtrOutput
}

type routingConfigurationPtrType RoutingConfigurationArgs

func RoutingConfigurationPtr(v *RoutingConfigurationArgs) RoutingConfigurationPtrInput {
	return (*routingConfigurationPtrType)(v)
}

func (*routingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfiguration)(nil)).Elem()
}

func (i *routingConfigurationPtrType) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return i.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (i *routingConfigurationPtrType) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationPtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfiguration)(nil)).Elem()
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationOutput() RoutingConfigurationOutput {
	return o
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationOutputWithContext(ctx context.Context) RoutingConfigurationOutput {
	return o
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return o.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingConfiguration) *RoutingConfiguration {
		return &v
	}).(RoutingConfigurationPtrOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationOutput) AssociatedRouteTable() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *SubResource { return v.AssociatedRouteTable }).(SubResourcePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationOutput) InboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *SubResource { return v.InboundRouteMap }).(SubResourcePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationOutput) OutboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *SubResource { return v.OutboundRouteMap }).(SubResourcePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationOutput) PropagatedRouteTables() PropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *PropagatedRouteTable { return v.PropagatedRouteTables }).(PropagatedRouteTablePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationOutput) VnetRoutes() VnetRoutePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *VnetRoute { return v.VnetRoutes }).(VnetRoutePtrOutput)
}

type RoutingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfiguration)(nil)).Elem()
}

func (o RoutingConfigurationPtrOutput) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return o
}

func (o RoutingConfigurationPtrOutput) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return o
}

func (o RoutingConfigurationPtrOutput) Elem() RoutingConfigurationOutput {
	return o.ApplyT(func(v *RoutingConfiguration) RoutingConfiguration {
		if v != nil {
			return *v
		}
		var ret RoutingConfiguration
		return ret
	}).(RoutingConfigurationOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationPtrOutput) AssociatedRouteTable() SubResourcePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTable
	}).(SubResourcePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationPtrOutput) InboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.InboundRouteMap
	}).(SubResourcePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationPtrOutput) OutboundRouteMap() SubResourcePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMap
	}).(SubResourcePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationPtrOutput) PropagatedRouteTables() PropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *PropagatedRouteTable {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTables
	}).(PropagatedRouteTablePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationPtrOutput) VnetRoutes() VnetRoutePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *VnetRoute {
		if v == nil {
			return nil
		}
		return v.VnetRoutes
	}).(VnetRoutePtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationResponse struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable *SubResourceResponse `pulumi:"associatedRouteTable"`
	// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
	InboundRouteMap *SubResourceResponse `pulumi:"inboundRouteMap"`
	// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
	OutboundRouteMap *SubResourceResponse `pulumi:"outboundRouteMap"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables *PropagatedRouteTableResponse `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes *VnetRouteResponse `pulumi:"vnetRoutes"`
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfigurationResponse)(nil)).Elem()
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponseOutput() RoutingConfigurationResponseOutput {
	return o
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponseOutputWithContext(ctx context.Context) RoutingConfigurationResponseOutput {
	return o
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationResponseOutput) AssociatedRouteTable() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *SubResourceResponse { return v.AssociatedRouteTable }).(SubResourceResponsePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationResponseOutput) InboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *SubResourceResponse { return v.InboundRouteMap }).(SubResourceResponsePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationResponseOutput) OutboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *SubResourceResponse { return v.OutboundRouteMap }).(SubResourceResponsePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationResponseOutput) PropagatedRouteTables() PropagatedRouteTableResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *PropagatedRouteTableResponse { return v.PropagatedRouteTables }).(PropagatedRouteTableResponsePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationResponseOutput) VnetRoutes() VnetRouteResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *VnetRouteResponse { return v.VnetRoutes }).(VnetRouteResponsePtrOutput)
}

type RoutingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfigurationResponse)(nil)).Elem()
}

func (o RoutingConfigurationResponsePtrOutput) ToRoutingConfigurationResponsePtrOutput() RoutingConfigurationResponsePtrOutput {
	return o
}

func (o RoutingConfigurationResponsePtrOutput) ToRoutingConfigurationResponsePtrOutputWithContext(ctx context.Context) RoutingConfigurationResponsePtrOutput {
	return o
}

func (o RoutingConfigurationResponsePtrOutput) Elem() RoutingConfigurationResponseOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) RoutingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret RoutingConfigurationResponse
		return ret
	}).(RoutingConfigurationResponseOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationResponsePtrOutput) AssociatedRouteTable() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTable
	}).(SubResourceResponsePtrOutput)
}

// The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
func (o RoutingConfigurationResponsePtrOutput) InboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundRouteMap
	}).(SubResourceResponsePtrOutput)
}

// The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
func (o RoutingConfigurationResponsePtrOutput) OutboundRouteMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMap
	}).(SubResourceResponsePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationResponsePtrOutput) PropagatedRouteTables() PropagatedRouteTableResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *PropagatedRouteTableResponse {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTables
	}).(PropagatedRouteTableResponsePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationResponsePtrOutput) VnetRoutes() VnetRouteResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *VnetRouteResponse {
		if v == nil {
			return nil
		}
		return v.VnetRoutes
	}).(VnetRouteResponsePtrOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicy struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations []string `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name string `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop string `pulumi:"nextHop"`
}

// RoutingPolicyInput is an input type that accepts RoutingPolicyArgs and RoutingPolicyOutput values.
// You can construct a concrete instance of `RoutingPolicyInput` via:
//
//	RoutingPolicyArgs{...}
type RoutingPolicyInput interface {
	pulumi.Input

	ToRoutingPolicyOutput() RoutingPolicyOutput
	ToRoutingPolicyOutputWithContext(context.Context) RoutingPolicyOutput
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyArgs struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (RoutingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicy)(nil)).Elem()
}

func (i RoutingPolicyArgs) ToRoutingPolicyOutput() RoutingPolicyOutput {
	return i.ToRoutingPolicyOutputWithContext(context.Background())
}

func (i RoutingPolicyArgs) ToRoutingPolicyOutputWithContext(ctx context.Context) RoutingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPolicyOutput)
}

// RoutingPolicyArrayInput is an input type that accepts RoutingPolicyArray and RoutingPolicyArrayOutput values.
// You can construct a concrete instance of `RoutingPolicyArrayInput` via:
//
//	RoutingPolicyArray{ RoutingPolicyArgs{...} }
type RoutingPolicyArrayInput interface {
	pulumi.Input

	ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput
	ToRoutingPolicyArrayOutputWithContext(context.Context) RoutingPolicyArrayOutput
}

type RoutingPolicyArray []RoutingPolicyInput

func (RoutingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicy)(nil)).Elem()
}

func (i RoutingPolicyArray) ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput {
	return i.ToRoutingPolicyArrayOutputWithContext(context.Background())
}

func (i RoutingPolicyArray) ToRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPolicyArrayOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyOutput struct{ *pulumi.OutputState }

func (RoutingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicy)(nil)).Elem()
}

func (o RoutingPolicyOutput) ToRoutingPolicyOutput() RoutingPolicyOutput {
	return o
}

func (o RoutingPolicyOutput) ToRoutingPolicyOutputWithContext(ctx context.Context) RoutingPolicyOutput {
	return o
}

// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
func (o RoutingPolicyOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingPolicy) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The unique name for the routing policy.
func (o RoutingPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop resource id on which this routing policy is applicable to.
func (o RoutingPolicyOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicy) string { return v.NextHop }).(pulumi.StringOutput)
}

type RoutingPolicyArrayOutput struct{ *pulumi.OutputState }

func (RoutingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicy)(nil)).Elem()
}

func (o RoutingPolicyArrayOutput) ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput {
	return o
}

func (o RoutingPolicyArrayOutput) ToRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingPolicyArrayOutput {
	return o
}

func (o RoutingPolicyArrayOutput) Index(i pulumi.IntInput) RoutingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingPolicy {
		return vs[0].([]RoutingPolicy)[vs[1].(int)]
	}).(RoutingPolicyOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyResponse struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations []string `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name string `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop string `pulumi:"nextHop"`
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyResponseOutput struct{ *pulumi.OutputState }

func (RoutingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicyResponse)(nil)).Elem()
}

func (o RoutingPolicyResponseOutput) ToRoutingPolicyResponseOutput() RoutingPolicyResponseOutput {
	return o
}

func (o RoutingPolicyResponseOutput) ToRoutingPolicyResponseOutputWithContext(ctx context.Context) RoutingPolicyResponseOutput {
	return o
}

// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
func (o RoutingPolicyResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The unique name for the routing policy.
func (o RoutingPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop resource id on which this routing policy is applicable to.
func (o RoutingPolicyResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

type RoutingPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicyResponse)(nil)).Elem()
}

func (o RoutingPolicyResponseArrayOutput) ToRoutingPolicyResponseArrayOutput() RoutingPolicyResponseArrayOutput {
	return o
}

func (o RoutingPolicyResponseArrayOutput) ToRoutingPolicyResponseArrayOutputWithContext(ctx context.Context) RoutingPolicyResponseArrayOutput {
	return o
}

func (o RoutingPolicyResponseArrayOutput) Index(i pulumi.IntInput) RoutingPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingPolicyResponse {
		return vs[0].([]RoutingPolicyResponse)[vs[1].(int)]
	}).(RoutingPolicyResponseOutput)
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRule struct {
	// Protocol schemes to match for this rule
	AcceptedProtocols []string `pulumi:"acceptedProtocols"`
	// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// Frontend endpoints associated with this rule
	FrontendEndpoints []SubResource `pulumi:"frontendEndpoints"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatch []string `pulumi:"patternsToMatch"`
	// A reference to the routing configuration.
	RouteConfiguration interface{} `pulumi:"routeConfiguration"`
	// A reference to a specific Rules Engine Configuration to apply to this route.
	RulesEngine *SubResource `pulumi:"rulesEngine"`
	// Defines the Web Application Firewall policy for each routing rule (if applicable)
	WebApplicationFirewallPolicyLink *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// RoutingRuleInput is an input type that accepts RoutingRuleArgs and RoutingRuleOutput values.
// You can construct a concrete instance of `RoutingRuleInput` via:
//
//	RoutingRuleArgs{...}
type RoutingRuleInput interface {
	pulumi.Input

	ToRoutingRuleOutput() RoutingRuleOutput
	ToRoutingRuleOutputWithContext(context.Context) RoutingRuleOutput
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleArgs struct {
	// Protocol schemes to match for this rule
	AcceptedProtocols pulumi.StringArrayInput `pulumi:"acceptedProtocols"`
	// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Frontend endpoints associated with this rule
	FrontendEndpoints SubResourceArrayInput `pulumi:"frontendEndpoints"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatch pulumi.StringArrayInput `pulumi:"patternsToMatch"`
	// A reference to the routing configuration.
	RouteConfiguration pulumi.Input `pulumi:"routeConfiguration"`
	// A reference to a specific Rules Engine Configuration to apply to this route.
	RulesEngine SubResourcePtrInput `pulumi:"rulesEngine"`
	// Defines the Web Application Firewall policy for each routing rule (if applicable)
	WebApplicationFirewallPolicyLink RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput `pulumi:"webApplicationFirewallPolicyLink"`
}

func (RoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRule)(nil)).Elem()
}

func (i RoutingRuleArgs) ToRoutingRuleOutput() RoutingRuleOutput {
	return i.ToRoutingRuleOutputWithContext(context.Background())
}

func (i RoutingRuleArgs) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleOutput)
}

// RoutingRuleArrayInput is an input type that accepts RoutingRuleArray and RoutingRuleArrayOutput values.
// You can construct a concrete instance of `RoutingRuleArrayInput` via:
//
//	RoutingRuleArray{ RoutingRuleArgs{...} }
type RoutingRuleArrayInput interface {
	pulumi.Input

	ToRoutingRuleArrayOutput() RoutingRuleArrayOutput
	ToRoutingRuleArrayOutputWithContext(context.Context) RoutingRuleArrayOutput
}

type RoutingRuleArray []RoutingRuleInput

func (RoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRule)(nil)).Elem()
}

func (i RoutingRuleArray) ToRoutingRuleArrayOutput() RoutingRuleArrayOutput {
	return i.ToRoutingRuleArrayOutputWithContext(context.Background())
}

func (i RoutingRuleArray) ToRoutingRuleArrayOutputWithContext(ctx context.Context) RoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleArrayOutput)
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleOutput struct{ *pulumi.OutputState }

func (RoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRule)(nil)).Elem()
}

func (o RoutingRuleOutput) ToRoutingRuleOutput() RoutingRuleOutput {
	return o
}

func (o RoutingRuleOutput) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return o
}

// Protocol schemes to match for this rule
func (o RoutingRuleOutput) AcceptedProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRule) []string { return v.AcceptedProtocols }).(pulumi.StringArrayOutput)
}

// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
func (o RoutingRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Frontend endpoints associated with this rule
func (o RoutingRuleOutput) FrontendEndpoints() SubResourceArrayOutput {
	return o.ApplyT(func(v RoutingRule) []SubResource { return v.FrontendEndpoints }).(SubResourceArrayOutput)
}

// Resource ID.
func (o RoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The route patterns of the rule.
func (o RoutingRuleOutput) PatternsToMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRule) []string { return v.PatternsToMatch }).(pulumi.StringArrayOutput)
}

// A reference to the routing configuration.
func (o RoutingRuleOutput) RouteConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v RoutingRule) interface{} { return v.RouteConfiguration }).(pulumi.AnyOutput)
}

// A reference to a specific Rules Engine Configuration to apply to this route.
func (o RoutingRuleOutput) RulesEngine() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingRule) *SubResource { return v.RulesEngine }).(SubResourcePtrOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
func (o RoutingRuleOutput) WebApplicationFirewallPolicyLink() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v RoutingRule) *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

type RoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRule)(nil)).Elem()
}

func (o RoutingRuleArrayOutput) ToRoutingRuleArrayOutput() RoutingRuleArrayOutput {
	return o
}

func (o RoutingRuleArrayOutput) ToRoutingRuleArrayOutputWithContext(ctx context.Context) RoutingRuleArrayOutput {
	return o
}

func (o RoutingRuleArrayOutput) Index(i pulumi.IntInput) RoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRule {
		return vs[0].([]RoutingRule)[vs[1].(int)]
	}).(RoutingRuleOutput)
}

// Defines the Resource ID for a Routing Rule.
type RoutingRuleLinkResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Resource ID for a Routing Rule.
type RoutingRuleLinkResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleLinkResponse)(nil)).Elem()
}

func (o RoutingRuleLinkResponseOutput) ToRoutingRuleLinkResponseOutput() RoutingRuleLinkResponseOutput {
	return o
}

func (o RoutingRuleLinkResponseOutput) ToRoutingRuleLinkResponseOutputWithContext(ctx context.Context) RoutingRuleLinkResponseOutput {
	return o
}

// Resource ID.
func (o RoutingRuleLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type RoutingRuleLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleLinkResponse)(nil)).Elem()
}

func (o RoutingRuleLinkResponseArrayOutput) ToRoutingRuleLinkResponseArrayOutput() RoutingRuleLinkResponseArrayOutput {
	return o
}

func (o RoutingRuleLinkResponseArrayOutput) ToRoutingRuleLinkResponseArrayOutputWithContext(ctx context.Context) RoutingRuleLinkResponseArrayOutput {
	return o
}

func (o RoutingRuleLinkResponseArrayOutput) Index(i pulumi.IntInput) RoutingRuleLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRuleLinkResponse {
		return vs[0].([]RoutingRuleLinkResponse)[vs[1].(int)]
	}).(RoutingRuleLinkResponseOutput)
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleResponse struct {
	// Protocol schemes to match for this rule
	AcceptedProtocols []string `pulumi:"acceptedProtocols"`
	// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// Frontend endpoints associated with this rule
	FrontendEndpoints []SubResourceResponse `pulumi:"frontendEndpoints"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatch []string `pulumi:"patternsToMatch"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// A reference to the routing configuration.
	RouteConfiguration interface{} `pulumi:"routeConfiguration"`
	// A reference to a specific Rules Engine Configuration to apply to this route.
	RulesEngine *SubResourceResponse `pulumi:"rulesEngine"`
	// Resource type.
	Type string `pulumi:"type"`
	// Defines the Web Application Firewall policy for each routing rule (if applicable)
	WebApplicationFirewallPolicyLink *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleResponse)(nil)).Elem()
}

func (o RoutingRuleResponseOutput) ToRoutingRuleResponseOutput() RoutingRuleResponseOutput {
	return o
}

func (o RoutingRuleResponseOutput) ToRoutingRuleResponseOutputWithContext(ctx context.Context) RoutingRuleResponseOutput {
	return o
}

// Protocol schemes to match for this rule
func (o RoutingRuleResponseOutput) AcceptedProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRuleResponse) []string { return v.AcceptedProtocols }).(pulumi.StringArrayOutput)
}

// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
func (o RoutingRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Frontend endpoints associated with this rule
func (o RoutingRuleResponseOutput) FrontendEndpoints() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v RoutingRuleResponse) []SubResourceResponse { return v.FrontendEndpoints }).(SubResourceResponseArrayOutput)
}

// Resource ID.
func (o RoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The route patterns of the rule.
func (o RoutingRuleResponseOutput) PatternsToMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRuleResponse) []string { return v.PatternsToMatch }).(pulumi.StringArrayOutput)
}

// Resource status.
func (o RoutingRuleResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// A reference to the routing configuration.
func (o RoutingRuleResponseOutput) RouteConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v RoutingRuleResponse) interface{} { return v.RouteConfiguration }).(pulumi.AnyOutput)
}

// A reference to a specific Rules Engine Configuration to apply to this route.
func (o RoutingRuleResponseOutput) RulesEngine() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *SubResourceResponse { return v.RulesEngine }).(SubResourceResponsePtrOutput)
}

// Resource type.
func (o RoutingRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
func (o RoutingRuleResponseOutput) WebApplicationFirewallPolicyLink() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

type RoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleResponse)(nil)).Elem()
}

func (o RoutingRuleResponseArrayOutput) ToRoutingRuleResponseArrayOutput() RoutingRuleResponseArrayOutput {
	return o
}

func (o RoutingRuleResponseArrayOutput) ToRoutingRuleResponseArrayOutputWithContext(ctx context.Context) RoutingRuleResponseArrayOutput {
	return o
}

func (o RoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) RoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRuleResponse {
		return vs[0].([]RoutingRuleResponse)[vs[1].(int)]
	}).(RoutingRuleResponseOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

// Resource ID.
func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink
		return ret
	}).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs and RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//	RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs, RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtr and RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//	        RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//	or:
//
//	        nil
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs

func RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink {
		return &v
	}).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Elem() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink
		return ret
	}).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineAction struct {
	// A list of header actions to apply from the request from AFD to the origin.
	RequestHeaderActions []HeaderAction `pulumi:"requestHeaderActions"`
	// A list of header actions to apply from the response from AFD to the client.
	ResponseHeaderActions []HeaderAction `pulumi:"responseHeaderActions"`
	// Override the route configuration.
	RouteConfigurationOverride interface{} `pulumi:"routeConfigurationOverride"`
}

// RulesEngineActionInput is an input type that accepts RulesEngineActionArgs and RulesEngineActionOutput values.
// You can construct a concrete instance of `RulesEngineActionInput` via:
//
//	RulesEngineActionArgs{...}
type RulesEngineActionInput interface {
	pulumi.Input

	ToRulesEngineActionOutput() RulesEngineActionOutput
	ToRulesEngineActionOutputWithContext(context.Context) RulesEngineActionOutput
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionArgs struct {
	// A list of header actions to apply from the request from AFD to the origin.
	RequestHeaderActions HeaderActionArrayInput `pulumi:"requestHeaderActions"`
	// A list of header actions to apply from the response from AFD to the client.
	ResponseHeaderActions HeaderActionArrayInput `pulumi:"responseHeaderActions"`
	// Override the route configuration.
	RouteConfigurationOverride pulumi.Input `pulumi:"routeConfigurationOverride"`
}

func (RulesEngineActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineAction)(nil)).Elem()
}

func (i RulesEngineActionArgs) ToRulesEngineActionOutput() RulesEngineActionOutput {
	return i.ToRulesEngineActionOutputWithContext(context.Background())
}

func (i RulesEngineActionArgs) ToRulesEngineActionOutputWithContext(ctx context.Context) RulesEngineActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineActionOutput)
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionOutput struct{ *pulumi.OutputState }

func (RulesEngineActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineAction)(nil)).Elem()
}

func (o RulesEngineActionOutput) ToRulesEngineActionOutput() RulesEngineActionOutput {
	return o
}

func (o RulesEngineActionOutput) ToRulesEngineActionOutputWithContext(ctx context.Context) RulesEngineActionOutput {
	return o
}

// A list of header actions to apply from the request from AFD to the origin.
func (o RulesEngineActionOutput) RequestHeaderActions() HeaderActionArrayOutput {
	return o.ApplyT(func(v RulesEngineAction) []HeaderAction { return v.RequestHeaderActions }).(HeaderActionArrayOutput)
}

// A list of header actions to apply from the response from AFD to the client.
func (o RulesEngineActionOutput) ResponseHeaderActions() HeaderActionArrayOutput {
	return o.ApplyT(func(v RulesEngineAction) []HeaderAction { return v.ResponseHeaderActions }).(HeaderActionArrayOutput)
}

// Override the route configuration.
func (o RulesEngineActionOutput) RouteConfigurationOverride() pulumi.AnyOutput {
	return o.ApplyT(func(v RulesEngineAction) interface{} { return v.RouteConfigurationOverride }).(pulumi.AnyOutput)
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionResponse struct {
	// A list of header actions to apply from the request from AFD to the origin.
	RequestHeaderActions []HeaderActionResponse `pulumi:"requestHeaderActions"`
	// A list of header actions to apply from the response from AFD to the client.
	ResponseHeaderActions []HeaderActionResponse `pulumi:"responseHeaderActions"`
	// Override the route configuration.
	RouteConfigurationOverride interface{} `pulumi:"routeConfigurationOverride"`
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineActionResponse)(nil)).Elem()
}

func (o RulesEngineActionResponseOutput) ToRulesEngineActionResponseOutput() RulesEngineActionResponseOutput {
	return o
}

func (o RulesEngineActionResponseOutput) ToRulesEngineActionResponseOutputWithContext(ctx context.Context) RulesEngineActionResponseOutput {
	return o
}

// A list of header actions to apply from the request from AFD to the origin.
func (o RulesEngineActionResponseOutput) RequestHeaderActions() HeaderActionResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineActionResponse) []HeaderActionResponse { return v.RequestHeaderActions }).(HeaderActionResponseArrayOutput)
}

// A list of header actions to apply from the response from AFD to the client.
func (o RulesEngineActionResponseOutput) ResponseHeaderActions() HeaderActionResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineActionResponse) []HeaderActionResponse { return v.ResponseHeaderActions }).(HeaderActionResponseArrayOutput)
}

// Override the route configuration.
func (o RulesEngineActionResponseOutput) RouteConfigurationOverride() pulumi.AnyOutput {
	return o.ApplyT(func(v RulesEngineActionResponse) interface{} { return v.RouteConfigurationOverride }).(pulumi.AnyOutput)
}

// Define a match condition
type RulesEngineMatchCondition struct {
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	RulesEngineMatchValue []string `pulumi:"rulesEngineMatchValue"`
	// Match Variable
	RulesEngineMatchVariable string `pulumi:"rulesEngineMatchVariable"`
	// Describes operator to apply to the match condition.
	RulesEngineOperator string `pulumi:"rulesEngineOperator"`
	// Name of selector in RequestHeader or RequestBody to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RulesEngineMatchConditionInput is an input type that accepts RulesEngineMatchConditionArgs and RulesEngineMatchConditionOutput values.
// You can construct a concrete instance of `RulesEngineMatchConditionInput` via:
//
//	RulesEngineMatchConditionArgs{...}
type RulesEngineMatchConditionInput interface {
	pulumi.Input

	ToRulesEngineMatchConditionOutput() RulesEngineMatchConditionOutput
	ToRulesEngineMatchConditionOutputWithContext(context.Context) RulesEngineMatchConditionOutput
}

// Define a match condition
type RulesEngineMatchConditionArgs struct {
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	RulesEngineMatchValue pulumi.StringArrayInput `pulumi:"rulesEngineMatchValue"`
	// Match Variable
	RulesEngineMatchVariable pulumi.StringInput `pulumi:"rulesEngineMatchVariable"`
	// Describes operator to apply to the match condition.
	RulesEngineOperator pulumi.StringInput `pulumi:"rulesEngineOperator"`
	// Name of selector in RequestHeader or RequestBody to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RulesEngineMatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineMatchCondition)(nil)).Elem()
}

func (i RulesEngineMatchConditionArgs) ToRulesEngineMatchConditionOutput() RulesEngineMatchConditionOutput {
	return i.ToRulesEngineMatchConditionOutputWithContext(context.Background())
}

func (i RulesEngineMatchConditionArgs) ToRulesEngineMatchConditionOutputWithContext(ctx context.Context) RulesEngineMatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineMatchConditionOutput)
}

// RulesEngineMatchConditionArrayInput is an input type that accepts RulesEngineMatchConditionArray and RulesEngineMatchConditionArrayOutput values.
// You can construct a concrete instance of `RulesEngineMatchConditionArrayInput` via:
//
//	RulesEngineMatchConditionArray{ RulesEngineMatchConditionArgs{...} }
type RulesEngineMatchConditionArrayInput interface {
	pulumi.Input

	ToRulesEngineMatchConditionArrayOutput() RulesEngineMatchConditionArrayOutput
	ToRulesEngineMatchConditionArrayOutputWithContext(context.Context) RulesEngineMatchConditionArrayOutput
}

type RulesEngineMatchConditionArray []RulesEngineMatchConditionInput

func (RulesEngineMatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineMatchCondition)(nil)).Elem()
}

func (i RulesEngineMatchConditionArray) ToRulesEngineMatchConditionArrayOutput() RulesEngineMatchConditionArrayOutput {
	return i.ToRulesEngineMatchConditionArrayOutputWithContext(context.Background())
}

func (i RulesEngineMatchConditionArray) ToRulesEngineMatchConditionArrayOutputWithContext(ctx context.Context) RulesEngineMatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineMatchConditionArrayOutput)
}

// Define a match condition
type RulesEngineMatchConditionOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineMatchCondition)(nil)).Elem()
}

func (o RulesEngineMatchConditionOutput) ToRulesEngineMatchConditionOutput() RulesEngineMatchConditionOutput {
	return o
}

func (o RulesEngineMatchConditionOutput) ToRulesEngineMatchConditionOutputWithContext(ctx context.Context) RulesEngineMatchConditionOutput {
	return o
}

// Describes if this is negate condition or not
func (o RulesEngineMatchConditionOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RulesEngineMatchConditionOutput) RulesEngineMatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) []string { return v.RulesEngineMatchValue }).(pulumi.StringArrayOutput)
}

// Match Variable
func (o RulesEngineMatchConditionOutput) RulesEngineMatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) string { return v.RulesEngineMatchVariable }).(pulumi.StringOutput)
}

// Describes operator to apply to the match condition.
func (o RulesEngineMatchConditionOutput) RulesEngineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) string { return v.RulesEngineOperator }).(pulumi.StringOutput)
}

// Name of selector in RequestHeader or RequestBody to be matched
func (o RulesEngineMatchConditionOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RulesEngineMatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type RulesEngineMatchConditionArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineMatchCondition)(nil)).Elem()
}

func (o RulesEngineMatchConditionArrayOutput) ToRulesEngineMatchConditionArrayOutput() RulesEngineMatchConditionArrayOutput {
	return o
}

func (o RulesEngineMatchConditionArrayOutput) ToRulesEngineMatchConditionArrayOutputWithContext(ctx context.Context) RulesEngineMatchConditionArrayOutput {
	return o
}

func (o RulesEngineMatchConditionArrayOutput) Index(i pulumi.IntInput) RulesEngineMatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineMatchCondition {
		return vs[0].([]RulesEngineMatchCondition)[vs[1].(int)]
	}).(RulesEngineMatchConditionOutput)
}

// Define a match condition
type RulesEngineMatchConditionResponse struct {
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	RulesEngineMatchValue []string `pulumi:"rulesEngineMatchValue"`
	// Match Variable
	RulesEngineMatchVariable string `pulumi:"rulesEngineMatchVariable"`
	// Describes operator to apply to the match condition.
	RulesEngineOperator string `pulumi:"rulesEngineOperator"`
	// Name of selector in RequestHeader or RequestBody to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Define a match condition
type RulesEngineMatchConditionResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineMatchConditionResponse)(nil)).Elem()
}

func (o RulesEngineMatchConditionResponseOutput) ToRulesEngineMatchConditionResponseOutput() RulesEngineMatchConditionResponseOutput {
	return o
}

func (o RulesEngineMatchConditionResponseOutput) ToRulesEngineMatchConditionResponseOutputWithContext(ctx context.Context) RulesEngineMatchConditionResponseOutput {
	return o
}

// Describes if this is negate condition or not
func (o RulesEngineMatchConditionResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RulesEngineMatchConditionResponseOutput) RulesEngineMatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) []string { return v.RulesEngineMatchValue }).(pulumi.StringArrayOutput)
}

// Match Variable
func (o RulesEngineMatchConditionResponseOutput) RulesEngineMatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) string { return v.RulesEngineMatchVariable }).(pulumi.StringOutput)
}

// Describes operator to apply to the match condition.
func (o RulesEngineMatchConditionResponseOutput) RulesEngineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) string { return v.RulesEngineOperator }).(pulumi.StringOutput)
}

// Name of selector in RequestHeader or RequestBody to be matched
func (o RulesEngineMatchConditionResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RulesEngineMatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type RulesEngineMatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineMatchConditionResponse)(nil)).Elem()
}

func (o RulesEngineMatchConditionResponseArrayOutput) ToRulesEngineMatchConditionResponseArrayOutput() RulesEngineMatchConditionResponseArrayOutput {
	return o
}

func (o RulesEngineMatchConditionResponseArrayOutput) ToRulesEngineMatchConditionResponseArrayOutputWithContext(ctx context.Context) RulesEngineMatchConditionResponseArrayOutput {
	return o
}

func (o RulesEngineMatchConditionResponseArrayOutput) Index(i pulumi.IntInput) RulesEngineMatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineMatchConditionResponse {
		return vs[0].([]RulesEngineMatchConditionResponse)[vs[1].(int)]
	}).(RulesEngineMatchConditionResponseOutput)
}

// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
type RulesEngineResponse struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// A list of rules that define a particular Rules Engine Configuration.
	Rules []RulesEngineRuleResponse `pulumi:"rules"`
	// Resource type.
	Type string `pulumi:"type"`
}

// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
type RulesEngineResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineResponse)(nil)).Elem()
}

func (o RulesEngineResponseOutput) ToRulesEngineResponseOutput() RulesEngineResponseOutput {
	return o
}

func (o RulesEngineResponseOutput) ToRulesEngineResponseOutputWithContext(ctx context.Context) RulesEngineResponseOutput {
	return o
}

// Resource ID.
func (o RulesEngineResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o RulesEngineResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource status.
func (o RulesEngineResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// A list of rules that define a particular Rules Engine Configuration.
func (o RulesEngineResponseOutput) Rules() RulesEngineRuleResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineResponse) []RulesEngineRuleResponse { return v.Rules }).(RulesEngineRuleResponseArrayOutput)
}

// Resource type.
func (o RulesEngineResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RulesEngineResponseArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineResponse)(nil)).Elem()
}

func (o RulesEngineResponseArrayOutput) ToRulesEngineResponseArrayOutput() RulesEngineResponseArrayOutput {
	return o
}

func (o RulesEngineResponseArrayOutput) ToRulesEngineResponseArrayOutputWithContext(ctx context.Context) RulesEngineResponseArrayOutput {
	return o
}

func (o RulesEngineResponseArrayOutput) Index(i pulumi.IntInput) RulesEngineResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineResponse {
		return vs[0].([]RulesEngineResponse)[vs[1].(int)]
	}).(RulesEngineResponseOutput)
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRule struct {
	// Actions to perform on the request and response if all of the match conditions are met.
	Action RulesEngineAction `pulumi:"action"`
	// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
	MatchConditions []RulesEngineMatchCondition `pulumi:"matchConditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior *string `pulumi:"matchProcessingBehavior"`
	// A name to refer to this specific rule.
	Name string `pulumi:"name"`
	// A priority assigned to this rule.
	Priority int `pulumi:"priority"`
}

// RulesEngineRuleInput is an input type that accepts RulesEngineRuleArgs and RulesEngineRuleOutput values.
// You can construct a concrete instance of `RulesEngineRuleInput` via:
//
//	RulesEngineRuleArgs{...}
type RulesEngineRuleInput interface {
	pulumi.Input

	ToRulesEngineRuleOutput() RulesEngineRuleOutput
	ToRulesEngineRuleOutputWithContext(context.Context) RulesEngineRuleOutput
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleArgs struct {
	// Actions to perform on the request and response if all of the match conditions are met.
	Action RulesEngineActionInput `pulumi:"action"`
	// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
	MatchConditions RulesEngineMatchConditionArrayInput `pulumi:"matchConditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior pulumi.StringPtrInput `pulumi:"matchProcessingBehavior"`
	// A name to refer to this specific rule.
	Name pulumi.StringInput `pulumi:"name"`
	// A priority assigned to this rule.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (RulesEngineRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineRule)(nil)).Elem()
}

func (i RulesEngineRuleArgs) ToRulesEngineRuleOutput() RulesEngineRuleOutput {
	return i.ToRulesEngineRuleOutputWithContext(context.Background())
}

func (i RulesEngineRuleArgs) ToRulesEngineRuleOutputWithContext(ctx context.Context) RulesEngineRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineRuleOutput)
}

// RulesEngineRuleArrayInput is an input type that accepts RulesEngineRuleArray and RulesEngineRuleArrayOutput values.
// You can construct a concrete instance of `RulesEngineRuleArrayInput` via:
//
//	RulesEngineRuleArray{ RulesEngineRuleArgs{...} }
type RulesEngineRuleArrayInput interface {
	pulumi.Input

	ToRulesEngineRuleArrayOutput() RulesEngineRuleArrayOutput
	ToRulesEngineRuleArrayOutputWithContext(context.Context) RulesEngineRuleArrayOutput
}

type RulesEngineRuleArray []RulesEngineRuleInput

func (RulesEngineRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineRule)(nil)).Elem()
}

func (i RulesEngineRuleArray) ToRulesEngineRuleArrayOutput() RulesEngineRuleArrayOutput {
	return i.ToRulesEngineRuleArrayOutputWithContext(context.Background())
}

func (i RulesEngineRuleArray) ToRulesEngineRuleArrayOutputWithContext(ctx context.Context) RulesEngineRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineRuleArrayOutput)
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineRule)(nil)).Elem()
}

func (o RulesEngineRuleOutput) ToRulesEngineRuleOutput() RulesEngineRuleOutput {
	return o
}

func (o RulesEngineRuleOutput) ToRulesEngineRuleOutputWithContext(ctx context.Context) RulesEngineRuleOutput {
	return o
}

// Actions to perform on the request and response if all of the match conditions are met.
func (o RulesEngineRuleOutput) Action() RulesEngineActionOutput {
	return o.ApplyT(func(v RulesEngineRule) RulesEngineAction { return v.Action }).(RulesEngineActionOutput)
}

// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
func (o RulesEngineRuleOutput) MatchConditions() RulesEngineMatchConditionArrayOutput {
	return o.ApplyT(func(v RulesEngineRule) []RulesEngineMatchCondition { return v.MatchConditions }).(RulesEngineMatchConditionArrayOutput)
}

// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
func (o RulesEngineRuleOutput) MatchProcessingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineRule) *string { return v.MatchProcessingBehavior }).(pulumi.StringPtrOutput)
}

// A name to refer to this specific rule.
func (o RulesEngineRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineRule) string { return v.Name }).(pulumi.StringOutput)
}

// A priority assigned to this rule.
func (o RulesEngineRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RulesEngineRule) int { return v.Priority }).(pulumi.IntOutput)
}

type RulesEngineRuleArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineRule)(nil)).Elem()
}

func (o RulesEngineRuleArrayOutput) ToRulesEngineRuleArrayOutput() RulesEngineRuleArrayOutput {
	return o
}

func (o RulesEngineRuleArrayOutput) ToRulesEngineRuleArrayOutputWithContext(ctx context.Context) RulesEngineRuleArrayOutput {
	return o
}

func (o RulesEngineRuleArrayOutput) Index(i pulumi.IntInput) RulesEngineRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineRule {
		return vs[0].([]RulesEngineRule)[vs[1].(int)]
	}).(RulesEngineRuleOutput)
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleResponse struct {
	// Actions to perform on the request and response if all of the match conditions are met.
	Action RulesEngineActionResponse `pulumi:"action"`
	// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
	MatchConditions []RulesEngineMatchConditionResponse `pulumi:"matchConditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior *string `pulumi:"matchProcessingBehavior"`
	// A name to refer to this specific rule.
	Name string `pulumi:"name"`
	// A priority assigned to this rule.
	Priority int `pulumi:"priority"`
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineRuleResponse)(nil)).Elem()
}

func (o RulesEngineRuleResponseOutput) ToRulesEngineRuleResponseOutput() RulesEngineRuleResponseOutput {
	return o
}

func (o RulesEngineRuleResponseOutput) ToRulesEngineRuleResponseOutputWithContext(ctx context.Context) RulesEngineRuleResponseOutput {
	return o
}

// Actions to perform on the request and response if all of the match conditions are met.
func (o RulesEngineRuleResponseOutput) Action() RulesEngineActionResponseOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) RulesEngineActionResponse { return v.Action }).(RulesEngineActionResponseOutput)
}

// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
func (o RulesEngineRuleResponseOutput) MatchConditions() RulesEngineMatchConditionResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) []RulesEngineMatchConditionResponse { return v.MatchConditions }).(RulesEngineMatchConditionResponseArrayOutput)
}

// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
func (o RulesEngineRuleResponseOutput) MatchProcessingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) *string { return v.MatchProcessingBehavior }).(pulumi.StringPtrOutput)
}

// A name to refer to this specific rule.
func (o RulesEngineRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A priority assigned to this rule.
func (o RulesEngineRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

type RulesEngineRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineRuleResponse)(nil)).Elem()
}

func (o RulesEngineRuleResponseArrayOutput) ToRulesEngineRuleResponseArrayOutput() RulesEngineRuleResponseArrayOutput {
	return o
}

func (o RulesEngineRuleResponseArrayOutput) ToRulesEngineRuleResponseArrayOutputWithContext(ctx context.Context) RulesEngineRuleResponseArrayOutput {
	return o
}

func (o RulesEngineRuleResponseArrayOutput) Index(i pulumi.IntInput) RulesEngineRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineRuleResponse {
		return vs[0].([]RulesEngineRuleResponse)[vs[1].(int)]
	}).(RulesEngineRuleResponseOutput)
}

// Defines the Resource ID for a Security Policy.
type SecurityPolicyLinkResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Resource ID for a Security Policy.
type SecurityPolicyLinkResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyLinkResponse)(nil)).Elem()
}

func (o SecurityPolicyLinkResponseOutput) ToSecurityPolicyLinkResponseOutput() SecurityPolicyLinkResponseOutput {
	return o
}

func (o SecurityPolicyLinkResponseOutput) ToSecurityPolicyLinkResponseOutputWithContext(ctx context.Context) SecurityPolicyLinkResponseOutput {
	return o
}

// Resource ID.
func (o SecurityPolicyLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SecurityPolicyLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyLinkResponse)(nil)).Elem()
}

func (o SecurityPolicyLinkResponseArrayOutput) ToSecurityPolicyLinkResponseArrayOutput() SecurityPolicyLinkResponseArrayOutput {
	return o
}

func (o SecurityPolicyLinkResponseArrayOutput) ToSecurityPolicyLinkResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyLinkResponseArrayOutput {
	return o
}

func (o SecurityPolicyLinkResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyLinkResponse {
		return vs[0].([]SecurityPolicyLinkResponse)[vs[1].(int)]
	}).(SecurityPolicyLinkResponseOutput)
}

// Network security rule.
type SecurityRuleType struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// SecurityRuleTypeInput is an input type that accepts SecurityRuleTypeArgs and SecurityRuleTypeOutput values.
// You can construct a concrete instance of `SecurityRuleTypeInput` via:
//
//	SecurityRuleTypeArgs{...}
type SecurityRuleTypeInput interface {
	pulumi.Input

	ToSecurityRuleTypeOutput() SecurityRuleTypeOutput
	ToSecurityRuleTypeOutputWithContext(context.Context) SecurityRuleTypeOutput
}

// Network security rule.
type SecurityRuleTypeArgs struct {
	// The network traffic is allowed or denied.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecurityRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return i.ToSecurityRuleTypeOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeOutput)
}

// SecurityRuleTypeArrayInput is an input type that accepts SecurityRuleTypeArray and SecurityRuleTypeArrayOutput values.
// You can construct a concrete instance of `SecurityRuleTypeArrayInput` via:
//
//	SecurityRuleTypeArray{ SecurityRuleTypeArgs{...} }
type SecurityRuleTypeArrayInput interface {
	pulumi.Input

	ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput
	ToSecurityRuleTypeArrayOutputWithContext(context.Context) SecurityRuleTypeArrayOutput
}

type SecurityRuleTypeArray []SecurityRuleTypeInput

func (SecurityRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return i.ToSecurityRuleTypeArrayOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeArrayOutput)
}

// Network security rule.
type SecurityRuleTypeOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return o
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleTypeOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleTypeOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleTypeOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.DestinationApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleTypeOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleTypeOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRuleTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleTypeOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleTypeOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleTypeOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.SourceApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleTypeOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o SecurityRuleTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecurityRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) Index(i pulumi.IntInput) SecurityRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleType {
		return vs[0].([]SecurityRuleType)[vs[1].(int)]
	}).(SecurityRuleTypeOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleResponseOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleResponseOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security rule resource.
func (o SecurityRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleResponseOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleResponseOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o SecurityRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ServiceAssociationLinkInput is an input type that accepts ServiceAssociationLinkArgs and ServiceAssociationLinkOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkInput` via:
//
//	ServiceAssociationLinkArgs{...}
type ServiceAssociationLinkInput interface {
	pulumi.Input

	ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput
	ToServiceAssociationLinkOutputWithContext(context.Context) ServiceAssociationLinkOutput
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServiceAssociationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return i.ToServiceAssociationLinkOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkOutput)
}

// ServiceAssociationLinkArrayInput is an input type that accepts ServiceAssociationLinkArray and ServiceAssociationLinkArrayOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkArrayInput` via:
//
//	ServiceAssociationLinkArray{ ServiceAssociationLinkArgs{...} }
type ServiceAssociationLinkArrayInput interface {
	pulumi.Input

	ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput
	ToServiceAssociationLinkArrayOutputWithContext(context.Context) ServiceAssociationLinkArrayOutput
}

type ServiceAssociationLinkArray []ServiceAssociationLinkInput

func (ServiceAssociationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLink)(nil)).Elem()
}

func (i ServiceAssociationLinkArray) ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput {
	return i.ToServiceAssociationLinkArrayOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkArray) ToServiceAssociationLinkArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkArrayOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return o
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return o
}

// Resource ID.
func (o ServiceAssociationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServiceAssociationLinkArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLink)(nil)).Elem()
}

func (o ServiceAssociationLinkArrayOutput) ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput {
	return o
}

func (o ServiceAssociationLinkArrayOutput) ToServiceAssociationLinkArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkArrayOutput {
	return o
}

func (o ServiceAssociationLinkArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLink {
		return vs[0].([]ServiceAssociationLink)[vs[1].(int)]
	}).(ServiceAssociationLinkOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponse struct {
	// If true, the resource can be deleted.
	AllowDelete *bool `pulumi:"allowDelete"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service association link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return o
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return o
}

// If true, the resource can be deleted.
func (o ServiceAssociationLinkResponseOutput) AllowDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *bool { return v.AllowDelete }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceAssociationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceAssociationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// A list of locations.
func (o ServiceAssociationLinkResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service association link resource.
func (o ServiceAssociationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ServiceAssociationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceAssociationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLinkResponse {
		return vs[0].([]ServiceAssociationLinkResponse)[vs[1].(int)]
	}).(ServiceAssociationLinkResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyType struct {
	// A collection of contextual service endpoint policy.
	ContextualServiceEndpointPolicies []string `pulumi:"contextualServiceEndpointPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The alias indicating if the policy belongs to a service
	ServiceAlias *string `pulumi:"serviceAlias"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionType `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ServiceEndpointPolicyTypeInput is an input type that accepts ServiceEndpointPolicyTypeArgs and ServiceEndpointPolicyTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeInput` via:
//
//	ServiceEndpointPolicyTypeArgs{...}
type ServiceEndpointPolicyTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput
	ToServiceEndpointPolicyTypeOutputWithContext(context.Context) ServiceEndpointPolicyTypeOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeArgs struct {
	// A collection of contextual service endpoint policy.
	ContextualServiceEndpointPolicies pulumi.StringArrayInput `pulumi:"contextualServiceEndpointPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The alias indicating if the policy belongs to a service
	ServiceAlias pulumi.StringPtrInput `pulumi:"serviceAlias"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionTypeArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ServiceEndpointPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return i.ToServiceEndpointPolicyTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeOutput)
}

// ServiceEndpointPolicyTypeArrayInput is an input type that accepts ServiceEndpointPolicyTypeArray and ServiceEndpointPolicyTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeArrayInput` via:
//
//	ServiceEndpointPolicyTypeArray{ ServiceEndpointPolicyTypeArgs{...} }
type ServiceEndpointPolicyTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput
	ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyTypeArrayOutput
}

type ServiceEndpointPolicyTypeArray []ServiceEndpointPolicyTypeInput

func (ServiceEndpointPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return i.ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return o
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return o
}

// A collection of contextual service endpoint policy.
func (o ServiceEndpointPolicyTypeOutput) ContextualServiceEndpointPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) []string { return v.ContextualServiceEndpointPolicies }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The alias indicating if the policy belongs to a service
func (o ServiceEndpointPolicyTypeOutput) ServiceAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.ServiceAlias }).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyTypeOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) []ServiceEndpointPolicyDefinitionType {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceEndpointPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyType {
		return vs[0].([]ServiceEndpointPolicyType)[vs[1].(int)]
	}).(ServiceEndpointPolicyTypeOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionType struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// ServiceEndpointPolicyDefinitionTypeInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArgs and ServiceEndpointPolicyDefinitionTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeInput` via:
//
//	ServiceEndpointPolicyDefinitionTypeArgs{...}
type ServiceEndpointPolicyDefinitionTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput
	ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceEndpointPolicyDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// ServiceEndpointPolicyDefinitionTypeArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArray and ServiceEndpointPolicyDefinitionTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeArrayInput` via:
//
//	ServiceEndpointPolicyDefinitionTypeArray{ ServiceEndpointPolicyDefinitionTypeArgs{...} }
type ServiceEndpointPolicyDefinitionTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput
	ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput
}

type ServiceEndpointPolicyDefinitionTypeArray []ServiceEndpointPolicyDefinitionTypeInput

func (ServiceEndpointPolicyDefinitionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionTypeOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPolicyDefinitionTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionType {
		return vs[0].([]ServiceEndpointPolicyDefinitionType)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponse struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service endpoint policy definition resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service endpoint policy definition resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPolicyDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionResponse {
		return vs[0].([]ServiceEndpointPolicyDefinitionResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponse struct {
	// A collection of contextual service endpoint policy.
	ContextualServiceEndpointPolicies []string `pulumi:"contextualServiceEndpointPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Kind of service endpoint policy. This is metadata used for the Azure portal experience.
	Kind string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the service endpoint policy resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The alias indicating if the policy belongs to a service
	ServiceAlias *string `pulumi:"serviceAlias"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionResponse `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return o
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return o
}

// A collection of contextual service endpoint policy.
func (o ServiceEndpointPolicyResponseOutput) ContextualServiceEndpointPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []string { return v.ContextualServiceEndpointPolicies }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of service endpoint policy. This is metadata used for the Azure portal experience.
func (o ServiceEndpointPolicyResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o ServiceEndpointPolicyResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ServiceEndpointPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The alias indicating if the policy belongs to a service
func (o ServiceEndpointPolicyResponseOutput) ServiceAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.ServiceAlias }).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyResponseOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []ServiceEndpointPolicyDefinitionResponse {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// A collection of references to subnets.
func (o ServiceEndpointPolicyResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ServiceEndpointPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceEndpointPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyResponse {
		return vs[0].([]ServiceEndpointPolicyResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyResponseOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatInput is an input type that accepts ServiceEndpointPropertiesFormatArgs and ServiceEndpointPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatInput` via:
//
//	ServiceEndpointPropertiesFormatArgs{...}
type ServiceEndpointPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput
	ToServiceEndpointPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPropertiesFormatOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return i.ToServiceEndpointPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatOutput)
}

// ServiceEndpointPropertiesFormatArrayInput is an input type that accepts ServiceEndpointPropertiesFormatArray and ServiceEndpointPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatArrayInput` via:
//
//	ServiceEndpointPropertiesFormatArray{ ServiceEndpointPropertiesFormatArgs{...} }
type ServiceEndpointPropertiesFormatArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput
	ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatArrayOutput
}

type ServiceEndpointPropertiesFormatArray []ServiceEndpointPropertiesFormatInput

func (ServiceEndpointPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return i.ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource.
func (o ServiceEndpointPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormat {
		return vs[0].([]ServiceEndpointPropertiesFormat)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponse struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the service endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the service endpoint resource.
func (o ServiceEndpointPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormatResponse {
		return vs[0].([]ServiceEndpointPropertiesFormatResponse)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatResponseOutput)
}

type SingleQueryResultResponse struct {
	// Describes what is the signature enforces
	Description *string `pulumi:"description"`
	// Describes the list of destination ports related to this signature
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 - Bidirectional
	Direction *int `pulumi:"direction"`
	// Describes the groups the signature belongs to
	Group *string `pulumi:"group"`
	// Describes if this override is inherited from base policy or not
	InheritedFromParentPolicy *bool `pulumi:"inheritedFromParentPolicy"`
	// Describes the last updated time of the signature (provided from 3rd party vendor)
	LastUpdated *string `pulumi:"lastUpdated"`
	// The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
	Mode *int `pulumi:"mode"`
	// Describes the protocol the signatures is being enforced in
	Protocol *string `pulumi:"protocol"`
	// Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High
	Severity *int `pulumi:"severity"`
	// The ID of the signature
	SignatureId *int `pulumi:"signatureId"`
	// Describes the list of source ports related to this signature
	SourcePorts []string `pulumi:"sourcePorts"`
}

type SingleQueryResultResponseOutput struct{ *pulumi.OutputState }

func (SingleQueryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleQueryResultResponse)(nil)).Elem()
}

func (o SingleQueryResultResponseOutput) ToSingleQueryResultResponseOutput() SingleQueryResultResponseOutput {
	return o
}

func (o SingleQueryResultResponseOutput) ToSingleQueryResultResponseOutputWithContext(ctx context.Context) SingleQueryResultResponseOutput {
	return o
}

// Describes what is the signature enforces
func (o SingleQueryResultResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Describes the list of destination ports related to this signature
func (o SingleQueryResultResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 - Bidirectional
func (o SingleQueryResultResponseOutput) Direction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.Direction }).(pulumi.IntPtrOutput)
}

// Describes the groups the signature belongs to
func (o SingleQueryResultResponseOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// Describes if this override is inherited from base policy or not
func (o SingleQueryResultResponseOutput) InheritedFromParentPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *bool { return v.InheritedFromParentPolicy }).(pulumi.BoolPtrOutput)
}

// Describes the last updated time of the signature (provided from 3rd party vendor)
func (o SingleQueryResultResponseOutput) LastUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.LastUpdated }).(pulumi.StringPtrOutput)
}

// The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
func (o SingleQueryResultResponseOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Describes the protocol the signatures is being enforced in
func (o SingleQueryResultResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High
func (o SingleQueryResultResponseOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

// The ID of the signature
func (o SingleQueryResultResponseOutput) SignatureId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) *int { return v.SignatureId }).(pulumi.IntPtrOutput)
}

// Describes the list of source ports related to this signature
func (o SingleQueryResultResponseOutput) SourcePorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SingleQueryResultResponse) []string { return v.SourcePorts }).(pulumi.StringArrayOutput)
}

type SingleQueryResultResponseArrayOutput struct{ *pulumi.OutputState }

func (SingleQueryResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SingleQueryResultResponse)(nil)).Elem()
}

func (o SingleQueryResultResponseArrayOutput) ToSingleQueryResultResponseArrayOutput() SingleQueryResultResponseArrayOutput {
	return o
}

func (o SingleQueryResultResponseArrayOutput) ToSingleQueryResultResponseArrayOutputWithContext(ctx context.Context) SingleQueryResultResponseArrayOutput {
	return o
}

func (o SingleQueryResultResponseArrayOutput) Index(i pulumi.IntInput) SingleQueryResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SingleQueryResultResponse {
		return vs[0].([]SingleQueryResultResponse)[vs[1].(int)]
	}).(SingleQueryResultResponseOutput)
}

// The pricing tier of the web application firewall policy.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier of the web application firewall policy.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The pricing tier of the web application firewall policy.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// Name of the pricing tier.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The pricing tier of the web application firewall policy.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// The pricing tier of the web application firewall policy.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// Name of the pricing tier.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// An SOA record.
type SoaRecord struct {
	// The email contact for this SOA record.
	Email *string `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime *float64 `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host *string `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl *float64 `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime *float64 `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime *float64 `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber *float64 `pulumi:"serialNumber"`
}

// SoaRecordInput is an input type that accepts SoaRecordArgs and SoaRecordOutput values.
// You can construct a concrete instance of `SoaRecordInput` via:
//
//	SoaRecordArgs{...}
type SoaRecordInput interface {
	pulumi.Input

	ToSoaRecordOutput() SoaRecordOutput
	ToSoaRecordOutputWithContext(context.Context) SoaRecordOutput
}

// An SOA record.
type SoaRecordArgs struct {
	// The email contact for this SOA record.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime pulumi.Float64PtrInput `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl pulumi.Float64PtrInput `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime pulumi.Float64PtrInput `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime pulumi.Float64PtrInput `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber pulumi.Float64PtrInput `pulumi:"serialNumber"`
}

func (SoaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecord)(nil)).Elem()
}

func (i SoaRecordArgs) ToSoaRecordOutput() SoaRecordOutput {
	return i.ToSoaRecordOutputWithContext(context.Background())
}

func (i SoaRecordArgs) ToSoaRecordOutputWithContext(ctx context.Context) SoaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordOutput)
}

func (i SoaRecordArgs) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return i.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (i SoaRecordArgs) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordOutput).ToSoaRecordPtrOutputWithContext(ctx)
}

// SoaRecordPtrInput is an input type that accepts SoaRecordArgs, SoaRecordPtr and SoaRecordPtrOutput values.
// You can construct a concrete instance of `SoaRecordPtrInput` via:
//
//	        SoaRecordArgs{...}
//
//	or:
//
//	        nil
type SoaRecordPtrInput interface {
	pulumi.Input

	ToSoaRecordPtrOutput() SoaRecordPtrOutput
	ToSoaRecordPtrOutputWithContext(context.Context) SoaRecordPtrOutput
}

type soaRecordPtrType SoaRecordArgs

func SoaRecordPtr(v *SoaRecordArgs) SoaRecordPtrInput {
	return (*soaRecordPtrType)(v)
}

func (*soaRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecord)(nil)).Elem()
}

func (i *soaRecordPtrType) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return i.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (i *soaRecordPtrType) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordPtrOutput)
}

// An SOA record.
type SoaRecordOutput struct{ *pulumi.OutputState }

func (SoaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecord)(nil)).Elem()
}

func (o SoaRecordOutput) ToSoaRecordOutput() SoaRecordOutput {
	return o
}

func (o SoaRecordOutput) ToSoaRecordOutputWithContext(ctx context.Context) SoaRecordOutput {
	return o
}

func (o SoaRecordOutput) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return o.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (o SoaRecordOutput) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoaRecord) *SoaRecord {
		return &v
	}).(SoaRecordPtrOutput)
}

// The email contact for this SOA record.
func (o SoaRecordOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecord) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.ExpireTime }).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecord) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.MinimumTtl }).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.RefreshTime }).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.RetryTime }).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.SerialNumber }).(pulumi.Float64PtrOutput)
}

type SoaRecordPtrOutput struct{ *pulumi.OutputState }

func (SoaRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecord)(nil)).Elem()
}

func (o SoaRecordPtrOutput) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return o
}

func (o SoaRecordPtrOutput) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return o
}

func (o SoaRecordPtrOutput) Elem() SoaRecordOutput {
	return o.ApplyT(func(v *SoaRecord) SoaRecord {
		if v != nil {
			return *v
		}
		var ret SoaRecord
		return ret
	}).(SoaRecordOutput)
}

// The email contact for this SOA record.
func (o SoaRecordPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordPtrOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordPtrOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordPtrOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordPtrOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.RetryTime
	}).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordPtrOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.Float64PtrOutput)
}

// An SOA record.
type SoaRecordResponse struct {
	// The email contact for this SOA record.
	Email *string `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime *float64 `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host *string `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl *float64 `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime *float64 `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime *float64 `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber *float64 `pulumi:"serialNumber"`
}

// An SOA record.
type SoaRecordResponseOutput struct{ *pulumi.OutputState }

func (SoaRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecordResponse)(nil)).Elem()
}

func (o SoaRecordResponseOutput) ToSoaRecordResponseOutput() SoaRecordResponseOutput {
	return o
}

func (o SoaRecordResponseOutput) ToSoaRecordResponseOutputWithContext(ctx context.Context) SoaRecordResponseOutput {
	return o
}

// The email contact for this SOA record.
func (o SoaRecordResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordResponseOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.ExpireTime }).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordResponseOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.MinimumTtl }).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordResponseOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.RefreshTime }).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordResponseOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.RetryTime }).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordResponseOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.SerialNumber }).(pulumi.Float64PtrOutput)
}

type SoaRecordResponsePtrOutput struct{ *pulumi.OutputState }

func (SoaRecordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecordResponse)(nil)).Elem()
}

func (o SoaRecordResponsePtrOutput) ToSoaRecordResponsePtrOutput() SoaRecordResponsePtrOutput {
	return o
}

func (o SoaRecordResponsePtrOutput) ToSoaRecordResponsePtrOutputWithContext(ctx context.Context) SoaRecordResponsePtrOutput {
	return o
}

func (o SoaRecordResponsePtrOutput) Elem() SoaRecordResponseOutput {
	return o.ApplyT(func(v *SoaRecordResponse) SoaRecordResponse {
		if v != nil {
			return *v
		}
		var ret SoaRecordResponse
		return ret
	}).(SoaRecordResponseOutput)
}

// The email contact for this SOA record.
func (o SoaRecordResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordResponsePtrOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordResponsePtrOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordResponsePtrOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordResponsePtrOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RetryTime
	}).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordResponsePtrOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.Float64PtrOutput)
}

// An SRV record.
type SrvRecord struct {
	// The port value for this SRV record.
	Port *int `pulumi:"port"`
	// The priority value for this SRV record.
	Priority *int `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target *string `pulumi:"target"`
	// The weight value for this SRV record.
	Weight *int `pulumi:"weight"`
}

// SrvRecordInput is an input type that accepts SrvRecordArgs and SrvRecordOutput values.
// You can construct a concrete instance of `SrvRecordInput` via:
//
//	SrvRecordArgs{...}
type SrvRecordInput interface {
	pulumi.Input

	ToSrvRecordOutput() SrvRecordOutput
	ToSrvRecordOutputWithContext(context.Context) SrvRecordOutput
}

// An SRV record.
type SrvRecordArgs struct {
	// The port value for this SRV record.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The priority value for this SRV record.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The weight value for this SRV record.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (SrvRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecord)(nil)).Elem()
}

func (i SrvRecordArgs) ToSrvRecordOutput() SrvRecordOutput {
	return i.ToSrvRecordOutputWithContext(context.Background())
}

func (i SrvRecordArgs) ToSrvRecordOutputWithContext(ctx context.Context) SrvRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordOutput)
}

// SrvRecordArrayInput is an input type that accepts SrvRecordArray and SrvRecordArrayOutput values.
// You can construct a concrete instance of `SrvRecordArrayInput` via:
//
//	SrvRecordArray{ SrvRecordArgs{...} }
type SrvRecordArrayInput interface {
	pulumi.Input

	ToSrvRecordArrayOutput() SrvRecordArrayOutput
	ToSrvRecordArrayOutputWithContext(context.Context) SrvRecordArrayOutput
}

type SrvRecordArray []SrvRecordInput

func (SrvRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecord)(nil)).Elem()
}

func (i SrvRecordArray) ToSrvRecordArrayOutput() SrvRecordArrayOutput {
	return i.ToSrvRecordArrayOutputWithContext(context.Background())
}

func (i SrvRecordArray) ToSrvRecordArrayOutputWithContext(ctx context.Context) SrvRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordArrayOutput)
}

// An SRV record.
type SrvRecordOutput struct{ *pulumi.OutputState }

func (SrvRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecord)(nil)).Elem()
}

func (o SrvRecordOutput) ToSrvRecordOutput() SrvRecordOutput {
	return o
}

func (o SrvRecordOutput) ToSrvRecordOutputWithContext(ctx context.Context) SrvRecordOutput {
	return o
}

// The port value for this SRV record.
func (o SrvRecordOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The priority value for this SRV record.
func (o SrvRecordOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The target domain name for this SRV record.
func (o SrvRecordOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SrvRecord) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The weight value for this SRV record.
func (o SrvRecordOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SrvRecordArrayOutput struct{ *pulumi.OutputState }

func (SrvRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecord)(nil)).Elem()
}

func (o SrvRecordArrayOutput) ToSrvRecordArrayOutput() SrvRecordArrayOutput {
	return o
}

func (o SrvRecordArrayOutput) ToSrvRecordArrayOutputWithContext(ctx context.Context) SrvRecordArrayOutput {
	return o
}

func (o SrvRecordArrayOutput) Index(i pulumi.IntInput) SrvRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SrvRecord {
		return vs[0].([]SrvRecord)[vs[1].(int)]
	}).(SrvRecordOutput)
}

// An SRV record.
type SrvRecordResponse struct {
	// The port value for this SRV record.
	Port *int `pulumi:"port"`
	// The priority value for this SRV record.
	Priority *int `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target *string `pulumi:"target"`
	// The weight value for this SRV record.
	Weight *int `pulumi:"weight"`
}

// An SRV record.
type SrvRecordResponseOutput struct{ *pulumi.OutputState }

func (SrvRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecordResponse)(nil)).Elem()
}

func (o SrvRecordResponseOutput) ToSrvRecordResponseOutput() SrvRecordResponseOutput {
	return o
}

func (o SrvRecordResponseOutput) ToSrvRecordResponseOutputWithContext(ctx context.Context) SrvRecordResponseOutput {
	return o
}

// The port value for this SRV record.
func (o SrvRecordResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The priority value for this SRV record.
func (o SrvRecordResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The target domain name for this SRV record.
func (o SrvRecordResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The weight value for this SRV record.
func (o SrvRecordResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SrvRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (SrvRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecordResponse)(nil)).Elem()
}

func (o SrvRecordResponseArrayOutput) ToSrvRecordResponseArrayOutput() SrvRecordResponseArrayOutput {
	return o
}

func (o SrvRecordResponseArrayOutput) ToSrvRecordResponseArrayOutputWithContext(ctx context.Context) SrvRecordResponseArrayOutput {
	return o
}

func (o SrvRecordResponseArrayOutput) Index(i pulumi.IntInput) SrvRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SrvRecordResponse {
		return vs[0].([]SrvRecordResponse)[vs[1].(int)]
	}).(SrvRecordResponseOutput)
}

// List of all Static Routes.
type StaticRoute struct {
	// List of all address prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name *string `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// StaticRouteInput is an input type that accepts StaticRouteArgs and StaticRouteOutput values.
// You can construct a concrete instance of `StaticRouteInput` via:
//
//	StaticRouteArgs{...}
type StaticRouteInput interface {
	pulumi.Input

	ToStaticRouteOutput() StaticRouteOutput
	ToStaticRouteOutputWithContext(context.Context) StaticRouteOutput
}

// List of all Static Routes.
type StaticRouteArgs struct {
	// List of all address prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (StaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoute)(nil)).Elem()
}

func (i StaticRouteArgs) ToStaticRouteOutput() StaticRouteOutput {
	return i.ToStaticRouteOutputWithContext(context.Background())
}

func (i StaticRouteArgs) ToStaticRouteOutputWithContext(ctx context.Context) StaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteOutput)
}

// StaticRouteArrayInput is an input type that accepts StaticRouteArray and StaticRouteArrayOutput values.
// You can construct a concrete instance of `StaticRouteArrayInput` via:
//
//	StaticRouteArray{ StaticRouteArgs{...} }
type StaticRouteArrayInput interface {
	pulumi.Input

	ToStaticRouteArrayOutput() StaticRouteArrayOutput
	ToStaticRouteArrayOutputWithContext(context.Context) StaticRouteArrayOutput
}

type StaticRouteArray []StaticRouteInput

func (StaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoute)(nil)).Elem()
}

func (i StaticRouteArray) ToStaticRouteArrayOutput() StaticRouteArrayOutput {
	return i.ToStaticRouteArrayOutputWithContext(context.Background())
}

func (i StaticRouteArray) ToStaticRouteArrayOutputWithContext(ctx context.Context) StaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteArrayOutput)
}

// List of all Static Routes.
type StaticRouteOutput struct{ *pulumi.OutputState }

func (StaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoute)(nil)).Elem()
}

func (o StaticRouteOutput) ToStaticRouteOutput() StaticRouteOutput {
	return o
}

func (o StaticRouteOutput) ToStaticRouteOutputWithContext(ctx context.Context) StaticRouteOutput {
	return o
}

// List of all address prefixes.
func (o StaticRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name of the StaticRoute that is unique within a VnetRoute.
func (o StaticRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ip address of the next hop.
func (o StaticRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type StaticRouteArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoute)(nil)).Elem()
}

func (o StaticRouteArrayOutput) ToStaticRouteArrayOutput() StaticRouteArrayOutput {
	return o
}

func (o StaticRouteArrayOutput) ToStaticRouteArrayOutputWithContext(ctx context.Context) StaticRouteArrayOutput {
	return o
}

func (o StaticRouteArrayOutput) Index(i pulumi.IntInput) StaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRoute {
		return vs[0].([]StaticRoute)[vs[1].(int)]
	}).(StaticRouteOutput)
}

// List of all Static Routes.
type StaticRouteResponse struct {
	// List of all address prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name *string `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// List of all Static Routes.
type StaticRouteResponseOutput struct{ *pulumi.OutputState }

func (StaticRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteResponse)(nil)).Elem()
}

func (o StaticRouteResponseOutput) ToStaticRouteResponseOutput() StaticRouteResponseOutput {
	return o
}

func (o StaticRouteResponseOutput) ToStaticRouteResponseOutputWithContext(ctx context.Context) StaticRouteResponseOutput {
	return o
}

// List of all address prefixes.
func (o StaticRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name of the StaticRoute that is unique within a VnetRoute.
func (o StaticRouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ip address of the next hop.
func (o StaticRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type StaticRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteResponse)(nil)).Elem()
}

func (o StaticRouteResponseArrayOutput) ToStaticRouteResponseArrayOutput() StaticRouteResponseArrayOutput {
	return o
}

func (o StaticRouteResponseArrayOutput) ToStaticRouteResponseArrayOutputWithContext(ctx context.Context) StaticRouteResponseArrayOutput {
	return o
}

func (o StaticRouteResponseArrayOutput) Index(i pulumi.IntInput) StaticRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRouteResponse {
		return vs[0].([]StaticRouteResponse)[vs[1].(int)]
	}).(StaticRouteResponseOutput)
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfig struct {
	// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
	VnetLocalRouteOverrideCriteria *string `pulumi:"vnetLocalRouteOverrideCriteria"`
}

// StaticRoutesConfigInput is an input type that accepts StaticRoutesConfigArgs and StaticRoutesConfigOutput values.
// You can construct a concrete instance of `StaticRoutesConfigInput` via:
//
//	StaticRoutesConfigArgs{...}
type StaticRoutesConfigInput interface {
	pulumi.Input

	ToStaticRoutesConfigOutput() StaticRoutesConfigOutput
	ToStaticRoutesConfigOutputWithContext(context.Context) StaticRoutesConfigOutput
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigArgs struct {
	// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
	VnetLocalRouteOverrideCriteria pulumi.StringPtrInput `pulumi:"vnetLocalRouteOverrideCriteria"`
}

func (StaticRoutesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesConfig)(nil)).Elem()
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigOutput() StaticRoutesConfigOutput {
	return i.ToStaticRoutesConfigOutputWithContext(context.Background())
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigOutputWithContext(ctx context.Context) StaticRoutesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesConfigOutput)
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return i.ToStaticRoutesConfigPtrOutputWithContext(context.Background())
}

func (i StaticRoutesConfigArgs) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesConfigOutput).ToStaticRoutesConfigPtrOutputWithContext(ctx)
}

// StaticRoutesConfigPtrInput is an input type that accepts StaticRoutesConfigArgs, StaticRoutesConfigPtr and StaticRoutesConfigPtrOutput values.
// You can construct a concrete instance of `StaticRoutesConfigPtrInput` via:
//
//	        StaticRoutesConfigArgs{...}
//
//	or:
//
//	        nil
type StaticRoutesConfigPtrInput interface {
	pulumi.Input

	ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput
	ToStaticRoutesConfigPtrOutputWithContext(context.Context) StaticRoutesConfigPtrOutput
}

type staticRoutesConfigPtrType StaticRoutesConfigArgs

func StaticRoutesConfigPtr(v *StaticRoutesConfigArgs) StaticRoutesConfigPtrInput {
	return (*staticRoutesConfigPtrType)(v)
}

func (*staticRoutesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRoutesConfig)(nil)).Elem()
}

func (i *staticRoutesConfigPtrType) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return i.ToStaticRoutesConfigPtrOutputWithContext(context.Background())
}

func (i *staticRoutesConfigPtrType) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesConfigPtrOutput)
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesConfig)(nil)).Elem()
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigOutput() StaticRoutesConfigOutput {
	return o
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigOutputWithContext(ctx context.Context) StaticRoutesConfigOutput {
	return o
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return o.ToStaticRoutesConfigPtrOutputWithContext(context.Background())
}

func (o StaticRoutesConfigOutput) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticRoutesConfig) *StaticRoutesConfig {
		return &v
	}).(StaticRoutesConfigPtrOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoutesConfig) *string { return v.VnetLocalRouteOverrideCriteria }).(pulumi.StringPtrOutput)
}

type StaticRoutesConfigPtrOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRoutesConfig)(nil)).Elem()
}

func (o StaticRoutesConfigPtrOutput) ToStaticRoutesConfigPtrOutput() StaticRoutesConfigPtrOutput {
	return o
}

func (o StaticRoutesConfigPtrOutput) ToStaticRoutesConfigPtrOutputWithContext(ctx context.Context) StaticRoutesConfigPtrOutput {
	return o
}

func (o StaticRoutesConfigPtrOutput) Elem() StaticRoutesConfigOutput {
	return o.ApplyT(func(v *StaticRoutesConfig) StaticRoutesConfig {
		if v != nil {
			return *v
		}
		var ret StaticRoutesConfig
		return ret
	}).(StaticRoutesConfigOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigPtrOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticRoutesConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetLocalRouteOverrideCriteria
	}).(pulumi.StringPtrOutput)
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigResponse struct {
	// Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
	PropagateStaticRoutes bool `pulumi:"propagateStaticRoutes"`
	// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
	VnetLocalRouteOverrideCriteria *string `pulumi:"vnetLocalRouteOverrideCriteria"`
}

// Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
type StaticRoutesConfigResponseOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesConfigResponse)(nil)).Elem()
}

func (o StaticRoutesConfigResponseOutput) ToStaticRoutesConfigResponseOutput() StaticRoutesConfigResponseOutput {
	return o
}

func (o StaticRoutesConfigResponseOutput) ToStaticRoutesConfigResponseOutputWithContext(ctx context.Context) StaticRoutesConfigResponseOutput {
	return o
}

// Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
func (o StaticRoutesConfigResponseOutput) PropagateStaticRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v StaticRoutesConfigResponse) bool { return v.PropagateStaticRoutes }).(pulumi.BoolOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigResponseOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoutesConfigResponse) *string { return v.VnetLocalRouteOverrideCriteria }).(pulumi.StringPtrOutput)
}

type StaticRoutesConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (StaticRoutesConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticRoutesConfigResponse)(nil)).Elem()
}

func (o StaticRoutesConfigResponsePtrOutput) ToStaticRoutesConfigResponsePtrOutput() StaticRoutesConfigResponsePtrOutput {
	return o
}

func (o StaticRoutesConfigResponsePtrOutput) ToStaticRoutesConfigResponsePtrOutputWithContext(ctx context.Context) StaticRoutesConfigResponsePtrOutput {
	return o
}

func (o StaticRoutesConfigResponsePtrOutput) Elem() StaticRoutesConfigResponseOutput {
	return o.ApplyT(func(v *StaticRoutesConfigResponse) StaticRoutesConfigResponse {
		if v != nil {
			return *v
		}
		var ret StaticRoutesConfigResponse
		return ret
	}).(StaticRoutesConfigResponseOutput)
}

// Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
func (o StaticRoutesConfigResponsePtrOutput) PropagateStaticRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticRoutesConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.PropagateStaticRoutes
	}).(pulumi.BoolPtrOutput)
}

// Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
func (o StaticRoutesConfigResponsePtrOutput) VnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticRoutesConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetLocalRouteOverrideCriteria
	}).(pulumi.StringPtrOutput)
}

// A reference to a another resource
type SubResource struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//	SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// A reference to a another resource
type SubResourceArgs struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//	        SubResourceArgs{...}
//
//	or:
//
//	        nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//	SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// A reference to a another resource
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource {
		if v != nil {
			return *v
		}
		var ret SubResource
		return ret
	}).(SubResourceOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Reference to another ARM resource.
type SubResourceResponse struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// Reference to another ARM resource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SubResourceResponse) string { return v.Id }).(pulumi.StringOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse {
		if v != nil {
			return *v
		}
		var ret SubResourceResponse
		return ret
	}).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetType struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIPConfigurations []ApplicationGatewayIPConfiguration `pulumi:"applicationGatewayIPConfigurations"`
	// An array of references to the delegations on the subnet.
	Delegations []Delegation `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResource `pulumi:"ipAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResource `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLink `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableType `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLink `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyType `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `pulumi:"serviceEndpoints"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetType
func (val *SubnetType) Defaults() *SubnetType {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		privateEndpointNetworkPolicies_ := "Disabled"
		tmp.PrivateEndpointNetworkPolicies = &privateEndpointNetworkPolicies_
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		privateLinkServiceNetworkPolicies_ := "Enabled"
		tmp.PrivateLinkServiceNetworkPolicies = &privateLinkServiceNetworkPolicies_
	}
	return &tmp
}

// SubnetTypeInput is an input type that accepts SubnetTypeArgs and SubnetTypeOutput values.
// You can construct a concrete instance of `SubnetTypeInput` via:
//
//	SubnetTypeArgs{...}
type SubnetTypeInput interface {
	pulumi.Input

	ToSubnetTypeOutput() SubnetTypeOutput
	ToSubnetTypeOutputWithContext(context.Context) SubnetTypeOutput
}

// Subnet in a virtual network resource.
type SubnetTypeArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIPConfigurations ApplicationGatewayIPConfigurationArrayInput `pulumi:"applicationGatewayIPConfigurations"`
	// An array of references to the delegations on the subnet.
	Delegations DelegationArrayInput `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations SubResourceArrayInput `pulumi:"ipAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway SubResourcePtrInput `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies pulumi.StringPtrInput `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies pulumi.StringPtrInput `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks ResourceNavigationLinkArrayInput `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable RouteTableTypePtrInput `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks ServiceAssociationLinkArrayInput `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies ServiceEndpointPolicyTypeArrayInput `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatArrayInput `pulumi:"serviceEndpoints"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetTypeArgs
func (val *SubnetTypeArgs) Defaults() *SubnetTypeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		tmp.PrivateEndpointNetworkPolicies = pulumi.StringPtr("Disabled")
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		tmp.PrivateLinkServiceNetworkPolicies = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (SubnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (i SubnetTypeArgs) ToSubnetTypeOutput() SubnetTypeOutput {
	return i.ToSubnetTypeOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput)
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput).ToSubnetTypePtrOutputWithContext(ctx)
}

// SubnetTypePtrInput is an input type that accepts SubnetTypeArgs, SubnetTypePtr and SubnetTypePtrOutput values.
// You can construct a concrete instance of `SubnetTypePtrInput` via:
//
//	        SubnetTypeArgs{...}
//
//	or:
//
//	        nil
type SubnetTypePtrInput interface {
	pulumi.Input

	ToSubnetTypePtrOutput() SubnetTypePtrOutput
	ToSubnetTypePtrOutputWithContext(context.Context) SubnetTypePtrOutput
}

type subnetTypePtrType SubnetTypeArgs

func SubnetTypePtr(v *SubnetTypeArgs) SubnetTypePtrInput {
	return (*subnetTypePtrType)(v)
}

func (*subnetTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypePtrOutput)
}

// SubnetTypeArrayInput is an input type that accepts SubnetTypeArray and SubnetTypeArrayOutput values.
// You can construct a concrete instance of `SubnetTypeArrayInput` via:
//
//	SubnetTypeArray{ SubnetTypeArgs{...} }
type SubnetTypeArrayInput interface {
	pulumi.Input

	ToSubnetTypeArrayOutput() SubnetTypeArrayOutput
	ToSubnetTypeArrayOutputWithContext(context.Context) SubnetTypeArrayOutput
}

type SubnetTypeArray []SubnetTypeInput

func (SubnetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return i.ToSubnetTypeArrayOutputWithContext(context.Background())
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetTypeOutput struct{ *pulumi.OutputState }

func (SubnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (o SubnetTypeOutput) ToSubnetTypeOutput() SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetType) *SubnetType {
		return &v
	}).(SubnetTypePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetTypeOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetType) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetTypeOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v SubnetType) []ApplicationGatewayIPConfiguration { return v.ApplicationGatewayIPConfigurations }).(ApplicationGatewayIPConfigurationArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetTypeOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v SubnetType) []Delegation { return v.Delegations }).(DelegationArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetTypeOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v SubnetType) []SubResource { return v.IpAllocations }).(SubResourceArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetTypeOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v SubnetType) *SubResource { return v.NatGateway }).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetTypeOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetTypeOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetTypeOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetTypeOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v SubnetType) []ResourceNavigationLink { return v.ResourceNavigationLinks }).(ResourceNavigationLinkArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetTypeOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *RouteTableType { return v.RouteTable }).(RouteTableTypePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetTypeOutput) ServiceAssociationLinks() ServiceAssociationLinkArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceAssociationLink { return v.ServiceAssociationLinks }).(ServiceAssociationLinkArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetTypeOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceEndpointPolicyType { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetTypeOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceEndpointPropertiesFormat { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatArrayOutput)
}

// Resource type.
func (o SubnetTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SubnetTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) Elem() SubnetTypeOutput {
	return o.ApplyT(func(v *SubnetType) SubnetType {
		if v != nil {
			return *v
		}
		var ret SubnetType
		return ret
	}).(SubnetTypeOutput)
}

// The address prefix for the subnet.
func (o SubnetTypePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetTypePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetType) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetTypePtrOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ApplicationGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetTypePtrOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v *SubnetType) []Delegation {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetTypePtrOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v *SubnetType) []SubResource {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetTypePtrOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v *SubnetType) *SubResource {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetTypePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *NetworkSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupTypePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetTypePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetTypePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetTypePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ResourceNavigationLink {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetTypePtrOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *RouteTableType {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableTypePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetTypePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceAssociationLink {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetTypePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceEndpointPolicyType {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetTypePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceEndpointPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatArrayOutput)
}

// Resource type.
func (o SubnetTypePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SubnetTypeArrayOutput struct{ *pulumi.OutputState }

func (SubnetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) Index(i pulumi.IntInput) SubnetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetType {
		return vs[0].([]SubnetType)[vs[1].(int)]
	}).(SubnetTypeOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIPConfigurations []ApplicationGatewayIPConfigurationResponse `pulumi:"applicationGatewayIPConfigurations"`
	// An array of references to the delegations on the subnet.
	Delegations []DelegationResponse `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of references to interface endpoints
	InterfaceEndpoints []InterfaceEndpointResponse `pulumi:"interfaceEndpoints"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResourceResponse `pulumi:"ipAllocations"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles []IPConfigurationProfileResponse `pulumi:"ipConfigurationProfiles"`
	// An array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResourceResponse `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// An array of references to private endpoints.
	PrivateEndpoints []PrivateEndpointResponse `pulumi:"privateEndpoints"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the subnet resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose string `pulumi:"purpose"`
	// An array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// An array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLinkResponse `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyResponse `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetResponse
func (val *SubnetResponse) Defaults() *SubnetResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		privateEndpointNetworkPolicies_ := "Disabled"
		tmp.PrivateEndpointNetworkPolicies = &privateEndpointNetworkPolicies_
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		privateLinkServiceNetworkPolicies_ := "Enabled"
		tmp.PrivateLinkServiceNetworkPolicies = &privateLinkServiceNetworkPolicies_
	}
	return &tmp
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

// The address prefix for the subnet.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetResponseOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ApplicationGatewayIPConfigurationResponse {
		return v.ApplicationGatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponseOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []DelegationResponse { return v.Delegations }).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of references to interface endpoints
func (o SubnetResponseOutput) InterfaceEndpoints() InterfaceEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []InterfaceEndpointResponse { return v.InterfaceEndpoints }).(InterfaceEndpointResponseArrayOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponseOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []SubResourceResponse { return v.IpAllocations }).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponseOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationProfileResponse { return v.IpConfigurationProfiles }).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponseOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubResourceResponse { return v.NatGateway }).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponseOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponseOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []PrivateEndpointResponse { return v.PrivateEndpoints }).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponseOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponseOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Purpose }).(pulumi.StringOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponseOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ResourceNavigationLinkResponse { return v.ResourceNavigationLinks }).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponseOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceAssociationLinkResponse { return v.ServiceAssociationLinks }).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponseOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPolicyResponse { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponseOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPropertiesFormatResponse { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Resource type.
func (o SubnetResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse {
		if v != nil {
			return *v
		}
		var ret SubnetResponse
		return ret
	}).(SubnetResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetResponsePtrOutput) ApplicationGatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ApplicationGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponsePtrOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []DelegationResponse {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of references to interface endpoints
func (o SubnetResponsePtrOutput) InterfaceEndpoints() InterfaceEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []InterfaceEndpointResponse {
		if v == nil {
			return nil
		}
		return v.InterfaceEndpoints
	}).(InterfaceEndpointResponseArrayOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponsePtrOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponsePtrOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationProfileResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurationProfiles
	}).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponsePtrOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponsePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponsePtrOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoints
	}).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponsePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponsePtrOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Purpose
	}).(pulumi.StringPtrOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponsePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ResourceNavigationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponsePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceAssociationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponsePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponsePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Resource type.
func (o SubnetResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

type SubscriptionId struct {
	// Subscription id in the ARM id format.
	Id *string `pulumi:"id"`
}

// SubscriptionIdInput is an input type that accepts SubscriptionIdArgs and SubscriptionIdOutput values.
// You can construct a concrete instance of `SubscriptionIdInput` via:
//
//	SubscriptionIdArgs{...}
type SubscriptionIdInput interface {
	pulumi.Input

	ToSubscriptionIdOutput() SubscriptionIdOutput
	ToSubscriptionIdOutputWithContext(context.Context) SubscriptionIdOutput
}

type SubscriptionIdArgs struct {
	// Subscription id in the ARM id format.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubscriptionIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionId)(nil)).Elem()
}

func (i SubscriptionIdArgs) ToSubscriptionIdOutput() SubscriptionIdOutput {
	return i.ToSubscriptionIdOutputWithContext(context.Background())
}

func (i SubscriptionIdArgs) ToSubscriptionIdOutputWithContext(ctx context.Context) SubscriptionIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIdOutput)
}

// SubscriptionIdArrayInput is an input type that accepts SubscriptionIdArray and SubscriptionIdArrayOutput values.
// You can construct a concrete instance of `SubscriptionIdArrayInput` via:
//
//	SubscriptionIdArray{ SubscriptionIdArgs{...} }
type SubscriptionIdArrayInput interface {
	pulumi.Input

	ToSubscriptionIdArrayOutput() SubscriptionIdArrayOutput
	ToSubscriptionIdArrayOutputWithContext(context.Context) SubscriptionIdArrayOutput
}

type SubscriptionIdArray []SubscriptionIdInput

func (SubscriptionIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionId)(nil)).Elem()
}

func (i SubscriptionIdArray) ToSubscriptionIdArrayOutput() SubscriptionIdArrayOutput {
	return i.ToSubscriptionIdArrayOutputWithContext(context.Background())
}

func (i SubscriptionIdArray) ToSubscriptionIdArrayOutputWithContext(ctx context.Context) SubscriptionIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIdArrayOutput)
}

type SubscriptionIdOutput struct{ *pulumi.OutputState }

func (SubscriptionIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionId)(nil)).Elem()
}

func (o SubscriptionIdOutput) ToSubscriptionIdOutput() SubscriptionIdOutput {
	return o
}

func (o SubscriptionIdOutput) ToSubscriptionIdOutputWithContext(ctx context.Context) SubscriptionIdOutput {
	return o
}

// Subscription id in the ARM id format.
func (o SubscriptionIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubscriptionIdArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionId)(nil)).Elem()
}

func (o SubscriptionIdArrayOutput) ToSubscriptionIdArrayOutput() SubscriptionIdArrayOutput {
	return o
}

func (o SubscriptionIdArrayOutput) ToSubscriptionIdArrayOutputWithContext(ctx context.Context) SubscriptionIdArrayOutput {
	return o
}

func (o SubscriptionIdArrayOutput) Index(i pulumi.IntInput) SubscriptionIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionId {
		return vs[0].([]SubscriptionId)[vs[1].(int)]
	}).(SubscriptionIdOutput)
}

type SubscriptionIdResponse struct {
	// Subscription id in the ARM id format.
	Id *string `pulumi:"id"`
}

type SubscriptionIdResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIdResponse)(nil)).Elem()
}

func (o SubscriptionIdResponseOutput) ToSubscriptionIdResponseOutput() SubscriptionIdResponseOutput {
	return o
}

func (o SubscriptionIdResponseOutput) ToSubscriptionIdResponseOutputWithContext(ctx context.Context) SubscriptionIdResponseOutput {
	return o
}

// Subscription id in the ARM id format.
func (o SubscriptionIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubscriptionIdResponseArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionIdResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionIdResponse)(nil)).Elem()
}

func (o SubscriptionIdResponseArrayOutput) ToSubscriptionIdResponseArrayOutput() SubscriptionIdResponseArrayOutput {
	return o
}

func (o SubscriptionIdResponseArrayOutput) ToSubscriptionIdResponseArrayOutputWithContext(ctx context.Context) SubscriptionIdResponseArrayOutput {
	return o
}

func (o SubscriptionIdResponseArrayOutput) Index(i pulumi.IntInput) SubscriptionIdResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionIdResponse {
		return vs[0].([]SubscriptionIdResponse)[vs[1].(int)]
	}).(SubscriptionIdResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Describes a server to forward the DNS queries to.
type TargetDnsServer struct {
	// DNS server IP address.
	IpAddress string `pulumi:"ipAddress"`
	// DNS server port.
	Port *int `pulumi:"port"`
}

// Defaults sets the appropriate defaults for TargetDnsServer
func (val *TargetDnsServer) Defaults() *TargetDnsServer {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Port == nil {
		port_ := 53
		tmp.Port = &port_
	}
	return &tmp
}

// TargetDnsServerInput is an input type that accepts TargetDnsServerArgs and TargetDnsServerOutput values.
// You can construct a concrete instance of `TargetDnsServerInput` via:
//
//	TargetDnsServerArgs{...}
type TargetDnsServerInput interface {
	pulumi.Input

	ToTargetDnsServerOutput() TargetDnsServerOutput
	ToTargetDnsServerOutputWithContext(context.Context) TargetDnsServerOutput
}

// Describes a server to forward the DNS queries to.
type TargetDnsServerArgs struct {
	// DNS server IP address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// DNS server port.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

// Defaults sets the appropriate defaults for TargetDnsServerArgs
func (val *TargetDnsServerArgs) Defaults() *TargetDnsServerArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Port == nil {
		tmp.Port = pulumi.IntPtr(53)
	}
	return &tmp
}
func (TargetDnsServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetDnsServer)(nil)).Elem()
}

func (i TargetDnsServerArgs) ToTargetDnsServerOutput() TargetDnsServerOutput {
	return i.ToTargetDnsServerOutputWithContext(context.Background())
}

func (i TargetDnsServerArgs) ToTargetDnsServerOutputWithContext(ctx context.Context) TargetDnsServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDnsServerOutput)
}

// TargetDnsServerArrayInput is an input type that accepts TargetDnsServerArray and TargetDnsServerArrayOutput values.
// You can construct a concrete instance of `TargetDnsServerArrayInput` via:
//
//	TargetDnsServerArray{ TargetDnsServerArgs{...} }
type TargetDnsServerArrayInput interface {
	pulumi.Input

	ToTargetDnsServerArrayOutput() TargetDnsServerArrayOutput
	ToTargetDnsServerArrayOutputWithContext(context.Context) TargetDnsServerArrayOutput
}

type TargetDnsServerArray []TargetDnsServerInput

func (TargetDnsServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetDnsServer)(nil)).Elem()
}

func (i TargetDnsServerArray) ToTargetDnsServerArrayOutput() TargetDnsServerArrayOutput {
	return i.ToTargetDnsServerArrayOutputWithContext(context.Background())
}

func (i TargetDnsServerArray) ToTargetDnsServerArrayOutputWithContext(ctx context.Context) TargetDnsServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDnsServerArrayOutput)
}

// Describes a server to forward the DNS queries to.
type TargetDnsServerOutput struct{ *pulumi.OutputState }

func (TargetDnsServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetDnsServer)(nil)).Elem()
}

func (o TargetDnsServerOutput) ToTargetDnsServerOutput() TargetDnsServerOutput {
	return o
}

func (o TargetDnsServerOutput) ToTargetDnsServerOutputWithContext(ctx context.Context) TargetDnsServerOutput {
	return o
}

// DNS server IP address.
func (o TargetDnsServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v TargetDnsServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

// DNS server port.
func (o TargetDnsServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetDnsServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type TargetDnsServerArrayOutput struct{ *pulumi.OutputState }

func (TargetDnsServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetDnsServer)(nil)).Elem()
}

func (o TargetDnsServerArrayOutput) ToTargetDnsServerArrayOutput() TargetDnsServerArrayOutput {
	return o
}

func (o TargetDnsServerArrayOutput) ToTargetDnsServerArrayOutputWithContext(ctx context.Context) TargetDnsServerArrayOutput {
	return o
}

func (o TargetDnsServerArrayOutput) Index(i pulumi.IntInput) TargetDnsServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetDnsServer {
		return vs[0].([]TargetDnsServer)[vs[1].(int)]
	}).(TargetDnsServerOutput)
}

// Describes a server to forward the DNS queries to.
type TargetDnsServerResponse struct {
	// DNS server IP address.
	IpAddress string `pulumi:"ipAddress"`
	// DNS server port.
	Port *int `pulumi:"port"`
}

// Defaults sets the appropriate defaults for TargetDnsServerResponse
func (val *TargetDnsServerResponse) Defaults() *TargetDnsServerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Port == nil {
		port_ := 53
		tmp.Port = &port_
	}
	return &tmp
}

// Describes a server to forward the DNS queries to.
type TargetDnsServerResponseOutput struct{ *pulumi.OutputState }

func (TargetDnsServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetDnsServerResponse)(nil)).Elem()
}

func (o TargetDnsServerResponseOutput) ToTargetDnsServerResponseOutput() TargetDnsServerResponseOutput {
	return o
}

func (o TargetDnsServerResponseOutput) ToTargetDnsServerResponseOutputWithContext(ctx context.Context) TargetDnsServerResponseOutput {
	return o
}

// DNS server IP address.
func (o TargetDnsServerResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v TargetDnsServerResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// DNS server port.
func (o TargetDnsServerResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetDnsServerResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type TargetDnsServerResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetDnsServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetDnsServerResponse)(nil)).Elem()
}

func (o TargetDnsServerResponseArrayOutput) ToTargetDnsServerResponseArrayOutput() TargetDnsServerResponseArrayOutput {
	return o
}

func (o TargetDnsServerResponseArrayOutput) ToTargetDnsServerResponseArrayOutputWithContext(ctx context.Context) TargetDnsServerResponseArrayOutput {
	return o
}

func (o TargetDnsServerResponseArrayOutput) Index(i pulumi.IntInput) TargetDnsServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetDnsServerResponse {
		return vs[0].([]TargetDnsServerResponse)[vs[1].(int)]
	}).(TargetDnsServerResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationProperties struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// TrafficAnalyticsConfigurationPropertiesInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesArgs and TrafficAnalyticsConfigurationPropertiesOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesInput` via:
//
//	TrafficAnalyticsConfigurationPropertiesArgs{...}
type TrafficAnalyticsConfigurationPropertiesInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput
	ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesArgs struct {
	// Flag to enable/disable traffic analytics.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval pulumi.IntPtrInput `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion pulumi.StringPtrInput `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (TrafficAnalyticsConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesOutput)
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesOutput).ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx)
}

// TrafficAnalyticsConfigurationPropertiesPtrInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesArgs, TrafficAnalyticsConfigurationPropertiesPtr and TrafficAnalyticsConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesPtrInput` via:
//
//	        TrafficAnalyticsConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type TrafficAnalyticsConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput
	ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput
}

type trafficAnalyticsConfigurationPropertiesPtrType TrafficAnalyticsConfigurationPropertiesArgs

func TrafficAnalyticsConfigurationPropertiesPtr(v *TrafficAnalyticsConfigurationPropertiesArgs) TrafficAnalyticsConfigurationPropertiesPtrInput {
	return (*trafficAnalyticsConfigurationPropertiesPtrType)(v)
}

func (*trafficAnalyticsConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (i *trafficAnalyticsConfigurationPropertiesPtrType) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsConfigurationPropertiesPtrType) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficAnalyticsConfigurationProperties) *TrafficAnalyticsConfigurationProperties {
		return &v
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) TrafficAnalyticsConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsConfigurationProperties
		return ret
	}).(TrafficAnalyticsConfigurationPropertiesOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponse struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutput() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) TrafficAnalyticsConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsConfigurationPropertiesResponse
		return ret
	}).(TrafficAnalyticsConfigurationPropertiesResponseOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsProperties struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationProperties `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// TrafficAnalyticsPropertiesInput is an input type that accepts TrafficAnalyticsPropertiesArgs and TrafficAnalyticsPropertiesOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesInput` via:
//
//	TrafficAnalyticsPropertiesArgs{...}
type TrafficAnalyticsPropertiesInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput
	ToTrafficAnalyticsPropertiesOutputWithContext(context.Context) TrafficAnalyticsPropertiesOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesArgs struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration TrafficAnalyticsConfigurationPropertiesPtrInput `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

func (TrafficAnalyticsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsProperties)(nil)).Elem()
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput {
	return i.ToTrafficAnalyticsPropertiesOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesOutput)
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return i.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesOutput).ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx)
}

// TrafficAnalyticsPropertiesPtrInput is an input type that accepts TrafficAnalyticsPropertiesArgs, TrafficAnalyticsPropertiesPtr and TrafficAnalyticsPropertiesPtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesPtrInput` via:
//
//	        TrafficAnalyticsPropertiesArgs{...}
//
//	or:
//
//	        nil
type TrafficAnalyticsPropertiesPtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput
	ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Context) TrafficAnalyticsPropertiesPtrOutput
}

type trafficAnalyticsPropertiesPtrType TrafficAnalyticsPropertiesArgs

func TrafficAnalyticsPropertiesPtr(v *TrafficAnalyticsPropertiesArgs) TrafficAnalyticsPropertiesPtrInput {
	return (*trafficAnalyticsPropertiesPtrType)(v)
}

func (*trafficAnalyticsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsProperties)(nil)).Elem()
}

func (i *trafficAnalyticsPropertiesPtrType) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return i.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsPropertiesPtrType) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsProperties)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput {
	return o
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesOutput {
	return o
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return o.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficAnalyticsProperties) *TrafficAnalyticsProperties {
		return &v
	}).(TrafficAnalyticsPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsProperties) *TrafficAnalyticsConfigurationProperties {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

type TrafficAnalyticsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsProperties)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesPtrOutput) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesPtrOutput) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesPtrOutput) Elem() TrafficAnalyticsPropertiesOutput {
	return o.ApplyT(func(v *TrafficAnalyticsProperties) TrafficAnalyticsProperties {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsProperties
		return ret
	}).(TrafficAnalyticsPropertiesOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesPtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsProperties) *TrafficAnalyticsConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponse struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationPropertiesResponse `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutput() TrafficAnalyticsPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponseOutput {
	return o
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponseOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

type TrafficAnalyticsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) Elem() TrafficAnalyticsPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) TrafficAnalyticsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsPropertiesResponse
		return ret
	}).(TrafficAnalyticsPropertiesResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponsePtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicy struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges []string `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges []string `pulumi:"remoteAddressRanges"`
}

// TrafficSelectorPolicyInput is an input type that accepts TrafficSelectorPolicyArgs and TrafficSelectorPolicyOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyInput` via:
//
//	TrafficSelectorPolicyArgs{...}
type TrafficSelectorPolicyInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput
	ToTrafficSelectorPolicyOutputWithContext(context.Context) TrafficSelectorPolicyOutput
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyArgs struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges pulumi.StringArrayInput `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges pulumi.StringArrayInput `pulumi:"remoteAddressRanges"`
}

func (TrafficSelectorPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicy)(nil)).Elem()
}

func (i TrafficSelectorPolicyArgs) ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput {
	return i.ToTrafficSelectorPolicyOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyArgs) ToTrafficSelectorPolicyOutputWithContext(ctx context.Context) TrafficSelectorPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyOutput)
}

// TrafficSelectorPolicyArrayInput is an input type that accepts TrafficSelectorPolicyArray and TrafficSelectorPolicyArrayOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyArrayInput` via:
//
//	TrafficSelectorPolicyArray{ TrafficSelectorPolicyArgs{...} }
type TrafficSelectorPolicyArrayInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput
	ToTrafficSelectorPolicyArrayOutputWithContext(context.Context) TrafficSelectorPolicyArrayOutput
}

type TrafficSelectorPolicyArray []TrafficSelectorPolicyInput

func (TrafficSelectorPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicy)(nil)).Elem()
}

func (i TrafficSelectorPolicyArray) ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput {
	return i.ToTrafficSelectorPolicyArrayOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyArray) ToTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyArrayOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicy)(nil)).Elem()
}

func (o TrafficSelectorPolicyOutput) ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput {
	return o
}

func (o TrafficSelectorPolicyOutput) ToTrafficSelectorPolicyOutputWithContext(ctx context.Context) TrafficSelectorPolicyOutput {
	return o
}

// A collection of local address spaces in CIDR format.
func (o TrafficSelectorPolicyOutput) LocalAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicy) []string { return v.LocalAddressRanges }).(pulumi.StringArrayOutput)
}

// A collection of remote address spaces in CIDR format.
func (o TrafficSelectorPolicyOutput) RemoteAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicy) []string { return v.RemoteAddressRanges }).(pulumi.StringArrayOutput)
}

type TrafficSelectorPolicyArrayOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicy)(nil)).Elem()
}

func (o TrafficSelectorPolicyArrayOutput) ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput {
	return o
}

func (o TrafficSelectorPolicyArrayOutput) ToTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyArrayOutput {
	return o
}

func (o TrafficSelectorPolicyArrayOutput) Index(i pulumi.IntInput) TrafficSelectorPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficSelectorPolicy {
		return vs[0].([]TrafficSelectorPolicy)[vs[1].(int)]
	}).(TrafficSelectorPolicyOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyResponse struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges []string `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges []string `pulumi:"remoteAddressRanges"`
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyResponseOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (o TrafficSelectorPolicyResponseOutput) ToTrafficSelectorPolicyResponseOutput() TrafficSelectorPolicyResponseOutput {
	return o
}

func (o TrafficSelectorPolicyResponseOutput) ToTrafficSelectorPolicyResponseOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseOutput {
	return o
}

// A collection of local address spaces in CIDR format.
func (o TrafficSelectorPolicyResponseOutput) LocalAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicyResponse) []string { return v.LocalAddressRanges }).(pulumi.StringArrayOutput)
}

// A collection of remote address spaces in CIDR format.
func (o TrafficSelectorPolicyResponseOutput) RemoteAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicyResponse) []string { return v.RemoteAddressRanges }).(pulumi.StringArrayOutput)
}

type TrafficSelectorPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (o TrafficSelectorPolicyResponseArrayOutput) ToTrafficSelectorPolicyResponseArrayOutput() TrafficSelectorPolicyResponseArrayOutput {
	return o
}

func (o TrafficSelectorPolicyResponseArrayOutput) ToTrafficSelectorPolicyResponseArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseArrayOutput {
	return o
}

func (o TrafficSelectorPolicyResponseArrayOutput) Index(i pulumi.IntInput) TrafficSelectorPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficSelectorPolicyResponse {
		return vs[0].([]TrafficSelectorPolicyResponse)[vs[1].(int)]
	}).(TrafficSelectorPolicyResponseOutput)
}

// VirtualNetworkGatewayConnection properties.
type TunnelConnectionHealthResponse struct {
	// Virtual Network Gateway connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime string `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel string `pulumi:"tunnel"`
}

// VirtualNetworkGatewayConnection properties.
type TunnelConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return o
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return o
}

// Virtual Network Gateway connection status.
func (o TunnelConnectionHealthResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The Egress Bytes Transferred in this connection.
func (o TunnelConnectionHealthResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// The Ingress Bytes Transferred in this connection.
func (o TunnelConnectionHealthResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// The time at which connection was established in Utc format.
func (o TunnelConnectionHealthResponseOutput) LastConnectionEstablishedUtcTime() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.LastConnectionEstablishedUtcTime }).(pulumi.StringOutput)
}

// Tunnel name.
func (o TunnelConnectionHealthResponseOutput) Tunnel() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.Tunnel }).(pulumi.StringOutput)
}

type TunnelConnectionHealthResponseArrayOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) Index(i pulumi.IntInput) TunnelConnectionHealthResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TunnelConnectionHealthResponse {
		return vs[0].([]TunnelConnectionHealthResponse)[vs[1].(int)]
	}).(TunnelConnectionHealthResponseOutput)
}

// A TXT record.
type TxtRecord struct {
	// The text value of this TXT record.
	Value []string `pulumi:"value"`
}

// TxtRecordInput is an input type that accepts TxtRecordArgs and TxtRecordOutput values.
// You can construct a concrete instance of `TxtRecordInput` via:
//
//	TxtRecordArgs{...}
type TxtRecordInput interface {
	pulumi.Input

	ToTxtRecordOutput() TxtRecordOutput
	ToTxtRecordOutputWithContext(context.Context) TxtRecordOutput
}

// A TXT record.
type TxtRecordArgs struct {
	// The text value of this TXT record.
	Value pulumi.StringArrayInput `pulumi:"value"`
}

func (TxtRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecord)(nil)).Elem()
}

func (i TxtRecordArgs) ToTxtRecordOutput() TxtRecordOutput {
	return i.ToTxtRecordOutputWithContext(context.Background())
}

func (i TxtRecordArgs) ToTxtRecordOutputWithContext(ctx context.Context) TxtRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordOutput)
}

// TxtRecordArrayInput is an input type that accepts TxtRecordArray and TxtRecordArrayOutput values.
// You can construct a concrete instance of `TxtRecordArrayInput` via:
//
//	TxtRecordArray{ TxtRecordArgs{...} }
type TxtRecordArrayInput interface {
	pulumi.Input

	ToTxtRecordArrayOutput() TxtRecordArrayOutput
	ToTxtRecordArrayOutputWithContext(context.Context) TxtRecordArrayOutput
}

type TxtRecordArray []TxtRecordInput

func (TxtRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecord)(nil)).Elem()
}

func (i TxtRecordArray) ToTxtRecordArrayOutput() TxtRecordArrayOutput {
	return i.ToTxtRecordArrayOutputWithContext(context.Background())
}

func (i TxtRecordArray) ToTxtRecordArrayOutputWithContext(ctx context.Context) TxtRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordArrayOutput)
}

// A TXT record.
type TxtRecordOutput struct{ *pulumi.OutputState }

func (TxtRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecord)(nil)).Elem()
}

func (o TxtRecordOutput) ToTxtRecordOutput() TxtRecordOutput {
	return o
}

func (o TxtRecordOutput) ToTxtRecordOutputWithContext(ctx context.Context) TxtRecordOutput {
	return o
}

// The text value of this TXT record.
func (o TxtRecordOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TxtRecord) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type TxtRecordArrayOutput struct{ *pulumi.OutputState }

func (TxtRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecord)(nil)).Elem()
}

func (o TxtRecordArrayOutput) ToTxtRecordArrayOutput() TxtRecordArrayOutput {
	return o
}

func (o TxtRecordArrayOutput) ToTxtRecordArrayOutputWithContext(ctx context.Context) TxtRecordArrayOutput {
	return o
}

func (o TxtRecordArrayOutput) Index(i pulumi.IntInput) TxtRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TxtRecord {
		return vs[0].([]TxtRecord)[vs[1].(int)]
	}).(TxtRecordOutput)
}

// A TXT record.
type TxtRecordResponse struct {
	// The text value of this TXT record.
	Value []string `pulumi:"value"`
}

// A TXT record.
type TxtRecordResponseOutput struct{ *pulumi.OutputState }

func (TxtRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecordResponse)(nil)).Elem()
}

func (o TxtRecordResponseOutput) ToTxtRecordResponseOutput() TxtRecordResponseOutput {
	return o
}

func (o TxtRecordResponseOutput) ToTxtRecordResponseOutputWithContext(ctx context.Context) TxtRecordResponseOutput {
	return o
}

// The text value of this TXT record.
func (o TxtRecordResponseOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TxtRecordResponse) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type TxtRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (TxtRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecordResponse)(nil)).Elem()
}

func (o TxtRecordResponseArrayOutput) ToTxtRecordResponseArrayOutput() TxtRecordResponseArrayOutput {
	return o
}

func (o TxtRecordResponseArrayOutput) ToTxtRecordResponseArrayOutputWithContext(ctx context.Context) TxtRecordResponseArrayOutput {
	return o
}

func (o TxtRecordResponseArrayOutput) Index(i pulumi.IntInput) TxtRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TxtRecordResponse {
		return vs[0].([]TxtRecordResponse)[vs[1].(int)]
	}).(TxtRecordResponseOutput)
}

// Describes a Virtual Machine.
type VM struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// VMInput is an input type that accepts VMArgs and VMOutput values.
// You can construct a concrete instance of `VMInput` via:
//
//	VMArgs{...}
type VMInput interface {
	pulumi.Input

	ToVMOutput() VMOutput
	ToVMOutputWithContext(context.Context) VMOutput
}

// Describes a Virtual Machine.
type VMArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (VMArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VM)(nil)).Elem()
}

func (i VMArgs) ToVMOutput() VMOutput {
	return i.ToVMOutputWithContext(context.Background())
}

func (i VMArgs) ToVMOutputWithContext(ctx context.Context) VMOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMOutput)
}

// Describes a Virtual Machine.
type VMOutput struct{ *pulumi.OutputState }

func (VMOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VM)(nil)).Elem()
}

func (o VMOutput) ToVMOutput() VMOutput {
	return o
}

func (o VMOutput) ToVMOutputWithContext(ctx context.Context) VMOutput {
	return o
}

// Resource ID.
func (o VMOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VM) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VMOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VM) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VMOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VM) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Describes a Virtual Machine.
type VMResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Describes a Virtual Machine.
type VMResponseOutput struct{ *pulumi.OutputState }

func (VMResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMResponse)(nil)).Elem()
}

func (o VMResponseOutput) ToVMResponseOutput() VMResponseOutput {
	return o
}

func (o VMResponseOutput) ToVMResponseOutputWithContext(ctx context.Context) VMResponseOutput {
	return o
}

// Resource ID.
func (o VMResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VMResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VMResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VMResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource tags.
func (o VMResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VMResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VMResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicProperties struct {
	// Flag (true or false) for Intent for Public Ip on additional nic
	HasPublicIp *bool `pulumi:"hasPublicIp"`
	// Name of additional nic
	Name *string `pulumi:"name"`
}

// VirtualApplianceAdditionalNicPropertiesInput is an input type that accepts VirtualApplianceAdditionalNicPropertiesArgs and VirtualApplianceAdditionalNicPropertiesOutput values.
// You can construct a concrete instance of `VirtualApplianceAdditionalNicPropertiesInput` via:
//
//	VirtualApplianceAdditionalNicPropertiesArgs{...}
type VirtualApplianceAdditionalNicPropertiesInput interface {
	pulumi.Input

	ToVirtualApplianceAdditionalNicPropertiesOutput() VirtualApplianceAdditionalNicPropertiesOutput
	ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(context.Context) VirtualApplianceAdditionalNicPropertiesOutput
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesArgs struct {
	// Flag (true or false) for Intent for Public Ip on additional nic
	HasPublicIp pulumi.BoolPtrInput `pulumi:"hasPublicIp"`
	// Name of additional nic
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualApplianceAdditionalNicPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (i VirtualApplianceAdditionalNicPropertiesArgs) ToVirtualApplianceAdditionalNicPropertiesOutput() VirtualApplianceAdditionalNicPropertiesOutput {
	return i.ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(context.Background())
}

func (i VirtualApplianceAdditionalNicPropertiesArgs) ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceAdditionalNicPropertiesOutput)
}

// VirtualApplianceAdditionalNicPropertiesArrayInput is an input type that accepts VirtualApplianceAdditionalNicPropertiesArray and VirtualApplianceAdditionalNicPropertiesArrayOutput values.
// You can construct a concrete instance of `VirtualApplianceAdditionalNicPropertiesArrayInput` via:
//
//	VirtualApplianceAdditionalNicPropertiesArray{ VirtualApplianceAdditionalNicPropertiesArgs{...} }
type VirtualApplianceAdditionalNicPropertiesArrayInput interface {
	pulumi.Input

	ToVirtualApplianceAdditionalNicPropertiesArrayOutput() VirtualApplianceAdditionalNicPropertiesArrayOutput
	ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(context.Context) VirtualApplianceAdditionalNicPropertiesArrayOutput
}

type VirtualApplianceAdditionalNicPropertiesArray []VirtualApplianceAdditionalNicPropertiesInput

func (VirtualApplianceAdditionalNicPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (i VirtualApplianceAdditionalNicPropertiesArray) ToVirtualApplianceAdditionalNicPropertiesArrayOutput() VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return i.ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(context.Background())
}

func (i VirtualApplianceAdditionalNicPropertiesArray) ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceAdditionalNicPropertiesArrayOutput)
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesOutput) ToVirtualApplianceAdditionalNicPropertiesOutput() VirtualApplianceAdditionalNicPropertiesOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesOutput) ToVirtualApplianceAdditionalNicPropertiesOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesOutput {
	return o
}

// Flag (true or false) for Intent for Public Ip on additional nic
func (o VirtualApplianceAdditionalNicPropertiesOutput) HasPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicProperties) *bool { return v.HasPublicIp }).(pulumi.BoolPtrOutput)
}

// Name of additional nic
func (o VirtualApplianceAdditionalNicPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualApplianceAdditionalNicPropertiesArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceAdditionalNicProperties)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesArrayOutput) ToVirtualApplianceAdditionalNicPropertiesArrayOutput() VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesArrayOutput) ToVirtualApplianceAdditionalNicPropertiesArrayOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesArrayOutput) Index(i pulumi.IntInput) VirtualApplianceAdditionalNicPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceAdditionalNicProperties {
		return vs[0].([]VirtualApplianceAdditionalNicProperties)[vs[1].(int)]
	}).(VirtualApplianceAdditionalNicPropertiesOutput)
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesResponse struct {
	// Flag (true or false) for Intent for Public Ip on additional nic
	HasPublicIp *bool `pulumi:"hasPublicIp"`
	// Name of additional nic
	Name *string `pulumi:"name"`
}

// Network Virtual Appliance Additional NIC properties.
type VirtualApplianceAdditionalNicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceAdditionalNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) ToVirtualApplianceAdditionalNicPropertiesResponseOutput() VirtualApplianceAdditionalNicPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) ToVirtualApplianceAdditionalNicPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesResponseOutput {
	return o
}

// Flag (true or false) for Intent for Public Ip on additional nic
func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) HasPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicPropertiesResponse) *bool { return v.HasPublicIp }).(pulumi.BoolPtrOutput)
}

// Name of additional nic
func (o VirtualApplianceAdditionalNicPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceAdditionalNicPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualApplianceAdditionalNicPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceAdditionalNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) ToVirtualApplianceAdditionalNicPropertiesResponseArrayOutput() VirtualApplianceAdditionalNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) ToVirtualApplianceAdditionalNicPropertiesResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceAdditionalNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceAdditionalNicPropertiesResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplianceAdditionalNicPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceAdditionalNicPropertiesResponse {
		return vs[0].([]VirtualApplianceAdditionalNicPropertiesResponse)[vs[1].(int)]
	}).(VirtualApplianceAdditionalNicPropertiesResponseOutput)
}

// Network Virtual Appliance NIC properties.
type VirtualApplianceNicPropertiesResponse struct {
	// Instance on which nic is attached.
	InstanceName string `pulumi:"instanceName"`
	// NIC name.
	Name string `pulumi:"name"`
	// Private IP address.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP address.
	PublicIpAddress string `pulumi:"publicIpAddress"`
}

// Network Virtual Appliance NIC properties.
type VirtualApplianceNicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNicPropertiesResponseOutput) ToVirtualApplianceNicPropertiesResponseOutput() VirtualApplianceNicPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseOutput) ToVirtualApplianceNicPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseOutput {
	return o
}

// Instance on which nic is attached.
func (o VirtualApplianceNicPropertiesResponseOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.InstanceName }).(pulumi.StringOutput)
}

// NIC name.
func (o VirtualApplianceNicPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private IP address.
func (o VirtualApplianceNicPropertiesResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP address.
func (o VirtualApplianceNicPropertiesResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

type VirtualApplianceNicPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNicPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) ToVirtualApplianceNicPropertiesResponseArrayOutput() VirtualApplianceNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) ToVirtualApplianceNicPropertiesResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplianceNicPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceNicPropertiesResponse {
		return vs[0].([]VirtualApplianceNicPropertiesResponse)[vs[1].(int)]
	}).(VirtualApplianceNicPropertiesResponseOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuProperties struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit *string `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion *string `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor *string `pulumi:"vendor"`
}

// VirtualApplianceSkuPropertiesInput is an input type that accepts VirtualApplianceSkuPropertiesArgs and VirtualApplianceSkuPropertiesOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesInput` via:
//
//	VirtualApplianceSkuPropertiesArgs{...}
type VirtualApplianceSkuPropertiesInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput
	ToVirtualApplianceSkuPropertiesOutputWithContext(context.Context) VirtualApplianceSkuPropertiesOutput
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesArgs struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit pulumi.StringPtrInput `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion pulumi.StringPtrInput `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor pulumi.StringPtrInput `pulumi:"vendor"`
}

func (VirtualApplianceSkuPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuProperties)(nil)).Elem()
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput {
	return i.ToVirtualApplianceSkuPropertiesOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesOutput)
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return i.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesOutput).ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx)
}

// VirtualApplianceSkuPropertiesPtrInput is an input type that accepts VirtualApplianceSkuPropertiesArgs, VirtualApplianceSkuPropertiesPtr and VirtualApplianceSkuPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesPtrInput` via:
//
//	        VirtualApplianceSkuPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualApplianceSkuPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput
	ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Context) VirtualApplianceSkuPropertiesPtrOutput
}

type virtualApplianceSkuPropertiesPtrType VirtualApplianceSkuPropertiesArgs

func VirtualApplianceSkuPropertiesPtr(v *VirtualApplianceSkuPropertiesArgs) VirtualApplianceSkuPropertiesPtrInput {
	return (*virtualApplianceSkuPropertiesPtrType)(v)
}

func (*virtualApplianceSkuPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuProperties)(nil)).Elem()
}

func (i *virtualApplianceSkuPropertiesPtrType) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return i.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualApplianceSkuPropertiesPtrType) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuProperties)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return o.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualApplianceSkuProperties) *VirtualApplianceSkuProperties {
		return &v
	}).(VirtualApplianceSkuPropertiesPtrOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.BundledScaleUnit }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.MarketPlaceVersion }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type VirtualApplianceSkuPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuProperties)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesPtrOutput) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesPtrOutput) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesPtrOutput) Elem() VirtualApplianceSkuPropertiesOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) VirtualApplianceSkuProperties {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceSkuProperties
		return ret
	}).(VirtualApplianceSkuPropertiesOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesPtrOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.BundledScaleUnit
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesPtrOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.MarketPlaceVersion
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesPtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesResponse struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit *string `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion *string `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor *string `pulumi:"vendor"`
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponseOutput() VirtualApplianceSkuPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponseOutput {
	return o
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesResponseOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.BundledScaleUnit }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesResponseOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.MarketPlaceVersion }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesResponseOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type VirtualApplianceSkuPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutput() VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) Elem() VirtualApplianceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) VirtualApplianceSkuPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualApplianceSkuPropertiesResponse
		return ret
	}).(VirtualApplianceSkuPropertiesResponseOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BundledScaleUnit
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MarketPlaceVersion
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubId struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// VirtualHubIdInput is an input type that accepts VirtualHubIdArgs and VirtualHubIdOutput values.
// You can construct a concrete instance of `VirtualHubIdInput` via:
//
//	VirtualHubIdArgs{...}
type VirtualHubIdInput interface {
	pulumi.Input

	ToVirtualHubIdOutput() VirtualHubIdOutput
	ToVirtualHubIdOutputWithContext(context.Context) VirtualHubIdOutput
}

// Virtual Hub identifier.
type VirtualHubIdArgs struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VirtualHubIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return i.ToVirtualHubIdOutputWithContext(context.Background())
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdOutput)
}

// Virtual Hub identifier.
type VirtualHubIdOutput struct{ *pulumi.OutputState }

func (VirtualHubIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return o
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return o
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdResponse struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// Virtual Hub identifier.
type VirtualHubIdResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubIdResponse)(nil)).Elem()
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput {
	return o
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutputWithContext(ctx context.Context) VirtualHubIdResponseOutput {
	return o
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// VirtualHub route.
type VirtualHubRoute struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteInput is an input type that accepts VirtualHubRouteArgs and VirtualHubRouteOutput values.
// You can construct a concrete instance of `VirtualHubRouteInput` via:
//
//	VirtualHubRouteArgs{...}
type VirtualHubRouteInput interface {
	pulumi.Input

	ToVirtualHubRouteOutput() VirtualHubRouteOutput
	ToVirtualHubRouteOutputWithContext(context.Context) VirtualHubRouteOutput
}

// VirtualHub route.
type VirtualHubRouteArgs struct {
	// List of all addressPrefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return i.ToVirtualHubRouteOutputWithContext(context.Background())
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteOutput)
}

// VirtualHubRouteArrayInput is an input type that accepts VirtualHubRouteArray and VirtualHubRouteArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteArrayInput` via:
//
//	VirtualHubRouteArray{ VirtualHubRouteArgs{...} }
type VirtualHubRouteArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput
	ToVirtualHubRouteArrayOutputWithContext(context.Context) VirtualHubRouteArrayOutput
}

type VirtualHubRouteArray []VirtualHubRouteInput

func (VirtualHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return i.ToVirtualHubRouteArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteArrayOutput)
}

// VirtualHub route.
type VirtualHubRouteOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return o
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRoute {
		return vs[0].([]VirtualHubRoute)[vs[1].(int)]
	}).(VirtualHubRouteOutput)
}

// VirtualHub route.
type VirtualHubRouteResponse struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHub route.
type VirtualHubRouteResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput {
	return o
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutputWithContext(ctx context.Context) VirtualHubRouteResponseOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteResponse {
		return vs[0].([]VirtualHubRouteResponse)[vs[1].(int)]
	}).(VirtualHubRouteResponseOutput)
}

// VirtualHub route table.
type VirtualHubRouteTable struct {
	// List of all routes.
	Routes []VirtualHubRoute `pulumi:"routes"`
}

// VirtualHubRouteTableInput is an input type that accepts VirtualHubRouteTableArgs and VirtualHubRouteTableOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableInput` via:
//
//	VirtualHubRouteTableArgs{...}
type VirtualHubRouteTableInput interface {
	pulumi.Input

	ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput
	ToVirtualHubRouteTableOutputWithContext(context.Context) VirtualHubRouteTableOutput
}

// VirtualHub route table.
type VirtualHubRouteTableArgs struct {
	// List of all routes.
	Routes VirtualHubRouteArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return i.ToVirtualHubRouteTableOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput)
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput).ToVirtualHubRouteTablePtrOutputWithContext(ctx)
}

// VirtualHubRouteTablePtrInput is an input type that accepts VirtualHubRouteTableArgs, VirtualHubRouteTablePtr and VirtualHubRouteTablePtrOutput values.
// You can construct a concrete instance of `VirtualHubRouteTablePtrInput` via:
//
//	        VirtualHubRouteTableArgs{...}
//
//	or:
//
//	        nil
type VirtualHubRouteTablePtrInput interface {
	pulumi.Input

	ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput
	ToVirtualHubRouteTablePtrOutputWithContext(context.Context) VirtualHubRouteTablePtrOutput
}

type virtualHubRouteTablePtrType VirtualHubRouteTableArgs

func VirtualHubRouteTablePtr(v *VirtualHubRouteTableArgs) VirtualHubRouteTablePtrInput {
	return (*virtualHubRouteTablePtrType)(v)
}

func (*virtualHubRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTablePtrOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualHubRouteTable) *VirtualHubRouteTable {
		return &v
	}).(VirtualHubRouteTablePtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTable) []VirtualHubRoute { return v.Routes }).(VirtualHubRouteArrayOutput)
}

type VirtualHubRouteTablePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) Elem() VirtualHubRouteTableOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) VirtualHubRouteTable {
		if v != nil {
			return *v
		}
		var ret VirtualHubRouteTable
		return ret
	}).(VirtualHubRouteTableOutput)
}

// List of all routes.
func (o VirtualHubRouteTablePtrOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) []VirtualHubRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteArrayOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableResponse struct {
	// List of all routes.
	Routes []VirtualHubRouteResponse `pulumi:"routes"`
}

// VirtualHub route table.
type VirtualHubRouteTableResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput {
	return o
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableResponseOutput {
	return o
}

// List of all routes.
func (o VirtualHubRouteTableResponseOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableResponse) []VirtualHubRouteResponse { return v.Routes }).(VirtualHubRouteResponseArrayOutput)
}

type VirtualHubRouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) Elem() VirtualHubRouteTableResponseOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) VirtualHubRouteTableResponse {
		if v != nil {
			return *v
		}
		var ret VirtualHubRouteTableResponse
		return ret
	}).(VirtualHubRouteTableResponseOutput)
}

// List of all routes.
func (o VirtualHubRouteTableResponsePtrOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) []VirtualHubRouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteResponseArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Type struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of all routes.
	Routes []VirtualHubRouteV2 `pulumi:"routes"`
}

// VirtualHubRouteTableV2TypeInput is an input type that accepts VirtualHubRouteTableV2TypeArgs and VirtualHubRouteTableV2TypeOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2TypeInput` via:
//
//	VirtualHubRouteTableV2TypeArgs{...}
type VirtualHubRouteTableV2TypeInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput
	ToVirtualHubRouteTableV2TypeOutputWithContext(context.Context) VirtualHubRouteTableV2TypeOutput
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2TypeArgs struct {
	// List of all connections attached to this route table v2.
	AttachedConnections pulumi.StringArrayInput `pulumi:"attachedConnections"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of all routes.
	Routes VirtualHubRouteV2ArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableV2TypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (i VirtualHubRouteTableV2TypeArgs) ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput {
	return i.ToVirtualHubRouteTableV2TypeOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2TypeArgs) ToVirtualHubRouteTableV2TypeOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2TypeOutput)
}

// VirtualHubRouteTableV2TypeArrayInput is an input type that accepts VirtualHubRouteTableV2TypeArray and VirtualHubRouteTableV2TypeArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2TypeArrayInput` via:
//
//	VirtualHubRouteTableV2TypeArray{ VirtualHubRouteTableV2TypeArgs{...} }
type VirtualHubRouteTableV2TypeArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput
	ToVirtualHubRouteTableV2TypeArrayOutputWithContext(context.Context) VirtualHubRouteTableV2TypeArrayOutput
}

type VirtualHubRouteTableV2TypeArray []VirtualHubRouteTableV2TypeInput

func (VirtualHubRouteTableV2TypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (i VirtualHubRouteTableV2TypeArray) ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput {
	return i.ToVirtualHubRouteTableV2TypeArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2TypeArray) ToVirtualHubRouteTableV2TypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2TypeArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2TypeOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (o VirtualHubRouteTableV2TypeOutput) ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeOutput) ToVirtualHubRouteTableV2TypeOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeOutput {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2TypeOutput) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2TypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2TypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2TypeOutput) Routes() VirtualHubRouteV2ArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) []VirtualHubRouteV2 { return v.Routes }).(VirtualHubRouteV2ArrayOutput)
}

type VirtualHubRouteTableV2TypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2TypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (o VirtualHubRouteTableV2TypeArrayOutput) ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeArrayOutput) ToVirtualHubRouteTableV2TypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2TypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2Type {
		return vs[0].([]VirtualHubRouteTableV2Type)[vs[1].(int)]
	}).(VirtualHubRouteTableV2TypeOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Response struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the virtual hub route table v2 resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of all routes.
	Routes []VirtualHubRouteV2Response `pulumi:"routes"`
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutput() VirtualHubRouteTableV2ResponseOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseOutput {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2ResponseOutput) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualHubRouteTableV2ResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2ResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2ResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual hub route table v2 resource.
func (o VirtualHubRouteTableV2ResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2ResponseOutput) Routes() VirtualHubRouteV2ResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []VirtualHubRouteV2Response { return v.Routes }).(VirtualHubRouteV2ResponseArrayOutput)
}

type VirtualHubRouteTableV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutput() VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2Response {
		return vs[0].([]VirtualHubRouteTableV2Response)[vs[1].(int)]
	}).(VirtualHubRouteTableV2ResponseOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2 struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteV2Input is an input type that accepts VirtualHubRouteV2Args and VirtualHubRouteV2Output values.
// You can construct a concrete instance of `VirtualHubRouteV2Input` via:
//
//	VirtualHubRouteV2Args{...}
type VirtualHubRouteV2Input interface {
	pulumi.Input

	ToVirtualHubRouteV2Output() VirtualHubRouteV2Output
	ToVirtualHubRouteV2OutputWithContext(context.Context) VirtualHubRouteV2Output
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Args struct {
	// The type of destinations.
	DestinationType pulumi.StringPtrInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The type of next hops.
	NextHopType pulumi.StringPtrInput `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops pulumi.StringArrayInput `pulumi:"nextHops"`
}

func (VirtualHubRouteV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return i.ToVirtualHubRouteV2OutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2Output)
}

// VirtualHubRouteV2ArrayInput is an input type that accepts VirtualHubRouteV2Array and VirtualHubRouteV2ArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteV2ArrayInput` via:
//
//	VirtualHubRouteV2Array{ VirtualHubRouteV2Args{...} }
type VirtualHubRouteV2ArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput
	ToVirtualHubRouteV2ArrayOutputWithContext(context.Context) VirtualHubRouteV2ArrayOutput
}

type VirtualHubRouteV2Array []VirtualHubRouteV2Input

func (VirtualHubRouteV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return i.ToVirtualHubRouteV2ArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2ArrayOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Output struct{ *pulumi.OutputState }

func (VirtualHubRouteV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return o
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2Output) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2Output) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2Output) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2Output) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2 {
		return vs[0].([]VirtualHubRouteV2)[vs[1].(int)]
	}).(VirtualHubRouteV2Output)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Response struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutput() VirtualHubRouteV2ResponseOutput {
	return o
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseOutput {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2ResponseOutput) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2ResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2ResponseOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2ResponseOutput) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutput() VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2Response {
		return vs[0].([]VirtualHubRouteV2Response)[vs[1].(int)]
	}).(VirtualHubRouteV2ResponseOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunities struct {
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity string `pulumi:"virtualNetworkCommunity"`
}

// VirtualNetworkBgpCommunitiesInput is an input type that accepts VirtualNetworkBgpCommunitiesArgs and VirtualNetworkBgpCommunitiesOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesInput` via:
//
//	VirtualNetworkBgpCommunitiesArgs{...}
type VirtualNetworkBgpCommunitiesInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput
	ToVirtualNetworkBgpCommunitiesOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesOutput
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesArgs struct {
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity pulumi.StringInput `pulumi:"virtualNetworkCommunity"`
}

func (VirtualNetworkBgpCommunitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput {
	return i.ToVirtualNetworkBgpCommunitiesOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesOutput)
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesOutput).ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx)
}

// VirtualNetworkBgpCommunitiesPtrInput is an input type that accepts VirtualNetworkBgpCommunitiesArgs, VirtualNetworkBgpCommunitiesPtr and VirtualNetworkBgpCommunitiesPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesPtrInput` via:
//
//	        VirtualNetworkBgpCommunitiesArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkBgpCommunitiesPtrInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput
	ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesPtrOutput
}

type virtualNetworkBgpCommunitiesPtrType VirtualNetworkBgpCommunitiesArgs

func VirtualNetworkBgpCommunitiesPtr(v *VirtualNetworkBgpCommunitiesArgs) VirtualNetworkBgpCommunitiesPtrInput {
	return (*virtualNetworkBgpCommunitiesPtrType)(v)
}

func (*virtualNetworkBgpCommunitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (i *virtualNetworkBgpCommunitiesPtrType) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkBgpCommunitiesPtrType) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkBgpCommunities) *VirtualNetworkBgpCommunities {
		return &v
	}).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesOutput) VirtualNetworkCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunities) string { return v.VirtualNetworkCommunity }).(pulumi.StringOutput)
}

type VirtualNetworkBgpCommunitiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) Elem() VirtualNetworkBgpCommunitiesOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunities) VirtualNetworkBgpCommunities {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkBgpCommunities
		return ret
	}).(VirtualNetworkBgpCommunitiesOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesPtrOutput) VirtualNetworkCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunities) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkCommunity
	}).(pulumi.StringPtrOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesResponse struct {
	// The BGP community associated with the region of the virtual network.
	RegionalCommunity string `pulumi:"regionalCommunity"`
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity string `pulumi:"virtualNetworkCommunity"`
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponseOutput() VirtualNetworkBgpCommunitiesResponseOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponseOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponseOutput {
	return o
}

// The BGP community associated with the region of the virtual network.
func (o VirtualNetworkBgpCommunitiesResponseOutput) RegionalCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunitiesResponse) string { return v.RegionalCommunity }).(pulumi.StringOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesResponseOutput) VirtualNetworkCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunitiesResponse) string { return v.VirtualNetworkCommunity }).(pulumi.StringOutput)
}

type VirtualNetworkBgpCommunitiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutput() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) Elem() VirtualNetworkBgpCommunitiesResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) VirtualNetworkBgpCommunitiesResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkBgpCommunitiesResponse
		return ret
	}).(VirtualNetworkBgpCommunitiesResponseOutput)
}

// The BGP community associated with the region of the virtual network.
func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) RegionalCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegionalCommunity
	}).(pulumi.StringPtrOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) VirtualNetworkCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkCommunity
	}).(pulumi.StringPtrOutput)
}

// Reference to DNS forwarding ruleset and associated virtual network link.
type VirtualNetworkDnsForwardingRulesetResponse struct {
	// DNS Forwarding Ruleset Resource ID.
	Id *string `pulumi:"id"`
	// The reference to the virtual network link.
	VirtualNetworkLink *SubResourceResponse `pulumi:"virtualNetworkLink"`
}

// Reference to DNS forwarding ruleset and associated virtual network link.
type VirtualNetworkDnsForwardingRulesetResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkDnsForwardingRulesetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkDnsForwardingRulesetResponse)(nil)).Elem()
}

func (o VirtualNetworkDnsForwardingRulesetResponseOutput) ToVirtualNetworkDnsForwardingRulesetResponseOutput() VirtualNetworkDnsForwardingRulesetResponseOutput {
	return o
}

func (o VirtualNetworkDnsForwardingRulesetResponseOutput) ToVirtualNetworkDnsForwardingRulesetResponseOutputWithContext(ctx context.Context) VirtualNetworkDnsForwardingRulesetResponseOutput {
	return o
}

// DNS Forwarding Ruleset Resource ID.
func (o VirtualNetworkDnsForwardingRulesetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkDnsForwardingRulesetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference to the virtual network link.
func (o VirtualNetworkDnsForwardingRulesetResponseOutput) VirtualNetworkLink() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkDnsForwardingRulesetResponse) *SubResourceResponse { return v.VirtualNetworkLink }).(SubResourceResponsePtrOutput)
}

type VirtualNetworkDnsForwardingRulesetResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkDnsForwardingRulesetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkDnsForwardingRulesetResponse)(nil)).Elem()
}

func (o VirtualNetworkDnsForwardingRulesetResponseArrayOutput) ToVirtualNetworkDnsForwardingRulesetResponseArrayOutput() VirtualNetworkDnsForwardingRulesetResponseArrayOutput {
	return o
}

func (o VirtualNetworkDnsForwardingRulesetResponseArrayOutput) ToVirtualNetworkDnsForwardingRulesetResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkDnsForwardingRulesetResponseArrayOutput {
	return o
}

func (o VirtualNetworkDnsForwardingRulesetResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkDnsForwardingRulesetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkDnsForwardingRulesetResponse {
		return vs[0].([]VirtualNetworkDnsForwardingRulesetResponse)[vs[1].(int)]
	}).(VirtualNetworkDnsForwardingRulesetResponseOutput)
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryption struct {
	// Indicates if encryption is enabled on the virtual network.
	Enabled bool `pulumi:"enabled"`
	// If the encrypted VNet allows VM that does not support encryption
	Enforcement *string `pulumi:"enforcement"`
}

// VirtualNetworkEncryptionInput is an input type that accepts VirtualNetworkEncryptionArgs and VirtualNetworkEncryptionOutput values.
// You can construct a concrete instance of `VirtualNetworkEncryptionInput` via:
//
//	VirtualNetworkEncryptionArgs{...}
type VirtualNetworkEncryptionInput interface {
	pulumi.Input

	ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput
	ToVirtualNetworkEncryptionOutputWithContext(context.Context) VirtualNetworkEncryptionOutput
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionArgs struct {
	// Indicates if encryption is enabled on the virtual network.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// If the encrypted VNet allows VM that does not support encryption
	Enforcement pulumi.StringPtrInput `pulumi:"enforcement"`
}

func (VirtualNetworkEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryption)(nil)).Elem()
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput {
	return i.ToVirtualNetworkEncryptionOutputWithContext(context.Background())
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionOutputWithContext(ctx context.Context) VirtualNetworkEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionOutput)
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return i.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionOutput).ToVirtualNetworkEncryptionPtrOutputWithContext(ctx)
}

// VirtualNetworkEncryptionPtrInput is an input type that accepts VirtualNetworkEncryptionArgs, VirtualNetworkEncryptionPtr and VirtualNetworkEncryptionPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkEncryptionPtrInput` via:
//
//	        VirtualNetworkEncryptionArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkEncryptionPtrInput interface {
	pulumi.Input

	ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput
	ToVirtualNetworkEncryptionPtrOutputWithContext(context.Context) VirtualNetworkEncryptionPtrOutput
}

type virtualNetworkEncryptionPtrType VirtualNetworkEncryptionArgs

func VirtualNetworkEncryptionPtr(v *VirtualNetworkEncryptionArgs) VirtualNetworkEncryptionPtrInput {
	return (*virtualNetworkEncryptionPtrType)(v)
}

func (*virtualNetworkEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryption)(nil)).Elem()
}

func (i *virtualNetworkEncryptionPtrType) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return i.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkEncryptionPtrType) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionPtrOutput)
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryption)(nil)).Elem()
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput {
	return o
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionOutputWithContext(ctx context.Context) VirtualNetworkEncryptionOutput {
	return o
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return o.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkEncryption) *VirtualNetworkEncryption {
		return &v
	}).(VirtualNetworkEncryptionPtrOutput)
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// If the encrypted VNet allows VM that does not support encryption
func (o VirtualNetworkEncryptionOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkEncryption) *string { return v.Enforcement }).(pulumi.StringPtrOutput)
}

type VirtualNetworkEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryption)(nil)).Elem()
}

func (o VirtualNetworkEncryptionPtrOutput) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return o
}

func (o VirtualNetworkEncryptionPtrOutput) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return o
}

func (o VirtualNetworkEncryptionPtrOutput) Elem() VirtualNetworkEncryptionOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) VirtualNetworkEncryption {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkEncryption
		return ret
	}).(VirtualNetworkEncryptionOutput)
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// If the encrypted VNet allows VM that does not support encryption
func (o VirtualNetworkEncryptionPtrOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Enforcement
	}).(pulumi.StringPtrOutput)
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionResponse struct {
	// Indicates if encryption is enabled on the virtual network.
	Enabled bool `pulumi:"enabled"`
	// If the encrypted VNet allows VM that does not support encryption
	Enforcement *string `pulumi:"enforcement"`
}

// Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
type VirtualNetworkEncryptionResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryptionResponse)(nil)).Elem()
}

func (o VirtualNetworkEncryptionResponseOutput) ToVirtualNetworkEncryptionResponseOutput() VirtualNetworkEncryptionResponseOutput {
	return o
}

func (o VirtualNetworkEncryptionResponseOutput) ToVirtualNetworkEncryptionResponseOutputWithContext(ctx context.Context) VirtualNetworkEncryptionResponseOutput {
	return o
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkEncryptionResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// If the encrypted VNet allows VM that does not support encryption
func (o VirtualNetworkEncryptionResponseOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkEncryptionResponse) *string { return v.Enforcement }).(pulumi.StringPtrOutput)
}

type VirtualNetworkEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryptionResponse)(nil)).Elem()
}

func (o VirtualNetworkEncryptionResponsePtrOutput) ToVirtualNetworkEncryptionResponsePtrOutput() VirtualNetworkEncryptionResponsePtrOutput {
	return o
}

func (o VirtualNetworkEncryptionResponsePtrOutput) ToVirtualNetworkEncryptionResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionResponsePtrOutput {
	return o
}

func (o VirtualNetworkEncryptionResponsePtrOutput) Elem() VirtualNetworkEncryptionResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryptionResponse) VirtualNetworkEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkEncryptionResponse
		return ret
	}).(VirtualNetworkEncryptionResponseOutput)
}

// Indicates if encryption is enabled on the virtual network.
func (o VirtualNetworkEncryptionResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryptionResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// If the encrypted VNet allows VM that does not support encryption
func (o VirtualNetworkEncryptionResponsePtrOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Enforcement
	}).(pulumi.StringPtrOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayType struct {
	// ActiveActive flag.
	ActiveActive *bool `pulumi:"activeActive"`
	// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
	AdminState *string `pulumi:"adminState"`
	// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
	AllowRemoteVnetTraffic *bool `pulumi:"allowRemoteVnetTraffic"`
	// Configures this gateway to accept traffic from remote Virtual WAN networks.
	AllowVirtualWanTraffic *bool `pulumi:"allowVirtualWanTraffic"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes *AddressSpace `pulumi:"customRoutes"`
	// disableIPSecReplayProtection flag.
	DisableIPSecReplayProtection *bool `pulumi:"disableIPSecReplayProtection"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgpRouteTranslationForNat flag.
	EnableBgpRouteTranslationForNat *bool `pulumi:"enableBgpRouteTranslationForNat"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding *bool `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress *bool `pulumi:"enablePrivateIpAddress"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResource `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfiguration `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// NatRules for virtual network gateway.
	NatRules []VirtualNetworkGatewayNatRuleType `pulumi:"natRules"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VNetExtendedLocationResourceId *string `pulumi:"vNetExtendedLocationResourceId"`
	// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
	VirtualNetworkGatewayPolicyGroups []VirtualNetworkGatewayPolicyGroup `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfiguration `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration *string `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayTypeInput is an input type that accepts VirtualNetworkGatewayTypeArgs and VirtualNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypeInput` via:
//
//	VirtualNetworkGatewayTypeArgs{...}
type VirtualNetworkGatewayTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput
	ToVirtualNetworkGatewayTypeOutputWithContext(context.Context) VirtualNetworkGatewayTypeOutput
}

// A common class for general resource information.
type VirtualNetworkGatewayTypeArgs struct {
	// ActiveActive flag.
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
	// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
	AllowRemoteVnetTraffic pulumi.BoolPtrInput `pulumi:"allowRemoteVnetTraffic"`
	// Configures this gateway to accept traffic from remote Virtual WAN networks.
	AllowVirtualWanTraffic pulumi.BoolPtrInput `pulumi:"allowVirtualWanTraffic"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes AddressSpacePtrInput `pulumi:"customRoutes"`
	// disableIPSecReplayProtection flag.
	DisableIPSecReplayProtection pulumi.BoolPtrInput `pulumi:"disableIPSecReplayProtection"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// EnableBgpRouteTranslationForNat flag.
	EnableBgpRouteTranslationForNat pulumi.BoolPtrInput `pulumi:"enableBgpRouteTranslationForNat"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding pulumi.BoolPtrInput `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress pulumi.BoolPtrInput `pulumi:"enablePrivateIpAddress"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation ExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourcePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// NatRules for virtual network gateway.
	NatRules VirtualNetworkGatewayNatRuleTypeArrayInput `pulumi:"natRules"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VNetExtendedLocationResourceId pulumi.StringPtrInput `pulumi:"vNetExtendedLocationResourceId"`
	// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
	VirtualNetworkGatewayPolicyGroups VirtualNetworkGatewayPolicyGroupArrayInput `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationPtrInput `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration pulumi.StringPtrInput `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return i.ToVirtualNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput)
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput).ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayTypePtrInput is an input type that accepts VirtualNetworkGatewayTypeArgs, VirtualNetworkGatewayTypePtr and VirtualNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypePtrInput` via:
//
//	        VirtualNetworkGatewayTypeArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput
	ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Context) VirtualNetworkGatewayTypePtrOutput
}

type virtualNetworkGatewayTypePtrType VirtualNetworkGatewayTypeArgs

func VirtualNetworkGatewayTypePtr(v *VirtualNetworkGatewayTypeArgs) VirtualNetworkGatewayTypePtrInput {
	return (*virtualNetworkGatewayTypePtrType)(v)
}

func (*virtualNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypePtrOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayType) *VirtualNetworkGatewayType {
		return &v
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayTypeOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayTypeOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayTypeOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.AllowRemoteVnetTraffic }).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayTypeOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.AllowVirtualWanTraffic }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayTypeOutput) CustomRoutes() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *AddressSpace { return v.CustomRoutes }).(AddressSpacePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayTypeOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.DisableIPSecReplayProtection }).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayTypeOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableBgpRouteTranslationForNat }).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayTypeOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableDnsForwarding }).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayTypeOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnablePrivateIpAddress }).(pulumi.BoolPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *ExtendedLocation { return v.ExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypeOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *SubResource { return v.GatewayDefaultSite }).(SubResourcePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration { return v.IpConfigurations }).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) NatRules() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayNatRuleType { return v.NatRules }).(VirtualNetworkGatewayNatRuleTypeArrayOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewaySku { return v.Sku }).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayTypeOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VNetExtendedLocationResourceId }).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayTypeOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayPolicyGroup {
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypeOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VpnClientConfiguration { return v.VpnClientConfiguration }).(VpnClientConfigurationPtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayTypeOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnGatewayGeneration }).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) Elem() VirtualNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) VirtualNetworkGatewayType {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayType
		return ret
	}).(VirtualNetworkGatewayTypeOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayTypePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayTypePtrOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.AdminState
	}).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayTypePtrOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayTypePtrOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVirtualWanTraffic
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayTypePtrOutput) CustomRoutes() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.CustomRoutes
	}).(AddressSpacePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayTypePtrOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIPSecReplayProtection
	}).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayTypePtrOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgpRouteTranslationForNat
	}).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnsForwarding
	}).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateIpAddress
	}).(pulumi.BoolPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourcePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) NatRules() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayNatRuleType {
		if v == nil {
			return nil
		}
		return v.NatRules
	}).(VirtualNetworkGatewayNatRuleTypeArrayOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VirtualNetworkGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayTypePtrOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VNetExtendedLocationResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayTypePtrOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayPolicyGroup {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypePtrOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VpnClientConfiguration {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationPtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayTypePtrOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnGatewayGeneration
	}).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the public IP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArgs and VirtualNetworkGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInput` via:
//
//	VirtualNetworkGatewayIPConfigurationArgs{...}
type VirtualNetworkGatewayIPConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput
	ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationOutput
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the public IP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationOutput)
}

// VirtualNetworkGatewayIPConfigurationArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArray and VirtualNetworkGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationArrayInput` via:
//
//	VirtualNetworkGatewayIPConfigurationArray{ VirtualNetworkGatewayIPConfigurationArgs{...} }
type VirtualNetworkGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput
	ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput
}

type VirtualNetworkGatewayIPConfigurationArray []VirtualNetworkGatewayIPConfigurationInput

func (VirtualNetworkGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o VirtualNetworkGatewayIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfiguration {
		return vs[0].([]VirtualNetworkGatewayIPConfiguration)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Private IP Address for this gateway.
	PrivateIPAddress string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the virtual network gateway IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Private IP Address for this gateway.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.PrivateIPAddress }).(pulumi.StringOutput)
}

// The private IP address allocation method.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual network gateway IP configuration resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfigurationResponse {
		return vs[0].([]VirtualNetworkGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleType struct {
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMapping `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMapping `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type *string `pulumi:"type"`
}

// VirtualNetworkGatewayNatRuleTypeInput is an input type that accepts VirtualNetworkGatewayNatRuleTypeArgs and VirtualNetworkGatewayNatRuleTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleTypeInput` via:
//
//	VirtualNetworkGatewayNatRuleTypeArgs{...}
type VirtualNetworkGatewayNatRuleTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleTypeOutput() VirtualNetworkGatewayNatRuleTypeOutput
	ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleTypeOutput
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleTypeArgs struct {
	// The private IP address external mapping for NAT.
	ExternalMappings VpnNatRuleMappingArrayInput `pulumi:"externalMappings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings VpnNatRuleMappingArrayInput `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId pulumi.StringPtrInput `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualNetworkGatewayNatRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleTypeArgs) ToVirtualNetworkGatewayNatRuleTypeOutput() VirtualNetworkGatewayNatRuleTypeOutput {
	return i.ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleTypeArgs) ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleTypeOutput)
}

// VirtualNetworkGatewayNatRuleTypeArrayInput is an input type that accepts VirtualNetworkGatewayNatRuleTypeArray and VirtualNetworkGatewayNatRuleTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleTypeArrayInput` via:
//
//	VirtualNetworkGatewayNatRuleTypeArray{ VirtualNetworkGatewayNatRuleTypeArgs{...} }
type VirtualNetworkGatewayNatRuleTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleTypeArrayOutput() VirtualNetworkGatewayNatRuleTypeArrayOutput
	ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleTypeArrayOutput
}

type VirtualNetworkGatewayNatRuleTypeArray []VirtualNetworkGatewayNatRuleTypeInput

func (VirtualNetworkGatewayNatRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleTypeArray) ToVirtualNetworkGatewayNatRuleTypeArrayOutput() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return i.ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleTypeArray) ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleTypeArrayOutput)
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleTypeOutput) ToVirtualNetworkGatewayNatRuleTypeOutput() VirtualNetworkGatewayNatRuleTypeOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleTypeOutput) ToVirtualNetworkGatewayNatRuleTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeOutput {
	return o
}

// The private IP address external mapping for NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) ExternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) []VpnNatRuleMapping { return v.ExternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address internal mapping for NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) InternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) []VpnNatRuleMapping { return v.InternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VirtualNetworkGatewayNatRuleTypeOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of NAT rule for VPN NAT.
func (o VirtualNetworkGatewayNatRuleTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayNatRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleType)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleTypeArrayOutput) ToVirtualNetworkGatewayNatRuleTypeArrayOutput() VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleTypeArrayOutput) ToVirtualNetworkGatewayNatRuleTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleTypeArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayNatRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayNatRuleType {
		return vs[0].([]VirtualNetworkGatewayNatRuleType)[vs[1].(int)]
	}).(VirtualNetworkGatewayNatRuleTypeOutput)
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMappingResponse `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMappingResponse `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the NAT Rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkGatewayNatRule Resource.
type VirtualNetworkGatewayNatRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleResponseOutput) ToVirtualNetworkGatewayNatRuleResponseOutput() VirtualNetworkGatewayNatRuleResponseOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleResponseOutput) ToVirtualNetworkGatewayNatRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The private IP address external mapping for NAT.
func (o VirtualNetworkGatewayNatRuleResponseOutput) ExternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.ExternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address internal mapping for NAT.
func (o VirtualNetworkGatewayNatRuleResponseOutput) InternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.InternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VirtualNetworkGatewayNatRuleResponseOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the NAT Rule resource.
func (o VirtualNetworkGatewayNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VirtualNetworkGatewayNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleResponseArrayOutput) ToVirtualNetworkGatewayNatRuleResponseArrayOutput() VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleResponseArrayOutput) ToVirtualNetworkGatewayNatRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayNatRuleResponse {
		return vs[0].([]VirtualNetworkGatewayNatRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayNatRuleResponseOutput)
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
	IsDefault bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
	PolicyMembers []VirtualNetworkGatewayPolicyGroupMember `pulumi:"policyMembers"`
	// Priority for VirtualNetworkGatewayPolicyGroup.
	Priority int `pulumi:"priority"`
}

// VirtualNetworkGatewayPolicyGroupInput is an input type that accepts VirtualNetworkGatewayPolicyGroupArgs and VirtualNetworkGatewayPolicyGroupOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupInput` via:
//
//	VirtualNetworkGatewayPolicyGroupArgs{...}
type VirtualNetworkGatewayPolicyGroupInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput
	ToVirtualNetworkGatewayPolicyGroupOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupOutput
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
	PolicyMembers VirtualNetworkGatewayPolicyGroupMemberArrayInput `pulumi:"policyMembers"`
	// Priority for VirtualNetworkGatewayPolicyGroup.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (VirtualNetworkGatewayPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupArgs) ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupArgs) ToVirtualNetworkGatewayPolicyGroupOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupOutput)
}

// VirtualNetworkGatewayPolicyGroupArrayInput is an input type that accepts VirtualNetworkGatewayPolicyGroupArray and VirtualNetworkGatewayPolicyGroupArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupArrayInput` via:
//
//	VirtualNetworkGatewayPolicyGroupArray{ VirtualNetworkGatewayPolicyGroupArgs{...} }
type VirtualNetworkGatewayPolicyGroupArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput
	ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput
}

type VirtualNetworkGatewayPolicyGroupArray []VirtualNetworkGatewayPolicyGroupInput

func (VirtualNetworkGatewayPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupArray) ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupArray) ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupArrayOutput)
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupOutput) ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupOutput) ToVirtualNetworkGatewayPolicyGroupOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupOutput {
	return o
}

// Resource ID.
func (o VirtualNetworkGatewayPolicyGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
func (o VirtualNetworkGatewayPolicyGroupOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayPolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupOutput) PolicyMembers() VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) []VirtualNetworkGatewayPolicyGroupMember {
		return v.PolicyMembers
	}).(VirtualNetworkGatewayPolicyGroupMemberArrayOutput)
}

// Priority for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) int { return v.Priority }).(pulumi.IntOutput)
}

type VirtualNetworkGatewayPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroup {
		return vs[0].([]VirtualNetworkGatewayPolicyGroup)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupOutput)
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMember struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VirtualNetworkGatewayPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VirtualNetworkGatewayPolicyGroupMemberInput is an input type that accepts VirtualNetworkGatewayPolicyGroupMemberArgs and VirtualNetworkGatewayPolicyGroupMemberOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupMemberInput` via:
//
//	VirtualNetworkGatewayPolicyGroupMemberArgs{...}
type VirtualNetworkGatewayPolicyGroupMemberInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupMemberOutput() VirtualNetworkGatewayPolicyGroupMemberOutput
	ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupMemberOutput
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberArgs struct {
	// The Vpn Policy member attribute type.
	AttributeType pulumi.StringPtrInput `pulumi:"attributeType"`
	// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
	AttributeValue pulumi.StringPtrInput `pulumi:"attributeValue"`
	// Name of the VirtualNetworkGatewayPolicyGroupMember.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualNetworkGatewayPolicyGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupMemberArgs) ToVirtualNetworkGatewayPolicyGroupMemberOutput() VirtualNetworkGatewayPolicyGroupMemberOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupMemberArgs) ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupMemberOutput)
}

// VirtualNetworkGatewayPolicyGroupMemberArrayInput is an input type that accepts VirtualNetworkGatewayPolicyGroupMemberArray and VirtualNetworkGatewayPolicyGroupMemberArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupMemberArrayInput` via:
//
//	VirtualNetworkGatewayPolicyGroupMemberArray{ VirtualNetworkGatewayPolicyGroupMemberArgs{...} }
type VirtualNetworkGatewayPolicyGroupMemberArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupMemberArrayOutput() VirtualNetworkGatewayPolicyGroupMemberArrayOutput
	ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupMemberArrayOutput
}

type VirtualNetworkGatewayPolicyGroupMemberArray []VirtualNetworkGatewayPolicyGroupMemberInput

func (VirtualNetworkGatewayPolicyGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupMemberArray) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutput() VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupMemberArray) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupMemberArrayOutput)
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberOutput) ToVirtualNetworkGatewayPolicyGroupMemberOutput() VirtualNetworkGatewayPolicyGroupMemberOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberOutput) ToVirtualNetworkGatewayPolicyGroupMemberOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VirtualNetworkGatewayPolicyGroupMemberOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMember) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMember) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayPolicyGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupMember)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutput() VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroupMember {
		return vs[0].([]VirtualNetworkGatewayPolicyGroupMember)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupMemberOutput)
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberResponse struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VirtualNetworkGatewayPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// Vpn Client Connection configuration PolicyGroup member
type VirtualNetworkGatewayPolicyGroupMemberResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseOutput() VirtualNetworkGatewayPolicyGroupMemberResponseOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberResponseOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMemberResponse) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMemberResponse) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VirtualNetworkGatewayPolicyGroupMember.
func (o VirtualNetworkGatewayPolicyGroupMemberResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupMemberResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput() VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupMemberResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupMemberResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroupMemberResponse {
		return vs[0].([]VirtualNetworkGatewayPolicyGroupMemberResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupMemberResponseOutput)
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
	IsDefault bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
	PolicyMembers []VirtualNetworkGatewayPolicyGroupMemberResponse `pulumi:"policyMembers"`
	// Priority for VirtualNetworkGatewayPolicyGroup.
	Priority int `pulumi:"priority"`
	// The provisioning state of the VirtualNetworkGatewayPolicyGroup resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of references to vngClientConnectionConfigurations.
	VngClientConnectionConfigurations []SubResourceResponse `pulumi:"vngClientConnectionConfigurations"`
}

// Parameters for VirtualNetworkGatewayPolicyGroup.
type VirtualNetworkGatewayPolicyGroupResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupResponseOutput) ToVirtualNetworkGatewayPolicyGroupResponseOutput() VirtualNetworkGatewayPolicyGroupResponseOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupResponseOutput) ToVirtualNetworkGatewayPolicyGroupResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) PolicyMembers() VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) []VirtualNetworkGatewayPolicyGroupMemberResponse {
		return v.PolicyMembers
	}).(VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput)
}

// Priority for VirtualNetworkGatewayPolicyGroup.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// The provisioning state of the VirtualNetworkGatewayPolicyGroup resource.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of references to vngClientConnectionConfigurations.
func (o VirtualNetworkGatewayPolicyGroupResponseOutput) VngClientConnectionConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupResponse) []SubResourceResponse {
		return v.VngClientConnectionConfigurations
	}).(SubResourceResponseArrayOutput)
}

type VirtualNetworkGatewayPolicyGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupResponseArrayOutput() VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupResponseArrayOutput) ToVirtualNetworkGatewayPolicyGroupResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroupResponse {
		return vs[0].([]VirtualNetworkGatewayPolicyGroupResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupResponseOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayResponse struct {
	// ActiveActive flag.
	ActiveActive *bool `pulumi:"activeActive"`
	// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
	AdminState *string `pulumi:"adminState"`
	// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
	AllowRemoteVnetTraffic *bool `pulumi:"allowRemoteVnetTraffic"`
	// Configures this gateway to accept traffic from remote Virtual WAN networks.
	AllowVirtualWanTraffic *bool `pulumi:"allowVirtualWanTraffic"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes *AddressSpaceResponse `pulumi:"customRoutes"`
	// disableIPSecReplayProtection flag.
	DisableIPSecReplayProtection *bool `pulumi:"disableIPSecReplayProtection"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgpRouteTranslationForNat flag.
	EnableBgpRouteTranslationForNat *bool `pulumi:"enableBgpRouteTranslationForNat"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding *bool `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress *bool `pulumi:"enablePrivateIpAddress"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResourceResponse `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IP address allocated by the gateway to which dns requests can be sent.
	InboundDnsForwardingEndpoint string `pulumi:"inboundDnsForwardingEndpoint"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// NatRules for virtual network gateway.
	NatRules []VirtualNetworkGatewayNatRuleResponse `pulumi:"natRules"`
	// The provisioning state of the virtual network gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VNetExtendedLocationResourceId *string `pulumi:"vNetExtendedLocationResourceId"`
	// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
	VirtualNetworkGatewayPolicyGroups []VirtualNetworkGatewayPolicyGroupResponse `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfigurationResponse `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration *string `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType *string `pulumi:"vpnType"`
}

// A common class for general resource information.
type VirtualNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return o
}

// ActiveActive flag.
func (o VirtualNetworkGatewayResponseOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayResponseOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayResponseOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.AllowRemoteVnetTraffic }).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayResponseOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.AllowVirtualWanTraffic }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayResponseOutput) CustomRoutes() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *AddressSpaceResponse { return v.CustomRoutes }).(AddressSpaceResponsePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayResponseOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.DisableIPSecReplayProtection }).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayResponseOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableBgpRouteTranslationForNat }).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayResponseOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableDnsForwarding }).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayResponseOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnablePrivateIpAddress }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponseOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *SubResourceResponse { return v.GatewayDefaultSite }).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address allocated by the gateway to which dns requests can be sent.
func (o VirtualNetworkGatewayResponseOutput) InboundDnsForwardingEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.InboundDnsForwardingEndpoint }).(pulumi.StringOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) NatRules() VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayNatRuleResponse { return v.NatRules }).(VirtualNetworkGatewayNatRuleResponseArrayOutput)
}

// The provisioning state of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse { return v.Sku }).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayResponseOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VNetExtendedLocationResourceId }).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayResponseOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayPolicyGroupResponse {
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupResponseArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponseOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse { return v.VpnClientConfiguration }).(VpnClientConfigurationResponsePtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayResponseOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnGatewayGeneration }).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) Elem() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) VirtualNetworkGatewayResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayResponse
		return ret
	}).(VirtualNetworkGatewayResponseOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayResponsePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet
func (o VirtualNetworkGatewayResponsePtrOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminState
	}).(pulumi.StringPtrOutput)
}

// Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN.
func (o VirtualNetworkGatewayResponsePtrOutput) AllowRemoteVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// Configures this gateway to accept traffic from remote Virtual WAN networks.
func (o VirtualNetworkGatewayResponsePtrOutput) AllowVirtualWanTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVirtualWanTraffic
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayResponsePtrOutput) CustomRoutes() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.CustomRoutes
	}).(AddressSpaceResponsePtrOutput)
}

// disableIPSecReplayProtection flag.
func (o VirtualNetworkGatewayResponsePtrOutput) DisableIPSecReplayProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIPSecReplayProtection
	}).(pulumi.BoolPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// EnableBgpRouteTranslationForNat flag.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableBgpRouteTranslationForNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgpRouteTranslationForNat
	}).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnsForwarding
	}).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateIpAddress
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The IP address allocated by the gateway to which dns requests can be sent.
func (o VirtualNetworkGatewayResponsePtrOutput) InboundDnsForwardingEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InboundDnsForwardingEndpoint
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// NatRules for virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) NatRules() VirtualNetworkGatewayNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.NatRules
	}).(VirtualNetworkGatewayNatRuleResponseArrayOutput)
}

// The provisioning state of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayResponsePtrOutput) VNetExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VNetExtendedLocationResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) VirtualNetworkGatewayPolicyGroups() VirtualNetworkGatewayPolicyGroupResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayPolicyGroupResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkGatewayPolicyGroups
	}).(VirtualNetworkGatewayPolicyGroupResponseArrayOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnGatewayGeneration
	}).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySku struct {
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuInput is an input type that accepts VirtualNetworkGatewaySkuArgs and VirtualNetworkGatewaySkuOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInput` via:
//
//	VirtualNetworkGatewaySkuArgs{...}
type VirtualNetworkGatewaySkuInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput
	ToVirtualNetworkGatewaySkuOutputWithContext(context.Context) VirtualNetworkGatewaySkuOutput
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuArgs struct {
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return i.ToVirtualNetworkGatewaySkuOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput)
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput).ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuPtrInput is an input type that accepts VirtualNetworkGatewaySkuArgs, VirtualNetworkGatewaySkuPtr and VirtualNetworkGatewaySkuPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuPtrInput` via:
//
//	        VirtualNetworkGatewaySkuArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewaySkuPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput
	ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuPtrOutput
}

type virtualNetworkGatewaySkuPtrType VirtualNetworkGatewaySkuArgs

func VirtualNetworkGatewaySkuPtr(v *VirtualNetworkGatewaySkuArgs) VirtualNetworkGatewaySkuPtrInput {
	return (*virtualNetworkGatewaySkuPtrType)(v)
}

func (*virtualNetworkGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewaySku) *VirtualNetworkGatewaySku {
		return &v
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) Elem() VirtualNetworkGatewaySkuOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) VirtualNetworkGatewaySku {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewaySku
		return ret
	}).(VirtualNetworkGatewaySkuOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuResponse struct {
	// The capacity.
	Capacity int `pulumi:"capacity"`
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return o
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) Elem() VirtualNetworkGatewaySkuResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) VirtualNetworkGatewaySkuResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewaySkuResponse
		return ret
	}).(VirtualNetworkGatewaySkuResponseOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringType struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// If we need to verify the provisioning state of the remote gateway.
	DoNotVerifyRemoteGateways *bool `pulumi:"doNotVerifyRemoteGateways"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The status of the virtual network peering.
	PeeringState *string `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel *string `pulumi:"peeringSyncLevel"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace *AddressSpace `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities *VirtualNetworkBgpCommunities `pulumi:"remoteBgpCommunities"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResource `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace *AddressSpace `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Resource type.
	Type *string `pulumi:"type"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringTypeInput is an input type that accepts VirtualNetworkPeeringTypeArgs and VirtualNetworkPeeringTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeInput` via:
//
//	VirtualNetworkPeeringTypeArgs{...}
type VirtualNetworkPeeringTypeInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput
	ToVirtualNetworkPeeringTypeOutputWithContext(context.Context) VirtualNetworkPeeringTypeOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeArgs struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// If we need to verify the provisioning state of the remote gateway.
	DoNotVerifyRemoteGateways pulumi.BoolPtrInput `pulumi:"doNotVerifyRemoteGateways"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the virtual network peering.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel pulumi.StringPtrInput `pulumi:"peeringSyncLevel"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace AddressSpacePtrInput `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities VirtualNetworkBgpCommunitiesPtrInput `pulumi:"remoteBgpCommunities"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourcePtrInput `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace AddressSpacePtrInput `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return i.ToVirtualNetworkPeeringTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeOutput)
}

// VirtualNetworkPeeringTypeArrayInput is an input type that accepts VirtualNetworkPeeringTypeArray and VirtualNetworkPeeringTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeArrayInput` via:
//
//	VirtualNetworkPeeringTypeArray{ VirtualNetworkPeeringTypeArgs{...} }
type VirtualNetworkPeeringTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput
	ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Context) VirtualNetworkPeeringTypeArrayOutput
}

type VirtualNetworkPeeringTypeArray []VirtualNetworkPeeringTypeInput

func (VirtualNetworkPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return i.ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return o
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringTypeOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
func (o VirtualNetworkPeeringTypeOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// If we need to verify the provisioning state of the remote gateway.
func (o VirtualNetworkPeeringTypeOutput) DoNotVerifyRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.DoNotVerifyRemoteGateways }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the virtual network peering.
func (o VirtualNetworkPeeringTypeOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The peering sync status of the virtual network peering.
func (o VirtualNetworkPeeringTypeOutput) PeeringSyncLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.PeeringSyncLevel }).(pulumi.StringPtrOutput)
}

// The reference to the address space peered with the remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) RemoteAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.RemoteAddressSpace }).(AddressSpacePtrOutput)
}

// The reference to the remote virtual network's Bgp Communities.
func (o VirtualNetworkPeeringTypeOutput) RemoteBgpCommunities() VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *VirtualNetworkBgpCommunities { return v.RemoteBgpCommunities }).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringTypeOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *SubResource { return v.RemoteVirtualNetwork }).(SubResourcePtrOutput)
}

// The reference to the current address space of the remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) RemoteVirtualNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.RemoteVirtualNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// Resource type.
func (o VirtualNetworkPeeringTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringTypeOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringType {
		return vs[0].([]VirtualNetworkPeeringType)[vs[1].(int)]
	}).(VirtualNetworkPeeringTypeOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponse struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// If we need to verify the provisioning state of the remote gateway.
	DoNotVerifyRemoteGateways *bool `pulumi:"doNotVerifyRemoteGateways"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The status of the virtual network peering.
	PeeringState *string `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel *string `pulumi:"peeringSyncLevel"`
	// The provisioning state of the virtual network peering resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace *AddressSpaceResponse `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities *VirtualNetworkBgpCommunitiesResponse `pulumi:"remoteBgpCommunities"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResourceResponse `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace *AddressSpaceResponse `pulumi:"remoteVirtualNetworkAddressSpace"`
	// The reference to the remote virtual network's encryption
	RemoteVirtualNetworkEncryption VirtualNetworkEncryptionResponse `pulumi:"remoteVirtualNetworkEncryption"`
	// The resourceGuid property of the Virtual Network peering resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource type.
	Type *string `pulumi:"type"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return o
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringResponseOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
func (o VirtualNetworkPeeringResponseOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// If we need to verify the provisioning state of the remote gateway.
func (o VirtualNetworkPeeringResponseOutput) DoNotVerifyRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.DoNotVerifyRemoteGateways }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkPeeringResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the virtual network peering.
func (o VirtualNetworkPeeringResponseOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The peering sync status of the virtual network peering.
func (o VirtualNetworkPeeringResponseOutput) PeeringSyncLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.PeeringSyncLevel }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual network peering resource.
func (o VirtualNetworkPeeringResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the address space peered with the remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) RemoteAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.RemoteAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The reference to the remote virtual network's Bgp Communities.
func (o VirtualNetworkPeeringResponseOutput) RemoteBgpCommunities() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *VirtualNetworkBgpCommunitiesResponse {
		return v.RemoteBgpCommunities
	}).(VirtualNetworkBgpCommunitiesResponsePtrOutput)
}

// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *SubResourceResponse { return v.RemoteVirtualNetwork }).(SubResourceResponsePtrOutput)
}

// The reference to the current address space of the remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.RemoteVirtualNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The reference to the remote virtual network's encryption
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetworkEncryption() VirtualNetworkEncryptionResponseOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) VirtualNetworkEncryptionResponse {
		return v.RemoteVirtualNetworkEncryption
	}).(VirtualNetworkEncryptionResponseOutput)
}

// The resourceGuid property of the Virtual Network peering resource.
func (o VirtualNetworkPeeringResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource type.
func (o VirtualNetworkPeeringResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringResponseOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringResponse {
		return vs[0].([]VirtualNetworkPeeringResponse)[vs[1].(int)]
	}).(VirtualNetworkPeeringResponseOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapType struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfiguration `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfiguration `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for VirtualNetworkTapType
func (val *VirtualNetworkTapType) Defaults() *VirtualNetworkTapType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DestinationLoadBalancerFrontEndIPConfiguration = tmp.DestinationLoadBalancerFrontEndIPConfiguration.Defaults()

	tmp.DestinationNetworkInterfaceIPConfiguration = tmp.DestinationNetworkInterfaceIPConfiguration.Defaults()

	return &tmp
}

// VirtualNetworkTapTypeInput is an input type that accepts VirtualNetworkTapTypeArgs and VirtualNetworkTapTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypeInput` via:
//
//	VirtualNetworkTapTypeArgs{...}
type VirtualNetworkTapTypeInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput
	ToVirtualNetworkTapTypeOutputWithContext(context.Context) VirtualNetworkTapTypeOutput
}

// Virtual Network Tap resource.
type VirtualNetworkTapTypeArgs struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration FrontendIPConfigurationPtrInput `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration NetworkInterfaceIPConfigurationPtrInput `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort pulumi.IntPtrInput `pulumi:"destinationPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for VirtualNetworkTapTypeArgs
func (val *VirtualNetworkTapTypeArgs) Defaults() *VirtualNetworkTapTypeArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (VirtualNetworkTapTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return i.ToVirtualNetworkTapTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeOutput)
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return i.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeOutput).ToVirtualNetworkTapTypePtrOutputWithContext(ctx)
}

// VirtualNetworkTapTypePtrInput is an input type that accepts VirtualNetworkTapTypeArgs, VirtualNetworkTapTypePtr and VirtualNetworkTapTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypePtrInput` via:
//
//	        VirtualNetworkTapTypeArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkTapTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput
	ToVirtualNetworkTapTypePtrOutputWithContext(context.Context) VirtualNetworkTapTypePtrOutput
}

type virtualNetworkTapTypePtrType VirtualNetworkTapTypeArgs

func VirtualNetworkTapTypePtr(v *VirtualNetworkTapTypeArgs) VirtualNetworkTapTypePtrInput {
	return (*virtualNetworkTapTypePtrType)(v)
}

func (*virtualNetworkTapTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapType)(nil)).Elem()
}

func (i *virtualNetworkTapTypePtrType) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return i.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapTypePtrType) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypePtrOutput)
}

// VirtualNetworkTapTypeArrayInput is an input type that accepts VirtualNetworkTapTypeArray and VirtualNetworkTapTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypeArrayInput` via:
//
//	VirtualNetworkTapTypeArray{ VirtualNetworkTapTypeArgs{...} }
type VirtualNetworkTapTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput
	ToVirtualNetworkTapTypeArrayOutputWithContext(context.Context) VirtualNetworkTapTypeArrayOutput
}

type VirtualNetworkTapTypeArray []VirtualNetworkTapTypeInput

func (VirtualNetworkTapTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapType)(nil)).Elem()
}

func (i VirtualNetworkTapTypeArray) ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput {
	return i.ToVirtualNetworkTapTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArray) ToVirtualNetworkTapTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkTapTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeArrayOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return o
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return o
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return o.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkTapType) *VirtualNetworkTapType {
		return &v
	}).(VirtualNetworkTapTypePtrOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapTypeOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *FrontendIPConfiguration {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapTypeOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *NetworkInterfaceIPConfiguration {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapTypeOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type VirtualNetworkTapTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypePtrOutput) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return o
}

func (o VirtualNetworkTapTypePtrOutput) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return o
}

func (o VirtualNetworkTapTypePtrOutput) Elem() VirtualNetworkTapTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) VirtualNetworkTapType {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkTapType
		return ret
	}).(VirtualNetworkTapTypeOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapTypePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *FrontendIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapTypePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *NetworkInterfaceIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapTypePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type VirtualNetworkTapTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypeArrayOutput) ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput {
	return o
}

func (o VirtualNetworkTapTypeArrayOutput) ToVirtualNetworkTapTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkTapTypeArrayOutput {
	return o
}

func (o VirtualNetworkTapTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapType {
		return vs[0].([]VirtualNetworkTapType)[vs[1].(int)]
	}).(VirtualNetworkTapTypeOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponse struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfigurationResponse `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network tap resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for VirtualNetworkTapResponse
func (val *VirtualNetworkTapResponse) Defaults() *VirtualNetworkTapResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DestinationLoadBalancerFrontEndIPConfiguration = tmp.DestinationLoadBalancerFrontEndIPConfiguration.Defaults()

	tmp.DestinationNetworkInterfaceIPConfiguration = tmp.DestinationNetworkInterfaceIPConfiguration.Defaults()

	return &tmp
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return o
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponseOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponseOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkTapResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) Elem() VirtualNetworkTapResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) VirtualNetworkTapResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkTapResponse
		return ret
	}).(VirtualNetworkTapResponseOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponsePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponsePtrOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkTapResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapResponse {
		return vs[0].([]VirtualNetworkTapResponse)[vs[1].(int)]
	}).(VirtualNetworkTapResponseOutput)
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfiguration struct {
	// The minimum number of scale units for VirtualHub Router.
	MinCapacity *int `pulumi:"minCapacity"`
}

// VirtualRouterAutoScaleConfigurationInput is an input type that accepts VirtualRouterAutoScaleConfigurationArgs and VirtualRouterAutoScaleConfigurationOutput values.
// You can construct a concrete instance of `VirtualRouterAutoScaleConfigurationInput` via:
//
//	VirtualRouterAutoScaleConfigurationArgs{...}
type VirtualRouterAutoScaleConfigurationInput interface {
	pulumi.Input

	ToVirtualRouterAutoScaleConfigurationOutput() VirtualRouterAutoScaleConfigurationOutput
	ToVirtualRouterAutoScaleConfigurationOutputWithContext(context.Context) VirtualRouterAutoScaleConfigurationOutput
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationArgs struct {
	// The minimum number of scale units for VirtualHub Router.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
}

func (VirtualRouterAutoScaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationOutput() VirtualRouterAutoScaleConfigurationOutput {
	return i.ToVirtualRouterAutoScaleConfigurationOutputWithContext(context.Background())
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterAutoScaleConfigurationOutput)
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return i.ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualRouterAutoScaleConfigurationArgs) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterAutoScaleConfigurationOutput).ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx)
}

// VirtualRouterAutoScaleConfigurationPtrInput is an input type that accepts VirtualRouterAutoScaleConfigurationArgs, VirtualRouterAutoScaleConfigurationPtr and VirtualRouterAutoScaleConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualRouterAutoScaleConfigurationPtrInput` via:
//
//	        VirtualRouterAutoScaleConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualRouterAutoScaleConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput
	ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Context) VirtualRouterAutoScaleConfigurationPtrOutput
}

type virtualRouterAutoScaleConfigurationPtrType VirtualRouterAutoScaleConfigurationArgs

func VirtualRouterAutoScaleConfigurationPtr(v *VirtualRouterAutoScaleConfigurationArgs) VirtualRouterAutoScaleConfigurationPtrInput {
	return (*virtualRouterAutoScaleConfigurationPtrType)(v)
}

func (*virtualRouterAutoScaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (i *virtualRouterAutoScaleConfigurationPtrType) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return i.ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualRouterAutoScaleConfigurationPtrType) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterAutoScaleConfigurationPtrOutput)
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationOutput() VirtualRouterAutoScaleConfigurationOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return o.ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualRouterAutoScaleConfigurationOutput) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualRouterAutoScaleConfiguration) *VirtualRouterAutoScaleConfiguration {
		return &v
	}).(VirtualRouterAutoScaleConfigurationPtrOutput)
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualRouterAutoScaleConfiguration) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type VirtualRouterAutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterAutoScaleConfiguration)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationPtrOutput) ToVirtualRouterAutoScaleConfigurationPtrOutput() VirtualRouterAutoScaleConfigurationPtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationPtrOutput) ToVirtualRouterAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationPtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationPtrOutput) Elem() VirtualRouterAutoScaleConfigurationOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfiguration) VirtualRouterAutoScaleConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualRouterAutoScaleConfiguration
		return ret
	}).(VirtualRouterAutoScaleConfigurationOutput)
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationResponse struct {
	// The minimum number of scale units for VirtualHub Router.
	MinCapacity *int `pulumi:"minCapacity"`
}

// The VirtualHub Router autoscale configuration.
type VirtualRouterAutoScaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterAutoScaleConfigurationResponse)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationResponseOutput) ToVirtualRouterAutoScaleConfigurationResponseOutput() VirtualRouterAutoScaleConfigurationResponseOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationResponseOutput) ToVirtualRouterAutoScaleConfigurationResponseOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationResponseOutput {
	return o
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationResponseOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualRouterAutoScaleConfigurationResponse) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type VirtualRouterAutoScaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterAutoScaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterAutoScaleConfigurationResponse)(nil)).Elem()
}

func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) ToVirtualRouterAutoScaleConfigurationResponsePtrOutput() VirtualRouterAutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) ToVirtualRouterAutoScaleConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualRouterAutoScaleConfigurationResponsePtrOutput {
	return o
}

func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) Elem() VirtualRouterAutoScaleConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfigurationResponse) VirtualRouterAutoScaleConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VirtualRouterAutoScaleConfigurationResponse
		return ret
	}).(VirtualRouterAutoScaleConfigurationResponseOutput)
}

// The minimum number of scale units for VirtualHub Router.
func (o VirtualRouterAutoScaleConfigurationResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualRouterAutoScaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRoute struct {
	// List of all Static Routes.
	StaticRoutes []StaticRoute `pulumi:"staticRoutes"`
	// Configuration for static routes on this HubVnetConnection.
	StaticRoutesConfig *StaticRoutesConfig `pulumi:"staticRoutesConfig"`
}

// VnetRouteInput is an input type that accepts VnetRouteArgs and VnetRouteOutput values.
// You can construct a concrete instance of `VnetRouteInput` via:
//
//	VnetRouteArgs{...}
type VnetRouteInput interface {
	pulumi.Input

	ToVnetRouteOutput() VnetRouteOutput
	ToVnetRouteOutputWithContext(context.Context) VnetRouteOutput
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteArgs struct {
	// List of all Static Routes.
	StaticRoutes StaticRouteArrayInput `pulumi:"staticRoutes"`
	// Configuration for static routes on this HubVnetConnection.
	StaticRoutesConfig StaticRoutesConfigPtrInput `pulumi:"staticRoutesConfig"`
}

func (VnetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (i VnetRouteArgs) ToVnetRouteOutput() VnetRouteOutput {
	return i.ToVnetRouteOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput)
}

func (i VnetRouteArgs) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return i.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput).ToVnetRoutePtrOutputWithContext(ctx)
}

// VnetRoutePtrInput is an input type that accepts VnetRouteArgs, VnetRoutePtr and VnetRoutePtrOutput values.
// You can construct a concrete instance of `VnetRoutePtrInput` via:
//
//	        VnetRouteArgs{...}
//
//	or:
//
//	        nil
type VnetRoutePtrInput interface {
	pulumi.Input

	ToVnetRoutePtrOutput() VnetRoutePtrOutput
	ToVnetRoutePtrOutputWithContext(context.Context) VnetRoutePtrOutput
}

type vnetRoutePtrType VnetRouteArgs

func VnetRoutePtr(v *VnetRouteArgs) VnetRoutePtrInput {
	return (*vnetRoutePtrType)(v)
}

func (*vnetRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRoute)(nil)).Elem()
}

func (i *vnetRoutePtrType) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return i.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (i *vnetRoutePtrType) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRoutePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteOutput struct{ *pulumi.OutputState }

func (VnetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (o VnetRouteOutput) ToVnetRouteOutput() VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return o.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (o VnetRouteOutput) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VnetRoute) *VnetRoute {
		return &v
	}).(VnetRoutePtrOutput)
}

// List of all Static Routes.
func (o VnetRouteOutput) StaticRoutes() StaticRouteArrayOutput {
	return o.ApplyT(func(v VnetRoute) []StaticRoute { return v.StaticRoutes }).(StaticRouteArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRouteOutput) StaticRoutesConfig() StaticRoutesConfigPtrOutput {
	return o.ApplyT(func(v VnetRoute) *StaticRoutesConfig { return v.StaticRoutesConfig }).(StaticRoutesConfigPtrOutput)
}

type VnetRoutePtrOutput struct{ *pulumi.OutputState }

func (VnetRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRoute)(nil)).Elem()
}

func (o VnetRoutePtrOutput) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return o
}

func (o VnetRoutePtrOutput) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return o
}

func (o VnetRoutePtrOutput) Elem() VnetRouteOutput {
	return o.ApplyT(func(v *VnetRoute) VnetRoute {
		if v != nil {
			return *v
		}
		var ret VnetRoute
		return ret
	}).(VnetRouteOutput)
}

// List of all Static Routes.
func (o VnetRoutePtrOutput) StaticRoutes() StaticRouteArrayOutput {
	return o.ApplyT(func(v *VnetRoute) []StaticRoute {
		if v == nil {
			return nil
		}
		return v.StaticRoutes
	}).(StaticRouteArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRoutePtrOutput) StaticRoutesConfig() StaticRoutesConfigPtrOutput {
	return o.ApplyT(func(v *VnetRoute) *StaticRoutesConfig {
		if v == nil {
			return nil
		}
		return v.StaticRoutesConfig
	}).(StaticRoutesConfigPtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteResponse struct {
	// The list of references to HubBgpConnection objects.
	BgpConnections []SubResourceResponse `pulumi:"bgpConnections"`
	// List of all Static Routes.
	StaticRoutes []StaticRouteResponse `pulumi:"staticRoutes"`
	// Configuration for static routes on this HubVnetConnection.
	StaticRoutesConfig *StaticRoutesConfigResponse `pulumi:"staticRoutesConfig"`
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

// The list of references to HubBgpConnection objects.
func (o VnetRouteResponseOutput) BgpConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VnetRouteResponse) []SubResourceResponse { return v.BgpConnections }).(SubResourceResponseArrayOutput)
}

// List of all Static Routes.
func (o VnetRouteResponseOutput) StaticRoutes() StaticRouteResponseArrayOutput {
	return o.ApplyT(func(v VnetRouteResponse) []StaticRouteResponse { return v.StaticRoutes }).(StaticRouteResponseArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRouteResponseOutput) StaticRoutesConfig() StaticRoutesConfigResponsePtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *StaticRoutesConfigResponse { return v.StaticRoutesConfig }).(StaticRoutesConfigResponsePtrOutput)
}

type VnetRouteResponsePtrOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponsePtrOutput) ToVnetRouteResponsePtrOutput() VnetRouteResponsePtrOutput {
	return o
}

func (o VnetRouteResponsePtrOutput) ToVnetRouteResponsePtrOutputWithContext(ctx context.Context) VnetRouteResponsePtrOutput {
	return o
}

func (o VnetRouteResponsePtrOutput) Elem() VnetRouteResponseOutput {
	return o.ApplyT(func(v *VnetRouteResponse) VnetRouteResponse {
		if v != nil {
			return *v
		}
		var ret VnetRouteResponse
		return ret
	}).(VnetRouteResponseOutput)
}

// The list of references to HubBgpConnection objects.
func (o VnetRouteResponsePtrOutput) BgpConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VnetRouteResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BgpConnections
	}).(SubResourceResponseArrayOutput)
}

// List of all Static Routes.
func (o VnetRouteResponsePtrOutput) StaticRoutes() StaticRouteResponseArrayOutput {
	return o.ApplyT(func(v *VnetRouteResponse) []StaticRouteResponse {
		if v == nil {
			return nil
		}
		return v.StaticRoutes
	}).(StaticRouteResponseArrayOutput)
}

// Configuration for static routes on this HubVnetConnection.
func (o VnetRouteResponsePtrOutput) StaticRoutesConfig() StaticRoutesConfigResponsePtrOutput {
	return o.ApplyT(func(v *VnetRouteResponse) *StaticRoutesConfigResponse {
		if v == nil {
			return nil
		}
		return v.StaticRoutesConfig
	}).(StaticRoutesConfigResponsePtrOutput)
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of references to virtualNetworkGatewayPolicyGroups
	VirtualNetworkGatewayPolicyGroups []SubResource `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpace `pulumi:"vpnClientAddressPool"`
}

// VngClientConnectionConfigurationInput is an input type that accepts VngClientConnectionConfigurationArgs and VngClientConnectionConfigurationOutput values.
// You can construct a concrete instance of `VngClientConnectionConfigurationInput` via:
//
//	VngClientConnectionConfigurationArgs{...}
type VngClientConnectionConfigurationInput interface {
	pulumi.Input

	ToVngClientConnectionConfigurationOutput() VngClientConnectionConfigurationOutput
	ToVngClientConnectionConfigurationOutputWithContext(context.Context) VngClientConnectionConfigurationOutput
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of references to virtualNetworkGatewayPolicyGroups
	VirtualNetworkGatewayPolicyGroups SubResourceArrayInput `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceInput `pulumi:"vpnClientAddressPool"`
}

func (VngClientConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VngClientConnectionConfiguration)(nil)).Elem()
}

func (i VngClientConnectionConfigurationArgs) ToVngClientConnectionConfigurationOutput() VngClientConnectionConfigurationOutput {
	return i.ToVngClientConnectionConfigurationOutputWithContext(context.Background())
}

func (i VngClientConnectionConfigurationArgs) ToVngClientConnectionConfigurationOutputWithContext(ctx context.Context) VngClientConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VngClientConnectionConfigurationOutput)
}

// VngClientConnectionConfigurationArrayInput is an input type that accepts VngClientConnectionConfigurationArray and VngClientConnectionConfigurationArrayOutput values.
// You can construct a concrete instance of `VngClientConnectionConfigurationArrayInput` via:
//
//	VngClientConnectionConfigurationArray{ VngClientConnectionConfigurationArgs{...} }
type VngClientConnectionConfigurationArrayInput interface {
	pulumi.Input

	ToVngClientConnectionConfigurationArrayOutput() VngClientConnectionConfigurationArrayOutput
	ToVngClientConnectionConfigurationArrayOutputWithContext(context.Context) VngClientConnectionConfigurationArrayOutput
}

type VngClientConnectionConfigurationArray []VngClientConnectionConfigurationInput

func (VngClientConnectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VngClientConnectionConfiguration)(nil)).Elem()
}

func (i VngClientConnectionConfigurationArray) ToVngClientConnectionConfigurationArrayOutput() VngClientConnectionConfigurationArrayOutput {
	return i.ToVngClientConnectionConfigurationArrayOutputWithContext(context.Background())
}

func (i VngClientConnectionConfigurationArray) ToVngClientConnectionConfigurationArrayOutputWithContext(ctx context.Context) VngClientConnectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VngClientConnectionConfigurationArrayOutput)
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VngClientConnectionConfiguration)(nil)).Elem()
}

func (o VngClientConnectionConfigurationOutput) ToVngClientConnectionConfigurationOutput() VngClientConnectionConfigurationOutput {
	return o
}

func (o VngClientConnectionConfigurationOutput) ToVngClientConnectionConfigurationOutputWithContext(ctx context.Context) VngClientConnectionConfigurationOutput {
	return o
}

// Resource ID.
func (o VngClientConnectionConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VngClientConnectionConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of references to virtualNetworkGatewayPolicyGroups
func (o VngClientConnectionConfigurationOutput) VirtualNetworkGatewayPolicyGroups() SubResourceArrayOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) []SubResource { return v.VirtualNetworkGatewayPolicyGroups }).(SubResourceArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VngClientConnectionConfigurationOutput) VpnClientAddressPool() AddressSpaceOutput {
	return o.ApplyT(func(v VngClientConnectionConfiguration) AddressSpace { return v.VpnClientAddressPool }).(AddressSpaceOutput)
}

type VngClientConnectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VngClientConnectionConfiguration)(nil)).Elem()
}

func (o VngClientConnectionConfigurationArrayOutput) ToVngClientConnectionConfigurationArrayOutput() VngClientConnectionConfigurationArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationArrayOutput) ToVngClientConnectionConfigurationArrayOutputWithContext(ctx context.Context) VngClientConnectionConfigurationArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationArrayOutput) Index(i pulumi.IntInput) VngClientConnectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VngClientConnectionConfiguration {
		return vs[0].([]VngClientConnectionConfiguration)[vs[1].(int)]
	}).(VngClientConnectionConfigurationOutput)
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VngClientConnectionConfiguration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of references to virtualNetworkGatewayPolicyGroups
	VirtualNetworkGatewayPolicyGroups []SubResourceResponse `pulumi:"virtualNetworkGatewayPolicyGroups"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
}

// A vpn client connection configuration for client connection configuration.
type VngClientConnectionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VngClientConnectionConfigurationResponse)(nil)).Elem()
}

func (o VngClientConnectionConfigurationResponseOutput) ToVngClientConnectionConfigurationResponseOutput() VngClientConnectionConfigurationResponseOutput {
	return o
}

func (o VngClientConnectionConfigurationResponseOutput) ToVngClientConnectionConfigurationResponseOutputWithContext(ctx context.Context) VngClientConnectionConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VngClientConnectionConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VngClientConnectionConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VngClientConnectionConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VngClientConnectionConfiguration resource.
func (o VngClientConnectionConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of references to virtualNetworkGatewayPolicyGroups
func (o VngClientConnectionConfigurationResponseOutput) VirtualNetworkGatewayPolicyGroups() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) []SubResourceResponse {
		return v.VirtualNetworkGatewayPolicyGroups
	}).(SubResourceResponseArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VngClientConnectionConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponseOutput {
	return o.ApplyT(func(v VngClientConnectionConfigurationResponse) AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponseOutput)
}

type VngClientConnectionConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VngClientConnectionConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VngClientConnectionConfigurationResponse)(nil)).Elem()
}

func (o VngClientConnectionConfigurationResponseArrayOutput) ToVngClientConnectionConfigurationResponseArrayOutput() VngClientConnectionConfigurationResponseArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationResponseArrayOutput) ToVngClientConnectionConfigurationResponseArrayOutputWithContext(ctx context.Context) VngClientConnectionConfigurationResponseArrayOutput {
	return o
}

func (o VngClientConnectionConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VngClientConnectionConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VngClientConnectionConfigurationResponse {
		return vs[0].([]VngClientConnectionConfigurationResponse)[vs[1].(int)]
	}).(VngClientConnectionConfigurationResponseOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfiguration struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience *string `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer *string `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant *string `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers []RadiusServer `pulumi:"radiusServers"`
	// per ip address pool connection policy for virtual network gateway P2S client.
	VngClientConnectionConfigurations []VngClientConnectionConfiguration `pulumi:"vngClientConnectionConfigurations"`
	// VPN authentication types for the virtual network gateway..
	VpnAuthenticationTypes []string `pulumi:"vpnAuthenticationTypes"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificate `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificate `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationInput is an input type that accepts VpnClientConfigurationArgs and VpnClientConfigurationOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInput` via:
//
//	VpnClientConfigurationArgs{...}
type VpnClientConfigurationInput interface {
	pulumi.Input

	ToVpnClientConfigurationOutput() VpnClientConfigurationOutput
	ToVpnClientConfigurationOutputWithContext(context.Context) VpnClientConfigurationOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationArgs struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers RadiusServerArrayInput `pulumi:"radiusServers"`
	// per ip address pool connection policy for virtual network gateway P2S client.
	VngClientConnectionConfigurations VngClientConnectionConfigurationArrayInput `pulumi:"vngClientConnectionConfigurations"`
	// VPN authentication types for the virtual network gateway..
	VpnAuthenticationTypes pulumi.StringArrayInput `pulumi:"vpnAuthenticationTypes"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return i.ToVpnClientConfigurationOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput)
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput).ToVpnClientConfigurationPtrOutputWithContext(ctx)
}

// VpnClientConfigurationPtrInput is an input type that accepts VpnClientConfigurationArgs, VpnClientConfigurationPtr and VpnClientConfigurationPtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationPtrInput` via:
//
//	        VpnClientConfigurationArgs{...}
//
//	or:
//
//	        nil
type VpnClientConfigurationPtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput
	ToVpnClientConfigurationPtrOutputWithContext(context.Context) VpnClientConfigurationPtrOutput
}

type vpnClientConfigurationPtrType VpnClientConfigurationArgs

func VpnClientConfigurationPtr(v *VpnClientConfigurationArgs) VpnClientConfigurationPtrInput {
	return (*vpnClientConfigurationPtrType)(v)
}

func (*vpnClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationPtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnClientConfiguration) *VpnClientConfiguration {
		return &v
	}).(VpnClientConfigurationPtrOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []RadiusServer { return v.RadiusServers }).(RadiusServerArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VngClientConnectionConfiguration {
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []string { return v.VpnAuthenticationTypes }).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []IpsecPolicy { return v.VpnClientIpsecPolicies }).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRevokedCertificate { return v.VpnClientRevokedCertificates }).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRootCertificate { return v.VpnClientRootCertificates }).(VpnClientRootCertificateArrayOutput)
}

type VpnClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) Elem() VpnClientConfigurationOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) VpnClientConfiguration {
		if v != nil {
			return *v
		}
		var ret VpnClientConfiguration
		return ret
	}).(VpnClientConfigurationOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationPtrOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []RadiusServer {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(RadiusServerArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationPtrOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VngClientConnectionConfiguration {
		if v == nil {
			return nil
		}
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationPtrOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnAuthenticationTypes
	}).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationPtrOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationPtrOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateArrayOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponse struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience *string `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer *string `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant *string `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers []RadiusServerResponse `pulumi:"radiusServers"`
	// per ip address pool connection policy for virtual network gateway P2S client.
	VngClientConnectionConfigurations []VngClientConnectionConfigurationResponse `pulumi:"vngClientConnectionConfigurations"`
	// VPN authentication types for the virtual network gateway..
	VpnAuthenticationTypes []string `pulumi:"vpnAuthenticationTypes"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicyResponse `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificateResponse `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificateResponse `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return o
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationResponseOutput) RadiusServers() RadiusServerResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []RadiusServerResponse { return v.RadiusServers }).(RadiusServerResponseArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationResponseOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VngClientConnectionConfigurationResponse {
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationResponseArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationResponseOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []string { return v.VpnAuthenticationTypes }).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponseOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []IpsecPolicyResponse { return v.VpnClientIpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

type VpnClientConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) Elem() VpnClientConfigurationResponseOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) VpnClientConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VpnClientConfigurationResponse
		return ret
	}).(VpnClientConfigurationResponseOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServers() RadiusServerResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []RadiusServerResponse {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(RadiusServerResponseArrayOutput)
}

// per ip address pool connection policy for virtual network gateway P2S client.
func (o VpnClientConfigurationResponsePtrOutput) VngClientConnectionConfigurations() VngClientConnectionConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VngClientConnectionConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VngClientConnectionConfigurations
	}).(VngClientConnectionConfigurationResponseArrayOutput)
}

// VPN authentication types for the virtual network gateway..
func (o VpnClientConfigurationResponsePtrOutput) VpnAuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnAuthenticationTypes
	}).(pulumi.StringArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client connection health detail.
type VpnClientConnectionHealthDetailResponse struct {
	// The egress bytes per second.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// The egress packets per second.
	EgressPacketsTransferred float64 `pulumi:"egressPacketsTransferred"`
	// The ingress bytes per second.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// The ingress packets per second.
	IngressPacketsTransferred float64 `pulumi:"ingressPacketsTransferred"`
	// The max band width.
	MaxBandwidth float64 `pulumi:"maxBandwidth"`
	// The max packets transferred per second.
	MaxPacketsPerSecond float64 `pulumi:"maxPacketsPerSecond"`
	// The assigned private Ip of a connected vpn client.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The public Ip of a connected vpn client.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The duration time of a connected vpn client.
	VpnConnectionDuration float64 `pulumi:"vpnConnectionDuration"`
	// The vpn client Id.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// The start time of a connected vpn client.
	VpnConnectionTime string `pulumi:"vpnConnectionTime"`
	// The user name of a connected vpn client.
	VpnUserName string `pulumi:"vpnUserName"`
}

// VPN client connection health detail.
type VpnClientConnectionHealthDetailResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthDetailResponseOutput) ToVpnClientConnectionHealthDetailResponseOutput() VpnClientConnectionHealthDetailResponseOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseOutput) ToVpnClientConnectionHealthDetailResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseOutput {
	return o
}

// The egress bytes per second.
func (o VpnClientConnectionHealthDetailResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// The egress packets per second.
func (o VpnClientConnectionHealthDetailResponseOutput) EgressPacketsTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.EgressPacketsTransferred }).(pulumi.Float64Output)
}

// The ingress bytes per second.
func (o VpnClientConnectionHealthDetailResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// The ingress packets per second.
func (o VpnClientConnectionHealthDetailResponseOutput) IngressPacketsTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.IngressPacketsTransferred }).(pulumi.Float64Output)
}

// The max band width.
func (o VpnClientConnectionHealthDetailResponseOutput) MaxBandwidth() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.MaxBandwidth }).(pulumi.Float64Output)
}

// The max packets transferred per second.
func (o VpnClientConnectionHealthDetailResponseOutput) MaxPacketsPerSecond() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.MaxPacketsPerSecond }).(pulumi.Float64Output)
}

// The assigned private Ip of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The public Ip of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The duration time of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionDuration() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) float64 { return v.VpnConnectionDuration }).(pulumi.Float64Output)
}

// The vpn client Id.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// The start time of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnConnectionTime }).(pulumi.StringOutput)
}

// The user name of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnUserName() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnUserName }).(pulumi.StringOutput)
}

type VpnClientConnectionHealthDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) ToVpnClientConnectionHealthDetailResponseArrayOutput() VpnClientConnectionHealthDetailResponseArrayOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) ToVpnClientConnectionHealthDetailResponseArrayOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseArrayOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) Index(i pulumi.IntInput) VpnClientConnectionHealthDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientConnectionHealthDetailResponse {
		return vs[0].([]VpnClientConnectionHealthDetailResponse)[vs[1].(int)]
	}).(VpnClientConnectionHealthDetailResponseOutput)
}

// VpnClientConnectionHealth properties.
type VpnClientConnectionHealthResponse struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses []string `pulumi:"allocatedIpAddresses"`
	// Total of the Egress Bytes Transferred in this connection.
	TotalEgressBytesTransferred float64 `pulumi:"totalEgressBytesTransferred"`
	// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
	TotalIngressBytesTransferred float64 `pulumi:"totalIngressBytesTransferred"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount *int `pulumi:"vpnClientConnectionsCount"`
}

// VpnClientConnectionHealth properties.
type VpnClientConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput {
	return o
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponseOutput {
	return o
}

// List of allocated ip addresses to the connected p2s vpn clients.
func (o VpnClientConnectionHealthResponseOutput) AllocatedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) []string { return v.AllocatedIpAddresses }).(pulumi.StringArrayOutput)
}

// Total of the Egress Bytes Transferred in this connection.
func (o VpnClientConnectionHealthResponseOutput) TotalEgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) float64 { return v.TotalEgressBytesTransferred }).(pulumi.Float64Output)
}

// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
func (o VpnClientConnectionHealthResponseOutput) TotalIngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) float64 { return v.TotalIngressBytesTransferred }).(pulumi.Float64Output)
}

// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
func (o VpnClientConnectionHealthResponseOutput) VpnClientConnectionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) *int { return v.VpnClientConnectionsCount }).(pulumi.IntPtrOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificate struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateInput is an input type that accepts VpnClientRevokedCertificateArgs and VpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInput` via:
//
//	VpnClientRevokedCertificateArgs{...}
type VpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput
	ToVpnClientRevokedCertificateOutputWithContext(context.Context) VpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return i.ToVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateOutput)
}

// VpnClientRevokedCertificateArrayInput is an input type that accepts VpnClientRevokedCertificateArray and VpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateArrayInput` via:
//
//	VpnClientRevokedCertificateArray{ VpnClientRevokedCertificateArgs{...} }
type VpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput
	ToVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnClientRevokedCertificateArrayOutput
}

type VpnClientRevokedCertificateArray []VpnClientRevokedCertificateInput

func (VpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return i.ToVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return o
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return o
}

// Resource ID.
func (o VpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificate {
		return vs[0].([]VpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnClientRevokedCertificateOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource.
func (o VpnClientRevokedCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificateResponse {
		return vs[0].([]VpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificate struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateInput is an input type that accepts VpnClientRootCertificateArgs and VpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInput` via:
//
//	VpnClientRootCertificateArgs{...}
type VpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput
	ToVpnClientRootCertificateOutputWithContext(context.Context) VpnClientRootCertificateOutput
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return i.ToVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateOutput)
}

// VpnClientRootCertificateArrayInput is an input type that accepts VpnClientRootCertificateArray and VpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateArrayInput` via:
//
//	VpnClientRootCertificateArray{ VpnClientRootCertificateArgs{...} }
type VpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput
	ToVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnClientRootCertificateArrayOutput
}

type VpnClientRootCertificateArray []VpnClientRootCertificateInput

func (VpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return i.ToVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return o
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return o
}

// Resource ID.
func (o VpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificate {
		return vs[0].([]VpnClientRootCertificate)[vs[1].(int)]
	}).(VpnClientRootCertificateOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource.
func (o VpnClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificateResponse {
		return vs[0].([]VpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnClientRootCertificateResponseOutput)
}

// VpnConnection Resource.
type VpnConnectionType struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResource `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfiguration `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// The Traffic Selector Policies to be considered by this connection.
	TrafficSelectorPolicies []TrafficSelectorPolicy `pulumi:"trafficSelectorPolicies"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections []VpnSiteLinkConnection `pulumi:"vpnLinkConnections"`
}

// VpnConnectionTypeInput is an input type that accepts VpnConnectionTypeArgs and VpnConnectionTypeOutput values.
// You can construct a concrete instance of `VpnConnectionTypeInput` via:
//
//	VpnConnectionTypeArgs{...}
type VpnConnectionTypeInput interface {
	pulumi.Input

	ToVpnConnectionTypeOutput() VpnConnectionTypeOutput
	ToVpnConnectionTypeOutputWithContext(context.Context) VpnConnectionTypeOutput
}

// VpnConnection Resource.
type VpnConnectionTypeArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds pulumi.IntPtrInput `pulumi:"dpdTimeoutSeconds"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourcePtrInput `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationPtrInput `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The Traffic Selector Policies to be considered by this connection.
	TrafficSelectorPolicies TrafficSelectorPolicyArrayInput `pulumi:"trafficSelectorPolicies"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections VpnSiteLinkConnectionArrayInput `pulumi:"vpnLinkConnections"`
}

func (VpnConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return i.ToVpnConnectionTypeOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeOutput)
}

// VpnConnectionTypeArrayInput is an input type that accepts VpnConnectionTypeArray and VpnConnectionTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionTypeArrayInput` via:
//
//	VpnConnectionTypeArray{ VpnConnectionTypeArgs{...} }
type VpnConnectionTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput
	ToVpnConnectionTypeArrayOutputWithContext(context.Context) VpnConnectionTypeArrayOutput
}

type VpnConnectionTypeArray []VpnConnectionTypeInput

func (VpnConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return i.ToVpnConnectionTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return o
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnConnectionTypeOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// DPD timeout in seconds for vpn connection.
func (o VpnConnectionTypeOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security.
func (o VpnConnectionTypeOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionTypeOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VpnConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionTypeOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionTypeOutput) RemoteVpnSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *SubResource { return v.RemoteVpnSite }).(SubResourcePtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o VpnConnectionTypeOutput) RoutingConfiguration() RoutingConfigurationPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *RoutingConfiguration { return v.RoutingConfiguration }).(RoutingConfigurationPtrOutput)
}

// Routing weight for vpn connection.
func (o VpnConnectionTypeOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The Traffic Selector Policies to be considered by this connection.
func (o VpnConnectionTypeOutput) TrafficSelectorPolicies() TrafficSelectorPolicyArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []TrafficSelectorPolicy { return v.TrafficSelectorPolicies }).(TrafficSelectorPolicyArrayOutput)
}

// Use local azure ip to initiate connection.
func (o VpnConnectionTypeOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnConnectionTypeOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnConnectionTypeOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// List of all vpn site link connections to the gateway.
func (o VpnConnectionTypeOutput) VpnLinkConnections() VpnSiteLinkConnectionArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []VpnSiteLinkConnection { return v.VpnLinkConnections }).(VpnSiteLinkConnectionArrayOutput)
}

type VpnConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionType {
		return vs[0].([]VpnConnectionType)[vs[1].(int)]
	}).(VpnConnectionTypeOutput)
}

// VpnConnection Resource.
type VpnConnectionResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// Egress bytes transferred.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResourceResponse `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// The Traffic Selector Policies to be considered by this connection.
	TrafficSelectorPolicies []TrafficSelectorPolicyResponse `pulumi:"trafficSelectorPolicies"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections []VpnSiteLinkConnectionResponse `pulumi:"vpnLinkConnections"`
}

// VpnConnection Resource.
type VpnConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return o
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnConnectionResponseOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnConnectionResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// DPD timeout in seconds for vpn connection.
func (o VpnConnectionResponseOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// Egress bytes transferred.
func (o VpnConnectionResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnConnectionResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// EnableBgp flag.
func (o VpnConnectionResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security.
func (o VpnConnectionResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionResponseOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Ingress bytes transferred.
func (o VpnConnectionResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnConnectionResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN connection resource.
func (o VpnConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionResponseOutput) RemoteVpnSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *SubResourceResponse { return v.RemoteVpnSite }).(SubResourceResponsePtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o VpnConnectionResponseOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *RoutingConfigurationResponse { return v.RoutingConfiguration }).(RoutingConfigurationResponsePtrOutput)
}

// Routing weight for vpn connection.
func (o VpnConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The Traffic Selector Policies to be considered by this connection.
func (o VpnConnectionResponseOutput) TrafficSelectorPolicies() TrafficSelectorPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []TrafficSelectorPolicyResponse { return v.TrafficSelectorPolicies }).(TrafficSelectorPolicyResponseArrayOutput)
}

// Use local azure ip to initiate connection.
func (o VpnConnectionResponseOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnConnectionResponseOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnConnectionResponseOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// List of all vpn site link connections to the gateway.
func (o VpnConnectionResponseOutput) VpnLinkConnections() VpnSiteLinkConnectionResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []VpnSiteLinkConnectionResponse { return v.VpnLinkConnections }).(VpnSiteLinkConnectionResponseArrayOutput)
}

type VpnConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionResponse {
		return vs[0].([]VpnConnectionResponse)[vs[1].(int)]
	}).(VpnConnectionResponseOutput)
}

// IP Configuration of a VPN Gateway Resource.
type VpnGatewayIpConfigurationResponse struct {
	// The identifier of the IP configuration for a VPN Gateway.
	Id *string `pulumi:"id"`
	// The private IP address of this IP configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The public IP address of this IP configuration.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
}

// IP Configuration of a VPN Gateway Resource.
type VpnGatewayIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (o VpnGatewayIpConfigurationResponseOutput) ToVpnGatewayIpConfigurationResponseOutput() VpnGatewayIpConfigurationResponseOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseOutput) ToVpnGatewayIpConfigurationResponseOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseOutput {
	return o
}

// The identifier of the IP configuration for a VPN Gateway.
func (o VpnGatewayIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address of this IP configuration.
func (o VpnGatewayIpConfigurationResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The public IP address of this IP configuration.
func (o VpnGatewayIpConfigurationResponseOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

type VpnGatewayIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) ToVpnGatewayIpConfigurationResponseArrayOutput() VpnGatewayIpConfigurationResponseArrayOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) ToVpnGatewayIpConfigurationResponseArrayOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseArrayOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VpnGatewayIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayIpConfigurationResponse {
		return vs[0].([]VpnGatewayIpConfigurationResponse)[vs[1].(int)]
	}).(VpnGatewayIpConfigurationResponseOutput)
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRule struct {
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMapping `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMapping `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type *string `pulumi:"type"`
}

// VpnGatewayNatRuleInput is an input type that accepts VpnGatewayNatRuleArgs and VpnGatewayNatRuleOutput values.
// You can construct a concrete instance of `VpnGatewayNatRuleInput` via:
//
//	VpnGatewayNatRuleArgs{...}
type VpnGatewayNatRuleInput interface {
	pulumi.Input

	ToVpnGatewayNatRuleOutput() VpnGatewayNatRuleOutput
	ToVpnGatewayNatRuleOutputWithContext(context.Context) VpnGatewayNatRuleOutput
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleArgs struct {
	// The private IP address external mapping for NAT.
	ExternalMappings VpnNatRuleMappingArrayInput `pulumi:"externalMappings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The private IP address internal mapping for NAT.
	InternalMappings VpnNatRuleMappingArrayInput `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId pulumi.StringPtrInput `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of NAT rule for VPN NAT.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VpnGatewayNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayNatRule)(nil)).Elem()
}

func (i VpnGatewayNatRuleArgs) ToVpnGatewayNatRuleOutput() VpnGatewayNatRuleOutput {
	return i.ToVpnGatewayNatRuleOutputWithContext(context.Background())
}

func (i VpnGatewayNatRuleArgs) ToVpnGatewayNatRuleOutputWithContext(ctx context.Context) VpnGatewayNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayNatRuleOutput)
}

// VpnGatewayNatRuleArrayInput is an input type that accepts VpnGatewayNatRuleArray and VpnGatewayNatRuleArrayOutput values.
// You can construct a concrete instance of `VpnGatewayNatRuleArrayInput` via:
//
//	VpnGatewayNatRuleArray{ VpnGatewayNatRuleArgs{...} }
type VpnGatewayNatRuleArrayInput interface {
	pulumi.Input

	ToVpnGatewayNatRuleArrayOutput() VpnGatewayNatRuleArrayOutput
	ToVpnGatewayNatRuleArrayOutputWithContext(context.Context) VpnGatewayNatRuleArrayOutput
}

type VpnGatewayNatRuleArray []VpnGatewayNatRuleInput

func (VpnGatewayNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayNatRule)(nil)).Elem()
}

func (i VpnGatewayNatRuleArray) ToVpnGatewayNatRuleArrayOutput() VpnGatewayNatRuleArrayOutput {
	return i.ToVpnGatewayNatRuleArrayOutputWithContext(context.Background())
}

func (i VpnGatewayNatRuleArray) ToVpnGatewayNatRuleArrayOutputWithContext(ctx context.Context) VpnGatewayNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayNatRuleArrayOutput)
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayNatRule)(nil)).Elem()
}

func (o VpnGatewayNatRuleOutput) ToVpnGatewayNatRuleOutput() VpnGatewayNatRuleOutput {
	return o
}

func (o VpnGatewayNatRuleOutput) ToVpnGatewayNatRuleOutputWithContext(ctx context.Context) VpnGatewayNatRuleOutput {
	return o
}

// The private IP address external mapping for NAT.
func (o VpnGatewayNatRuleOutput) ExternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) []VpnNatRuleMapping { return v.ExternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// Resource ID.
func (o VpnGatewayNatRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address internal mapping for NAT.
func (o VpnGatewayNatRuleOutput) InternalMappings() VpnNatRuleMappingArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) []VpnNatRuleMapping { return v.InternalMappings }).(VpnNatRuleMappingArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VpnGatewayNatRuleOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VpnGatewayNatRuleOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnGatewayNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of NAT rule for VPN NAT.
func (o VpnGatewayNatRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VpnGatewayNatRuleArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayNatRule)(nil)).Elem()
}

func (o VpnGatewayNatRuleArrayOutput) ToVpnGatewayNatRuleArrayOutput() VpnGatewayNatRuleArrayOutput {
	return o
}

func (o VpnGatewayNatRuleArrayOutput) ToVpnGatewayNatRuleArrayOutputWithContext(ctx context.Context) VpnGatewayNatRuleArrayOutput {
	return o
}

func (o VpnGatewayNatRuleArrayOutput) Index(i pulumi.IntInput) VpnGatewayNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayNatRule {
		return vs[0].([]VpnGatewayNatRule)[vs[1].(int)]
	}).(VpnGatewayNatRuleOutput)
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleResponse struct {
	// List of egress VpnSiteLinkConnections.
	EgressVpnSiteLinkConnections []SubResourceResponse `pulumi:"egressVpnSiteLinkConnections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The private IP address external mapping for NAT.
	ExternalMappings []VpnNatRuleMappingResponse `pulumi:"externalMappings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// List of ingress VpnSiteLinkConnections.
	IngressVpnSiteLinkConnections []SubResourceResponse `pulumi:"ingressVpnSiteLinkConnections"`
	// The private IP address internal mapping for NAT.
	InternalMappings []VpnNatRuleMappingResponse `pulumi:"internalMappings"`
	// The IP Configuration ID this NAT rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The Source NAT direction of a VPN NAT.
	Mode *string `pulumi:"mode"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the NAT Rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnGatewayNatRule Resource.
type VpnGatewayNatRuleResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayNatRuleResponse)(nil)).Elem()
}

func (o VpnGatewayNatRuleResponseOutput) ToVpnGatewayNatRuleResponseOutput() VpnGatewayNatRuleResponseOutput {
	return o
}

func (o VpnGatewayNatRuleResponseOutput) ToVpnGatewayNatRuleResponseOutputWithContext(ctx context.Context) VpnGatewayNatRuleResponseOutput {
	return o
}

// List of egress VpnSiteLinkConnections.
func (o VpnGatewayNatRuleResponseOutput) EgressVpnSiteLinkConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []SubResourceResponse { return v.EgressVpnSiteLinkConnections }).(SubResourceResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnGatewayNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The private IP address external mapping for NAT.
func (o VpnGatewayNatRuleResponseOutput) ExternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.ExternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// Resource ID.
func (o VpnGatewayNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// List of ingress VpnSiteLinkConnections.
func (o VpnGatewayNatRuleResponseOutput) IngressVpnSiteLinkConnections() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []SubResourceResponse { return v.IngressVpnSiteLinkConnections }).(SubResourceResponseArrayOutput)
}

// The private IP address internal mapping for NAT.
func (o VpnGatewayNatRuleResponseOutput) InternalMappings() VpnNatRuleMappingResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) []VpnNatRuleMappingResponse { return v.InternalMappings }).(VpnNatRuleMappingResponseArrayOutput)
}

// The IP Configuration ID this NAT rule applies to.
func (o VpnGatewayNatRuleResponseOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Source NAT direction of a VPN NAT.
func (o VpnGatewayNatRuleResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnGatewayNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the NAT Rule resource.
func (o VpnGatewayNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VpnGatewayNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VpnGatewayNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayNatRuleResponse)(nil)).Elem()
}

func (o VpnGatewayNatRuleResponseArrayOutput) ToVpnGatewayNatRuleResponseArrayOutput() VpnGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VpnGatewayNatRuleResponseArrayOutput) ToVpnGatewayNatRuleResponseArrayOutputWithContext(ctx context.Context) VpnGatewayNatRuleResponseArrayOutput {
	return o
}

func (o VpnGatewayNatRuleResponseArrayOutput) Index(i pulumi.IntInput) VpnGatewayNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayNatRuleResponse {
		return vs[0].([]VpnGatewayNatRuleResponse)[vs[1].(int)]
	}).(VpnGatewayNatRuleResponseOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettings struct {
	// The BGP speaker's ASN.
	Asn *float64 `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
}

// VpnLinkBgpSettingsInput is an input type that accepts VpnLinkBgpSettingsArgs and VpnLinkBgpSettingsOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsInput` via:
//
//	VpnLinkBgpSettingsArgs{...}
type VpnLinkBgpSettingsInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput
	ToVpnLinkBgpSettingsOutputWithContext(context.Context) VpnLinkBgpSettingsOutput
}

// BGP settings details for a link.
type VpnLinkBgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.Float64PtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
}

func (VpnLinkBgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettings)(nil)).Elem()
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput {
	return i.ToVpnLinkBgpSettingsOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsOutputWithContext(ctx context.Context) VpnLinkBgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsOutput)
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return i.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsOutput).ToVpnLinkBgpSettingsPtrOutputWithContext(ctx)
}

// VpnLinkBgpSettingsPtrInput is an input type that accepts VpnLinkBgpSettingsArgs, VpnLinkBgpSettingsPtr and VpnLinkBgpSettingsPtrOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsPtrInput` via:
//
//	        VpnLinkBgpSettingsArgs{...}
//
//	or:
//
//	        nil
type VpnLinkBgpSettingsPtrInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput
	ToVpnLinkBgpSettingsPtrOutputWithContext(context.Context) VpnLinkBgpSettingsPtrOutput
}

type vpnLinkBgpSettingsPtrType VpnLinkBgpSettingsArgs

func VpnLinkBgpSettingsPtr(v *VpnLinkBgpSettingsArgs) VpnLinkBgpSettingsPtrInput {
	return (*vpnLinkBgpSettingsPtrType)(v)
}

func (*vpnLinkBgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettings)(nil)).Elem()
}

func (i *vpnLinkBgpSettingsPtrType) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return i.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *vpnLinkBgpSettingsPtrType) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsPtrOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettingsOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettings)(nil)).Elem()
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput {
	return o
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsOutputWithContext(ctx context.Context) VpnLinkBgpSettingsOutput {
	return o
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return o.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnLinkBgpSettings) *VpnLinkBgpSettings {
		return &v
	}).(VpnLinkBgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettings) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

type VpnLinkBgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettings)(nil)).Elem()
}

func (o VpnLinkBgpSettingsPtrOutput) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return o
}

func (o VpnLinkBgpSettingsPtrOutput) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return o
}

func (o VpnLinkBgpSettingsPtrOutput) Elem() VpnLinkBgpSettingsOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) VpnLinkBgpSettings {
		if v != nil {
			return *v
		}
		var ret VpnLinkBgpSettings
		return ret
	}).(VpnLinkBgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsPtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettingsResponse struct {
	// The BGP speaker's ASN.
	Asn *float64 `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
}

// BGP settings details for a link.
type VpnLinkBgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponseOutput() VpnLinkBgpSettingsResponseOutput {
	return o
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponseOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponseOutput {
	return o
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsResponseOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettingsResponse) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

type VpnLinkBgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (o VpnLinkBgpSettingsResponsePtrOutput) ToVpnLinkBgpSettingsResponsePtrOutput() VpnLinkBgpSettingsResponsePtrOutput {
	return o
}

func (o VpnLinkBgpSettingsResponsePtrOutput) ToVpnLinkBgpSettingsResponsePtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponsePtrOutput {
	return o
}

func (o VpnLinkBgpSettingsResponsePtrOutput) Elem() VpnLinkBgpSettingsResponseOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) VpnLinkBgpSettingsResponse {
		if v != nil {
			return *v
		}
		var ret VpnLinkBgpSettingsResponse
		return ret
	}).(VpnLinkBgpSettingsResponseOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsResponsePtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderProperties struct {
	// Name of the link provider.
	LinkProviderName *string `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// VpnLinkProviderPropertiesInput is an input type that accepts VpnLinkProviderPropertiesArgs and VpnLinkProviderPropertiesOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesInput` via:
//
//	VpnLinkProviderPropertiesArgs{...}
type VpnLinkProviderPropertiesInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput
	ToVpnLinkProviderPropertiesOutputWithContext(context.Context) VpnLinkProviderPropertiesOutput
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesArgs struct {
	// Name of the link provider.
	LinkProviderName pulumi.StringPtrInput `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (VpnLinkProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderProperties)(nil)).Elem()
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput {
	return i.ToVpnLinkProviderPropertiesOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesOutput)
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return i.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesOutput).ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx)
}

// VpnLinkProviderPropertiesPtrInput is an input type that accepts VpnLinkProviderPropertiesArgs, VpnLinkProviderPropertiesPtr and VpnLinkProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesPtrInput` via:
//
//	        VpnLinkProviderPropertiesArgs{...}
//
//	or:
//
//	        nil
type VpnLinkProviderPropertiesPtrInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput
	ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Context) VpnLinkProviderPropertiesPtrOutput
}

type vpnLinkProviderPropertiesPtrType VpnLinkProviderPropertiesArgs

func VpnLinkProviderPropertiesPtr(v *VpnLinkProviderPropertiesArgs) VpnLinkProviderPropertiesPtrInput {
	return (*vpnLinkProviderPropertiesPtrType)(v)
}

func (*vpnLinkProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderProperties)(nil)).Elem()
}

func (i *vpnLinkProviderPropertiesPtrType) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return i.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *vpnLinkProviderPropertiesPtrType) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderProperties)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput {
	return o
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesOutput {
	return o
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return o.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnLinkProviderProperties) *VpnLinkProviderProperties {
		return &v
	}).(VpnLinkProviderPropertiesPtrOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderProperties) *string { return v.LinkProviderName }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderProperties) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type VpnLinkProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderProperties)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesPtrOutput) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesPtrOutput) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesPtrOutput) Elem() VpnLinkProviderPropertiesOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) VpnLinkProviderProperties {
		if v != nil {
			return *v
		}
		var ret VpnLinkProviderProperties
		return ret
	}).(VpnLinkProviderPropertiesOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesPtrOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.LinkProviderName
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesPtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesResponse struct {
	// Name of the link provider.
	LinkProviderName *string `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponseOutput() VpnLinkProviderPropertiesResponseOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponseOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponseOutput {
	return o
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesResponseOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderPropertiesResponse) *string { return v.LinkProviderName }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesResponseOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderPropertiesResponse) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type VpnLinkProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) ToVpnLinkProviderPropertiesResponsePtrOutput() VpnLinkProviderPropertiesResponsePtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponsePtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) Elem() VpnLinkProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) VpnLinkProviderPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VpnLinkProviderPropertiesResponse
		return ret
	}).(VpnLinkProviderPropertiesResponseOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesResponsePtrOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkProviderName
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesResponsePtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// Vpn NatRule mapping.
type VpnNatRuleMapping struct {
	// Address space for Vpn NatRule mapping.
	AddressSpace *string `pulumi:"addressSpace"`
	// Port range for Vpn NatRule mapping.
	PortRange *string `pulumi:"portRange"`
}

// VpnNatRuleMappingInput is an input type that accepts VpnNatRuleMappingArgs and VpnNatRuleMappingOutput values.
// You can construct a concrete instance of `VpnNatRuleMappingInput` via:
//
//	VpnNatRuleMappingArgs{...}
type VpnNatRuleMappingInput interface {
	pulumi.Input

	ToVpnNatRuleMappingOutput() VpnNatRuleMappingOutput
	ToVpnNatRuleMappingOutputWithContext(context.Context) VpnNatRuleMappingOutput
}

// Vpn NatRule mapping.
type VpnNatRuleMappingArgs struct {
	// Address space for Vpn NatRule mapping.
	AddressSpace pulumi.StringPtrInput `pulumi:"addressSpace"`
	// Port range for Vpn NatRule mapping.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
}

func (VpnNatRuleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnNatRuleMapping)(nil)).Elem()
}

func (i VpnNatRuleMappingArgs) ToVpnNatRuleMappingOutput() VpnNatRuleMappingOutput {
	return i.ToVpnNatRuleMappingOutputWithContext(context.Background())
}

func (i VpnNatRuleMappingArgs) ToVpnNatRuleMappingOutputWithContext(ctx context.Context) VpnNatRuleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnNatRuleMappingOutput)
}

// VpnNatRuleMappingArrayInput is an input type that accepts VpnNatRuleMappingArray and VpnNatRuleMappingArrayOutput values.
// You can construct a concrete instance of `VpnNatRuleMappingArrayInput` via:
//
//	VpnNatRuleMappingArray{ VpnNatRuleMappingArgs{...} }
type VpnNatRuleMappingArrayInput interface {
	pulumi.Input

	ToVpnNatRuleMappingArrayOutput() VpnNatRuleMappingArrayOutput
	ToVpnNatRuleMappingArrayOutputWithContext(context.Context) VpnNatRuleMappingArrayOutput
}

type VpnNatRuleMappingArray []VpnNatRuleMappingInput

func (VpnNatRuleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnNatRuleMapping)(nil)).Elem()
}

func (i VpnNatRuleMappingArray) ToVpnNatRuleMappingArrayOutput() VpnNatRuleMappingArrayOutput {
	return i.ToVpnNatRuleMappingArrayOutputWithContext(context.Background())
}

func (i VpnNatRuleMappingArray) ToVpnNatRuleMappingArrayOutputWithContext(ctx context.Context) VpnNatRuleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnNatRuleMappingArrayOutput)
}

// Vpn NatRule mapping.
type VpnNatRuleMappingOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnNatRuleMapping)(nil)).Elem()
}

func (o VpnNatRuleMappingOutput) ToVpnNatRuleMappingOutput() VpnNatRuleMappingOutput {
	return o
}

func (o VpnNatRuleMappingOutput) ToVpnNatRuleMappingOutputWithContext(ctx context.Context) VpnNatRuleMappingOutput {
	return o
}

// Address space for Vpn NatRule mapping.
func (o VpnNatRuleMappingOutput) AddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMapping) *string { return v.AddressSpace }).(pulumi.StringPtrOutput)
}

// Port range for Vpn NatRule mapping.
func (o VpnNatRuleMappingOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMapping) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VpnNatRuleMappingArrayOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnNatRuleMapping)(nil)).Elem()
}

func (o VpnNatRuleMappingArrayOutput) ToVpnNatRuleMappingArrayOutput() VpnNatRuleMappingArrayOutput {
	return o
}

func (o VpnNatRuleMappingArrayOutput) ToVpnNatRuleMappingArrayOutputWithContext(ctx context.Context) VpnNatRuleMappingArrayOutput {
	return o
}

func (o VpnNatRuleMappingArrayOutput) Index(i pulumi.IntInput) VpnNatRuleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnNatRuleMapping {
		return vs[0].([]VpnNatRuleMapping)[vs[1].(int)]
	}).(VpnNatRuleMappingOutput)
}

// Vpn NatRule mapping.
type VpnNatRuleMappingResponse struct {
	// Address space for Vpn NatRule mapping.
	AddressSpace *string `pulumi:"addressSpace"`
	// Port range for Vpn NatRule mapping.
	PortRange *string `pulumi:"portRange"`
}

// Vpn NatRule mapping.
type VpnNatRuleMappingResponseOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnNatRuleMappingResponse)(nil)).Elem()
}

func (o VpnNatRuleMappingResponseOutput) ToVpnNatRuleMappingResponseOutput() VpnNatRuleMappingResponseOutput {
	return o
}

func (o VpnNatRuleMappingResponseOutput) ToVpnNatRuleMappingResponseOutputWithContext(ctx context.Context) VpnNatRuleMappingResponseOutput {
	return o
}

// Address space for Vpn NatRule mapping.
func (o VpnNatRuleMappingResponseOutput) AddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMappingResponse) *string { return v.AddressSpace }).(pulumi.StringPtrOutput)
}

// Port range for Vpn NatRule mapping.
func (o VpnNatRuleMappingResponseOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnNatRuleMappingResponse) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VpnNatRuleMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnNatRuleMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnNatRuleMappingResponse)(nil)).Elem()
}

func (o VpnNatRuleMappingResponseArrayOutput) ToVpnNatRuleMappingResponseArrayOutput() VpnNatRuleMappingResponseArrayOutput {
	return o
}

func (o VpnNatRuleMappingResponseArrayOutput) ToVpnNatRuleMappingResponseArrayOutputWithContext(ctx context.Context) VpnNatRuleMappingResponseArrayOutput {
	return o
}

func (o VpnNatRuleMappingResponseArrayOutput) Index(i pulumi.IntInput) VpnNatRuleMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnNatRuleMappingResponse {
		return vs[0].([]VpnNatRuleMappingResponse)[vs[1].(int)]
	}).(VpnNatRuleMappingResponseOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigRadiusClientRootCertificateInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateArgs and VpnServerConfigRadiusClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateInput` via:
//
//	VpnServerConfigRadiusClientRootCertificateArgs{...}
type VpnServerConfigRadiusClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput
	ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateOutput
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigRadiusClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateArgs) ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateArgs) ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateOutput)
}

// VpnServerConfigRadiusClientRootCertificateArrayInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateArray and VpnServerConfigRadiusClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateArrayInput` via:
//
//	VpnServerConfigRadiusClientRootCertificateArray{ VpnServerConfigRadiusClientRootCertificateArgs{...} }
type VpnServerConfigRadiusClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput
	ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput
}

type VpnServerConfigRadiusClientRootCertificateArray []VpnServerConfigRadiusClientRootCertificateInput

func (VpnServerConfigRadiusClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateArray) ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateArray) ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateOutput) ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateOutput) ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o VpnServerConfigRadiusClientRootCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusClientRootCertificate {
		return vs[0].([]VpnServerConfigRadiusClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigRadiusClientRootCertificateOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) ToVpnServerConfigRadiusClientRootCertificateResponseOutput() VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) ToVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusClientRootCertificateResponse {
		return vs[0].([]VpnServerConfigRadiusClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigRadiusServerRootCertificateInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateArgs and VpnServerConfigRadiusServerRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateInput` via:
//
//	VpnServerConfigRadiusServerRootCertificateArgs{...}
type VpnServerConfigRadiusServerRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput
	ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateOutput
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigRadiusServerRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateArgs) ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateArgs) ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateOutput)
}

// VpnServerConfigRadiusServerRootCertificateArrayInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateArray and VpnServerConfigRadiusServerRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateArrayInput` via:
//
//	VpnServerConfigRadiusServerRootCertificateArray{ VpnServerConfigRadiusServerRootCertificateArgs{...} }
type VpnServerConfigRadiusServerRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput
	ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput
}

type VpnServerConfigRadiusServerRootCertificateArray []VpnServerConfigRadiusServerRootCertificateInput

func (VpnServerConfigRadiusServerRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateArray) ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateArray) ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateOutput) ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateOutput) ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusServerRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigRadiusServerRootCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusServerRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusServerRootCertificate {
		return vs[0].([]VpnServerConfigRadiusServerRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigRadiusServerRootCertificateOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) ToVpnServerConfigRadiusServerRootCertificateResponseOutput() VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) ToVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusServerRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusServerRootCertificateResponse {
		return vs[0].([]VpnServerConfigRadiusServerRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigVpnClientRevokedCertificateInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateArgs and VpnServerConfigVpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateInput` via:
//
//	VpnServerConfigVpnClientRevokedCertificateArgs{...}
type VpnServerConfigVpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput
	ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateOutput
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigVpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateArgs) ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateArgs) ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateOutput)
}

// VpnServerConfigVpnClientRevokedCertificateArrayInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateArray and VpnServerConfigVpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateArrayInput` via:
//
//	VpnServerConfigVpnClientRevokedCertificateArray{ VpnServerConfigVpnClientRevokedCertificateArgs{...} }
type VpnServerConfigVpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput
	ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput
}

type VpnServerConfigVpnClientRevokedCertificateArray []VpnServerConfigVpnClientRevokedCertificateInput

func (VpnServerConfigVpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateArray) ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateArray) ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateOutput) ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateOutput) ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnServerConfigVpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRevokedCertificate {
		return vs[0].([]VpnServerConfigVpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRevokedCertificateOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseOutput() VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRevokedCertificateResponse {
		return vs[0].([]VpnServerConfigVpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigVpnClientRootCertificateInput is an input type that accepts VpnServerConfigVpnClientRootCertificateArgs and VpnServerConfigVpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateInput` via:
//
//	VpnServerConfigVpnClientRootCertificateArgs{...}
type VpnServerConfigVpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput
	ToVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateOutput
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigVpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateArgs) ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateArgs) ToVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateOutput)
}

// VpnServerConfigVpnClientRootCertificateArrayInput is an input type that accepts VpnServerConfigVpnClientRootCertificateArray and VpnServerConfigVpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateArrayInput` via:
//
//	VpnServerConfigVpnClientRootCertificateArray{ VpnServerConfigVpnClientRootCertificateArgs{...} }
type VpnServerConfigVpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput
	ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput
}

type VpnServerConfigVpnClientRootCertificateArray []VpnServerConfigVpnClientRootCertificateInput

func (VpnServerConfigVpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateArray) ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateArray) ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateArrayOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateOutput) ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateOutput) ToVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigVpnClientRootCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRootCertificate {
		return vs[0].([]VpnServerConfigVpnClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRootCertificateOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateResponseOutput) ToVpnServerConfigVpnClientRootCertificateResponseOutput() VpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseOutput) ToVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigVpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutput() VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRootCertificateResponse {
		return vs[0].([]VpnServerConfigVpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRootCertificateResponseOutput)
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
	PolicyMembers []VpnServerConfigurationPolicyGroupMember `pulumi:"policyMembers"`
	// Priority for VpnServerConfigurationPolicyGroup.
	Priority *int `pulumi:"priority"`
}

// VpnServerConfigurationPolicyGroupInput is an input type that accepts VpnServerConfigurationPolicyGroupArgs and VpnServerConfigurationPolicyGroupOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupInput` via:
//
//	VpnServerConfigurationPolicyGroupArgs{...}
type VpnServerConfigurationPolicyGroupInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput
	ToVpnServerConfigurationPolicyGroupOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupOutput
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
	PolicyMembers VpnServerConfigurationPolicyGroupMemberArrayInput `pulumi:"policyMembers"`
	// Priority for VpnServerConfigurationPolicyGroup.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (VpnServerConfigurationPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupArgs) ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput {
	return i.ToVpnServerConfigurationPolicyGroupOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupArgs) ToVpnServerConfigurationPolicyGroupOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupOutput)
}

// VpnServerConfigurationPolicyGroupArrayInput is an input type that accepts VpnServerConfigurationPolicyGroupArray and VpnServerConfigurationPolicyGroupArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupArrayInput` via:
//
//	VpnServerConfigurationPolicyGroupArray{ VpnServerConfigurationPolicyGroupArgs{...} }
type VpnServerConfigurationPolicyGroupArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput
	ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupArrayOutput
}

type VpnServerConfigurationPolicyGroupArray []VpnServerConfigurationPolicyGroupInput

func (VpnServerConfigurationPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupArray) ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput {
	return i.ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupArray) ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupArrayOutput)
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupOutput) ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupOutput) ToVpnServerConfigurationPolicyGroupOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupOutput {
	return o
}

// Resource ID.
func (o VpnServerConfigurationPolicyGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
func (o VpnServerConfigurationPolicyGroupOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnServerConfigurationPolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupOutput) PolicyMembers() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) []VpnServerConfigurationPolicyGroupMember {
		return v.PolicyMembers
	}).(VpnServerConfigurationPolicyGroupMemberArrayOutput)
}

// Priority for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroup) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type VpnServerConfigurationPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroup {
		return vs[0].([]VpnServerConfigurationPolicyGroup)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMember struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VpnServerConfigurationPolicyGroupMemberInput is an input type that accepts VpnServerConfigurationPolicyGroupMemberArgs and VpnServerConfigurationPolicyGroupMemberOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupMemberInput` via:
//
//	VpnServerConfigurationPolicyGroupMemberArgs{...}
type VpnServerConfigurationPolicyGroupMemberInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput
	ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupMemberOutput
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberArgs struct {
	// The Vpn Policy member attribute type.
	AttributeType pulumi.StringPtrInput `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue pulumi.StringPtrInput `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnServerConfigurationPolicyGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupMemberArgs) ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput {
	return i.ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupMemberArgs) ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupMemberOutput)
}

// VpnServerConfigurationPolicyGroupMemberArrayInput is an input type that accepts VpnServerConfigurationPolicyGroupMemberArray and VpnServerConfigurationPolicyGroupMemberArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupMemberArrayInput` via:
//
//	VpnServerConfigurationPolicyGroupMemberArray{ VpnServerConfigurationPolicyGroupMemberArgs{...} }
type VpnServerConfigurationPolicyGroupMemberArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput
	ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput
}

type VpnServerConfigurationPolicyGroupMemberArray []VpnServerConfigurationPolicyGroupMemberInput

func (VpnServerConfigurationPolicyGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupMemberArray) ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return i.ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupMemberArray) ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupMemberArrayOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberOutput) ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberOutput) ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VpnServerConfigurationPolicyGroupMemberOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnServerConfigurationPolicyGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupMember {
		return vs[0].([]VpnServerConfigurationPolicyGroupMember)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupMemberOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberResponse struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) ToVpnServerConfigurationPolicyGroupMemberResponseOutput() VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) ToVpnServerConfigurationPolicyGroupMemberResponseOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnServerConfigurationPolicyGroupMemberResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ToVpnServerConfigurationPolicyGroupMemberResponseArrayOutput() VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ToVpnServerConfigurationPolicyGroupMemberResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupMemberResponse {
		return vs[0].([]VpnServerConfigurationPolicyGroupMemberResponse)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupMemberResponseOutput)
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of references to P2SConnectionConfigurations.
	P2SConnectionConfigurations []SubResourceResponse `pulumi:"p2SConnectionConfigurations"`
	// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
	PolicyMembers []VpnServerConfigurationPolicyGroupMemberResponse `pulumi:"policyMembers"`
	// Priority for VpnServerConfigurationPolicyGroup.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnServerConfigurationPolicyGroup Resource.
type VpnServerConfigurationPolicyGroupResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupResponseOutput) ToVpnServerConfigurationPolicyGroupResponseOutput() VpnServerConfigurationPolicyGroupResponseOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupResponseOutput) ToVpnServerConfigurationPolicyGroupResponseOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
func (o VpnServerConfigurationPolicyGroupResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of references to P2SConnectionConfigurations.
func (o VpnServerConfigurationPolicyGroupResponseOutput) P2SConnectionConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) []SubResourceResponse {
		return v.P2SConnectionConfigurations
	}).(SubResourceResponseArrayOutput)
}

// Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupResponseOutput) PolicyMembers() VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) []VpnServerConfigurationPolicyGroupMemberResponse {
		return v.PolicyMembers
	}).(VpnServerConfigurationPolicyGroupMemberResponseArrayOutput)
}

// Priority for VpnServerConfigurationPolicyGroup.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the VpnServerConfigurationPolicyGroup resource.
func (o VpnServerConfigurationPolicyGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VpnServerConfigurationPolicyGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VpnServerConfigurationPolicyGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupResponseArrayOutput) ToVpnServerConfigurationPolicyGroupResponseArrayOutput() VpnServerConfigurationPolicyGroupResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupResponseArrayOutput) ToVpnServerConfigurationPolicyGroupResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupResponse {
		return vs[0].([]VpnServerConfigurationPolicyGroupResponse)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupResponseOutput)
}

// VpnSiteLink Resource.
type VpnSiteLink struct {
	// The set of bgp properties.
	BgpProperties *VpnLinkBgpSettings `pulumi:"bgpProperties"`
	// FQDN of vpn-site-link.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress *string `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties *VpnLinkProviderProperties `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// VpnSiteLinkInput is an input type that accepts VpnSiteLinkArgs and VpnSiteLinkOutput values.
// You can construct a concrete instance of `VpnSiteLinkInput` via:
//
//	VpnSiteLinkArgs{...}
type VpnSiteLinkInput interface {
	pulumi.Input

	ToVpnSiteLinkOutput() VpnSiteLinkOutput
	ToVpnSiteLinkOutputWithContext(context.Context) VpnSiteLinkOutput
}

// VpnSiteLink Resource.
type VpnSiteLinkArgs struct {
	// The set of bgp properties.
	BgpProperties VpnLinkBgpSettingsPtrInput `pulumi:"bgpProperties"`
	// FQDN of vpn-site-link.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties VpnLinkProviderPropertiesPtrInput `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnSiteLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return i.ToVpnSiteLinkOutputWithContext(context.Background())
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkOutput)
}

// VpnSiteLinkArrayInput is an input type that accepts VpnSiteLinkArray and VpnSiteLinkArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkArrayInput` via:
//
//	VpnSiteLinkArray{ VpnSiteLinkArgs{...} }
type VpnSiteLinkArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput
	ToVpnSiteLinkArrayOutputWithContext(context.Context) VpnSiteLinkArrayOutput
}

type VpnSiteLinkArray []VpnSiteLinkInput

func (VpnSiteLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return i.ToVpnSiteLinkArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkArrayOutput)
}

// VpnSiteLink Resource.
type VpnSiteLinkOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return o
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return o
}

// The set of bgp properties.
func (o VpnSiteLinkOutput) BgpProperties() VpnLinkBgpSettingsPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *VpnLinkBgpSettings { return v.BgpProperties }).(VpnLinkBgpSettingsPtrOutput)
}

// FQDN of vpn-site-link.
func (o VpnSiteLinkOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ip-address for the vpn-site-link.
func (o VpnSiteLinkOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The link provider properties.
func (o VpnSiteLinkOutput) LinkProperties() VpnLinkProviderPropertiesPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *VpnLinkProviderProperties { return v.LinkProperties }).(VpnLinkProviderPropertiesPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnSiteLinkArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLink {
		return vs[0].([]VpnSiteLink)[vs[1].(int)]
	}).(VpnSiteLinkOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnection struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// List of egress NatRules.
	EgressNatRules []SubResource `pulumi:"egressNatRules"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// List of ingress NatRules.
	IngressNatRules []SubResource `pulumi:"ingressNatRules"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// vpnGatewayCustomBgpAddresses used by this connection.
	VpnGatewayCustomBgpAddresses []GatewayCustomBgpIpAddressIpConfiguration `pulumi:"vpnGatewayCustomBgpAddresses"`
	// Vpn link connection mode.
	VpnLinkConnectionMode *string `pulumi:"vpnLinkConnectionMode"`
	// Id of the connected vpn site link.
	VpnSiteLink *SubResource `pulumi:"vpnSiteLink"`
}

// VpnSiteLinkConnectionInput is an input type that accepts VpnSiteLinkConnectionArgs and VpnSiteLinkConnectionOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionInput` via:
//
//	VpnSiteLinkConnectionArgs{...}
type VpnSiteLinkConnectionInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput
	ToVpnSiteLinkConnectionOutputWithContext(context.Context) VpnSiteLinkConnectionOutput
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// List of egress NatRules.
	EgressNatRules SubResourceArrayInput `pulumi:"egressNatRules"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// List of ingress NatRules.
	IngressNatRules SubResourceArrayInput `pulumi:"ingressNatRules"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// vpnGatewayCustomBgpAddresses used by this connection.
	VpnGatewayCustomBgpAddresses GatewayCustomBgpIpAddressIpConfigurationArrayInput `pulumi:"vpnGatewayCustomBgpAddresses"`
	// Vpn link connection mode.
	VpnLinkConnectionMode pulumi.StringPtrInput `pulumi:"vpnLinkConnectionMode"`
	// Id of the connected vpn site link.
	VpnSiteLink SubResourcePtrInput `pulumi:"vpnSiteLink"`
}

func (VpnSiteLinkConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnection)(nil)).Elem()
}

func (i VpnSiteLinkConnectionArgs) ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput {
	return i.ToVpnSiteLinkConnectionOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionArgs) ToVpnSiteLinkConnectionOutputWithContext(ctx context.Context) VpnSiteLinkConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionOutput)
}

// VpnSiteLinkConnectionArrayInput is an input type that accepts VpnSiteLinkConnectionArray and VpnSiteLinkConnectionArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionArrayInput` via:
//
//	VpnSiteLinkConnectionArray{ VpnSiteLinkConnectionArgs{...} }
type VpnSiteLinkConnectionArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput
	ToVpnSiteLinkConnectionArrayOutputWithContext(context.Context) VpnSiteLinkConnectionArrayOutput
}

type VpnSiteLinkConnectionArray []VpnSiteLinkConnectionInput

func (VpnSiteLinkConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnection)(nil)).Elem()
}

func (i VpnSiteLinkConnectionArray) ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput {
	return i.ToVpnSiteLinkConnectionArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionArray) ToVpnSiteLinkConnectionArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionArrayOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnection)(nil)).Elem()
}

func (o VpnSiteLinkConnectionOutput) ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput {
	return o
}

func (o VpnSiteLinkConnectionOutput) ToVpnSiteLinkConnectionOutputWithContext(ctx context.Context) VpnSiteLinkConnectionOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnSiteLinkConnectionOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// List of egress NatRules.
func (o VpnSiteLinkConnectionOutput) EgressNatRules() SubResourceArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []SubResource { return v.EgressNatRules }).(SubResourceArrayOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// List of ingress NatRules.
func (o VpnSiteLinkConnectionOutput) IngressNatRules() SubResourceArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []SubResource { return v.IngressNatRules }).(SubResourceArrayOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnSiteLinkConnectionOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Routing weight for vpn connection.
func (o VpnSiteLinkConnectionOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnSiteLinkConnectionOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Use local azure ip to initiate connection.
func (o VpnSiteLinkConnectionOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnSiteLinkConnectionOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnSiteLinkConnectionOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// vpnGatewayCustomBgpAddresses used by this connection.
func (o VpnSiteLinkConnectionOutput) VpnGatewayCustomBgpAddresses() GatewayCustomBgpIpAddressIpConfigurationArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []GatewayCustomBgpIpAddressIpConfiguration {
		return v.VpnGatewayCustomBgpAddresses
	}).(GatewayCustomBgpIpAddressIpConfigurationArrayOutput)
}

// Vpn link connection mode.
func (o VpnSiteLinkConnectionOutput) VpnLinkConnectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.VpnLinkConnectionMode }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site link.
func (o VpnSiteLinkConnectionOutput) VpnSiteLink() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *SubResource { return v.VpnSiteLink }).(SubResourcePtrOutput)
}

type VpnSiteLinkConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnection)(nil)).Elem()
}

func (o VpnSiteLinkConnectionArrayOutput) ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionArrayOutput) ToVpnSiteLinkConnectionArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkConnection {
		return vs[0].([]VpnSiteLinkConnection)[vs[1].(int)]
	}).(VpnSiteLinkConnectionOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// Egress bytes transferred.
	EgressBytesTransferred float64 `pulumi:"egressBytesTransferred"`
	// List of egress NatRules.
	EgressNatRules []SubResourceResponse `pulumi:"egressNatRules"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred float64 `pulumi:"ingressBytesTransferred"`
	// List of ingress NatRules.
	IngressNatRules []SubResourceResponse `pulumi:"ingressNatRules"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN site link connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Resource type.
	Type string `pulumi:"type"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// vpnGatewayCustomBgpAddresses used by this connection.
	VpnGatewayCustomBgpAddresses []GatewayCustomBgpIpAddressIpConfigurationResponse `pulumi:"vpnGatewayCustomBgpAddresses"`
	// Vpn link connection mode.
	VpnLinkConnectionMode *string `pulumi:"vpnLinkConnectionMode"`
	// Id of the connected vpn site link.
	VpnSiteLink *SubResourceResponse `pulumi:"vpnSiteLink"`
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (o VpnSiteLinkConnectionResponseOutput) ToVpnSiteLinkConnectionResponseOutput() VpnSiteLinkConnectionResponseOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseOutput) ToVpnSiteLinkConnectionResponseOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnSiteLinkConnectionResponseOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnSiteLinkConnectionResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// Egress bytes transferred.
func (o VpnSiteLinkConnectionResponseOutput) EgressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) float64 { return v.EgressBytesTransferred }).(pulumi.Float64Output)
}

// List of egress NatRules.
func (o VpnSiteLinkConnectionResponseOutput) EgressNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []SubResourceResponse { return v.EgressNatRules }).(SubResourceResponseArrayOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionResponseOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnSiteLinkConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnSiteLinkConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Ingress bytes transferred.
func (o VpnSiteLinkConnectionResponseOutput) IngressBytesTransferred() pulumi.Float64Output {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) float64 { return v.IngressBytesTransferred }).(pulumi.Float64Output)
}

// List of ingress NatRules.
func (o VpnSiteLinkConnectionResponseOutput) IngressNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []SubResourceResponse { return v.IngressNatRules }).(SubResourceResponseArrayOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnSiteLinkConnectionResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN site link connection resource.
func (o VpnSiteLinkConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Routing weight for vpn connection.
func (o VpnSiteLinkConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnSiteLinkConnectionResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o VpnSiteLinkConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Use local azure ip to initiate connection.
func (o VpnSiteLinkConnectionResponseOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnSiteLinkConnectionResponseOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnSiteLinkConnectionResponseOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// vpnGatewayCustomBgpAddresses used by this connection.
func (o VpnSiteLinkConnectionResponseOutput) VpnGatewayCustomBgpAddresses() GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []GatewayCustomBgpIpAddressIpConfigurationResponse {
		return v.VpnGatewayCustomBgpAddresses
	}).(GatewayCustomBgpIpAddressIpConfigurationResponseArrayOutput)
}

// Vpn link connection mode.
func (o VpnSiteLinkConnectionResponseOutput) VpnLinkConnectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.VpnLinkConnectionMode }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site link.
func (o VpnSiteLinkConnectionResponseOutput) VpnSiteLink() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *SubResourceResponse { return v.VpnSiteLink }).(SubResourceResponsePtrOutput)
}

type VpnSiteLinkConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (o VpnSiteLinkConnectionResponseArrayOutput) ToVpnSiteLinkConnectionResponseArrayOutput() VpnSiteLinkConnectionResponseArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseArrayOutput) ToVpnSiteLinkConnectionResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkConnectionResponse {
		return vs[0].([]VpnSiteLinkConnectionResponse)[vs[1].(int)]
	}).(VpnSiteLinkConnectionResponseOutput)
}

// VpnSiteLink Resource.
type VpnSiteLinkResponse struct {
	// The set of bgp properties.
	BgpProperties *VpnLinkBgpSettingsResponse `pulumi:"bgpProperties"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// FQDN of vpn-site-link.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress *string `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties *VpnLinkProviderPropertiesResponse `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN site link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnSiteLink Resource.
type VpnSiteLinkResponseOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkResponse)(nil)).Elem()
}

func (o VpnSiteLinkResponseOutput) ToVpnSiteLinkResponseOutput() VpnSiteLinkResponseOutput {
	return o
}

func (o VpnSiteLinkResponseOutput) ToVpnSiteLinkResponseOutputWithContext(ctx context.Context) VpnSiteLinkResponseOutput {
	return o
}

// The set of bgp properties.
func (o VpnSiteLinkResponseOutput) BgpProperties() VpnLinkBgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *VpnLinkBgpSettingsResponse { return v.BgpProperties }).(VpnLinkBgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnSiteLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// FQDN of vpn-site-link.
func (o VpnSiteLinkResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ip-address for the vpn-site-link.
func (o VpnSiteLinkResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The link provider properties.
func (o VpnSiteLinkResponseOutput) LinkProperties() VpnLinkProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *VpnLinkProviderPropertiesResponse { return v.LinkProperties }).(VpnLinkProviderPropertiesResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN site link resource.
func (o VpnSiteLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VpnSiteLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VpnSiteLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkResponse)(nil)).Elem()
}

func (o VpnSiteLinkResponseArrayOutput) ToVpnSiteLinkResponseArrayOutput() VpnSiteLinkResponseArrayOutput {
	return o
}

func (o VpnSiteLinkResponseArrayOutput) ToVpnSiteLinkResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkResponseArrayOutput {
	return o
}

func (o VpnSiteLinkResponseArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkResponse {
		return vs[0].([]VpnSiteLinkResponse)[vs[1].(int)]
	}).(VpnSiteLinkResponseOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRule struct {
	// Type of Actions.
	Action string `pulumi:"action"`
	// List of user session identifier group by clauses.
	GroupByUserSession []GroupByUserSession `pulumi:"groupByUserSession"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
	RateLimitDuration *string `pulumi:"rateLimitDuration"`
	// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// The rule type.
	RuleType string `pulumi:"ruleType"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	State *string `pulumi:"state"`
}

// WebApplicationFirewallCustomRuleInput is an input type that accepts WebApplicationFirewallCustomRuleArgs and WebApplicationFirewallCustomRuleOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleInput` via:
//
//	WebApplicationFirewallCustomRuleArgs{...}
type WebApplicationFirewallCustomRuleInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput
	ToWebApplicationFirewallCustomRuleOutputWithContext(context.Context) WebApplicationFirewallCustomRuleOutput
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleArgs struct {
	// Type of Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// List of user session identifier group by clauses.
	GroupByUserSession GroupByUserSessionArrayInput `pulumi:"groupByUserSession"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
	RateLimitDuration pulumi.StringPtrInput `pulumi:"rateLimitDuration"`
	// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
	RateLimitThreshold pulumi.IntPtrInput `pulumi:"rateLimitThreshold"`
	// The rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (WebApplicationFirewallCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleArgs) ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput {
	return i.ToWebApplicationFirewallCustomRuleOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleArgs) ToWebApplicationFirewallCustomRuleOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleOutput)
}

// WebApplicationFirewallCustomRuleArrayInput is an input type that accepts WebApplicationFirewallCustomRuleArray and WebApplicationFirewallCustomRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleArrayInput` via:
//
//	WebApplicationFirewallCustomRuleArray{ WebApplicationFirewallCustomRuleArgs{...} }
type WebApplicationFirewallCustomRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput
	ToWebApplicationFirewallCustomRuleArrayOutputWithContext(context.Context) WebApplicationFirewallCustomRuleArrayOutput
}

type WebApplicationFirewallCustomRuleArray []WebApplicationFirewallCustomRuleInput

func (WebApplicationFirewallCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleArray) ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput {
	return i.ToWebApplicationFirewallCustomRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleArray) ToWebApplicationFirewallCustomRuleArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleArrayOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleOutput) ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleOutput) ToWebApplicationFirewallCustomRuleOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleOutput {
	return o
}

// Type of Actions.
func (o WebApplicationFirewallCustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// List of user session identifier group by clauses.
func (o WebApplicationFirewallCustomRuleOutput) GroupByUserSession() GroupByUserSessionArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) []GroupByUserSession { return v.GroupByUserSession }).(GroupByUserSessionArrayOutput)
}

// List of match conditions.
func (o WebApplicationFirewallCustomRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// The name of the resource that is unique within a policy. This name can be used to access the resource.
func (o WebApplicationFirewallCustomRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o WebApplicationFirewallCustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
func (o WebApplicationFirewallCustomRuleOutput) RateLimitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *string { return v.RateLimitDuration }).(pulumi.StringPtrOutput)
}

// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
func (o WebApplicationFirewallCustomRuleOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// The rule type.
func (o WebApplicationFirewallCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o WebApplicationFirewallCustomRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleArrayOutput) ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleArrayOutput) ToWebApplicationFirewallCustomRuleArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallCustomRule {
		return vs[0].([]WebApplicationFirewallCustomRule)[vs[1].(int)]
	}).(WebApplicationFirewallCustomRuleOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleResponse struct {
	// Type of Actions.
	Action string `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// List of user session identifier group by clauses.
	GroupByUserSession []GroupByUserSessionResponse `pulumi:"groupByUserSession"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
	RateLimitDuration *string `pulumi:"rateLimitDuration"`
	// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// The rule type.
	RuleType string `pulumi:"ruleType"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	State *string `pulumi:"state"`
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleResponseOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleResponseOutput) ToWebApplicationFirewallCustomRuleResponseOutput() WebApplicationFirewallCustomRuleResponseOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseOutput) ToWebApplicationFirewallCustomRuleResponseOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseOutput {
	return o
}

// Type of Actions.
func (o WebApplicationFirewallCustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o WebApplicationFirewallCustomRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// List of user session identifier group by clauses.
func (o WebApplicationFirewallCustomRuleResponseOutput) GroupByUserSession() GroupByUserSessionResponseArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) []GroupByUserSessionResponse {
		return v.GroupByUserSession
	}).(GroupByUserSessionResponseArrayOutput)
}

// List of match conditions.
func (o WebApplicationFirewallCustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// The name of the resource that is unique within a policy. This name can be used to access the resource.
func (o WebApplicationFirewallCustomRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o WebApplicationFirewallCustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule.
func (o WebApplicationFirewallCustomRuleResponseOutput) RateLimitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *string { return v.RateLimitDuration }).(pulumi.StringPtrOutput)
}

// Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1
func (o WebApplicationFirewallCustomRuleResponseOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// The rule type.
func (o WebApplicationFirewallCustomRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o WebApplicationFirewallCustomRuleResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallCustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) ToWebApplicationFirewallCustomRuleResponseArrayOutput() WebApplicationFirewallCustomRuleResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) ToWebApplicationFirewallCustomRuleResponseArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallCustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallCustomRuleResponse {
		return vs[0].([]WebApplicationFirewallCustomRuleResponse)[vs[1].(int)]
	}).(WebApplicationFirewallCustomRuleResponseOutput)
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRules struct {
	// The variable to be scrubbed from the logs.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
	Selector *string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
	// Defines the state of log scrubbing rule. Default value is Enabled.
	State *string `pulumi:"state"`
}

// WebApplicationFirewallScrubbingRulesInput is an input type that accepts WebApplicationFirewallScrubbingRulesArgs and WebApplicationFirewallScrubbingRulesOutput values.
// You can construct a concrete instance of `WebApplicationFirewallScrubbingRulesInput` via:
//
//	WebApplicationFirewallScrubbingRulesArgs{...}
type WebApplicationFirewallScrubbingRulesInput interface {
	pulumi.Input

	ToWebApplicationFirewallScrubbingRulesOutput() WebApplicationFirewallScrubbingRulesOutput
	ToWebApplicationFirewallScrubbingRulesOutputWithContext(context.Context) WebApplicationFirewallScrubbingRulesOutput
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesArgs struct {
	// The variable to be scrubbed from the logs.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
	// Defines the state of log scrubbing rule. Default value is Enabled.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (WebApplicationFirewallScrubbingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (i WebApplicationFirewallScrubbingRulesArgs) ToWebApplicationFirewallScrubbingRulesOutput() WebApplicationFirewallScrubbingRulesOutput {
	return i.ToWebApplicationFirewallScrubbingRulesOutputWithContext(context.Background())
}

func (i WebApplicationFirewallScrubbingRulesArgs) ToWebApplicationFirewallScrubbingRulesOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallScrubbingRulesOutput)
}

// WebApplicationFirewallScrubbingRulesArrayInput is an input type that accepts WebApplicationFirewallScrubbingRulesArray and WebApplicationFirewallScrubbingRulesArrayOutput values.
// You can construct a concrete instance of `WebApplicationFirewallScrubbingRulesArrayInput` via:
//
//	WebApplicationFirewallScrubbingRulesArray{ WebApplicationFirewallScrubbingRulesArgs{...} }
type WebApplicationFirewallScrubbingRulesArrayInput interface {
	pulumi.Input

	ToWebApplicationFirewallScrubbingRulesArrayOutput() WebApplicationFirewallScrubbingRulesArrayOutput
	ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(context.Context) WebApplicationFirewallScrubbingRulesArrayOutput
}

type WebApplicationFirewallScrubbingRulesArray []WebApplicationFirewallScrubbingRulesInput

func (WebApplicationFirewallScrubbingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (i WebApplicationFirewallScrubbingRulesArray) ToWebApplicationFirewallScrubbingRulesArrayOutput() WebApplicationFirewallScrubbingRulesArrayOutput {
	return i.ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(context.Background())
}

func (i WebApplicationFirewallScrubbingRulesArray) ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallScrubbingRulesArrayOutput)
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesOutput) ToWebApplicationFirewallScrubbingRulesOutput() WebApplicationFirewallScrubbingRulesOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesOutput) ToWebApplicationFirewallScrubbingRulesOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesOutput {
	return o
}

// The variable to be scrubbed from the logs.
func (o WebApplicationFirewallScrubbingRulesOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

// Defines the state of log scrubbing rule. Default value is Enabled.
func (o WebApplicationFirewallScrubbingRulesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRules) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallScrubbingRulesArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallScrubbingRules)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesArrayOutput) ToWebApplicationFirewallScrubbingRulesArrayOutput() WebApplicationFirewallScrubbingRulesArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesArrayOutput) ToWebApplicationFirewallScrubbingRulesArrayOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallScrubbingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallScrubbingRules {
		return vs[0].([]WebApplicationFirewallScrubbingRules)[vs[1].(int)]
	}).(WebApplicationFirewallScrubbingRulesOutput)
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesResponse struct {
	// The variable to be scrubbed from the logs.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
	Selector *string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
	// Defines the state of log scrubbing rule. Default value is Enabled.
	State *string `pulumi:"state"`
}

// Allow certain variables to be scrubbed on WAF logs
type WebApplicationFirewallScrubbingRulesResponseOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallScrubbingRulesResponse)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesResponseOutput) ToWebApplicationFirewallScrubbingRulesResponseOutput() WebApplicationFirewallScrubbingRulesResponseOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesResponseOutput) ToWebApplicationFirewallScrubbingRulesResponseOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesResponseOutput {
	return o
}

// The variable to be scrubbed from the logs.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

// Defines the state of log scrubbing rule. Default value is Enabled.
func (o WebApplicationFirewallScrubbingRulesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallScrubbingRulesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WebApplicationFirewallScrubbingRulesResponseArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallScrubbingRulesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallScrubbingRulesResponse)(nil)).Elem()
}

func (o WebApplicationFirewallScrubbingRulesResponseArrayOutput) ToWebApplicationFirewallScrubbingRulesResponseArrayOutput() WebApplicationFirewallScrubbingRulesResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesResponseArrayOutput) ToWebApplicationFirewallScrubbingRulesResponseArrayOutputWithContext(ctx context.Context) WebApplicationFirewallScrubbingRulesResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallScrubbingRulesResponseArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallScrubbingRulesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallScrubbingRulesResponse {
		return vs[0].([]WebApplicationFirewallScrubbingRulesResponse)[vs[1].(int)]
	}).(WebApplicationFirewallScrubbingRulesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesAutoApprovalOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesAutoApprovalPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseAutoApprovalOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseVisibilityOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseVisibilityPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesVisibilityOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesVisibilityPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(ProbeOutput{})
	pulumi.RegisterOutputType(ProbeArrayOutput{})
	pulumi.RegisterOutputType(ProbeResponseOutput{})
	pulumi.RegisterOutputType(ProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTableOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTablePtrOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTableResponseOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(PtrRecordOutput{})
	pulumi.RegisterOutputType(PtrRecordArrayOutput{})
	pulumi.RegisterOutputType(PtrRecordResponseOutput{})
	pulumi.RegisterOutputType(PtrRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypeOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(QosDefinitionOutput{})
	pulumi.RegisterOutputType(QosDefinitionArrayOutput{})
	pulumi.RegisterOutputType(QosDefinitionResponseOutput{})
	pulumi.RegisterOutputType(QosDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(QosIpRangeOutput{})
	pulumi.RegisterOutputType(QosIpRangeArrayOutput{})
	pulumi.RegisterOutputType(QosIpRangeResponseOutput{})
	pulumi.RegisterOutputType(QosIpRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(QosPortRangeOutput{})
	pulumi.RegisterOutputType(QosPortRangeArrayOutput{})
	pulumi.RegisterOutputType(QosPortRangeResponseOutput{})
	pulumi.RegisterOutputType(QosPortRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(RadiusServerOutput{})
	pulumi.RegisterOutputType(RadiusServerArrayOutput{})
	pulumi.RegisterOutputType(RadiusServerResponseOutput{})
	pulumi.RegisterOutputType(RadiusServerResponseArrayOutput{})
	pulumi.RegisterOutputType(RecordSetResponseOutput{})
	pulumi.RegisterOutputType(RecordSetResponseArrayOutput{})
	pulumi.RegisterOutputType(RedirectConfigurationOutput{})
	pulumi.RegisterOutputType(RedirectConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RedirectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RedirectConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersPtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleOutput{})
	pulumi.RegisterOutputType(RouteMapRuleArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleResponseOutput{})
	pulumi.RegisterOutputType(RouteMapRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTypeOutput{})
	pulumi.RegisterOutputType(RouteTableTypePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingPolicyOutput{})
	pulumi.RegisterOutputType(RoutingPolicyArrayOutput{})
	pulumi.RegisterOutputType(RoutingPolicyResponseOutput{})
	pulumi.RegisterOutputType(RoutingPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleOutput{})
	pulumi.RegisterOutputType(RoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleLinkResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(RulesEngineActionOutput{})
	pulumi.RegisterOutputType(RulesEngineActionResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineResponseArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyLinkResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(SingleQueryResultResponseOutput{})
	pulumi.RegisterOutputType(SingleQueryResultResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SoaRecordOutput{})
	pulumi.RegisterOutputType(SoaRecordPtrOutput{})
	pulumi.RegisterOutputType(SoaRecordResponseOutput{})
	pulumi.RegisterOutputType(SoaRecordResponsePtrOutput{})
	pulumi.RegisterOutputType(SrvRecordOutput{})
	pulumi.RegisterOutputType(SrvRecordArrayOutput{})
	pulumi.RegisterOutputType(SrvRecordResponseOutput{})
	pulumi.RegisterOutputType(SrvRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticRouteOutput{})
	pulumi.RegisterOutputType(StaticRouteArrayOutput{})
	pulumi.RegisterOutputType(StaticRouteResponseOutput{})
	pulumi.RegisterOutputType(StaticRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigPtrOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigResponseOutput{})
	pulumi.RegisterOutputType(StaticRoutesConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetTypeOutput{})
	pulumi.RegisterOutputType(SubnetTypePtrOutput{})
	pulumi.RegisterOutputType(SubnetTypeArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionIdOutput{})
	pulumi.RegisterOutputType(SubscriptionIdArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionIdResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionIdResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TargetDnsServerOutput{})
	pulumi.RegisterOutputType(TargetDnsServerArrayOutput{})
	pulumi.RegisterOutputType(TargetDnsServerResponseOutput{})
	pulumi.RegisterOutputType(TargetDnsServerResponseArrayOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyArrayOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyResponseOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseArrayOutput{})
	pulumi.RegisterOutputType(TxtRecordOutput{})
	pulumi.RegisterOutputType(TxtRecordArrayOutput{})
	pulumi.RegisterOutputType(TxtRecordResponseOutput{})
	pulumi.RegisterOutputType(TxtRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(VMOutput{})
	pulumi.RegisterOutputType(VMResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceAdditionalNicPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNicPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubIdOutput{})
	pulumi.RegisterOutputType(VirtualHubIdResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTablePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2TypeOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2TypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2Output{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkDnsForwardingRulesetResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkDnsForwardingRulesetResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupMemberResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualRouterAutoScaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteOutput{})
	pulumi.RegisterOutputType(VnetRoutePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePtrOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VngClientConnectionConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthDetailResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingArrayOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingResponseOutput{})
	pulumi.RegisterOutputType(VpnNatRuleMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkResponseOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleResponseOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesResponseOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallScrubbingRulesResponseArrayOutput{})
}
