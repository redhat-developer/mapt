// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists Active Security User Rules in a network manager.
// Azure REST API version: 2021-02-01-preview.
func ListActiveSecurityUserRule(ctx *pulumi.Context, args *ListActiveSecurityUserRuleArgs, opts ...pulumi.InvokeOption) (*ListActiveSecurityUserRuleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListActiveSecurityUserRuleResult
	err := ctx.Invoke("azure-native:network:listActiveSecurityUserRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListActiveSecurityUserRuleArgs struct {
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// List of regions.
	Regions []string `pulumi:"regions"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
	SkipToken *string `pulumi:"skipToken"`
}

// Result of the request to list active security user rules. It contains a list of active security user rules and a skiptoken to get the next set of results.
type ListActiveSecurityUserRuleResult struct {
	// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
	SkipToken *string `pulumi:"skipToken"`
	// Gets a page of active security user rules.
	Value []interface{} `pulumi:"value"`
}

func ListActiveSecurityUserRuleOutput(ctx *pulumi.Context, args ListActiveSecurityUserRuleOutputArgs, opts ...pulumi.InvokeOption) ListActiveSecurityUserRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListActiveSecurityUserRuleResultOutput, error) {
			args := v.(ListActiveSecurityUserRuleArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv ListActiveSecurityUserRuleResult
			secret, err := ctx.InvokePackageRaw("azure-native:network:listActiveSecurityUserRule", args, &rv, "", opts...)
			if err != nil {
				return ListActiveSecurityUserRuleResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListActiveSecurityUserRuleResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListActiveSecurityUserRuleResultOutput), nil
			}
			return output, nil
		}).(ListActiveSecurityUserRuleResultOutput)
}

type ListActiveSecurityUserRuleOutputArgs struct {
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// List of regions.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
	SkipToken pulumi.StringPtrInput `pulumi:"skipToken"`
}

func (ListActiveSecurityUserRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListActiveSecurityUserRuleArgs)(nil)).Elem()
}

// Result of the request to list active security user rules. It contains a list of active security user rules and a skiptoken to get the next set of results.
type ListActiveSecurityUserRuleResultOutput struct{ *pulumi.OutputState }

func (ListActiveSecurityUserRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListActiveSecurityUserRuleResult)(nil)).Elem()
}

func (o ListActiveSecurityUserRuleResultOutput) ToListActiveSecurityUserRuleResultOutput() ListActiveSecurityUserRuleResultOutput {
	return o
}

func (o ListActiveSecurityUserRuleResultOutput) ToListActiveSecurityUserRuleResultOutputWithContext(ctx context.Context) ListActiveSecurityUserRuleResultOutput {
	return o
}

// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
func (o ListActiveSecurityUserRuleResultOutput) SkipToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListActiveSecurityUserRuleResult) *string { return v.SkipToken }).(pulumi.StringPtrOutput)
}

// Gets a page of active security user rules.
func (o ListActiveSecurityUserRuleResultOutput) Value() pulumi.ArrayOutput {
	return o.ApplyT(func(v ListActiveSecurityUserRuleResult) []interface{} { return v.Value }).(pulumi.ArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListActiveSecurityUserRuleResultOutput{})
}
