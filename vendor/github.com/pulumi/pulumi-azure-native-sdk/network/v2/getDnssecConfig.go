// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the DNSSEC configuration.
//
// Uses Azure REST API version 2023-07-01-preview.
func LookupDnssecConfig(ctx *pulumi.Context, args *LookupDnssecConfigArgs, opts ...pulumi.InvokeOption) (*LookupDnssecConfigResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDnssecConfigResult
	err := ctx.Invoke("azure-native:network:getDnssecConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDnssecConfigArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the DNS zone (without a terminating dot).
	ZoneName string `pulumi:"zoneName"`
}

// Represents the DNSSEC configuration.
type LookupDnssecConfigResult struct {
	// The etag of the DNSSEC configuration.
	Etag *string `pulumi:"etag"`
	// The ID of the DNSSEC configuration.
	Id string `pulumi:"id"`
	// The name of the DNSSEC configuration.
	Name string `pulumi:"name"`
	// Provisioning State of the DNSSEC configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// The list of signing keys.
	SigningKeys []SigningKeyResponse `pulumi:"signingKeys"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the DNSSEC configuration.
	Type string `pulumi:"type"`
}

func LookupDnssecConfigOutput(ctx *pulumi.Context, args LookupDnssecConfigOutputArgs, opts ...pulumi.InvokeOption) LookupDnssecConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDnssecConfigResultOutput, error) {
			args := v.(LookupDnssecConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getDnssecConfig", args, LookupDnssecConfigResultOutput{}, options).(LookupDnssecConfigResultOutput), nil
		}).(LookupDnssecConfigResultOutput)
}

type LookupDnssecConfigOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the DNS zone (without a terminating dot).
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (LookupDnssecConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnssecConfigArgs)(nil)).Elem()
}

// Represents the DNSSEC configuration.
type LookupDnssecConfigResultOutput struct{ *pulumi.OutputState }

func (LookupDnssecConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnssecConfigResult)(nil)).Elem()
}

func (o LookupDnssecConfigResultOutput) ToLookupDnssecConfigResultOutput() LookupDnssecConfigResultOutput {
	return o
}

func (o LookupDnssecConfigResultOutput) ToLookupDnssecConfigResultOutputWithContext(ctx context.Context) LookupDnssecConfigResultOutput {
	return o
}

// The etag of the DNSSEC configuration.
func (o LookupDnssecConfigResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnssecConfigResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The ID of the DNSSEC configuration.
func (o LookupDnssecConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnssecConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the DNSSEC configuration.
func (o LookupDnssecConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnssecConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning State of the DNSSEC configuration.
func (o LookupDnssecConfigResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnssecConfigResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The list of signing keys.
func (o LookupDnssecConfigResultOutput) SigningKeys() SigningKeyResponseArrayOutput {
	return o.ApplyT(func(v LookupDnssecConfigResult) []SigningKeyResponse { return v.SigningKeys }).(SigningKeyResponseArrayOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupDnssecConfigResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDnssecConfigResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the DNSSEC configuration.
func (o LookupDnssecConfigResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnssecConfigResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDnssecConfigResultOutput{})
}
