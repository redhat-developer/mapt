// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a DNS resolver policy virtual network link.
//
// Uses Azure REST API version 2023-07-01-preview.
type DnsResolverPolicyVirtualNetworkLink struct {
	pulumi.CustomResourceState

	// ETag of the DNS resolver policy virtual network link.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The current provisioning state of the DNS resolver policy virtual network link. This is a read-only property and any attempt to set this value will be ignored.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The reference to the virtual network. This cannot be changed after creation.
	VirtualNetwork SubResourceResponseOutput `pulumi:"virtualNetwork"`
}

// NewDnsResolverPolicyVirtualNetworkLink registers a new resource with the given unique name, arguments, and options.
func NewDnsResolverPolicyVirtualNetworkLink(ctx *pulumi.Context,
	name string, args *DnsResolverPolicyVirtualNetworkLinkArgs, opts ...pulumi.ResourceOption) (*DnsResolverPolicyVirtualNetworkLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DnsResolverPolicyName == nil {
		return nil, errors.New("invalid value for required argument 'DnsResolverPolicyName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VirtualNetwork == nil {
		return nil, errors.New("invalid value for required argument 'VirtualNetwork'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20230701preview:DnsResolverPolicyVirtualNetworkLink"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DnsResolverPolicyVirtualNetworkLink
	err := ctx.RegisterResource("azure-native:network:DnsResolverPolicyVirtualNetworkLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsResolverPolicyVirtualNetworkLink gets an existing DnsResolverPolicyVirtualNetworkLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsResolverPolicyVirtualNetworkLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsResolverPolicyVirtualNetworkLinkState, opts ...pulumi.ResourceOption) (*DnsResolverPolicyVirtualNetworkLink, error) {
	var resource DnsResolverPolicyVirtualNetworkLink
	err := ctx.ReadResource("azure-native:network:DnsResolverPolicyVirtualNetworkLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsResolverPolicyVirtualNetworkLink resources.
type dnsResolverPolicyVirtualNetworkLinkState struct {
}

type DnsResolverPolicyVirtualNetworkLinkState struct {
}

func (DnsResolverPolicyVirtualNetworkLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsResolverPolicyVirtualNetworkLinkState)(nil)).Elem()
}

type dnsResolverPolicyVirtualNetworkLinkArgs struct {
	// The name of the DNS resolver policy.
	DnsResolverPolicyName string `pulumi:"dnsResolverPolicyName"`
	// The name of the DNS resolver policy virtual network link for the DNS resolver policy.
	DnsResolverPolicyVirtualNetworkLinkName *string `pulumi:"dnsResolverPolicyVirtualNetworkLinkName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The reference to the virtual network. This cannot be changed after creation.
	VirtualNetwork SubResource `pulumi:"virtualNetwork"`
}

// The set of arguments for constructing a DnsResolverPolicyVirtualNetworkLink resource.
type DnsResolverPolicyVirtualNetworkLinkArgs struct {
	// The name of the DNS resolver policy.
	DnsResolverPolicyName pulumi.StringInput
	// The name of the DNS resolver policy virtual network link for the DNS resolver policy.
	DnsResolverPolicyVirtualNetworkLinkName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The reference to the virtual network. This cannot be changed after creation.
	VirtualNetwork SubResourceInput
}

func (DnsResolverPolicyVirtualNetworkLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsResolverPolicyVirtualNetworkLinkArgs)(nil)).Elem()
}

type DnsResolverPolicyVirtualNetworkLinkInput interface {
	pulumi.Input

	ToDnsResolverPolicyVirtualNetworkLinkOutput() DnsResolverPolicyVirtualNetworkLinkOutput
	ToDnsResolverPolicyVirtualNetworkLinkOutputWithContext(ctx context.Context) DnsResolverPolicyVirtualNetworkLinkOutput
}

func (*DnsResolverPolicyVirtualNetworkLink) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsResolverPolicyVirtualNetworkLink)(nil)).Elem()
}

func (i *DnsResolverPolicyVirtualNetworkLink) ToDnsResolverPolicyVirtualNetworkLinkOutput() DnsResolverPolicyVirtualNetworkLinkOutput {
	return i.ToDnsResolverPolicyVirtualNetworkLinkOutputWithContext(context.Background())
}

func (i *DnsResolverPolicyVirtualNetworkLink) ToDnsResolverPolicyVirtualNetworkLinkOutputWithContext(ctx context.Context) DnsResolverPolicyVirtualNetworkLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsResolverPolicyVirtualNetworkLinkOutput)
}

type DnsResolverPolicyVirtualNetworkLinkOutput struct{ *pulumi.OutputState }

func (DnsResolverPolicyVirtualNetworkLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsResolverPolicyVirtualNetworkLink)(nil)).Elem()
}

func (o DnsResolverPolicyVirtualNetworkLinkOutput) ToDnsResolverPolicyVirtualNetworkLinkOutput() DnsResolverPolicyVirtualNetworkLinkOutput {
	return o
}

func (o DnsResolverPolicyVirtualNetworkLinkOutput) ToDnsResolverPolicyVirtualNetworkLinkOutputWithContext(ctx context.Context) DnsResolverPolicyVirtualNetworkLinkOutput {
	return o
}

// ETag of the DNS resolver policy virtual network link.
func (o DnsResolverPolicyVirtualNetworkLinkOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o DnsResolverPolicyVirtualNetworkLinkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o DnsResolverPolicyVirtualNetworkLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current provisioning state of the DNS resolver policy virtual network link. This is a read-only property and any attempt to set this value will be ignored.
func (o DnsResolverPolicyVirtualNetworkLinkOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DnsResolverPolicyVirtualNetworkLinkOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o DnsResolverPolicyVirtualNetworkLinkOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DnsResolverPolicyVirtualNetworkLinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The reference to the virtual network. This cannot be changed after creation.
func (o DnsResolverPolicyVirtualNetworkLinkOutput) VirtualNetwork() SubResourceResponseOutput {
	return o.ApplyT(func(v *DnsResolverPolicyVirtualNetworkLink) SubResourceResponseOutput { return v.VirtualNetwork }).(SubResourceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(DnsResolverPolicyVirtualNetworkLinkOutput{})
}
