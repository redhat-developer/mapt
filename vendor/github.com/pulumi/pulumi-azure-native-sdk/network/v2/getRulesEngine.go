// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a Rules Engine Configuration with the specified name within the specified Front Door.
//
// Uses Azure REST API version 2021-06-01.
func LookupRulesEngine(ctx *pulumi.Context, args *LookupRulesEngineArgs, opts ...pulumi.InvokeOption) (*LookupRulesEngineResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupRulesEngineResult
	err := ctx.Invoke("azure-native:network:getRulesEngine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRulesEngineArgs struct {
	// Name of the Front Door which is globally unique.
	FrontDoorName string `pulumi:"frontDoorName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the Rules Engine which is unique within the Front Door.
	RulesEngineName string `pulumi:"rulesEngineName"`
}

// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
type LookupRulesEngineResult struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// A list of rules that define a particular Rules Engine Configuration.
	Rules []RulesEngineRuleResponse `pulumi:"rules"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupRulesEngineOutput(ctx *pulumi.Context, args LookupRulesEngineOutputArgs, opts ...pulumi.InvokeOption) LookupRulesEngineResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRulesEngineResultOutput, error) {
			args := v.(LookupRulesEngineArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:network:getRulesEngine", args, LookupRulesEngineResultOutput{}, options).(LookupRulesEngineResultOutput), nil
		}).(LookupRulesEngineResultOutput)
}

type LookupRulesEngineOutputArgs struct {
	// Name of the Front Door which is globally unique.
	FrontDoorName pulumi.StringInput `pulumi:"frontDoorName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the Rules Engine which is unique within the Front Door.
	RulesEngineName pulumi.StringInput `pulumi:"rulesEngineName"`
}

func (LookupRulesEngineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRulesEngineArgs)(nil)).Elem()
}

// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
type LookupRulesEngineResultOutput struct{ *pulumi.OutputState }

func (LookupRulesEngineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRulesEngineResult)(nil)).Elem()
}

func (o LookupRulesEngineResultOutput) ToLookupRulesEngineResultOutput() LookupRulesEngineResultOutput {
	return o
}

func (o LookupRulesEngineResultOutput) ToLookupRulesEngineResultOutputWithContext(ctx context.Context) LookupRulesEngineResultOutput {
	return o
}

// Resource ID.
func (o LookupRulesEngineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesEngineResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupRulesEngineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesEngineResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource status.
func (o LookupRulesEngineResultOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesEngineResult) string { return v.ResourceState }).(pulumi.StringOutput)
}

// A list of rules that define a particular Rules Engine Configuration.
func (o LookupRulesEngineResultOutput) Rules() RulesEngineRuleResponseArrayOutput {
	return o.ApplyT(func(v LookupRulesEngineResult) []RulesEngineRuleResponse { return v.Rules }).(RulesEngineRuleResponseArrayOutput)
}

// Resource type.
func (o LookupRulesEngineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulesEngineResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRulesEngineResultOutput{})
}
