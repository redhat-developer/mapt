// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Defines the security user rule collection.
// Azure REST API version: 2024-03-01.
type SecurityUserRuleCollection struct {
	pulumi.CustomResourceState

	// Groups for configuration
	AppliesToGroups SecurityUserGroupItemResponseArrayOutput `pulumi:"appliesToGroups"`
	// A description of the security user rule collection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Unique identifier for this resource.
	ResourceGuid pulumi.StringOutput `pulumi:"resourceGuid"`
	// The system metadata related to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSecurityUserRuleCollection registers a new resource with the given unique name, arguments, and options.
func NewSecurityUserRuleCollection(ctx *pulumi.Context,
	name string, args *SecurityUserRuleCollectionArgs, opts ...pulumi.ResourceOption) (*SecurityUserRuleCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppliesToGroups == nil {
		return nil, errors.New("invalid value for required argument 'AppliesToGroups'")
	}
	if args.ConfigurationName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationName'")
	}
	if args.NetworkManagerName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20210201preview:SecurityUserRuleCollection"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210501preview:SecurityUserRuleCollection"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220201preview:SecurityUserRuleCollection"),
		},
		{
			Type: pulumi.String("azure-native:network/v20220401preview:SecurityUserRuleCollection"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240301:SecurityUserRuleCollection"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SecurityUserRuleCollection
	err := ctx.RegisterResource("azure-native:network:SecurityUserRuleCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityUserRuleCollection gets an existing SecurityUserRuleCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityUserRuleCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityUserRuleCollectionState, opts ...pulumi.ResourceOption) (*SecurityUserRuleCollection, error) {
	var resource SecurityUserRuleCollection
	err := ctx.ReadResource("azure-native:network:SecurityUserRuleCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityUserRuleCollection resources.
type securityUserRuleCollectionState struct {
}

type SecurityUserRuleCollectionState struct {
}

func (SecurityUserRuleCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityUserRuleCollectionState)(nil)).Elem()
}

type securityUserRuleCollectionArgs struct {
	// Groups for configuration
	AppliesToGroups []SecurityUserGroupItem `pulumi:"appliesToGroups"`
	// The name of the network manager Security Configuration.
	ConfigurationName string `pulumi:"configurationName"`
	// A description of the security user rule collection.
	Description *string `pulumi:"description"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName *string `pulumi:"ruleCollectionName"`
}

// The set of arguments for constructing a SecurityUserRuleCollection resource.
type SecurityUserRuleCollectionArgs struct {
	// Groups for configuration
	AppliesToGroups SecurityUserGroupItemArrayInput
	// The name of the network manager Security Configuration.
	ConfigurationName pulumi.StringInput
	// A description of the security user rule collection.
	Description pulumi.StringPtrInput
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName pulumi.StringPtrInput
}

func (SecurityUserRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityUserRuleCollectionArgs)(nil)).Elem()
}

type SecurityUserRuleCollectionInput interface {
	pulumi.Input

	ToSecurityUserRuleCollectionOutput() SecurityUserRuleCollectionOutput
	ToSecurityUserRuleCollectionOutputWithContext(ctx context.Context) SecurityUserRuleCollectionOutput
}

func (*SecurityUserRuleCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityUserRuleCollection)(nil)).Elem()
}

func (i *SecurityUserRuleCollection) ToSecurityUserRuleCollectionOutput() SecurityUserRuleCollectionOutput {
	return i.ToSecurityUserRuleCollectionOutputWithContext(context.Background())
}

func (i *SecurityUserRuleCollection) ToSecurityUserRuleCollectionOutputWithContext(ctx context.Context) SecurityUserRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityUserRuleCollectionOutput)
}

type SecurityUserRuleCollectionOutput struct{ *pulumi.OutputState }

func (SecurityUserRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityUserRuleCollection)(nil)).Elem()
}

func (o SecurityUserRuleCollectionOutput) ToSecurityUserRuleCollectionOutput() SecurityUserRuleCollectionOutput {
	return o
}

func (o SecurityUserRuleCollectionOutput) ToSecurityUserRuleCollectionOutputWithContext(ctx context.Context) SecurityUserRuleCollectionOutput {
	return o
}

// Groups for configuration
func (o SecurityUserRuleCollectionOutput) AppliesToGroups() SecurityUserGroupItemResponseArrayOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) SecurityUserGroupItemResponseArrayOutput { return v.AppliesToGroups }).(SecurityUserGroupItemResponseArrayOutput)
}

// A description of the security user rule collection.
func (o SecurityUserRuleCollectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityUserRuleCollectionOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Resource name.
func (o SecurityUserRuleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o SecurityUserRuleCollectionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier for this resource.
func (o SecurityUserRuleCollectionOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) pulumi.StringOutput { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The system metadata related to this resource.
func (o SecurityUserRuleCollectionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o SecurityUserRuleCollectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityUserRuleCollection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SecurityUserRuleCollectionOutput{})
}
