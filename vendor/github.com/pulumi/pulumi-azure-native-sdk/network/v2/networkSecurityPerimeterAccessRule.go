// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The NSP access rule resource
//
// Uses Azure REST API version 2024-06-01-preview.
type NetworkSecurityPerimeterAccessRule struct {
	pulumi.CustomResourceState

	// Inbound address prefixes (IPv4/IPv6)
	AddressPrefixes pulumi.StringArrayOutput `pulumi:"addressPrefixes"`
	// Direction that specifies whether the access rules is inbound/outbound.
	Direction pulumi.StringPtrOutput `pulumi:"direction"`
	// Outbound rules email address format.
	EmailAddresses pulumi.StringArrayOutput `pulumi:"emailAddresses"`
	// Outbound rules fully qualified domain name format.
	FullyQualifiedDomainNames pulumi.StringArrayOutput `pulumi:"fullyQualifiedDomainNames"`
	// Resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Rule specified by the perimeter id.
	NetworkSecurityPerimeters PerimeterBasedAccessRuleResponseArrayOutput `pulumi:"networkSecurityPerimeters"`
	// Outbound rules phone number format.
	PhoneNumbers pulumi.StringArrayOutput `pulumi:"phoneNumbers"`
	// The provisioning state of the scope assignment resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Inbound rules service tag names.
	ServiceTags pulumi.StringArrayOutput `pulumi:"serviceTags"`
	// List of subscription ids
	Subscriptions SubscriptionIdResponseArrayOutput `pulumi:"subscriptions"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkSecurityPerimeterAccessRule registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityPerimeterAccessRule(ctx *pulumi.Context,
	name string, args *NetworkSecurityPerimeterAccessRuleArgs, opts ...pulumi.ResourceOption) (*NetworkSecurityPerimeterAccessRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkSecurityPerimeterName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkSecurityPerimeterName'")
	}
	if args.ProfileName == nil {
		return nil, errors.New("invalid value for required argument 'ProfileName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20210201preview:NetworkSecurityPerimeterAccessRule"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230701preview:NetworkSecurityPerimeterAccessRule"),
		},
		{
			Type: pulumi.String("azure-native:network/v20230801preview:NetworkSecurityPerimeterAccessRule"),
		},
		{
			Type: pulumi.String("azure-native:network/v20240601preview:NetworkSecurityPerimeterAccessRule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NetworkSecurityPerimeterAccessRule
	err := ctx.RegisterResource("azure-native:network:NetworkSecurityPerimeterAccessRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSecurityPerimeterAccessRule gets an existing NetworkSecurityPerimeterAccessRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityPerimeterAccessRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSecurityPerimeterAccessRuleState, opts ...pulumi.ResourceOption) (*NetworkSecurityPerimeterAccessRule, error) {
	var resource NetworkSecurityPerimeterAccessRule
	err := ctx.ReadResource("azure-native:network:NetworkSecurityPerimeterAccessRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSecurityPerimeterAccessRule resources.
type networkSecurityPerimeterAccessRuleState struct {
}

type NetworkSecurityPerimeterAccessRuleState struct {
}

func (NetworkSecurityPerimeterAccessRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityPerimeterAccessRuleState)(nil)).Elem()
}

type networkSecurityPerimeterAccessRuleArgs struct {
	// The name of the NSP access rule.
	AccessRuleName *string `pulumi:"accessRuleName"`
	// Inbound address prefixes (IPv4/IPv6)
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Direction that specifies whether the access rules is inbound/outbound.
	Direction *string `pulumi:"direction"`
	// Outbound rules email address format.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// Outbound rules fully qualified domain name format.
	FullyQualifiedDomainNames []string `pulumi:"fullyQualifiedDomainNames"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the network security perimeter.
	NetworkSecurityPerimeterName string `pulumi:"networkSecurityPerimeterName"`
	// Outbound rules phone number format.
	PhoneNumbers []string `pulumi:"phoneNumbers"`
	// The name of the NSP profile.
	ProfileName string `pulumi:"profileName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Inbound rules service tag names.
	ServiceTags []string `pulumi:"serviceTags"`
	// List of subscription ids
	Subscriptions []SubscriptionId `pulumi:"subscriptions"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkSecurityPerimeterAccessRule resource.
type NetworkSecurityPerimeterAccessRuleArgs struct {
	// The name of the NSP access rule.
	AccessRuleName pulumi.StringPtrInput
	// Inbound address prefixes (IPv4/IPv6)
	AddressPrefixes pulumi.StringArrayInput
	// Direction that specifies whether the access rules is inbound/outbound.
	Direction pulumi.StringPtrInput
	// Outbound rules email address format.
	EmailAddresses pulumi.StringArrayInput
	// Outbound rules fully qualified domain name format.
	FullyQualifiedDomainNames pulumi.StringArrayInput
	// Resource ID.
	Id pulumi.StringPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// The name of the network security perimeter.
	NetworkSecurityPerimeterName pulumi.StringInput
	// Outbound rules phone number format.
	PhoneNumbers pulumi.StringArrayInput
	// The name of the NSP profile.
	ProfileName pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Inbound rules service tag names.
	ServiceTags pulumi.StringArrayInput
	// List of subscription ids
	Subscriptions SubscriptionIdArrayInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (NetworkSecurityPerimeterAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityPerimeterAccessRuleArgs)(nil)).Elem()
}

type NetworkSecurityPerimeterAccessRuleInput interface {
	pulumi.Input

	ToNetworkSecurityPerimeterAccessRuleOutput() NetworkSecurityPerimeterAccessRuleOutput
	ToNetworkSecurityPerimeterAccessRuleOutputWithContext(ctx context.Context) NetworkSecurityPerimeterAccessRuleOutput
}

func (*NetworkSecurityPerimeterAccessRule) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityPerimeterAccessRule)(nil)).Elem()
}

func (i *NetworkSecurityPerimeterAccessRule) ToNetworkSecurityPerimeterAccessRuleOutput() NetworkSecurityPerimeterAccessRuleOutput {
	return i.ToNetworkSecurityPerimeterAccessRuleOutputWithContext(context.Background())
}

func (i *NetworkSecurityPerimeterAccessRule) ToNetworkSecurityPerimeterAccessRuleOutputWithContext(ctx context.Context) NetworkSecurityPerimeterAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPerimeterAccessRuleOutput)
}

type NetworkSecurityPerimeterAccessRuleOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPerimeterAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityPerimeterAccessRule)(nil)).Elem()
}

func (o NetworkSecurityPerimeterAccessRuleOutput) ToNetworkSecurityPerimeterAccessRuleOutput() NetworkSecurityPerimeterAccessRuleOutput {
	return o
}

func (o NetworkSecurityPerimeterAccessRuleOutput) ToNetworkSecurityPerimeterAccessRuleOutputWithContext(ctx context.Context) NetworkSecurityPerimeterAccessRuleOutput {
	return o
}

// Inbound address prefixes (IPv4/IPv6)
func (o NetworkSecurityPerimeterAccessRuleOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringArrayOutput { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Direction that specifies whether the access rules is inbound/outbound.
func (o NetworkSecurityPerimeterAccessRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringPtrOutput { return v.Direction }).(pulumi.StringPtrOutput)
}

// Outbound rules email address format.
func (o NetworkSecurityPerimeterAccessRuleOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringArrayOutput { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

// Outbound rules fully qualified domain name format.
func (o NetworkSecurityPerimeterAccessRuleOutput) FullyQualifiedDomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringArrayOutput {
		return v.FullyQualifiedDomainNames
	}).(pulumi.StringArrayOutput)
}

// Resource location.
func (o NetworkSecurityPerimeterAccessRuleOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityPerimeterAccessRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Rule specified by the perimeter id.
func (o NetworkSecurityPerimeterAccessRuleOutput) NetworkSecurityPerimeters() PerimeterBasedAccessRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) PerimeterBasedAccessRuleResponseArrayOutput {
		return v.NetworkSecurityPerimeters
	}).(PerimeterBasedAccessRuleResponseArrayOutput)
}

// Outbound rules phone number format.
func (o NetworkSecurityPerimeterAccessRuleOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringArrayOutput { return v.PhoneNumbers }).(pulumi.StringArrayOutput)
}

// The provisioning state of the scope assignment resource.
func (o NetworkSecurityPerimeterAccessRuleOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Inbound rules service tag names.
func (o NetworkSecurityPerimeterAccessRuleOutput) ServiceTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringArrayOutput { return v.ServiceTags }).(pulumi.StringArrayOutput)
}

// List of subscription ids
func (o NetworkSecurityPerimeterAccessRuleOutput) Subscriptions() SubscriptionIdResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) SubscriptionIdResponseArrayOutput { return v.Subscriptions }).(SubscriptionIdResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityPerimeterAccessRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityPerimeterAccessRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityPerimeterAccessRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkSecurityPerimeterAccessRuleOutput{})
}
