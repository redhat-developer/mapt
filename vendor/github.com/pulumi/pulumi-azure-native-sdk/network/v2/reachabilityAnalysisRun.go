// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configuration information for analysis run.
// Azure REST API version: 2024-01-01-preview.
type ReachabilityAnalysisRun struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Represents the Reachability Analysis Run properties.
	Properties ReachabilityAnalysisRunPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewReachabilityAnalysisRun registers a new resource with the given unique name, arguments, and options.
func NewReachabilityAnalysisRun(ctx *pulumi.Context,
	name string, args *ReachabilityAnalysisRunArgs, opts ...pulumi.ResourceOption) (*ReachabilityAnalysisRun, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkManagerName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20240101preview:ReachabilityAnalysisRun"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ReachabilityAnalysisRun
	err := ctx.RegisterResource("azure-native:network:ReachabilityAnalysisRun", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReachabilityAnalysisRun gets an existing ReachabilityAnalysisRun resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReachabilityAnalysisRun(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReachabilityAnalysisRunState, opts ...pulumi.ResourceOption) (*ReachabilityAnalysisRun, error) {
	var resource ReachabilityAnalysisRun
	err := ctx.ReadResource("azure-native:network:ReachabilityAnalysisRun", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReachabilityAnalysisRun resources.
type reachabilityAnalysisRunState struct {
}

type ReachabilityAnalysisRunState struct {
}

func (ReachabilityAnalysisRunState) ElementType() reflect.Type {
	return reflect.TypeOf((*reachabilityAnalysisRunState)(nil)).Elem()
}

type reachabilityAnalysisRunArgs struct {
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// Represents the Reachability Analysis Run properties.
	Properties ReachabilityAnalysisRunProperties `pulumi:"properties"`
	// Reachability Analysis Run name.
	ReachabilityAnalysisRunName *string `pulumi:"reachabilityAnalysisRunName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Workspace name.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a ReachabilityAnalysisRun resource.
type ReachabilityAnalysisRunArgs struct {
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput
	// Represents the Reachability Analysis Run properties.
	Properties ReachabilityAnalysisRunPropertiesInput
	// Reachability Analysis Run name.
	ReachabilityAnalysisRunName pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Workspace name.
	WorkspaceName pulumi.StringInput
}

func (ReachabilityAnalysisRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reachabilityAnalysisRunArgs)(nil)).Elem()
}

type ReachabilityAnalysisRunInput interface {
	pulumi.Input

	ToReachabilityAnalysisRunOutput() ReachabilityAnalysisRunOutput
	ToReachabilityAnalysisRunOutputWithContext(ctx context.Context) ReachabilityAnalysisRunOutput
}

func (*ReachabilityAnalysisRun) ElementType() reflect.Type {
	return reflect.TypeOf((**ReachabilityAnalysisRun)(nil)).Elem()
}

func (i *ReachabilityAnalysisRun) ToReachabilityAnalysisRunOutput() ReachabilityAnalysisRunOutput {
	return i.ToReachabilityAnalysisRunOutputWithContext(context.Background())
}

func (i *ReachabilityAnalysisRun) ToReachabilityAnalysisRunOutputWithContext(ctx context.Context) ReachabilityAnalysisRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReachabilityAnalysisRunOutput)
}

type ReachabilityAnalysisRunOutput struct{ *pulumi.OutputState }

func (ReachabilityAnalysisRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReachabilityAnalysisRun)(nil)).Elem()
}

func (o ReachabilityAnalysisRunOutput) ToReachabilityAnalysisRunOutput() ReachabilityAnalysisRunOutput {
	return o
}

func (o ReachabilityAnalysisRunOutput) ToReachabilityAnalysisRunOutputWithContext(ctx context.Context) ReachabilityAnalysisRunOutput {
	return o
}

// The name of the resource
func (o ReachabilityAnalysisRunOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReachabilityAnalysisRun) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Represents the Reachability Analysis Run properties.
func (o ReachabilityAnalysisRunOutput) Properties() ReachabilityAnalysisRunPropertiesResponseOutput {
	return o.ApplyT(func(v *ReachabilityAnalysisRun) ReachabilityAnalysisRunPropertiesResponseOutput { return v.Properties }).(ReachabilityAnalysisRunPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ReachabilityAnalysisRunOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ReachabilityAnalysisRun) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ReachabilityAnalysisRunOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ReachabilityAnalysisRun) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ReachabilityAnalysisRunOutput{})
}
