// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// FirewallPolicy Resource.
// Azure REST API version: 2023-11-01.
type FirewallPolicyDraft struct {
	pulumi.CustomResourceState

	// The parent firewall policy from which rules are inherited.
	BasePolicy SubResourceResponsePtrOutput `pulumi:"basePolicy"`
	// DNS Proxy Settings definition.
	DnsSettings DnsSettingsResponsePtrOutput `pulumi:"dnsSettings"`
	// Explicit Proxy Settings definition.
	ExplicitProxy ExplicitProxyResponsePtrOutput `pulumi:"explicitProxy"`
	// Insights on Firewall Policy.
	Insights FirewallPolicyInsightsResponsePtrOutput `pulumi:"insights"`
	// The configuration for Intrusion detection.
	IntrusionDetection FirewallPolicyIntrusionDetectionResponsePtrOutput `pulumi:"intrusionDetection"`
	// Resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The private IP addresses/IP ranges to which traffic will not be SNAT.
	Snat FirewallPolicySNATResponsePtrOutput `pulumi:"snat"`
	// SQL Settings definition.
	Sql FirewallPolicySQLResponsePtrOutput `pulumi:"sql"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The operation mode for Threat Intelligence.
	ThreatIntelMode pulumi.StringPtrOutput `pulumi:"threatIntelMode"`
	// ThreatIntel Whitelist for Firewall Policy.
	ThreatIntelWhitelist FirewallPolicyThreatIntelWhitelistResponsePtrOutput `pulumi:"threatIntelWhitelist"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFirewallPolicyDraft registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicyDraft(ctx *pulumi.Context,
	name string, args *FirewallPolicyDraftArgs, opts ...pulumi.ResourceOption) (*FirewallPolicyDraft, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallPolicyName == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicyName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:network/v20231101:FirewallPolicyDraft"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource FirewallPolicyDraft
	err := ctx.RegisterResource("azure-native:network:FirewallPolicyDraft", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicyDraft gets an existing FirewallPolicyDraft resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicyDraft(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicyDraftState, opts ...pulumi.ResourceOption) (*FirewallPolicyDraft, error) {
	var resource FirewallPolicyDraft
	err := ctx.ReadResource("azure-native:network:FirewallPolicyDraft", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicyDraft resources.
type firewallPolicyDraftState struct {
}

type FirewallPolicyDraftState struct {
}

func (FirewallPolicyDraftState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyDraftState)(nil)).Elem()
}

type firewallPolicyDraftArgs struct {
	// The parent firewall policy from which rules are inherited.
	BasePolicy *SubResource `pulumi:"basePolicy"`
	// DNS Proxy Settings definition.
	DnsSettings *DnsSettings `pulumi:"dnsSettings"`
	// Explicit Proxy Settings definition.
	ExplicitProxy *ExplicitProxy `pulumi:"explicitProxy"`
	// The name of the Firewall Policy.
	FirewallPolicyName string `pulumi:"firewallPolicyName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Insights on Firewall Policy.
	Insights *FirewallPolicyInsights `pulumi:"insights"`
	// The configuration for Intrusion detection.
	IntrusionDetection *FirewallPolicyIntrusionDetection `pulumi:"intrusionDetection"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The private IP addresses/IP ranges to which traffic will not be SNAT.
	Snat *FirewallPolicySNAT `pulumi:"snat"`
	// SQL Settings definition.
	Sql *FirewallPolicySQL `pulumi:"sql"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The operation mode for Threat Intelligence.
	ThreatIntelMode *string `pulumi:"threatIntelMode"`
	// ThreatIntel Whitelist for Firewall Policy.
	ThreatIntelWhitelist *FirewallPolicyThreatIntelWhitelist `pulumi:"threatIntelWhitelist"`
}

// The set of arguments for constructing a FirewallPolicyDraft resource.
type FirewallPolicyDraftArgs struct {
	// The parent firewall policy from which rules are inherited.
	BasePolicy SubResourcePtrInput
	// DNS Proxy Settings definition.
	DnsSettings DnsSettingsPtrInput
	// Explicit Proxy Settings definition.
	ExplicitProxy ExplicitProxyPtrInput
	// The name of the Firewall Policy.
	FirewallPolicyName pulumi.StringInput
	// Resource ID.
	Id pulumi.StringPtrInput
	// Insights on Firewall Policy.
	Insights FirewallPolicyInsightsPtrInput
	// The configuration for Intrusion detection.
	IntrusionDetection FirewallPolicyIntrusionDetectionPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The private IP addresses/IP ranges to which traffic will not be SNAT.
	Snat FirewallPolicySNATPtrInput
	// SQL Settings definition.
	Sql FirewallPolicySQLPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The operation mode for Threat Intelligence.
	ThreatIntelMode pulumi.StringPtrInput
	// ThreatIntel Whitelist for Firewall Policy.
	ThreatIntelWhitelist FirewallPolicyThreatIntelWhitelistPtrInput
}

func (FirewallPolicyDraftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyDraftArgs)(nil)).Elem()
}

type FirewallPolicyDraftInput interface {
	pulumi.Input

	ToFirewallPolicyDraftOutput() FirewallPolicyDraftOutput
	ToFirewallPolicyDraftOutputWithContext(ctx context.Context) FirewallPolicyDraftOutput
}

func (*FirewallPolicyDraft) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyDraft)(nil)).Elem()
}

func (i *FirewallPolicyDraft) ToFirewallPolicyDraftOutput() FirewallPolicyDraftOutput {
	return i.ToFirewallPolicyDraftOutputWithContext(context.Background())
}

func (i *FirewallPolicyDraft) ToFirewallPolicyDraftOutputWithContext(ctx context.Context) FirewallPolicyDraftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDraftOutput)
}

type FirewallPolicyDraftOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDraftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyDraft)(nil)).Elem()
}

func (o FirewallPolicyDraftOutput) ToFirewallPolicyDraftOutput() FirewallPolicyDraftOutput {
	return o
}

func (o FirewallPolicyDraftOutput) ToFirewallPolicyDraftOutputWithContext(ctx context.Context) FirewallPolicyDraftOutput {
	return o
}

// The parent firewall policy from which rules are inherited.
func (o FirewallPolicyDraftOutput) BasePolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) SubResourceResponsePtrOutput { return v.BasePolicy }).(SubResourceResponsePtrOutput)
}

// DNS Proxy Settings definition.
func (o FirewallPolicyDraftOutput) DnsSettings() DnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) DnsSettingsResponsePtrOutput { return v.DnsSettings }).(DnsSettingsResponsePtrOutput)
}

// Explicit Proxy Settings definition.
func (o FirewallPolicyDraftOutput) ExplicitProxy() ExplicitProxyResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) ExplicitProxyResponsePtrOutput { return v.ExplicitProxy }).(ExplicitProxyResponsePtrOutput)
}

// Insights on Firewall Policy.
func (o FirewallPolicyDraftOutput) Insights() FirewallPolicyInsightsResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) FirewallPolicyInsightsResponsePtrOutput { return v.Insights }).(FirewallPolicyInsightsResponsePtrOutput)
}

// The configuration for Intrusion detection.
func (o FirewallPolicyDraftOutput) IntrusionDetection() FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) FirewallPolicyIntrusionDetectionResponsePtrOutput {
		return v.IntrusionDetection
	}).(FirewallPolicyIntrusionDetectionResponsePtrOutput)
}

// Resource location.
func (o FirewallPolicyDraftOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FirewallPolicyDraftOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The private IP addresses/IP ranges to which traffic will not be SNAT.
func (o FirewallPolicyDraftOutput) Snat() FirewallPolicySNATResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) FirewallPolicySNATResponsePtrOutput { return v.Snat }).(FirewallPolicySNATResponsePtrOutput)
}

// SQL Settings definition.
func (o FirewallPolicyDraftOutput) Sql() FirewallPolicySQLResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) FirewallPolicySQLResponsePtrOutput { return v.Sql }).(FirewallPolicySQLResponsePtrOutput)
}

// Resource tags.
func (o FirewallPolicyDraftOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The operation mode for Threat Intelligence.
func (o FirewallPolicyDraftOutput) ThreatIntelMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) pulumi.StringPtrOutput { return v.ThreatIntelMode }).(pulumi.StringPtrOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
func (o FirewallPolicyDraftOutput) ThreatIntelWhitelist() FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
		return v.ThreatIntelWhitelist
	}).(FirewallPolicyThreatIntelWhitelistResponsePtrOutput)
}

// Resource type.
func (o FirewallPolicyDraftOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicyDraft) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallPolicyDraftOutput{})
}
