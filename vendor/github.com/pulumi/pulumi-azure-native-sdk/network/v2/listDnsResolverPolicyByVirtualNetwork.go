// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists DNS resolver policy resource IDs linked to a virtual network.
// Azure REST API version: 2023-07-01-preview.
func ListDnsResolverPolicyByVirtualNetwork(ctx *pulumi.Context, args *ListDnsResolverPolicyByVirtualNetworkArgs, opts ...pulumi.InvokeOption) (*ListDnsResolverPolicyByVirtualNetworkResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListDnsResolverPolicyByVirtualNetworkResult
	err := ctx.Invoke("azure-native:network:listDnsResolverPolicyByVirtualNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDnsResolverPolicyByVirtualNetworkArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the virtual network.
	VirtualNetworkName string `pulumi:"virtualNetworkName"`
}

// The response to an enumeration operation on sub-resources.
type ListDnsResolverPolicyByVirtualNetworkResult struct {
	// The continuation token for the next page of results.
	NextLink string `pulumi:"nextLink"`
	// Enumeration of the sub-resources.
	Value []SubResourceResponse `pulumi:"value"`
}

func ListDnsResolverPolicyByVirtualNetworkOutput(ctx *pulumi.Context, args ListDnsResolverPolicyByVirtualNetworkOutputArgs, opts ...pulumi.InvokeOption) ListDnsResolverPolicyByVirtualNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListDnsResolverPolicyByVirtualNetworkResultOutput, error) {
			args := v.(ListDnsResolverPolicyByVirtualNetworkArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv ListDnsResolverPolicyByVirtualNetworkResult
			secret, err := ctx.InvokePackageRaw("azure-native:network:listDnsResolverPolicyByVirtualNetwork", args, &rv, "", opts...)
			if err != nil {
				return ListDnsResolverPolicyByVirtualNetworkResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListDnsResolverPolicyByVirtualNetworkResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListDnsResolverPolicyByVirtualNetworkResultOutput), nil
			}
			return output, nil
		}).(ListDnsResolverPolicyByVirtualNetworkResultOutput)
}

type ListDnsResolverPolicyByVirtualNetworkOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the virtual network.
	VirtualNetworkName pulumi.StringInput `pulumi:"virtualNetworkName"`
}

func (ListDnsResolverPolicyByVirtualNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDnsResolverPolicyByVirtualNetworkArgs)(nil)).Elem()
}

// The response to an enumeration operation on sub-resources.
type ListDnsResolverPolicyByVirtualNetworkResultOutput struct{ *pulumi.OutputState }

func (ListDnsResolverPolicyByVirtualNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDnsResolverPolicyByVirtualNetworkResult)(nil)).Elem()
}

func (o ListDnsResolverPolicyByVirtualNetworkResultOutput) ToListDnsResolverPolicyByVirtualNetworkResultOutput() ListDnsResolverPolicyByVirtualNetworkResultOutput {
	return o
}

func (o ListDnsResolverPolicyByVirtualNetworkResultOutput) ToListDnsResolverPolicyByVirtualNetworkResultOutputWithContext(ctx context.Context) ListDnsResolverPolicyByVirtualNetworkResultOutput {
	return o
}

// The continuation token for the next page of results.
func (o ListDnsResolverPolicyByVirtualNetworkResultOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v ListDnsResolverPolicyByVirtualNetworkResult) string { return v.NextLink }).(pulumi.StringOutput)
}

// Enumeration of the sub-resources.
func (o ListDnsResolverPolicyByVirtualNetworkResultOutput) Value() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ListDnsResolverPolicyByVirtualNetworkResult) []SubResourceResponse { return v.Value }).(SubResourceResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDnsResolverPolicyByVirtualNetworkResultOutput{})
}
